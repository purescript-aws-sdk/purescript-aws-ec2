

-- | <fullname>Amazon Elastic Compute Cloud</fullname> <p>Amazon Elastic Compute Cloud (Amazon EC2) provides resizable computing capacity in the AWS Cloud. Using Amazon EC2 eliminates the need to invest in hardware up front, so you can develop and deploy applications faster.</p>
module AWS.EC2 where

import Prelude
import Control.Monad.Aff (Aff)
import Control.Monad.Eff.Exception (EXCEPTION)
import Data.Foreign as Foreign
import Data.Foreign.NullOrUndefined (NullOrUndefined(..))
import Data.Foreign.Class (class Decode, class Encode)
import Data.Foreign.Generic (defaultOptions, genericDecode, genericEncode)
import Data.Foreign.NullOrUndefined as NullOrUndefined
import Data.Generic.Rep (class Generic)
import Data.Generic.Rep.Show (genericShow)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.StrMap as StrMap

import AWS.Request as Request
import AWS.Request.Types as Types


-- | <p>Accepts the Convertible Reserved Instance exchange quote described in the <a>GetReservedInstancesExchangeQuote</a> call.</p>
acceptReservedInstancesExchangeQuote :: forall eff. AcceptReservedInstancesExchangeQuoteRequest -> Aff (exception :: EXCEPTION | eff) AcceptReservedInstancesExchangeQuoteResult
acceptReservedInstancesExchangeQuote = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "acceptReservedInstancesExchangeQuote"


-- | <p>Accepts one or more interface VPC endpoint connection requests to your VPC endpoint service.</p>
acceptVpcEndpointConnections :: forall eff. AcceptVpcEndpointConnectionsRequest -> Aff (exception :: EXCEPTION | eff) AcceptVpcEndpointConnectionsResult
acceptVpcEndpointConnections = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "acceptVpcEndpointConnections"


-- | <p>Accept a VPC peering connection request. To accept a request, the VPC peering connection must be in the <code>pending-acceptance</code> state, and you must be the owner of the peer VPC. Use <a>DescribeVpcPeeringConnections</a> to view your outstanding VPC peering connection requests.</p> <p>For an inter-region VPC peering connection request, you must accept the VPC peering connection in the region of the accepter VPC.</p>
acceptVpcPeeringConnection :: forall eff. AcceptVpcPeeringConnectionRequest -> Aff (exception :: EXCEPTION | eff) AcceptVpcPeeringConnectionResult
acceptVpcPeeringConnection = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "acceptVpcPeeringConnection"


-- | <p>Allocates an Elastic IP address.</p> <p>An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. By default, you can allocate 5 Elastic IP addresses for EC2-Classic per region and 5 Elastic IP addresses for EC2-VPC per region.</p> <p>If you release an Elastic IP address for use in a VPC, you might be able to recover it. To recover an Elastic IP address that you released, specify it in the <code>Address</code> parameter. Note that you cannot recover an Elastic IP address that you released after it is allocated to another AWS account.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
allocateAddress :: forall eff. AllocateAddressRequest -> Aff (exception :: EXCEPTION | eff) AllocateAddressResult
allocateAddress = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "allocateAddress"


-- | <p>Allocates a Dedicated Host to your account. At minimum you need to specify the instance size type, Availability Zone, and quantity of hosts you want to allocate.</p>
allocateHosts :: forall eff. AllocateHostsRequest -> Aff (exception :: EXCEPTION | eff) AllocateHostsResult
allocateHosts = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "allocateHosts"


-- | <p>Assigns one or more IPv6 addresses to the specified network interface. You can specify one or more specific IPv6 addresses, or you can specify the number of IPv6 addresses to be automatically assigned from within the subnet's IPv6 CIDR block range. You can assign as many IPv6 addresses to a network interface as you can assign private IPv4 addresses, and the limit varies per instance type. For information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP Addresses Per Network Interface Per Instance Type</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
assignIpv6Addresses :: forall eff. AssignIpv6AddressesRequest -> Aff (exception :: EXCEPTION | eff) AssignIpv6AddressesResult
assignIpv6Addresses = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "assignIpv6Addresses"


-- | <p>Assigns one or more secondary private IP addresses to the specified network interface. You can specify one or more specific secondary IP addresses, or you can specify the number of secondary IP addresses to be automatically assigned within the subnet's CIDR block range. The number of secondary IP addresses that you can assign to an instance varies by instance type. For information about instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about Elastic IP addresses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>AssignPrivateIpAddresses is available only in EC2-VPC.</p>
assignPrivateIpAddresses :: forall eff. AssignPrivateIpAddressesRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
assignPrivateIpAddresses = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "assignPrivateIpAddresses"


-- | <p>Associates an Elastic IP address with an instance or a network interface.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>[EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already associated with a different instance, it is disassociated from that instance and associated with the specified instance. If you associate an Elastic IP address with an instance that has an existing Elastic IP address, the existing address is disassociated from the instance, but remains allocated to your account.</p> <p>[VPC in an EC2-Classic account] If you don't specify a private IP address, the Elastic IP address is associated with the primary IP address. If the Elastic IP address is already associated with a different instance or a network interface, you get an error unless you allow reassociation. You cannot associate an Elastic IP address with an instance or network interface that has an existing Elastic IP address.</p> <important> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error, and you may be charged for each time the Elastic IP address is remapped to the same instance. For more information, see the <i>Elastic IP Addresses</i> section of <a href="http://aws.amazon.com/ec2/pricing/">Amazon EC2 Pricing</a>.</p> </important>
associateAddress :: forall eff. AssociateAddressRequest -> Aff (exception :: EXCEPTION | eff) AssociateAddressResult
associateAddress = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "associateAddress"


-- | <p>Associates a set of DHCP options (that you've previously created) with the specified VPC, or associates no DHCP options with the VPC.</p> <p>After you associate the options with the VPC, any existing instances and all new instances that you launch in that VPC use the options. You don't need to restart or relaunch the instances. They automatically pick up the changes within a few hours, depending on how frequently the instance renews its DHCP lease. You can explicitly renew the lease using the operating system on the instance.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
associateDhcpOptions :: forall eff. AssociateDhcpOptionsRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
associateDhcpOptions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "associateDhcpOptions"


-- | <p>Associates an IAM instance profile with a running or stopped instance. You cannot associate more than one IAM instance profile with an instance.</p>
associateIamInstanceProfile :: forall eff. AssociateIamInstanceProfileRequest -> Aff (exception :: EXCEPTION | eff) AssociateIamInstanceProfileResult
associateIamInstanceProfile = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "associateIamInstanceProfile"


-- | <p>Associates a subnet with a route table. The subnet and route table must be in the same VPC. This association causes traffic originating from the subnet to be routed according to the routes in the route table. The action returns an association ID, which you need in order to disassociate the route table from the subnet later. A route table can be associated with multiple subnets.</p> <p>For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
associateRouteTable :: forall eff. AssociateRouteTableRequest -> Aff (exception :: EXCEPTION | eff) AssociateRouteTableResult
associateRouteTable = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "associateRouteTable"


-- | <p>Associates a CIDR block with your subnet. You can only associate a single IPv6 CIDR block with your subnet. An IPv6 CIDR block must have a prefix length of /64.</p>
associateSubnetCidrBlock :: forall eff. AssociateSubnetCidrBlockRequest -> Aff (exception :: EXCEPTION | eff) AssociateSubnetCidrBlockResult
associateSubnetCidrBlock = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "associateSubnetCidrBlock"


-- | <p>Associates a CIDR block with your VPC. You can associate a secondary IPv4 CIDR block, or you can associate an Amazon-provided IPv6 CIDR block. The IPv6 CIDR block size is fixed at /56.</p> <p>For more information about associating CIDR blocks with your VPC and applicable restrictions, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html#VPC_Sizing">VPC and Subnet Sizing</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
associateVpcCidrBlock :: forall eff. AssociateVpcCidrBlockRequest -> Aff (exception :: EXCEPTION | eff) AssociateVpcCidrBlockResult
associateVpcCidrBlock = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "associateVpcCidrBlock"


-- | <p>Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups. You cannot link an EC2-Classic instance to more than one VPC at a time. You can only link an instance that's in the <code>running</code> state. An instance is automatically unlinked from a VPC when it's stopped - you can link it to the VPC again when you restart it.</p> <p>After you've linked an instance, you cannot change the VPC security groups that are associated with it. To change the security groups, you must first unlink the instance, and then link it again.</p> <p>Linking your instance to a VPC is sometimes referred to as <i>attaching</i> your instance.</p>
attachClassicLinkVpc :: forall eff. AttachClassicLinkVpcRequest -> Aff (exception :: EXCEPTION | eff) AttachClassicLinkVpcResult
attachClassicLinkVpc = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "attachClassicLinkVpc"


-- | <p>Attaches an Internet gateway to a VPC, enabling connectivity between the Internet and the VPC. For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon Virtual Private Cloud User Guide</a>.</p>
attachInternetGateway :: forall eff. AttachInternetGatewayRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
attachInternetGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "attachInternetGateway"


-- | <p>Attaches a network interface to an instance.</p>
attachNetworkInterface :: forall eff. AttachNetworkInterfaceRequest -> Aff (exception :: EXCEPTION | eff) AttachNetworkInterfaceResult
attachNetworkInterface = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "attachNetworkInterface"


-- | <p>Attaches an EBS volume to a running or stopped instance and exposes it to the instance with the specified device name.</p> <p>Encrypted EBS volumes may only be attached to instances that support Amazon EBS encryption. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For a list of supported device names, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching an EBS Volume to an Instance</a>. Any device names that aren't reserved for instance store volumes can be used for EBS volumes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon EC2 Instance Store</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>If a volume has an AWS Marketplace product code:</p> <ul> <li> <p>The volume can be attached only to a stopped instance.</p> </li> <li> <p>AWS Marketplace product codes are copied from the volume to the instance.</p> </li> <li> <p>You must be subscribed to the product.</p> </li> <li> <p>The instance type and operating system of the instance must support the product. For example, you can't detach a volume from a Windows instance and attach it to a Linux instance.</p> </li> </ul> <p>For an overview of the AWS Marketplace, see <a href="https://aws.amazon.com/marketplace/help/200900000">Introducing AWS Marketplace</a>.</p> <p>For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
attachVolume :: forall eff. AttachVolumeRequest -> Aff (exception :: EXCEPTION | eff) VolumeAttachment
attachVolume = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "attachVolume"


-- | <p>Attaches a virtual private gateway to a VPC. You can attach one virtual private gateway to one VPC at a time.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">AWS Managed VPN Connections</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
attachVpnGateway :: forall eff. AttachVpnGatewayRequest -> Aff (exception :: EXCEPTION | eff) AttachVpnGatewayResult
attachVpnGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "attachVpnGateway"


-- | <p>[EC2-VPC only] Adds one or more egress rules to a security group for use with a VPC. Specifically, this action permits instances to send traffic to one or more destination IPv4 or IPv6 CIDR address ranges, or to one or more destination security groups for the same VPC. This action doesn't apply to security groups for use in EC2-Classic. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. For more information about security group limits, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html">Amazon VPC Limits</a>.</p> <p>Each rule consists of the protocol (for example, TCP), plus either a CIDR range or a source group. For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes. You can optionally specify a description for the rule.</p> <p>Rule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.</p>
authorizeSecurityGroupEgress :: forall eff. AuthorizeSecurityGroupEgressRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
authorizeSecurityGroupEgress = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "authorizeSecurityGroupEgress"


-- | <p>Adds one or more ingress rules to a security group.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p> <p>[EC2-Classic] This action gives one or more IPv4 CIDR address ranges permission to access a security group in your account, or gives one or more security groups (called the <i>source groups</i>) permission to access a security group for your account. A source group can be for your own AWS account, or another. You can have up to 100 rules per group.</p> <p>[EC2-VPC] This action gives one or more IPv4 or IPv6 CIDR address ranges permission to access a security group in your VPC, or gives one or more other security groups (called the <i>source groups</i>) permission to access a security group for your VPC. The security groups must all be for the same VPC or a peer VPC in a VPC peering connection. For more information about VPC security group limits, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html">Amazon VPC Limits</a>.</p> <p>You can optionally specify a description for the security group rule.</p>
authorizeSecurityGroupIngress :: forall eff. AuthorizeSecurityGroupIngressRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
authorizeSecurityGroupIngress = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "authorizeSecurityGroupIngress"


-- | <p>Bundles an Amazon instance store-backed Windows instance.</p> <p>During bundling, only the root device volume (C:\) is bundled. Data on other instance store volumes is not preserved.</p> <note> <p>This action is not applicable for Linux/Unix instances or Windows instances that are backed by Amazon EBS.</p> </note> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Creating_InstanceStoreBacked_WinAMI.html">Creating an Instance Store-Backed Windows AMI</a>.</p>
bundleInstance :: forall eff. BundleInstanceRequest -> Aff (exception :: EXCEPTION | eff) BundleInstanceResult
bundleInstance = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "bundleInstance"


-- | <p>Cancels a bundling operation for an instance store-backed Windows instance.</p>
cancelBundleTask :: forall eff. CancelBundleTaskRequest -> Aff (exception :: EXCEPTION | eff) CancelBundleTaskResult
cancelBundleTask = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "cancelBundleTask"


-- | <p>Cancels an active conversion task. The task can be the import of an instance or volume. The action removes all artifacts of the conversion, including a partially uploaded volume or instance. If the conversion is complete or is in the process of transferring the final disk image, the command fails and returns an exception.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing a Virtual Machine Using the Amazon EC2 CLI</a>.</p>
cancelConversionTask :: forall eff. CancelConversionRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
cancelConversionTask = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "cancelConversionTask"


-- | <p>Cancels an active export task. The request removes all artifacts of the export, including any partially-created Amazon S3 objects. If the export task is complete or is in the process of transferring the final disk image, the command fails and returns an error.</p>
cancelExportTask :: forall eff. CancelExportTaskRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
cancelExportTask = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "cancelExportTask"


-- | <p>Cancels an in-process import virtual machine or import snapshot task.</p>
cancelImportTask :: forall eff. CancelImportTaskRequest -> Aff (exception :: EXCEPTION | eff) CancelImportTaskResult
cancelImportTask = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "cancelImportTask"


-- | <p>Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
cancelReservedInstancesListing :: forall eff. CancelReservedInstancesListingRequest -> Aff (exception :: EXCEPTION | eff) CancelReservedInstancesListingResult
cancelReservedInstancesListing = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "cancelReservedInstancesListing"


-- | <p>Cancels the specified Spot Fleet requests.</p> <p>After you cancel a Spot Fleet request, the Spot Fleet launches no new Spot Instances. You must specify whether the Spot Fleet should also terminate its Spot Instances. If you terminate the instances, the Spot Fleet request enters the <code>cancelled_terminating</code> state. Otherwise, the Spot Fleet request enters the <code>cancelled_running</code> state and the instances continue to run until they are interrupted or you terminate them manually.</p>
cancelSpotFleetRequests :: forall eff. CancelSpotFleetRequestsRequest -> Aff (exception :: EXCEPTION | eff) CancelSpotFleetRequestsResponse
cancelSpotFleetRequests = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "cancelSpotFleetRequests"


-- | <p>Cancels one or more Spot Instance requests. Spot Instances are instances that Amazon EC2 starts on your behalf when the maximum price that you specify exceeds the current Spot price. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <important> <p>Canceling a Spot Instance request does not terminate running Spot Instances associated with the request.</p> </important>
cancelSpotInstanceRequests :: forall eff. CancelSpotInstanceRequestsRequest -> Aff (exception :: EXCEPTION | eff) CancelSpotInstanceRequestsResult
cancelSpotInstanceRequests = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "cancelSpotInstanceRequests"


-- | <p>Determines whether a product code is associated with an instance. This action can only be used by the owner of the product code. It is useful when a product code owner must verify whether another user's instance is eligible for support.</p>
confirmProductInstance :: forall eff. ConfirmProductInstanceRequest -> Aff (exception :: EXCEPTION | eff) ConfirmProductInstanceResult
confirmProductInstance = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "confirmProductInstance"


-- | <p>Copies the specified Amazon FPGA Image (AFI) to the current region.</p>
copyFpgaImage :: forall eff. CopyFpgaImageRequest -> Aff (exception :: EXCEPTION | eff) CopyFpgaImageResult
copyFpgaImage = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "copyFpgaImage"


-- | <p>Initiates the copy of an AMI from the specified source region to the current region. You specify the destination region by using its endpoint when making the request.</p> <p>For more information about the prerequisites and limits when copying an AMI, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">Copying an AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
copyImage :: forall eff. CopyImageRequest -> Aff (exception :: EXCEPTION | eff) CopyImageResult
copyImage = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "copyImage"


-- | <p>Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can copy the snapshot within the same region or from one region to another. You can use the snapshot to create EBS volumes or Amazon Machine Images (AMIs). The snapshot is copied to the regional endpoint that you send the HTTP request to.</p> <p>Copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots remain unencrypted, unless the <code>Encrypted</code> flag is specified during the snapshot copy operation. By default, encrypted snapshot copies use the default AWS Key Management Service (AWS KMS) customer master key (CMK); however, you can specify a non-default CMK with the <code>KmsKeyId</code> parameter. </p> <note> <p>To copy an encrypted snapshot that has been shared from another account, you must have permissions for the CMK used to encrypt the snapshot.</p> </note> <note> <p>Snapshots created by the CopySnapshot action have an arbitrary volume ID that should not be used for any purpose.</p> </note> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copying an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
copySnapshot :: forall eff. CopySnapshotRequest -> Aff (exception :: EXCEPTION | eff) CopySnapshotResult
copySnapshot = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "copySnapshot"


-- | <p>Provides information to AWS about your VPN customer gateway device. The customer gateway is the appliance at your end of the VPN connection. (The device on the AWS side of the VPN connection is the virtual private gateway.) You must provide the Internet-routable IP address of the customer gateway's external interface. The IP address must be static and may be behind a device performing network address translation (NAT).</p> <p>For devices that use Border Gateway Protocol (BGP), you can also provide the device's BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network. If you don't have an ASN already, you can use a private ASN (in the 64512 - 65534 range).</p> <note> <p>Amazon EC2 supports all 2-byte ASN numbers in the range of 1 - 65534, with the exception of 7224, which is reserved in the <code>us-east-1</code> region, and 9059, which is reserved in the <code>eu-west-1</code> region.</p> </note> <p>For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">AWS Managed VPN Connections</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <important> <p>You cannot create more than one customer gateway with the same VPN type, IP address, and BGP ASN parameter values. If you run an identical request more than one time, the first request creates the customer gateway, and subsequent requests return information about the existing customer gateway. The subsequent requests do not create new customer gateway resources.</p> </important>
createCustomerGateway :: forall eff. CreateCustomerGatewayRequest -> Aff (exception :: EXCEPTION | eff) CreateCustomerGatewayResult
createCustomerGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createCustomerGateway"


-- | <p>Creates a default subnet with a size <code>/20</code> IPv4 CIDR block in the specified Availability Zone in your default VPC. You can have only one default subnet per Availability Zone. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html#create-default-subnet">Creating a Default Subnet</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createDefaultSubnet :: forall eff. CreateDefaultSubnetRequest -> Aff (exception :: EXCEPTION | eff) CreateDefaultSubnetResult
createDefaultSubnet = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createDefaultSubnet"


-- | <p>Creates a default VPC with a size <code>/16</code> IPv4 CIDR block and a default subnet in each Availability Zone. For more information about the components of a default VPC, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html">Default VPC and Default Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. You cannot specify the components of the default VPC yourself.</p> <p>You can create a default VPC if you deleted your previous default VPC. You cannot have more than one default VPC per region. </p> <p>If your account supports EC2-Classic, you cannot use this action to create a default VPC in a region that supports EC2-Classic. If you want a default VPC in a region that supports EC2-Classic, see "I really want a default VPC for my existing EC2 account. Is that possible?" in the <a href="http://aws.amazon.com/vpc/faqs/#Default_VPCs">Default VPCs FAQ</a>.</p>
createDefaultVpc :: forall eff. CreateDefaultVpcRequest -> Aff (exception :: EXCEPTION | eff) CreateDefaultVpcResult
createDefaultVpc = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createDefaultVpc"


-- | <p>Creates a set of DHCP options for your VPC. After creating the set, you must associate it with the VPC, causing all existing and new instances that you launch in the VPC to use this set of DHCP options. The following are the individual DHCP options you can specify. For more information about the options, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>.</p> <ul> <li> <p> <code>domain-name-servers</code> - The IP addresses of up to four domain name servers, or AmazonProvidedDNS. The default DHCP option set specifies AmazonProvidedDNS. If specifying more than one domain name server, specify the IP addresses in a single parameter, separated by commas. If you want your instance to receive a custom DNS hostname as specified in <code>domain-name</code>, you must set <code>domain-name-servers</code> to a custom DNS server.</p> </li> <li> <p> <code>domain-name</code> - If you're using AmazonProvidedDNS in <code>us-east-1</code>, specify <code>ec2.internal</code>. If you're using AmazonProvidedDNS in another region, specify <code>region.compute.internal</code> (for example, <code>ap-northeast-1.compute.internal</code>). Otherwise, specify a domain name (for example, <code>MyCompany.com</code>). This value is used to complete unqualified DNS hostnames. <b>Important</b>: Some Linux operating systems accept multiple domain names separated by spaces. However, Windows and other Linux operating systems treat the value as a single domain, which results in unexpected behavior. If your DHCP options set is associated with a VPC that has instances with multiple operating systems, specify only one domain name.</p> </li> <li> <p> <code>ntp-servers</code> - The IP addresses of up to four Network Time Protocol (NTP) servers.</p> </li> <li> <p> <code>netbios-name-servers</code> - The IP addresses of up to four NetBIOS name servers.</p> </li> <li> <p> <code>netbios-node-type</code> - The NetBIOS node type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast and multicast are not currently supported). For more information about these node types, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>.</p> </li> </ul> <p>Your VPC automatically starts out with a set of DHCP options that includes only a DNS server that we provide (AmazonProvidedDNS). If you create a set of options, and if your VPC has an Internet gateway, make sure to set the <code>domain-name-servers</code> option either to <code>AmazonProvidedDNS</code> or to a domain name server of your choice. For more information about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createDhcpOptions :: forall eff. CreateDhcpOptionsRequest -> Aff (exception :: EXCEPTION | eff) CreateDhcpOptionsResult
createDhcpOptions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createDhcpOptions"


-- | <p>[IPv6 only] Creates an egress-only Internet gateway for your VPC. An egress-only Internet gateway is used to enable outbound communication over IPv6 from instances in your VPC to the Internet, and prevents hosts outside of your VPC from initiating an IPv6 connection with your instance.</p>
createEgressOnlyInternetGateway :: forall eff. CreateEgressOnlyInternetGatewayRequest -> Aff (exception :: EXCEPTION | eff) CreateEgressOnlyInternetGatewayResult
createEgressOnlyInternetGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createEgressOnlyInternetGateway"


-- | <p>Creates one or more flow logs to capture IP traffic for a specific network interface, subnet, or VPC. Flow logs are delivered to a specified log group in Amazon CloudWatch Logs. If you specify a VPC or subnet in the request, a log stream is created in CloudWatch Logs for each network interface in the subnet or VPC. Log streams can include information about accepted and rejected traffic to a network interface. You can view the data in your log streams using Amazon CloudWatch Logs.</p> <p>In your request, you must also specify an IAM role that has permission to publish logs to CloudWatch Logs.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/flow-logs.html">VPC Flow Logs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createFlowLogs :: forall eff. CreateFlowLogsRequest -> Aff (exception :: EXCEPTION | eff) CreateFlowLogsResult
createFlowLogs = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createFlowLogs"


-- | <p>Creates an Amazon FPGA Image (AFI) from the specified design checkpoint (DCP).</p> <p>The create operation is asynchronous. To verify that the AFI is ready for use, check the output logs.</p> <p>An AFI contains the FPGA bitstream that is ready to download to an FPGA. You can securely deploy an AFI on one or more FPGA-accelerated instances. For more information, see the <a href="https://github.com/aws/aws-fpga/">AWS FPGA Hardware Development Kit</a>.</p>
createFpgaImage :: forall eff. CreateFpgaImageRequest -> Aff (exception :: EXCEPTION | eff) CreateFpgaImageResult
createFpgaImage = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createFpgaImage"


-- | <p>Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either running or stopped.</p> <p>If you customized your instance with instance store volumes or EBS volumes in addition to the root device volume, the new AMI contains block device mapping information for those volumes. When you launch an instance from this new AMI, the instance automatically launches with those additional volumes.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating Amazon EBS-Backed Linux AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
createImage :: forall eff. CreateImageRequest -> Aff (exception :: EXCEPTION | eff) CreateImageResult
createImage = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createImage"


-- | <p>Exports a running or stopped instance to an S3 bucket.</p> <p>For information about the supported operating systems, image formats, and known limitations for the types of instances you can export, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html">Exporting an Instance as a VM Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.</p>
createInstanceExportTask :: forall eff. CreateInstanceExportTaskRequest -> Aff (exception :: EXCEPTION | eff) CreateInstanceExportTaskResult
createInstanceExportTask = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createInstanceExportTask"


-- | <p>Creates an Internet gateway for use with a VPC. After creating the Internet gateway, you attach it to a VPC using <a>AttachInternetGateway</a>.</p> <p>For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon Virtual Private Cloud User Guide</a>.</p>
createInternetGateway :: forall eff. CreateInternetGatewayRequest -> Aff (exception :: EXCEPTION | eff) CreateInternetGatewayResult
createInternetGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createInternetGateway"


-- | <p>Creates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores the public key and displays the private key for you to save to a file. The private key is returned as an unencrypted PEM encoded PKCS#1 private key. If a key with the specified name already exists, Amazon EC2 returns an error.</p> <p>You can have up to five thousand key pairs per region.</p> <p>The key pair returned to you is available only in the region in which you create it. If you prefer, you can create your own key pair using a third-party tool and upload it to any region using <a>ImportKeyPair</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
createKeyPair :: forall eff. CreateKeyPairRequest -> Aff (exception :: EXCEPTION | eff) KeyPair
createKeyPair = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createKeyPair"


-- | <p>Creates a launch template. A launch template contains the parameters to launch an instance. When you launch an instance using <a>RunInstances</a>, you can specify a launch template instead of providing the launch parameters in the request.</p>
createLaunchTemplate :: forall eff. CreateLaunchTemplateRequest -> Aff (exception :: EXCEPTION | eff) CreateLaunchTemplateResult
createLaunchTemplate = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createLaunchTemplate"


-- | <p>Creates a new version for a launch template. You can specify an existing version of launch template from which to base the new version.</p> <p>Launch template versions are numbered in the order in which they are created. You cannot specify, change, or replace the numbering of launch template versions.</p>
createLaunchTemplateVersion :: forall eff. CreateLaunchTemplateVersionRequest -> Aff (exception :: EXCEPTION | eff) CreateLaunchTemplateVersionResult
createLaunchTemplateVersion = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createLaunchTemplateVersion"


-- | <p>Creates a NAT gateway in the specified subnet. A NAT gateway can be used to enable instances in a private subnet to connect to the Internet. This action creates a network interface in the specified subnet with a private IP address from the IP address range of the subnet. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">NAT Gateways</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createNatGateway :: forall eff. CreateNatGatewayRequest -> Aff (exception :: EXCEPTION | eff) CreateNatGatewayResult
createNatGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createNatGateway"


-- | <p>Creates a network ACL in a VPC. Network ACLs provide an optional layer of security (in addition to security groups) for the instances in your VPC.</p> <p>For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createNetworkAcl :: forall eff. CreateNetworkAclRequest -> Aff (exception :: EXCEPTION | eff) CreateNetworkAclResult
createNetworkAcl = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createNetworkAcl"


-- | <p>Creates an entry (a rule) in a network ACL with the specified rule number. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the ACL, we process the entries in the ACL according to the rule numbers, in ascending order. Each network ACL has a set of ingress rules and a separate set of egress rules.</p> <p>We recommend that you leave room between the rule numbers (for example, 100, 110, 120, ...), and not number them one right after the other (for example, 101, 102, 103, ...). This makes it easier to add a rule between existing ones without having to renumber the rules.</p> <p>After you add an entry, you can't modify it; you must either replace it, or create an entry and delete the old one.</p> <p>For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createNetworkAclEntry :: forall eff. CreateNetworkAclEntryRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
createNetworkAclEntry = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createNetworkAclEntry"


-- | <p>Creates a network interface in the specified subnet.</p> <p>For more information about network interfaces, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic Network Interfaces</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createNetworkInterface :: forall eff. CreateNetworkInterfaceRequest -> Aff (exception :: EXCEPTION | eff) CreateNetworkInterfaceResult
createNetworkInterface = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createNetworkInterface"


-- | <p>Grants an AWS authorized partner account permission to attach the specified network interface to an instance in their account.</p> <p>You can grant permission to a single AWS account only, and only one account at a time.</p>
createNetworkInterfacePermission :: forall eff. CreateNetworkInterfacePermissionRequest -> Aff (exception :: EXCEPTION | eff) CreateNetworkInterfacePermissionResult
createNetworkInterfacePermission = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createNetworkInterfacePermission"


-- | <p>Creates a placement group in which to launch instances. The strategy of the placement group determines how the instances are organized within the group. </p> <p>A <code>cluster</code> placement group is a logical grouping of instances within a single Availability Zone that benefit from low network latency, high network throughput. A <code>spread</code> placement group places instances on distinct hardware.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
createPlacementGroup :: forall eff. CreatePlacementGroupRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
createPlacementGroup = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createPlacementGroup"


-- | <p>Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved Instance Marketplace. You can submit one Standard Reserved Instance listing at a time. To get a list of your Standard Reserved Instances, you can use the <a>DescribeReservedInstances</a> operation.</p> <note> <p>Only Standard Reserved Instances with a capacity reservation can be sold in the Reserved Instance Marketplace. Convertible Reserved Instances and Standard Reserved Instances with a regional benefit cannot be sold.</p> </note> <p>The Reserved Instance Marketplace matches sellers who want to resell Standard Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances.</p> <p>To sell your Standard Reserved Instances, you must first register as a seller in the Reserved Instance Marketplace. After completing the registration process, you can create a Reserved Instance Marketplace listing of some or all of your Standard Reserved Instances, and specify the upfront price to receive for them. Your Standard Reserved Instance listings then become available for purchase. To view the details of your Standard Reserved Instance listing, you can use the <a>DescribeReservedInstancesListings</a> operation.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
createReservedInstancesListing :: forall eff. CreateReservedInstancesListingRequest -> Aff (exception :: EXCEPTION | eff) CreateReservedInstancesListingResult
createReservedInstancesListing = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createReservedInstancesListing"


-- | <p>Creates a route in a route table within a VPC.</p> <p>You must specify one of the following targets: Internet gateway or virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, or egress-only Internet gateway.</p> <p>When determining how to route traffic, we use the route with the most specific match. For example, traffic is destined for the IPv4 address <code>192.0.2.3</code>, and the route table includes the following two IPv4 routes:</p> <ul> <li> <p> <code>192.0.2.0/24</code> (goes to some target A)</p> </li> <li> <p> <code>192.0.2.0/28</code> (goes to some target B)</p> </li> </ul> <p>Both routes apply to the traffic destined for <code>192.0.2.3</code>. However, the second route in the list covers a smaller number of IP addresses and is therefore more specific, so we use that route to determine where to target the traffic.</p> <p>For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createRoute :: forall eff. CreateRouteRequest -> Aff (exception :: EXCEPTION | eff) CreateRouteResult
createRoute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createRoute"


-- | <p>Creates a route table for the specified VPC. After you create a route table, you can add routes and associate the table with a subnet.</p> <p>For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createRouteTable :: forall eff. CreateRouteTableRequest -> Aff (exception :: EXCEPTION | eff) CreateRouteTableResult
createRouteTable = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createRouteTable"


-- | <p>Creates a security group.</p> <p>A security group is for use with instances either in the EC2-Classic platform or in a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <important> <p>EC2-Classic: You can have up to 500 security groups.</p> <p>EC2-VPC: You can create up to 500 security groups per VPC.</p> </important> <p>When you create a security group, you specify a friendly name of your choice. You can have a security group for use in EC2-Classic with the same name as a security group for use in a VPC. However, you can't have two security groups for use in EC2-Classic with the same name or two security groups for use in a VPC with the same name.</p> <p>You have a default security group for use in EC2-Classic and a default security group for use in your VPC. If you don't specify a security group when you launch an instance, the instance is launched into the appropriate default security group. A default security group includes a default rule that grants instances unrestricted network access to each other.</p> <p>You can add or remove rules from your security groups using <a>AuthorizeSecurityGroupIngress</a>, <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupIngress</a>, and <a>RevokeSecurityGroupEgress</a>.</p>
createSecurityGroup :: forall eff. CreateSecurityGroupRequest -> Aff (exception :: EXCEPTION | eff) CreateSecurityGroupResult
createSecurityGroup = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createSecurityGroup"


-- | <p>Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots for backups, to make copies of EBS volumes, and to save data before shutting down an instance.</p> <p>When a snapshot is created, any AWS Marketplace product codes that are associated with the source volume are propagated to the snapshot.</p> <p>You can take a snapshot of an attached volume that is in use. However, snapshots only capture data that has been written to your EBS volume at the time the snapshot command is issued; this may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the volume long enough to take a snapshot, your snapshot should be complete. However, if you cannot pause all file writes to the volume, you should unmount the volume from within the instance, issue the snapshot command, and then remount the volume to ensure a consistent and complete snapshot. You may remount and use your volume while the snapshot status is <code>pending</code>.</p> <p>To create a snapshot for EBS volumes that serve as root devices, you should stop the instance before taking the snapshot.</p> <p>Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes that are created from encrypted snapshots are also automatically encrypted. Your encrypted volumes and any associated snapshots always remain protected.</p> <p>You can tag your snapshots during creation. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html">Amazon Elastic Block Store</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
createSnapshot :: forall eff. CreateSnapshotRequest -> Aff (exception :: EXCEPTION | eff) Snapshot
createSnapshot = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createSnapshot"


-- | <p>Creates a data feed for Spot Instances, enabling you to view Spot Instance usage logs. You can create one data feed per AWS account. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
createSpotDatafeedSubscription :: forall eff. CreateSpotDatafeedSubscriptionRequest -> Aff (exception :: EXCEPTION | eff) CreateSpotDatafeedSubscriptionResult
createSpotDatafeedSubscription = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createSpotDatafeedSubscription"


-- | <p>Creates a subnet in an existing VPC.</p> <p>When you create each subnet, you provide the VPC ID and the IPv4 CIDR block you want for the subnet. After you create a subnet, you can't change its CIDR block. The size of the subnet's IPv4 CIDR block can be the same as a VPC's IPv4 CIDR block, or a subset of a VPC's IPv4 CIDR block. If you create more than one subnet in a VPC, the subnets' CIDR blocks must not overlap. The smallest IPv4 subnet (and VPC) you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses).</p> <p>If you've associated an IPv6 CIDR block with your VPC, you can create a subnet with an IPv6 CIDR block that uses a /64 prefix length. </p> <important> <p>AWS reserves both the first four and the last IPv4 address in each subnet's CIDR block. They're not available for use.</p> </important> <p>If you add more than one subnet to a VPC, they're set up in a star topology with a logical router in the middle.</p> <p>If you launch an instance in a VPC using an Amazon EBS-backed AMI, the IP address doesn't change if you stop and restart the instance (unlike a similar instance launched outside a VPC, which gets a new IP address when restarted). It's therefore possible to have a subnet with no running instances (they're all stopped), but no remaining IP addresses available.</p> <p>For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createSubnet :: forall eff. CreateSubnetRequest -> Aff (exception :: EXCEPTION | eff) CreateSubnetResult
createSubnet = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createSubnet"


-- | <p>Adds or overwrites one or more tags for the specified Amazon EC2 resource or resources. Each resource can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique per resource.</p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about creating IAM policies that control users' access to resources based on tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html">Supported Resource-Level Permissions for Amazon EC2 API Actions</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
createTags :: forall eff. CreateTagsRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
createTags = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createTags"


-- | <p>Creates an EBS volume that can be attached to an instance in the same Availability Zone. The volume is created in the regional endpoint that you send the HTTP request to. For more information see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html">Regions and Endpoints</a>.</p> <p>You can create a new empty volume or restore a volume from an EBS snapshot. Any AWS Marketplace product codes from the snapshot are propagated to the volume.</p> <p>You can create encrypted volumes with the <code>Encrypted</code> parameter. Encrypted volumes may only be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are also automatically encrypted. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can tag your volumes during creation. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html">Creating an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
createVolume :: forall eff. CreateVolumeRequest -> Aff (exception :: EXCEPTION | eff) Volume
createVolume = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createVolume"


-- | <p>Creates a VPC with the specified IPv4 CIDR block. The smallest VPC you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses). To help you decide how big to make your VPC, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can optionally request an Amazon-provided IPv6 CIDR block for the VPC. The IPv6 CIDR block uses a /56 prefix length, and is allocated from Amazon's pool of IPv6 addresses. You cannot choose the IPv6 range for your VPC.</p> <p>By default, each instance you launch in the VPC has the default DHCP options, which includes only a default DNS server that we provide (AmazonProvidedDNS). For more information about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can specify the instance tenancy value for the VPC when you create it. You can't change this value for the VPC after you create it. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html">Dedicated Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
createVpc :: forall eff. CreateVpcRequest -> Aff (exception :: EXCEPTION | eff) CreateVpcResult
createVpc = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createVpc"


-- | <p>Creates a VPC endpoint for a specified service. An endpoint enables you to create a private connection between your VPC and the service. The service may be provided by AWS, an AWS Marketplace partner, or another AWS account. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-endpoints.html">VPC Endpoints</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>A <code>gateway</code> endpoint serves as a target for a route in your route table for traffic destined for the AWS service. You can specify an endpoint policy to attach to the endpoint that will control access to the service from your VPC. You can also specify the VPC route tables that use the endpoint.</p> <p>An <code>interface</code> endpoint is a network interface in your subnet that serves as an endpoint for communicating with the specified service. You can specify the subnets in which to create an endpoint, and the security groups to associate with the endpoint network interface.</p> <p>Use <a>DescribeVpcEndpointServices</a> to get a list of supported services.</p>
createVpcEndpoint :: forall eff. CreateVpcEndpointRequest -> Aff (exception :: EXCEPTION | eff) CreateVpcEndpointResult
createVpcEndpoint = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createVpcEndpoint"


-- | <p>Creates a connection notification for a specified VPC endpoint or VPC endpoint service. A connection notification notifies you of specific endpoint events. You must create an SNS topic to receive notifications. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Create a Topic</a> in the <i>Amazon Simple Notification Service Developer Guide</i>.</p> <p>You can create a connection notification for interface endpoints only.</p>
createVpcEndpointConnectionNotification :: forall eff. CreateVpcEndpointConnectionNotificationRequest -> Aff (exception :: EXCEPTION | eff) CreateVpcEndpointConnectionNotificationResult
createVpcEndpointConnectionNotification = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createVpcEndpointConnectionNotification"


-- | <p>Creates a VPC endpoint service configuration to which service consumers (AWS accounts, IAM users, and IAM roles) can connect. Service consumers can create an interface VPC endpoint to connect to your service.</p> <p>To create an endpoint service configuration, you must first create a Network Load Balancer for your service. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/endpoint-service.html">VPC Endpoint Services</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. </p>
createVpcEndpointServiceConfiguration :: forall eff. CreateVpcEndpointServiceConfigurationRequest -> Aff (exception :: EXCEPTION | eff) CreateVpcEndpointServiceConfigurationResult
createVpcEndpointServiceConfiguration = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createVpcEndpointServiceConfiguration"


-- | <p>Requests a VPC peering connection between two VPCs: a requester VPC that you own and an accepter VPC with which to create the connection. The accepter VPC can belong to another AWS account and can be in a different region to the requester VPC. The requester VPC and accepter VPC cannot have overlapping CIDR blocks.</p> <note> <p>Limitations and rules apply to a VPC peering connection. For more information, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/vpc-peering-basics.html#vpc-peering-limitations">limitations</a> section in the <i>VPC Peering Guide</i>.</p> </note> <p>The owner of the accepter VPC must accept the peering request to activate the peering connection. The VPC peering connection request expires after 7 days, after which it cannot be accepted or rejected.</p> <p>If you create a VPC peering connection request between VPCs with overlapping CIDR blocks, the VPC peering connection has a status of <code>failed</code>.</p>
createVpcPeeringConnection :: forall eff. CreateVpcPeeringConnectionRequest -> Aff (exception :: EXCEPTION | eff) CreateVpcPeeringConnectionResult
createVpcPeeringConnection = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createVpcPeeringConnection"


-- | <p>Creates a VPN connection between an existing virtual private gateway and a VPN customer gateway. The only supported connection type is <code>ipsec.1</code>.</p> <p>The response includes information that you need to give to your network administrator to configure your customer gateway.</p> <important> <p>We strongly recommend that you use HTTPS when calling this operation because the response contains sensitive cryptographic information for configuring your customer gateway.</p> </important> <p>If you decide to shut down your VPN connection for any reason and later create a new VPN connection, you must reconfigure your customer gateway with the new information returned from this call.</p> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">AWS Managed VPN Connections</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createVpnConnection :: forall eff. CreateVpnConnectionRequest -> Aff (exception :: EXCEPTION | eff) CreateVpnConnectionResult
createVpnConnection = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createVpnConnection"


-- | <p>Creates a static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.</p> <p>For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">AWS Managed VPN Connections</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createVpnConnectionRoute :: forall eff. CreateVpnConnectionRouteRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
createVpnConnectionRoute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createVpnConnectionRoute"


-- | <p>Creates a virtual private gateway. A virtual private gateway is the endpoint on the VPC side of your VPN connection. You can create a virtual private gateway before creating the VPC itself.</p> <p>For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">AWS Managed VPN Connections</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
createVpnGateway :: forall eff. CreateVpnGatewayRequest -> Aff (exception :: EXCEPTION | eff) CreateVpnGatewayResult
createVpnGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "createVpnGateway"


-- | <p>Deletes the specified customer gateway. You must delete the VPN connection before you can delete the customer gateway.</p>
deleteCustomerGateway :: forall eff. DeleteCustomerGatewayRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteCustomerGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteCustomerGateway"


-- | <p>Deletes the specified set of DHCP options. You must disassociate the set of DHCP options before you can delete it. You can disassociate the set of DHCP options by associating either a new set of options or the default set of options with the VPC.</p>
deleteDhcpOptions :: forall eff. DeleteDhcpOptionsRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteDhcpOptions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteDhcpOptions"


-- | <p>Deletes an egress-only Internet gateway.</p>
deleteEgressOnlyInternetGateway :: forall eff. DeleteEgressOnlyInternetGatewayRequest -> Aff (exception :: EXCEPTION | eff) DeleteEgressOnlyInternetGatewayResult
deleteEgressOnlyInternetGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteEgressOnlyInternetGateway"


-- | <p>Deletes one or more flow logs.</p>
deleteFlowLogs :: forall eff. DeleteFlowLogsRequest -> Aff (exception :: EXCEPTION | eff) DeleteFlowLogsResult
deleteFlowLogs = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteFlowLogs"


-- | <p>Deletes the specified Amazon FPGA Image (AFI).</p>
deleteFpgaImage :: forall eff. DeleteFpgaImageRequest -> Aff (exception :: EXCEPTION | eff) DeleteFpgaImageResult
deleteFpgaImage = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteFpgaImage"


-- | <p>Deletes the specified Internet gateway. You must detach the Internet gateway from the VPC before you can delete it.</p>
deleteInternetGateway :: forall eff. DeleteInternetGatewayRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteInternetGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteInternetGateway"


-- | <p>Deletes the specified key pair, by removing the public key from Amazon EC2.</p>
deleteKeyPair :: forall eff. DeleteKeyPairRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteKeyPair = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteKeyPair"


-- | <p>Deletes a launch template. Deleting a launch template deletes all of its versions.</p>
deleteLaunchTemplate :: forall eff. DeleteLaunchTemplateRequest -> Aff (exception :: EXCEPTION | eff) DeleteLaunchTemplateResult
deleteLaunchTemplate = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteLaunchTemplate"


-- | <p>Deletes one or more versions of a launch template. You cannot delete the default version of a launch template; you must first assign a different version as the default. If the default version is the only version for the launch template, you must delete the entire launch template using <a>DeleteLaunchTemplate</a>.</p>
deleteLaunchTemplateVersions :: forall eff. DeleteLaunchTemplateVersionsRequest -> Aff (exception :: EXCEPTION | eff) DeleteLaunchTemplateVersionsResult
deleteLaunchTemplateVersions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteLaunchTemplateVersions"


-- | <p>Deletes the specified NAT gateway. Deleting a NAT gateway disassociates its Elastic IP address, but does not release the address from your account. Deleting a NAT gateway does not delete any NAT gateway routes in your route tables.</p>
deleteNatGateway :: forall eff. DeleteNatGatewayRequest -> Aff (exception :: EXCEPTION | eff) DeleteNatGatewayResult
deleteNatGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteNatGateway"


-- | <p>Deletes the specified network ACL. You can't delete the ACL if it's associated with any subnets. You can't delete the default network ACL.</p>
deleteNetworkAcl :: forall eff. DeleteNetworkAclRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteNetworkAcl = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteNetworkAcl"


-- | <p>Deletes the specified ingress or egress entry (rule) from the specified network ACL.</p>
deleteNetworkAclEntry :: forall eff. DeleteNetworkAclEntryRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteNetworkAclEntry = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteNetworkAclEntry"


-- | <p>Deletes the specified network interface. You must detach the network interface before you can delete it.</p>
deleteNetworkInterface :: forall eff. DeleteNetworkInterfaceRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteNetworkInterface = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteNetworkInterface"


-- | <p>Deletes a permission for a network interface. By default, you cannot delete the permission if the account for which you're removing the permission has attached the network interface to an instance. However, you can force delete the permission, regardless of any attachment.</p>
deleteNetworkInterfacePermission :: forall eff. DeleteNetworkInterfacePermissionRequest -> Aff (exception :: EXCEPTION | eff) DeleteNetworkInterfacePermissionResult
deleteNetworkInterfacePermission = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteNetworkInterfacePermission"


-- | <p>Deletes the specified placement group. You must terminate all instances in the placement group before you can delete the placement group. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
deletePlacementGroup :: forall eff. DeletePlacementGroupRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deletePlacementGroup = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deletePlacementGroup"


-- | <p>Deletes the specified route from the specified route table.</p>
deleteRoute :: forall eff. DeleteRouteRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteRoute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteRoute"


-- | <p>Deletes the specified route table. You must disassociate the route table from any subnets before you can delete it. You can't delete the main route table.</p>
deleteRouteTable :: forall eff. DeleteRouteTableRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteRouteTable = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteRouteTable"


-- | <p>Deletes a security group.</p> <p>If you attempt to delete a security group that is associated with an instance, or is referenced by another security group, the operation fails with <code>InvalidGroup.InUse</code> in EC2-Classic or <code>DependencyViolation</code> in EC2-VPC.</p>
deleteSecurityGroup :: forall eff. DeleteSecurityGroupRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteSecurityGroup = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteSecurityGroup"


-- | <p>Deletes the specified snapshot.</p> <p>When you make periodic snapshots of a volume, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the volume.</p> <p>You cannot delete a snapshot of the root device of an EBS volume used by a registered AMI. You must first de-register the AMI before you can delete the snapshot.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html">Deleting an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
deleteSnapshot :: forall eff. DeleteSnapshotRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteSnapshot = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteSnapshot"


-- | <p>Deletes the data feed for Spot Instances.</p>
deleteSpotDatafeedSubscription :: forall eff. DeleteSpotDatafeedSubscriptionRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteSpotDatafeedSubscription = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteSpotDatafeedSubscription"


-- | <p>Deletes the specified subnet. You must terminate all running instances in the subnet before you can delete the subnet.</p>
deleteSubnet :: forall eff. DeleteSubnetRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteSubnet = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteSubnet"


-- | <p>Deletes the specified set of tags from the specified set of resources.</p> <p>To list the current tags, use <a>DescribeTags</a>. For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
deleteTags :: forall eff. DeleteTagsRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteTags = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteTags"


-- | <p>Deletes the specified EBS volume. The volume must be in the <code>available</code> state (not attached to an instance).</p> <note> <p>The volume may remain in the <code>deleting</code> state for several minutes.</p> </note> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html">Deleting an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
deleteVolume :: forall eff. DeleteVolumeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteVolume = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteVolume"


-- | <p>Deletes the specified VPC. You must detach or delete all gateways and resources that are associated with the VPC before you can delete it. For example, you must terminate all instances running in the VPC, delete all security groups associated with the VPC (except the default one), delete all route tables associated with the VPC (except the default one), and so on.</p>
deleteVpc :: forall eff. DeleteVpcRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteVpc = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteVpc"


-- | <p>Deletes one or more VPC endpoint connection notifications.</p>
deleteVpcEndpointConnectionNotifications :: forall eff. DeleteVpcEndpointConnectionNotificationsRequest -> Aff (exception :: EXCEPTION | eff) DeleteVpcEndpointConnectionNotificationsResult
deleteVpcEndpointConnectionNotifications = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteVpcEndpointConnectionNotifications"


-- | <p>Deletes one or more VPC endpoint service configurations in your account. Before you delete the endpoint service configuration, you must reject any <code>Available</code> or <code>PendingAcceptance</code> interface endpoint connections that are attached to the service.</p>
deleteVpcEndpointServiceConfigurations :: forall eff. DeleteVpcEndpointServiceConfigurationsRequest -> Aff (exception :: EXCEPTION | eff) DeleteVpcEndpointServiceConfigurationsResult
deleteVpcEndpointServiceConfigurations = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteVpcEndpointServiceConfigurations"


-- | <p>Deletes one or more specified VPC endpoints. Deleting a gateway endpoint also deletes the endpoint routes in the route tables that were associated with the endpoint. Deleting an interface endpoint deletes the endpoint network interfaces.</p>
deleteVpcEndpoints :: forall eff. DeleteVpcEndpointsRequest -> Aff (exception :: EXCEPTION | eff) DeleteVpcEndpointsResult
deleteVpcEndpoints = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteVpcEndpoints"


-- | <p>Deletes a VPC peering connection. Either the owner of the requester VPC or the owner of the accepter VPC can delete the VPC peering connection if it's in the <code>active</code> state. The owner of the requester VPC can delete a VPC peering connection in the <code>pending-acceptance</code> state. You cannot delete a VPC peering connection that's in the <code>failed</code> state.</p>
deleteVpcPeeringConnection :: forall eff. DeleteVpcPeeringConnectionRequest -> Aff (exception :: EXCEPTION | eff) DeleteVpcPeeringConnectionResult
deleteVpcPeeringConnection = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteVpcPeeringConnection"


-- | <p>Deletes the specified VPN connection.</p> <p>If you're deleting the VPC and its associated components, we recommend that you detach the virtual private gateway from the VPC and delete the VPC before deleting the VPN connection. If you believe that the tunnel credentials for your VPN connection have been compromised, you can delete the VPN connection and create a new one that has new keys, without needing to delete the VPC or virtual private gateway. If you create a new VPN connection, you must reconfigure the customer gateway using the new configuration information returned with the new VPN connection ID.</p>
deleteVpnConnection :: forall eff. DeleteVpnConnectionRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteVpnConnection = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteVpnConnection"


-- | <p>Deletes the specified static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.</p>
deleteVpnConnectionRoute :: forall eff. DeleteVpnConnectionRouteRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteVpnConnectionRoute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteVpnConnectionRoute"


-- | <p>Deletes the specified virtual private gateway. We recommend that before you delete a virtual private gateway, you detach it from the VPC and delete the VPN connection. Note that you don't need to delete the virtual private gateway if you plan to delete and recreate the VPN connection between your VPC and your network.</p>
deleteVpnGateway :: forall eff. DeleteVpnGatewayRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deleteVpnGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deleteVpnGateway"


-- | <p>Deregisters the specified AMI. After you deregister an AMI, it can't be used to launch new instances; however, it doesn't affect any instances that you've already launched from the AMI. You'll continue to incur usage costs for those instances until you terminate them.</p> <p>When you deregister an Amazon EBS-backed AMI, it doesn't affect the snapshot that was created for the root volume of the instance during the AMI creation process. When you deregister an instance store-backed AMI, it doesn't affect the files that you uploaded to Amazon S3 when you created the AMI.</p>
deregisterImage :: forall eff. DeregisterImageRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
deregisterImage = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "deregisterImage"


-- | <p>Describes attributes of your AWS account. The following are the supported account attributes:</p> <ul> <li> <p> <code>supported-platforms</code>: Indicates whether your account can launch instances into EC2-Classic and EC2-VPC, or only into EC2-VPC.</p> </li> <li> <p> <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.</p> </li> <li> <p> <code>max-instances</code>: The maximum number of On-Demand Instances that you can run.</p> </li> <li> <p> <code>vpc-max-security-groups-per-interface</code>: The maximum number of security groups that you can assign to a network interface.</p> </li> <li> <p> <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you can allocate for use with EC2-Classic. </p> </li> <li> <p> <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that you can allocate for use with EC2-VPC.</p> </li> </ul>
describeAccountAttributes :: forall eff. DescribeAccountAttributesRequest -> Aff (exception :: EXCEPTION | eff) DescribeAccountAttributesResult
describeAccountAttributes = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeAccountAttributes"


-- | <p>Describes one or more of your Elastic IP addresses.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeAddresses :: forall eff. DescribeAddressesRequest -> Aff (exception :: EXCEPTION | eff) DescribeAddressesResult
describeAddresses = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeAddresses"


-- | <p>Describes the longer ID format settings for all resource types in a specific region. This request is useful for performing a quick audit to determine whether a specific region is fully opted in for longer IDs (17-character IDs).</p> <p>This request only returns information about resource types that support longer IDs.</p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p>
describeAggregateIdFormat :: forall eff. DescribeAggregateIdFormatRequest -> Aff (exception :: EXCEPTION | eff) DescribeAggregateIdFormatResult
describeAggregateIdFormat = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeAggregateIdFormat"


-- | <p>Describes one or more of the Availability Zones that are available to you. The results include zones only for the region you're currently using. If there is an event impacting an Availability Zone, you can use this request to view the state and any provided message for that Availability Zone.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeAvailabilityZones :: forall eff. DescribeAvailabilityZonesRequest -> Aff (exception :: EXCEPTION | eff) DescribeAvailabilityZonesResult
describeAvailabilityZones = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeAvailabilityZones"


-- | <p>Describes one or more of your bundling tasks.</p> <note> <p>Completed bundle tasks are listed for only a limited time. If your bundle task is no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code> with the Amazon S3 bucket name and image manifest name you provided to the bundle task.</p> </note>
describeBundleTasks :: forall eff. DescribeBundleTasksRequest -> Aff (exception :: EXCEPTION | eff) DescribeBundleTasksResult
describeBundleTasks = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeBundleTasks"


-- | <p>Describes one or more of your linked EC2-Classic instances. This request only returns information about EC2-Classic instances linked to a VPC through ClassicLink; you cannot use this request to return information about other instances.</p>
describeClassicLinkInstances :: forall eff. DescribeClassicLinkInstancesRequest -> Aff (exception :: EXCEPTION | eff) DescribeClassicLinkInstancesResult
describeClassicLinkInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeClassicLinkInstances"


-- | <p>Describes one or more of your conversion tasks. For more information, see the <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/">VM Import/Export User Guide</a>.</p> <p>For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
describeConversionTasks :: forall eff. DescribeConversionTasksRequest -> Aff (exception :: EXCEPTION | eff) DescribeConversionTasksResult
describeConversionTasks = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeConversionTasks"


-- | <p>Describes one or more of your VPN customer gateways.</p> <p>For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">AWS Managed VPN Connections</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
describeCustomerGateways :: forall eff. DescribeCustomerGatewaysRequest -> Aff (exception :: EXCEPTION | eff) DescribeCustomerGatewaysResult
describeCustomerGateways = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeCustomerGateways"


-- | <p>Describes one or more of your DHCP options sets.</p> <p>For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
describeDhcpOptions :: forall eff. DescribeDhcpOptionsRequest -> Aff (exception :: EXCEPTION | eff) DescribeDhcpOptionsResult
describeDhcpOptions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeDhcpOptions"


-- | <p>Describes one or more of your egress-only Internet gateways.</p>
describeEgressOnlyInternetGateways :: forall eff. DescribeEgressOnlyInternetGatewaysRequest -> Aff (exception :: EXCEPTION | eff) DescribeEgressOnlyInternetGatewaysResult
describeEgressOnlyInternetGateways = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeEgressOnlyInternetGateways"


-- | <p>Describes the Elastic GPUs associated with your instances. For more information about Elastic GPUs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html">Amazon EC2 Elastic GPUs</a>.</p>
describeElasticGpus :: forall eff. DescribeElasticGpusRequest -> Aff (exception :: EXCEPTION | eff) DescribeElasticGpusResult
describeElasticGpus = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeElasticGpus"


-- | <p>Describes one or more of your export tasks.</p>
describeExportTasks :: forall eff. DescribeExportTasksRequest -> Aff (exception :: EXCEPTION | eff) DescribeExportTasksResult
describeExportTasks = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeExportTasks"


-- | <p>Describes one or more flow logs. To view the information in your flow logs (the log streams for the network interfaces), you must use the CloudWatch Logs console or the CloudWatch Logs API.</p>
describeFlowLogs :: forall eff. DescribeFlowLogsRequest -> Aff (exception :: EXCEPTION | eff) DescribeFlowLogsResult
describeFlowLogs = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeFlowLogs"


-- | <p>Describes the specified attribute of the specified Amazon FPGA Image (AFI).</p>
describeFpgaImageAttribute :: forall eff. DescribeFpgaImageAttributeRequest -> Aff (exception :: EXCEPTION | eff) DescribeFpgaImageAttributeResult
describeFpgaImageAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeFpgaImageAttribute"


-- | <p>Describes one or more available Amazon FPGA Images (AFIs). These include public AFIs, private AFIs that you own, and AFIs owned by other AWS accounts for which you have load permissions.</p>
describeFpgaImages :: forall eff. DescribeFpgaImagesRequest -> Aff (exception :: EXCEPTION | eff) DescribeFpgaImagesResult
describeFpgaImages = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeFpgaImages"


-- | <p>Describes the Dedicated Host Reservations that are available to purchase.</p> <p>The results describe all the Dedicated Host Reservation offerings, including offerings that may not match the instance family and region of your Dedicated Hosts. When purchasing an offering, ensure that the the instance family and region of the offering matches that of the Dedicated Host/s it will be associated with. For an overview of supported instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated Hosts Overview</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p>
describeHostReservationOfferings :: forall eff. DescribeHostReservationOfferingsRequest -> Aff (exception :: EXCEPTION | eff) DescribeHostReservationOfferingsResult
describeHostReservationOfferings = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeHostReservationOfferings"


-- | <p>Describes Dedicated Host Reservations which are associated with Dedicated Hosts in your account.</p>
describeHostReservations :: forall eff. DescribeHostReservationsRequest -> Aff (exception :: EXCEPTION | eff) DescribeHostReservationsResult
describeHostReservations = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeHostReservations"


-- | <p>Describes one or more of your Dedicated Hosts.</p> <p>The results describe only the Dedicated Hosts in the region you're currently using. All listed instances consume capacity on your Dedicated Host. Dedicated Hosts that have recently been released will be listed with the state <code>released</code>.</p>
describeHosts :: forall eff. DescribeHostsRequest -> Aff (exception :: EXCEPTION | eff) DescribeHostsResult
describeHosts = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeHosts"


-- | <p>Describes your IAM instance profile associations.</p>
describeIamInstanceProfileAssociations :: forall eff. DescribeIamInstanceProfileAssociationsRequest -> Aff (exception :: EXCEPTION | eff) DescribeIamInstanceProfileAssociationsResult
describeIamInstanceProfileAssociations = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeIamInstanceProfileAssociations"


-- | <p>Describes the ID format settings for your resources on a per-region basis, for example, to view which resource types are enabled for longer IDs. This request only returns information about resource types whose ID formats can be modified; it does not return information about other resource types.</p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p> <p>These settings apply to the IAM user who makes the request; they do not apply to the entire AWS account. By default, an IAM user defaults to the same settings as the root user, unless they explicitly override the settings by running the <a>ModifyIdFormat</a> command. Resources created with longer IDs are visible to all IAM users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>
describeIdFormat :: forall eff. DescribeIdFormatRequest -> Aff (exception :: EXCEPTION | eff) DescribeIdFormatResult
describeIdFormat = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeIdFormat"


-- | <p>Describes the ID format settings for resources for the specified IAM user, IAM role, or root user. For example, you can view the resource types that are enabled for longer IDs. This request only returns information about resource types whose ID formats can be modified; it does not return information about other resource types. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p> <p>These settings apply to the principal specified in the request. They do not apply to the principal that makes the request.</p>
describeIdentityIdFormat :: forall eff. DescribeIdentityIdFormatRequest -> Aff (exception :: EXCEPTION | eff) DescribeIdentityIdFormatResult
describeIdentityIdFormat = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeIdentityIdFormat"


-- | <p>Describes the specified attribute of the specified AMI. You can specify only one attribute at a time.</p>
describeImageAttribute :: forall eff. DescribeImageAttributeRequest -> Aff (exception :: EXCEPTION | eff) ImageAttribute
describeImageAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeImageAttribute"


-- | <p>Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images available to you include public images, private images that you own, and private images owned by other AWS accounts but for which you have explicit launch permissions.</p> <note> <p>Deregistered images are included in the returned results for an unspecified interval after deregistration.</p> </note>
describeImages :: forall eff. DescribeImagesRequest -> Aff (exception :: EXCEPTION | eff) DescribeImagesResult
describeImages = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeImages"


-- | <p>Displays details about an import virtual machine or import snapshot tasks that are already created.</p>
describeImportImageTasks :: forall eff. DescribeImportImageTasksRequest -> Aff (exception :: EXCEPTION | eff) DescribeImportImageTasksResult
describeImportImageTasks = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeImportImageTasks"


-- | <p>Describes your import snapshot tasks.</p>
describeImportSnapshotTasks :: forall eff. DescribeImportSnapshotTasksRequest -> Aff (exception :: EXCEPTION | eff) DescribeImportSnapshotTasksResult
describeImportSnapshotTasks = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeImportSnapshotTasks"


-- | <p>Describes the specified attribute of the specified instance. You can specify only one attribute at a time. Valid attribute values are: <code>instanceType</code> | <code>kernel</code> | <code>ramdisk</code> | <code>userData</code> | <code>disableApiTermination</code> | <code>instanceInitiatedShutdownBehavior</code> | <code>rootDeviceName</code> | <code>blockDeviceMapping</code> | <code>productCodes</code> | <code>sourceDestCheck</code> | <code>groupSet</code> | <code>ebsOptimized</code> | <code>sriovNetSupport</code> </p>
describeInstanceAttribute :: forall eff. DescribeInstanceAttributeRequest -> Aff (exception :: EXCEPTION | eff) InstanceAttribute
describeInstanceAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeInstanceAttribute"


-- | <p>Describes the credit option for CPU usage of one or more of your T2 instances. The credit options are <code>standard</code> and <code>unlimited</code>.</p> <p>If you do not specify an instance ID, Amazon EC2 returns only the T2 instances with the <code>unlimited</code> credit option. If you specify one or more instance IDs, Amazon EC2 returns the credit option (<code>standard</code> or <code>unlimited</code>) of those instances. If you specify an instance ID that is not valid, such as an instance that is not a T2 instance, an error is returned.</p> <p>Recently terminated instances might appear in the returned results. This interval is usually less than one hour.</p> <p>If an Availability Zone is experiencing a service disruption and you specify instance IDs in the affected zone, or do not specify any instance IDs at all, the call fails. If you specify only instance IDs in an unaffected zone, the call works normally.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/t2-instances.html">T2 Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeInstanceCreditSpecifications :: forall eff. DescribeInstanceCreditSpecificationsRequest -> Aff (exception :: EXCEPTION | eff) DescribeInstanceCreditSpecificationsResult
describeInstanceCreditSpecifications = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeInstanceCreditSpecifications"


-- | <p>Describes the status of one or more instances. By default, only running instances are described, unless you specifically indicate to return the status of all instances.</p> <p>Instance status includes the following components:</p> <ul> <li> <p> <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances to identify hardware and software issues. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status Checks for Your Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </li> <li> <p> <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or terminate) for your instances related to hardware issues, software updates, or system maintenance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </li> <li> <p> <b>Instance state</b> - You can manage your instances from the moment you launch them through their termination. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </li> </ul>
describeInstanceStatus :: forall eff. DescribeInstanceStatusRequest -> Aff (exception :: EXCEPTION | eff) DescribeInstanceStatusResult
describeInstanceStatus = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeInstanceStatus"


-- | <p>Describes one or more of your instances.</p> <p>If you specify one or more instance IDs, Amazon EC2 returns information for those instances. If you do not specify instance IDs, Amazon EC2 returns information for all relevant instances. If you specify an instance ID that is not valid, an error is returned. If you specify an instance that you do not own, it is not included in the returned results.</p> <p>Recently terminated instances might appear in the returned results. This interval is usually less than one hour.</p> <p>If you describe instances in the rare case where an Availability Zone is experiencing a service disruption and you specify instance IDs that are in the affected zone, or do not specify any instance IDs at all, the call fails. If you describe instances and specify only instance IDs that are in an unaffected zone, the call works normally.</p>
describeInstances :: forall eff. DescribeInstancesRequest -> Aff (exception :: EXCEPTION | eff) DescribeInstancesResult
describeInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeInstances"


-- | <p>Describes one or more of your Internet gateways.</p>
describeInternetGateways :: forall eff. DescribeInternetGatewaysRequest -> Aff (exception :: EXCEPTION | eff) DescribeInternetGatewaysResult
describeInternetGateways = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeInternetGateways"


-- | <p>Describes one or more of your key pairs.</p> <p>For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeKeyPairs :: forall eff. DescribeKeyPairsRequest -> Aff (exception :: EXCEPTION | eff) DescribeKeyPairsResult
describeKeyPairs = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeKeyPairs"


-- | <p>Describes one or more versions of a specified launch template. You can describe all versions, individual versions, or a range of versions.</p>
describeLaunchTemplateVersions :: forall eff. DescribeLaunchTemplateVersionsRequest -> Aff (exception :: EXCEPTION | eff) DescribeLaunchTemplateVersionsResult
describeLaunchTemplateVersions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeLaunchTemplateVersions"


-- | <p>Describes one or more launch templates.</p>
describeLaunchTemplates :: forall eff. DescribeLaunchTemplatesRequest -> Aff (exception :: EXCEPTION | eff) DescribeLaunchTemplatesResult
describeLaunchTemplates = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeLaunchTemplates"


-- | <p>Describes your Elastic IP addresses that are being moved to the EC2-VPC platform, or that are being restored to the EC2-Classic platform. This request does not return information about any other Elastic IP addresses in your account.</p>
describeMovingAddresses :: forall eff. DescribeMovingAddressesRequest -> Aff (exception :: EXCEPTION | eff) DescribeMovingAddressesResult
describeMovingAddresses = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeMovingAddresses"


-- | <p>Describes one or more of the your NAT gateways.</p>
describeNatGateways :: forall eff. DescribeNatGatewaysRequest -> Aff (exception :: EXCEPTION | eff) DescribeNatGatewaysResult
describeNatGateways = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeNatGateways"


-- | <p>Describes one or more of your network ACLs.</p> <p>For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
describeNetworkAcls :: forall eff. DescribeNetworkAclsRequest -> Aff (exception :: EXCEPTION | eff) DescribeNetworkAclsResult
describeNetworkAcls = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeNetworkAcls"


-- | <p>Describes a network interface attribute. You can specify only one attribute at a time.</p>
describeNetworkInterfaceAttribute :: forall eff. DescribeNetworkInterfaceAttributeRequest -> Aff (exception :: EXCEPTION | eff) DescribeNetworkInterfaceAttributeResult
describeNetworkInterfaceAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeNetworkInterfaceAttribute"


-- | <p>Describes the permissions for your network interfaces. </p>
describeNetworkInterfacePermissions :: forall eff. DescribeNetworkInterfacePermissionsRequest -> Aff (exception :: EXCEPTION | eff) DescribeNetworkInterfacePermissionsResult
describeNetworkInterfacePermissions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeNetworkInterfacePermissions"


-- | <p>Describes one or more of your network interfaces.</p>
describeNetworkInterfaces :: forall eff. DescribeNetworkInterfacesRequest -> Aff (exception :: EXCEPTION | eff) DescribeNetworkInterfacesResult
describeNetworkInterfaces = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeNetworkInterfaces"


-- | <p>Describes one or more of your placement groups. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describePlacementGroups :: forall eff. DescribePlacementGroupsRequest -> Aff (exception :: EXCEPTION | eff) DescribePlacementGroupsResult
describePlacementGroups = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describePlacementGroups"


-- | <p>Describes available AWS services in a prefix list format, which includes the prefix list name and prefix list ID of the service and the IP address range for the service. A prefix list ID is required for creating an outbound security group rule that allows traffic from a VPC to access an AWS service through a gateway VPC endpoint.</p>
describePrefixLists :: forall eff. DescribePrefixListsRequest -> Aff (exception :: EXCEPTION | eff) DescribePrefixListsResult
describePrefixLists = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describePrefixLists"


-- | <p>Describes the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference. </p> <p>By default, all IAM roles and IAM users default to the same ID settings as the root user, unless they explicitly override the settings. This request is useful for identifying those IAM users and IAM roles that have overridden the default ID settings.</p> <p>The following resource types support longer IDs: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p>
describePrincipalIdFormat :: forall eff. DescribePrincipalIdFormatRequest -> Aff (exception :: EXCEPTION | eff) DescribePrincipalIdFormatResult
describePrincipalIdFormat = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describePrincipalIdFormat"


-- | <p>Describes one or more regions that are currently available to you.</p> <p>For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions and Endpoints</a>.</p>
describeRegions :: forall eff. DescribeRegionsRequest -> Aff (exception :: EXCEPTION | eff) DescribeRegionsResult
describeRegions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeRegions"


-- | <p>Describes one or more of the Reserved Instances that you purchased.</p> <p>For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeReservedInstances :: forall eff. DescribeReservedInstancesRequest -> Aff (exception :: EXCEPTION | eff) DescribeReservedInstancesResult
describeReservedInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeReservedInstances"


-- | <p>Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.</p> <p>The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances.</p> <p>As a seller, you choose to list some or all of your Reserved Instances, and you specify the upfront price to receive for them. Your Reserved Instances are then listed in the Reserved Instance Marketplace and are available for purchase.</p> <p>As a buyer, you specify the configuration of the Reserved Instance to purchase, and the Marketplace matches what you're searching for with what's available. The Marketplace first sells the lowest priced Reserved Instances to you, and continues to sell available Reserved Instance listings to you until your demand is met. You are charged based on the total price of all of the listings that you purchase.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeReservedInstancesListings :: forall eff. DescribeReservedInstancesListingsRequest -> Aff (exception :: EXCEPTION | eff) DescribeReservedInstancesListingsResult
describeReservedInstancesListings = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeReservedInstancesListings"


-- | <p>Describes the modifications made to your Reserved Instances. If no parameter is specified, information about all your Reserved Instances modification requests is returned. If a modification ID is specified, only information about the specific modification is returned.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.</p>
describeReservedInstancesModifications :: forall eff. DescribeReservedInstancesModificationsRequest -> Aff (exception :: EXCEPTION | eff) DescribeReservedInstancesModificationsResult
describeReservedInstancesModifications = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeReservedInstancesModifications"


-- | <p>Describes Reserved Instance offerings that are available for purchase. With Reserved Instances, you purchase the right to launch instances for a period of time. During that time period, you do not receive insufficient capacity errors, and you pay a lower usage rate than the rate charged for On-Demand instances for the actual time used.</p> <p>If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace, they will be excluded from these results. This is to ensure that you do not purchase your own Reserved Instances.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeReservedInstancesOfferings :: forall eff. DescribeReservedInstancesOfferingsRequest -> Aff (exception :: EXCEPTION | eff) DescribeReservedInstancesOfferingsResult
describeReservedInstancesOfferings = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeReservedInstancesOfferings"


-- | <p>Describes one or more of your route tables.</p> <p>Each subnet in your VPC must be associated with a route table. If a subnet is not explicitly associated with any route table, it is implicitly associated with the main route table. This command does not return the subnet ID for implicit associations.</p> <p>For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
describeRouteTables :: forall eff. DescribeRouteTablesRequest -> Aff (exception :: EXCEPTION | eff) DescribeRouteTablesResult
describeRouteTables = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeRouteTables"


-- | <p>Finds available schedules that meet the specified criteria.</p> <p>You can search for an available schedule no more than 3 months in advance. You must meet the minimum required duration of 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.</p> <p>After you find a schedule that meets your needs, call <a>PurchaseScheduledInstances</a> to purchase Scheduled Instances with that schedule.</p>
describeScheduledInstanceAvailability :: forall eff. DescribeScheduledInstanceAvailabilityRequest -> Aff (exception :: EXCEPTION | eff) DescribeScheduledInstanceAvailabilityResult
describeScheduledInstanceAvailability = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeScheduledInstanceAvailability"


-- | <p>Describes one or more of your Scheduled Instances.</p>
describeScheduledInstances :: forall eff. DescribeScheduledInstancesRequest -> Aff (exception :: EXCEPTION | eff) DescribeScheduledInstancesResult
describeScheduledInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeScheduledInstances"


-- | <p>[EC2-VPC only] Describes the VPCs on the other side of a VPC peering connection that are referencing the security groups you've specified in this request.</p>
describeSecurityGroupReferences :: forall eff. DescribeSecurityGroupReferencesRequest -> Aff (exception :: EXCEPTION | eff) DescribeSecurityGroupReferencesResult
describeSecurityGroupReferences = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSecurityGroupReferences"


-- | <p>Describes one or more of your security groups.</p> <p>A security group is for use with instances either in the EC2-Classic platform or in a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
describeSecurityGroups :: forall eff. DescribeSecurityGroupsRequest -> Aff (exception :: EXCEPTION | eff) DescribeSecurityGroupsResult
describeSecurityGroups = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSecurityGroups"


-- | <p>Describes the specified attribute of the specified snapshot. You can specify only one attribute at a time.</p> <p>For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeSnapshotAttribute :: forall eff. DescribeSnapshotAttributeRequest -> Aff (exception :: EXCEPTION | eff) DescribeSnapshotAttributeResult
describeSnapshotAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSnapshotAttribute"


-- | <p>Describes one or more of the EBS snapshots available to you. Available snapshots include public snapshots available for any AWS account to launch, private snapshots that you own, and private snapshots owned by another AWS account but for which you've been given explicit create volume permissions.</p> <p>The create volume permissions fall into the following categories:</p> <ul> <li> <p> <i>public</i>: The owner of the snapshot granted create volume permissions for the snapshot to the <code>all</code> group. All AWS accounts have create volume permissions for these snapshots.</p> </li> <li> <p> <i>explicit</i>: The owner of the snapshot granted create volume permissions to a specific AWS account.</p> </li> <li> <p> <i>implicit</i>: An AWS account has implicit create volume permissions for all snapshots it owns.</p> </li> </ul> <p>The list of snapshots returned can be modified by specifying snapshot IDs, snapshot owners, or AWS accounts with create volume permissions. If no options are specified, Amazon EC2 returns all snapshots for which you have create volume permissions.</p> <p>If you specify one or more snapshot IDs, only snapshots that have the specified IDs are returned. If you specify an invalid snapshot ID, an error is returned. If you specify a snapshot ID for which you do not have access, it is not included in the returned results.</p> <p>If you specify one or more snapshot owners using the <code>OwnerIds</code> option, only snapshots from the specified owners and for which you have access are returned. The results can include the AWS account IDs of the specified owners, <code>amazon</code> for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.</p> <p>If you specify a list of restorable users, only snapshots with create snapshot permissions for those users are returned. You can specify AWS account IDs (if you own the snapshots), <code>self</code> for snapshots for which you own or have explicit permissions, or <code>all</code> for public snapshots.</p> <p>If you are describing a long list of snapshots, you can paginate the output to make the list more manageable. The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeSnapshots</code> request to retrieve the remaining results.</p> <p>For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeSnapshots :: forall eff. DescribeSnapshotsRequest -> Aff (exception :: EXCEPTION | eff) DescribeSnapshotsResult
describeSnapshots = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSnapshots"


-- | <p>Describes the data feed for Spot Instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeSpotDatafeedSubscription :: forall eff. DescribeSpotDatafeedSubscriptionRequest -> Aff (exception :: EXCEPTION | eff) DescribeSpotDatafeedSubscriptionResult
describeSpotDatafeedSubscription = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSpotDatafeedSubscription"


-- | <p>Describes the running instances for the specified Spot Fleet.</p>
describeSpotFleetInstances :: forall eff. DescribeSpotFleetInstancesRequest -> Aff (exception :: EXCEPTION | eff) DescribeSpotFleetInstancesResponse
describeSpotFleetInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSpotFleetInstances"


-- | <p>Describes the events for the specified Spot Fleet request during the specified time.</p> <p>Spot Fleet events are delayed by up to 30 seconds before they can be described. This ensures that you can query by the last evaluated time and not miss a recorded event.</p>
describeSpotFleetRequestHistory :: forall eff. DescribeSpotFleetRequestHistoryRequest -> Aff (exception :: EXCEPTION | eff) DescribeSpotFleetRequestHistoryResponse
describeSpotFleetRequestHistory = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSpotFleetRequestHistory"


-- | <p>Describes your Spot Fleet requests.</p> <p>Spot Fleet requests are deleted 48 hours after they are canceled and their instances are terminated.</p>
describeSpotFleetRequests :: forall eff. DescribeSpotFleetRequestsRequest -> Aff (exception :: EXCEPTION | eff) DescribeSpotFleetRequestsResponse
describeSpotFleetRequests = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSpotFleetRequests"


-- | <p>Describes the Spot Instance requests that belong to your account. Spot Instances are instances that Amazon EC2 launches when the Spot price that you specify exceeds the current Spot price. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot Instance by examining the response. If the status of the Spot Instance is <code>fulfilled</code>, the instance ID appears in the response and contains the identifier of the instance. Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances where the instance lifecycle is <code>spot</code>.</p> <p>Spot Instance requests are deleted 4 hours after they are canceled and their instances are terminated.</p>
describeSpotInstanceRequests :: forall eff. DescribeSpotInstanceRequestsRequest -> Aff (exception :: EXCEPTION | eff) DescribeSpotInstanceRequestsResult
describeSpotInstanceRequests = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSpotInstanceRequests"


-- | <p>Describes the Spot price history. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot Instance Pricing History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>When you specify a start and end time, this operation returns the prices of the instance types within the time range that you specified and the time when the price changed. The price is valid within the time period that you specified; the response merely indicates the last time that the price changed.</p>
describeSpotPriceHistory :: forall eff. DescribeSpotPriceHistoryRequest -> Aff (exception :: EXCEPTION | eff) DescribeSpotPriceHistoryResult
describeSpotPriceHistory = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSpotPriceHistory"


-- | <p>[EC2-VPC only] Describes the stale security group rules for security groups in a specified VPC. Rules are stale when they reference a deleted security group in a peer VPC, or a security group in a peer VPC for which the VPC peering connection has been deleted.</p>
describeStaleSecurityGroups :: forall eff. DescribeStaleSecurityGroupsRequest -> Aff (exception :: EXCEPTION | eff) DescribeStaleSecurityGroupsResult
describeStaleSecurityGroups = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeStaleSecurityGroups"


-- | <p>Describes one or more of your subnets.</p> <p>For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
describeSubnets :: forall eff. DescribeSubnetsRequest -> Aff (exception :: EXCEPTION | eff) DescribeSubnetsResult
describeSubnets = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeSubnets"


-- | <p>Describes one or more of the tags for your EC2 resources.</p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeTags :: forall eff. DescribeTagsRequest -> Aff (exception :: EXCEPTION | eff) DescribeTagsResult
describeTags = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeTags"


-- | <p>Describes the specified attribute of the specified volume. You can specify only one attribute at a time.</p> <p>For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeVolumeAttribute :: forall eff. DescribeVolumeAttributeRequest -> Aff (exception :: EXCEPTION | eff) DescribeVolumeAttributeResult
describeVolumeAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVolumeAttribute"


-- | <p>Describes the status of the specified volumes. Volume status provides the result of the checks performed on your volumes to determine events that can impair the performance of your volumes. The performance of a volume can be affected if an issue occurs on the volume's underlying host. If the volume's underlying host experiences a power outage or system issue, after the system is restored, there could be data inconsistencies on the volume. Volume events notify you if this occurs. Volume actions notify you if any action needs to be taken in response to the event.</p> <p>The <code>DescribeVolumeStatus</code> operation provides the following information about the specified volumes:</p> <p> <i>Status</i>: Reflects the current status of the volume. The possible values are <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>. If all checks pass, the overall status of the volume is <code>ok</code>. If the check fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>, then the checks may still be taking place on your volume at the time. We recommend that you retry the request. For more information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring the Status of Your Volumes</a>.</p> <p> <i>Events</i>: Reflect the cause of a volume status and may require you to take action. For example, if your volume returns an <code>impaired</code> status, then the volume event might be <code>potential-data-inconsistency</code>. This means that your volume has been affected by an issue with the underlying host, has all I/O operations disabled, and may have inconsistent data.</p> <p> <i>Actions</i>: Reflect the actions you may have to take in response to an event. For example, if the status of the volume is <code>impaired</code> and the volume event shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>. This means that you may want to enable the I/O operations for the volume by calling the <a>EnableVolumeIO</a> action and then check the volume for data consistency.</p> <note> <p>Volume status is based on the volume status checks, and does not reflect the volume state. Therefore, volume status does not indicate volumes in the <code>error</code> state (for example, when a volume is incapable of accepting I/O.)</p> </note>
describeVolumeStatus :: forall eff. DescribeVolumeStatusRequest -> Aff (exception :: EXCEPTION | eff) DescribeVolumeStatusResult
describeVolumeStatus = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVolumeStatus"


-- | <p>Describes the specified EBS volumes.</p> <p>If you are describing a long list of volumes, you can paginate the output to make the list more manageable. The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve the remaining results.</p> <p>For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeVolumes :: forall eff. DescribeVolumesRequest -> Aff (exception :: EXCEPTION | eff) DescribeVolumesResult
describeVolumes = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVolumes"


-- | <p>Reports the current modification status of EBS volumes.</p> <p>Current-generation EBS volumes support modification of attributes including type, size, and (for <code>io1</code> volumes) IOPS provisioning while either attached to or detached from an instance. Following an action from the API or the console to modify a volume, the status of the modification may be <code>modifying</code>, <code>optimizing</code>, <code>completed</code>, or <code>failed</code>. If a volume has never been modified, then certain elements of the returned <code>VolumeModification</code> objects are null. </p> <p> You can also use CloudWatch Events to check the status of a modification to an EBS volume. For information about CloudWatch Events, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/">Amazon CloudWatch Events User Guide</a>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#monitoring_mods">Monitoring Volume Modifications"</a>. </p>
describeVolumesModifications :: forall eff. DescribeVolumesModificationsRequest -> Aff (exception :: EXCEPTION | eff) DescribeVolumesModificationsResult
describeVolumesModifications = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVolumesModifications"


-- | <p>Describes the specified attribute of the specified VPC. You can specify only one attribute at a time.</p>
describeVpcAttribute :: forall eff. DescribeVpcAttributeRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcAttributeResult
describeVpcAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcAttribute"


-- | <p>Describes the ClassicLink status of one or more VPCs.</p>
describeVpcClassicLink :: forall eff. DescribeVpcClassicLinkRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcClassicLinkResult
describeVpcClassicLink = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcClassicLink"


-- | <p>Describes the ClassicLink DNS support status of one or more VPCs. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
describeVpcClassicLinkDnsSupport :: forall eff. DescribeVpcClassicLinkDnsSupportRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcClassicLinkDnsSupportResult
describeVpcClassicLinkDnsSupport = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcClassicLinkDnsSupport"


-- | <p>Describes the connection notifications for VPC endpoints and VPC endpoint services.</p>
describeVpcEndpointConnectionNotifications :: forall eff. DescribeVpcEndpointConnectionNotificationsRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcEndpointConnectionNotificationsResult
describeVpcEndpointConnectionNotifications = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcEndpointConnectionNotifications"


-- | <p>Describes the VPC endpoint connections to your VPC endpoint services, including any endpoints that are pending your acceptance.</p>
describeVpcEndpointConnections :: forall eff. DescribeVpcEndpointConnectionsRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcEndpointConnectionsResult
describeVpcEndpointConnections = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcEndpointConnections"


-- | <p>Describes the VPC endpoint service configurations in your account (your services).</p>
describeVpcEndpointServiceConfigurations :: forall eff. DescribeVpcEndpointServiceConfigurationsRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcEndpointServiceConfigurationsResult
describeVpcEndpointServiceConfigurations = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcEndpointServiceConfigurations"


-- | <p>Describes the principals (service consumers) that are permitted to discover your VPC endpoint service.</p>
describeVpcEndpointServicePermissions :: forall eff. DescribeVpcEndpointServicePermissionsRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcEndpointServicePermissionsResult
describeVpcEndpointServicePermissions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcEndpointServicePermissions"


-- | <p>Describes available services to which you can create a VPC endpoint.</p>
describeVpcEndpointServices :: forall eff. DescribeVpcEndpointServicesRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcEndpointServicesResult
describeVpcEndpointServices = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcEndpointServices"


-- | <p>Describes one or more of your VPC endpoints.</p>
describeVpcEndpoints :: forall eff. DescribeVpcEndpointsRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcEndpointsResult
describeVpcEndpoints = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcEndpoints"


-- | <p>Describes one or more of your VPC peering connections.</p>
describeVpcPeeringConnections :: forall eff. DescribeVpcPeeringConnectionsRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcPeeringConnectionsResult
describeVpcPeeringConnections = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcPeeringConnections"


-- | <p>Describes one or more of your VPCs.</p>
describeVpcs :: forall eff. DescribeVpcsRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpcsResult
describeVpcs = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpcs"


-- | <p>Describes one or more of your VPN connections.</p> <p>For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">AWS Managed VPN Connections</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
describeVpnConnections :: forall eff. DescribeVpnConnectionsRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpnConnectionsResult
describeVpnConnections = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpnConnections"


-- | <p>Describes one or more of your virtual private gateways.</p> <p>For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">AWS Managed VPN Connections</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
describeVpnGateways :: forall eff. DescribeVpnGatewaysRequest -> Aff (exception :: EXCEPTION | eff) DescribeVpnGatewaysResult
describeVpnGateways = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "describeVpnGateways"


-- | <p>Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the instance has been unlinked, the VPC security groups are no longer associated with it. An instance is automatically unlinked from a VPC when it's stopped.</p>
detachClassicLinkVpc :: forall eff. DetachClassicLinkVpcRequest -> Aff (exception :: EXCEPTION | eff) DetachClassicLinkVpcResult
detachClassicLinkVpc = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "detachClassicLinkVpc"


-- | <p>Detaches an Internet gateway from a VPC, disabling connectivity between the Internet and the VPC. The VPC must not contain any running instances with Elastic IP addresses or public IPv4 addresses.</p>
detachInternetGateway :: forall eff. DetachInternetGatewayRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
detachInternetGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "detachInternetGateway"


-- | <p>Detaches a network interface from an instance.</p>
detachNetworkInterface :: forall eff. DetachNetworkInterfaceRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
detachNetworkInterface = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "detachNetworkInterface"


-- | <p>Detaches an EBS volume from an instance. Make sure to unmount any file systems on the device within your operating system before detaching the volume. Failure to do so can result in the volume becoming stuck in the <code>busy</code> state while detaching. If this happens, detachment can be delayed indefinitely until you unmount the volume, force detachment, reboot the instance, or all three. If an EBS volume is the root device of an instance, it can't be detached while the instance is running. To detach the root volume, stop the instance first.</p> <p>When a volume with an AWS Marketplace product code is detached from an instance, the product code is no longer associated with the instance.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html">Detaching an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
detachVolume :: forall eff. DetachVolumeRequest -> Aff (exception :: EXCEPTION | eff) VolumeAttachment
detachVolume = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "detachVolume"


-- | <p>Detaches a virtual private gateway from a VPC. You do this if you're planning to turn off the VPC and not use it anymore. You can confirm a virtual private gateway has been completely detached from a VPC by describing the virtual private gateway (any attachments to the virtual private gateway are also described).</p> <p>You must wait for the attachment's state to switch to <code>detached</code> before you can delete the VPC or attach a different VPC to the virtual private gateway.</p>
detachVpnGateway :: forall eff. DetachVpnGatewayRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
detachVpnGateway = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "detachVpnGateway"


-- | <p>Disables a virtual private gateway (VGW) from propagating routes to a specified route table of a VPC.</p>
disableVgwRoutePropagation :: forall eff. DisableVgwRoutePropagationRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
disableVgwRoutePropagation = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "disableVgwRoutePropagation"


-- | <p>Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC that has EC2-Classic instances linked to it.</p>
disableVpcClassicLink :: forall eff. DisableVpcClassicLinkRequest -> Aff (exception :: EXCEPTION | eff) DisableVpcClassicLinkResult
disableVpcClassicLink = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "disableVpcClassicLink"


-- | <p>Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames resolve to public IP addresses when addressed between a linked EC2-Classic instance and instances in the VPC to which it's linked. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
disableVpcClassicLinkDnsSupport :: forall eff. DisableVpcClassicLinkDnsSupportRequest -> Aff (exception :: EXCEPTION | eff) DisableVpcClassicLinkDnsSupportResult
disableVpcClassicLinkDnsSupport = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "disableVpcClassicLinkDnsSupport"


-- | <p>Disassociates an Elastic IP address from the instance or network interface it's associated with.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error.</p>
disassociateAddress :: forall eff. DisassociateAddressRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
disassociateAddress = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "disassociateAddress"


-- | <p>Disassociates an IAM instance profile from a running or stopped instance.</p> <p>Use <a>DescribeIamInstanceProfileAssociations</a> to get the association ID.</p>
disassociateIamInstanceProfile :: forall eff. DisassociateIamInstanceProfileRequest -> Aff (exception :: EXCEPTION | eff) DisassociateIamInstanceProfileResult
disassociateIamInstanceProfile = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "disassociateIamInstanceProfile"


-- | <p>Disassociates a subnet from a route table.</p> <p>After you perform this action, the subnet no longer uses the routes in the route table. Instead, it uses the routes in the VPC's main route table. For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
disassociateRouteTable :: forall eff. DisassociateRouteTableRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
disassociateRouteTable = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "disassociateRouteTable"


-- | <p>Disassociates a CIDR block from a subnet. Currently, you can disassociate an IPv6 CIDR block only. You must detach or delete all gateways and resources that are associated with the CIDR block before you can disassociate it. </p>
disassociateSubnetCidrBlock :: forall eff. DisassociateSubnetCidrBlockRequest -> Aff (exception :: EXCEPTION | eff) DisassociateSubnetCidrBlockResult
disassociateSubnetCidrBlock = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "disassociateSubnetCidrBlock"


-- | <p>Disassociates a CIDR block from a VPC. To disassociate the CIDR block, you must specify its association ID. You can get the association ID by using <a>DescribeVpcs</a>. You must detach or delete all gateways and resources that are associated with the CIDR block before you can disassociate it. </p> <p>You cannot disassociate the CIDR block with which you originally created the VPC (the primary CIDR block).</p>
disassociateVpcCidrBlock :: forall eff. DisassociateVpcCidrBlockRequest -> Aff (exception :: EXCEPTION | eff) DisassociateVpcCidrBlockResult
disassociateVpcCidrBlock = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "disassociateVpcCidrBlock"


-- | <p>Enables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC.</p>
enableVgwRoutePropagation :: forall eff. EnableVgwRoutePropagationRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
enableVgwRoutePropagation = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "enableVgwRoutePropagation"


-- | <p>Enables I/O operations for a volume that had I/O operations disabled because the data on the volume was potentially inconsistent.</p>
enableVolumeIO :: forall eff. EnableVolumeIORequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
enableVolumeIO = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "enableVolumeIO"


-- | <p>Enables a VPC for ClassicLink. You can then link EC2-Classic instances to your ClassicLink-enabled VPC to allow communication over private IP addresses. You cannot enable your VPC for ClassicLink if any of your VPC's route tables have existing routes for address ranges within the <code>10.0.0.0/8</code> IP address range, excluding local routes for VPCs in the <code>10.0.0.0/16</code> and <code>10.1.0.0/16</code> IP address ranges. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
enableVpcClassicLink :: forall eff. EnableVpcClassicLinkRequest -> Aff (exception :: EXCEPTION | eff) EnableVpcClassicLinkResult
enableVpcClassicLink = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "enableVpcClassicLink"


-- | <p>Enables a VPC to support DNS hostname resolution for ClassicLink. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
enableVpcClassicLinkDnsSupport :: forall eff. EnableVpcClassicLinkDnsSupportRequest -> Aff (exception :: EXCEPTION | eff) EnableVpcClassicLinkDnsSupportResult
enableVpcClassicLinkDnsSupport = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "enableVpcClassicLinkDnsSupport"


-- | <p>Gets the console output for the specified instance.</p> <p>Instances do not have a physical monitor through which you can view their console output. They also lack physical controls that allow you to power up, reboot, or shut them down. To allow these actions, we provide them through the Amazon EC2 API and command line interface.</p> <p>Instance console output is buffered and posted shortly after instance boot, reboot, and termination. Amazon EC2 preserves the most recent 64 KB output, which is available for at least one hour after the most recent post.</p> <p>For Linux instances, the instance console output displays the exact console output that would normally be displayed on a physical monitor attached to a computer. This output is buffered because the instance produces it and then posts it to a store where the instance's owner can retrieve it.</p> <p>For Windows instances, the instance console output includes output from the EC2Config service.</p>
getConsoleOutput :: forall eff. GetConsoleOutputRequest -> Aff (exception :: EXCEPTION | eff) GetConsoleOutputResult
getConsoleOutput = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "getConsoleOutput"


-- | <p>Retrieve a JPG-format screenshot of a running instance to help with troubleshooting.</p> <p>The returned content is Base64-encoded.</p>
getConsoleScreenshot :: forall eff. GetConsoleScreenshotRequest -> Aff (exception :: EXCEPTION | eff) GetConsoleScreenshotResult
getConsoleScreenshot = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "getConsoleScreenshot"


-- | <p>Preview a reservation purchase with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation.</p> <p>This is a preview of the <a>PurchaseHostReservation</a> action and does not result in the offering being purchased.</p>
getHostReservationPurchasePreview :: forall eff. GetHostReservationPurchasePreviewRequest -> Aff (exception :: EXCEPTION | eff) GetHostReservationPurchasePreviewResult
getHostReservationPurchasePreview = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "getHostReservationPurchasePreview"


-- | <p>Retrieves the configuration data of the specified instance. You can use this data to create a launch template.</p>
getLaunchTemplateData :: forall eff. GetLaunchTemplateDataRequest -> Aff (exception :: EXCEPTION | eff) GetLaunchTemplateDataResult
getLaunchTemplateData = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "getLaunchTemplateData"


-- | <p>Retrieves the encrypted administrator password for a running Windows instance.</p> <p>The Windows password is generated at boot by the <code>EC2Config</code> service or <code>EC2Launch</code> scripts (Windows Server 2016 and later). This usually only happens the first time an instance is launched. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/UsingConfig_WinAMI.html">EC2Config</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2launch.html">EC2Launch</a> in the Amazon Elastic Compute Cloud User Guide.</p> <p>For the <code>EC2Config</code> service, the password is not generated for rebundled AMIs unless <code>Ec2SetPassword</code> is enabled before bundling.</p> <p>The password is encrypted using the key pair that you specified when you launched the instance. You must provide the corresponding key pair file.</p> <p>When you launch an instance, password generation and encryption may take a few minutes. If you try to retrieve the password before it's available, the output returns an empty string. We recommend that you wait up to 15 minutes after launching an instance before trying to retrieve the generated password.</p>
getPasswordData :: forall eff. GetPasswordDataRequest -> Aff (exception :: EXCEPTION | eff) GetPasswordDataResult
getPasswordData = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "getPasswordData"


-- | <p>Returns a quote and exchange information for exchanging one or more specified Convertible Reserved Instances for a new Convertible Reserved Instance. If the exchange cannot be performed, the reason is returned in the response. Use <a>AcceptReservedInstancesExchangeQuote</a> to perform the exchange.</p>
getReservedInstancesExchangeQuote :: forall eff. GetReservedInstancesExchangeQuoteRequest -> Aff (exception :: EXCEPTION | eff) GetReservedInstancesExchangeQuoteResult
getReservedInstancesExchangeQuote = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "getReservedInstancesExchangeQuote"


-- | <p>Import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI). For more information, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html">Importing a VM as an Image Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.</p>
importImage :: forall eff. ImportImageRequest -> Aff (exception :: EXCEPTION | eff) ImportImageResult
importImage = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "importImage"


-- | <p>Creates an import instance task using metadata from the specified disk image. <code>ImportInstance</code> only supports single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing a Virtual Machine Using the Amazon EC2 CLI</a>.</p> <p>For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
importInstance :: forall eff. ImportInstanceRequest -> Aff (exception :: EXCEPTION | eff) ImportInstanceResult
importInstance = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "importInstance"


-- | <p>Imports the public key from an RSA key pair that you created with a third-party tool. Compare this with <a>CreateKeyPair</a>, in which AWS creates the key pair and gives the keys to you (AWS keeps a copy of the public key). With ImportKeyPair, you create the key pair and give AWS just the public key. The private key is never transferred between you and AWS.</p> <p>For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
importKeyPair :: forall eff. ImportKeyPairRequest -> Aff (exception :: EXCEPTION | eff) ImportKeyPairResult
importKeyPair = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "importKeyPair"


-- | <p>Imports a disk into an EBS snapshot.</p>
importSnapshot :: forall eff. ImportSnapshotRequest -> Aff (exception :: EXCEPTION | eff) ImportSnapshotResult
importSnapshot = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "importSnapshot"


-- | <p>Creates an import volume task using metadata from the specified disk image.For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/importing-your-volumes-into-amazon-ebs.html">Importing Disks to Amazon EBS</a>.</p> <p>For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
importVolume :: forall eff. ImportVolumeRequest -> Aff (exception :: EXCEPTION | eff) ImportVolumeResult
importVolume = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "importVolume"


-- | <p>Modifies the specified attribute of the specified Amazon FPGA Image (AFI).</p>
modifyFpgaImageAttribute :: forall eff. ModifyFpgaImageAttributeRequest -> Aff (exception :: EXCEPTION | eff) ModifyFpgaImageAttributeResult
modifyFpgaImageAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyFpgaImageAttribute"


-- | <p>Modify the auto-placement setting of a Dedicated Host. When auto-placement is enabled, AWS will place instances that you launch with a tenancy of <code>host</code>, but without targeting a specific host ID, onto any available Dedicated Host in your account which has auto-placement enabled. When auto-placement is disabled, you need to provide a host ID if you want the instance to launch onto a specific host. If no host ID is provided, the instance will be launched onto a suitable host which has auto-placement enabled.</p>
modifyHosts :: forall eff. ModifyHostsRequest -> Aff (exception :: EXCEPTION | eff) ModifyHostsResult
modifyHosts = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyHosts"


-- | <p>Modifies the ID format for the specified resource on a per-region basis. You can specify that resources should receive longer IDs (17-character IDs) when they are created.</p> <p>This request can only be used to modify longer ID settings for resource types that are within the opt-in period. Resources currently in their opt-in period include: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p> <p>This setting applies to the IAM user who makes the request; it does not apply to the entire AWS account. By default, an IAM user defaults to the same settings as the root user. If you're using this action as the root user, then these settings apply to the entire account, unless an IAM user explicitly overrides these settings for themselves. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p> <p>Resources created with longer IDs are visible to all IAM roles and users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>
modifyIdFormat :: forall eff. ModifyIdFormatRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
modifyIdFormat = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyIdFormat"


-- | <p>Modifies the ID format of a resource for a specified IAM user, IAM role, or the root user for an account; or all IAM users, IAM roles, and the root user for an account. You can specify that resources should receive longer IDs (17-character IDs) when they are created. </p> <p>This request can only be used to modify longer ID settings for resource types that are within the opt-in period. Resources currently in their opt-in period include: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>. </p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p> <p>This setting applies to the principal specified in the request; it does not apply to the principal that makes the request. </p> <p>Resources created with longer IDs are visible to all IAM roles and users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>
modifyIdentityIdFormat :: forall eff. ModifyIdentityIdFormatRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
modifyIdentityIdFormat = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyIdentityIdFormat"


-- | <p>Modifies the specified attribute of the specified AMI. You can specify only one attribute at a time. You can use the <code>Attribute</code> parameter to specify the attribute or one of the following parameters: <code>Description</code>, <code>LaunchPermission</code>, or <code>ProductCode</code>.</p> <p>AWS Marketplace product codes cannot be modified. Images with an AWS Marketplace product code cannot be made public.</p> <p>To enable the SriovNetSupport enhanced networking attribute of an image, enable SriovNetSupport on an instance and create an AMI from the instance.</p>
modifyImageAttribute :: forall eff. ModifyImageAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
modifyImageAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyImageAttribute"


-- | <p>Modifies the specified attribute of the specified instance. You can specify only one attribute at a time.</p> <p>To modify some attributes, the instance must be stopped. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html">Modifying Attributes of a Stopped Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
modifyInstanceAttribute :: forall eff. ModifyInstanceAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
modifyInstanceAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyInstanceAttribute"


-- | <p>Modifies the credit option for CPU usage on a running or stopped T2 instance. The credit options are <code>standard</code> and <code>unlimited</code>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/t2-instances.html">T2 Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
modifyInstanceCreditSpecification :: forall eff. ModifyInstanceCreditSpecificationRequest -> Aff (exception :: EXCEPTION | eff) ModifyInstanceCreditSpecificationResult
modifyInstanceCreditSpecification = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyInstanceCreditSpecification"


-- | <p>Modifies the placement attributes for a specified instance. You can do the following:</p> <ul> <li> <p>Modify the affinity between an instance and a <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated Host</a>. When affinity is set to <code>host</code> and the instance is not associated with a specific Dedicated Host, the next time the instance is launched, it is automatically associated with the host on which it lands. If the instance is restarted or rebooted, this relationship persists.</p> </li> <li> <p>Change the Dedicated Host with which an instance is associated.</p> </li> <li> <p>Change the instance tenancy of an instance from <code>host</code> to <code>dedicated</code>, or from <code>dedicated</code> to <code>host</code>.</p> </li> <li> <p>Move an instance to or from a <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">placement group</a>.</p> </li> </ul> <p>At least one attribute for affinity, host ID, tenancy, or placement group name must be specified in the request. Affinity and tenancy can be modified in the same request.</p> <p>To modify the host ID, tenancy, or placement group for an instance, the instance must be in the <code>stopped</code> state.</p>
modifyInstancePlacement :: forall eff. ModifyInstancePlacementRequest -> Aff (exception :: EXCEPTION | eff) ModifyInstancePlacementResult
modifyInstancePlacement = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyInstancePlacement"


-- | <p>Modifies a launch template. You can specify which version of the launch template to set as the default version. When launching an instance, the default version applies when a launch template version is not specified.</p>
modifyLaunchTemplate :: forall eff. ModifyLaunchTemplateRequest -> Aff (exception :: EXCEPTION | eff) ModifyLaunchTemplateResult
modifyLaunchTemplate = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyLaunchTemplate"


-- | <p>Modifies the specified network interface attribute. You can specify only one attribute at a time.</p>
modifyNetworkInterfaceAttribute :: forall eff. ModifyNetworkInterfaceAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
modifyNetworkInterfaceAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyNetworkInterfaceAttribute"


-- | <p>Modifies the Availability Zone, instance count, instance type, or network platform (EC2-Classic or EC2-VPC) of your Reserved Instances. The Reserved Instances to be modified must be identical, except for Availability Zone, network platform, and instance type.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.</p>
modifyReservedInstances :: forall eff. ModifyReservedInstancesRequest -> Aff (exception :: EXCEPTION | eff) ModifyReservedInstancesResult
modifyReservedInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyReservedInstances"


-- | <p>Adds or removes permission settings for the specified snapshot. You may add or remove specified AWS account IDs from a snapshot's list of create volume permissions, but you cannot do both in a single API call. If you need to both add and remove account IDs for a snapshot, you must use multiple API calls.</p> <note> <p>Encrypted snapshots and snapshots with AWS Marketplace product codes cannot be made public. Snapshots encrypted with your default CMK cannot be shared with other accounts.</p> </note> <p>For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
modifySnapshotAttribute :: forall eff. ModifySnapshotAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
modifySnapshotAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifySnapshotAttribute"


-- | <p>Modifies the specified Spot Fleet request.</p> <p>While the Spot Fleet request is being modified, it is in the <code>modifying</code> state.</p> <p>To scale up your Spot Fleet, increase its target capacity. The Spot Fleet launches the additional Spot Instances according to the allocation strategy for the Spot Fleet request. If the allocation strategy is <code>lowestPrice</code>, the Spot Fleet launches instances using the Spot pool with the lowest price. If the allocation strategy is <code>diversified</code>, the Spot Fleet distributes the instances across the Spot pools.</p> <p>To scale down your Spot Fleet, decrease its target capacity. First, the Spot Fleet cancels any open requests that exceed the new target capacity. You can request that the Spot Fleet terminate Spot Instances until the size of the fleet no longer exceeds the new target capacity. If the allocation strategy is <code>lowestPrice</code>, the Spot Fleet terminates the instances with the highest price per unit. If the allocation strategy is <code>diversified</code>, the Spot Fleet terminates instances across the Spot pools. Alternatively, you can request that the Spot Fleet keep the fleet at its current size, but not replace any Spot Instances that are interrupted or that you terminate manually.</p> <p>If you are finished with your Spot Fleet for now, but will use it again later, you can set the target capacity to 0.</p>
modifySpotFleetRequest :: forall eff. ModifySpotFleetRequestRequest -> Aff (exception :: EXCEPTION | eff) ModifySpotFleetRequestResponse
modifySpotFleetRequest = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifySpotFleetRequest"


-- | <p>Modifies a subnet attribute. You can only modify one attribute at a time.</p>
modifySubnetAttribute :: forall eff. ModifySubnetAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
modifySubnetAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifySubnetAttribute"


-- | <p>You can modify several parameters of an existing EBS volume, including volume size, volume type, and IOPS capacity. If your EBS volume is attached to a current-generation EC2 instance type, you may be able to apply these changes without stopping the instance or detaching the volume from it. For more information about modifying an EBS volume running Linux, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html">Modifying the Size, IOPS, or Type of an EBS Volume on Linux</a>. For more information about modifying an EBS volume running Windows, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html">Modifying the Size, IOPS, or Type of an EBS Volume on Windows</a>. </p> <p> When you complete a resize operation on your volume, you need to extend the volume's file-system size to take advantage of the new storage capacity. For information about extending a Linux file system, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#recognize-expanded-volume-linux">Extending a Linux File System</a>. For information about extending a Windows file system, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html#recognize-expanded-volume-windows">Extending a Windows File System</a>. </p> <p> You can use CloudWatch Events to check the status of a modification to an EBS volume. For information about CloudWatch Events, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/">Amazon CloudWatch Events User Guide</a>. You can also track the status of a modification using the <a>DescribeVolumesModifications</a> API. For information about tracking status changes using either method, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#monitoring_mods">Monitoring Volume Modifications</a>. </p> <note> <p>With previous-generation instance types, resizing an EBS volume may require detaching and reattaching the volume or stopping and restarting the instance. For more information about modifying an EBS volume running Linux, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html">Modifying the Size, IOPS, or Type of an EBS Volume on Linux</a>. For more information about modifying an EBS volume running Windows, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html">Modifying the Size, IOPS, or Type of an EBS Volume on Windows</a>.</p> </note> <note> <p>If you reach the maximum volume modification rate per volume limit, you will need to wait at least six hours before applying further modifications to the affected EBS volume.</p> </note>
modifyVolume :: forall eff. ModifyVolumeRequest -> Aff (exception :: EXCEPTION | eff) ModifyVolumeResult
modifyVolume = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyVolume"


-- | <p>Modifies a volume attribute.</p> <p>By default, all I/O operations for the volume are suspended when the data on the volume is determined to be potentially inconsistent, to prevent undetectable, latent data corruption. The I/O access to the volume can be resumed by first enabling I/O access and then checking the data consistency on your volume.</p> <p>You can change the default behavior to resume I/O operations. We recommend that you change this only for boot volumes or for volumes that are stateless or disposable.</p>
modifyVolumeAttribute :: forall eff. ModifyVolumeAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
modifyVolumeAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyVolumeAttribute"


-- | <p>Modifies the specified attribute of the specified VPC.</p>
modifyVpcAttribute :: forall eff. ModifyVpcAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
modifyVpcAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyVpcAttribute"


-- | <p>Modifies attributes of a specified VPC endpoint. The attributes that you can modify depend on the type of VPC endpoint (interface or gateway). For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-endpoints.html">VPC Endpoints</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
modifyVpcEndpoint :: forall eff. ModifyVpcEndpointRequest -> Aff (exception :: EXCEPTION | eff) ModifyVpcEndpointResult
modifyVpcEndpoint = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyVpcEndpoint"


-- | <p>Modifies a connection notification for VPC endpoint or VPC endpoint service. You can change the SNS topic for the notification, or the events for which to be notified. </p>
modifyVpcEndpointConnectionNotification :: forall eff. ModifyVpcEndpointConnectionNotificationRequest -> Aff (exception :: EXCEPTION | eff) ModifyVpcEndpointConnectionNotificationResult
modifyVpcEndpointConnectionNotification = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyVpcEndpointConnectionNotification"


-- | <p>Modifies the attributes of your VPC endpoint service configuration. You can change the Network Load Balancers for your service, and you can specify whether acceptance is required for requests to connect to your endpoint service through an interface VPC endpoint.</p>
modifyVpcEndpointServiceConfiguration :: forall eff. ModifyVpcEndpointServiceConfigurationRequest -> Aff (exception :: EXCEPTION | eff) ModifyVpcEndpointServiceConfigurationResult
modifyVpcEndpointServiceConfiguration = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyVpcEndpointServiceConfiguration"


-- | <p>Modifies the permissions for your <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/endpoint-service.html">VPC endpoint service</a>. You can add or remove permissions for service consumers (IAM users, IAM roles, and AWS accounts) to connect to your endpoint service.</p>
modifyVpcEndpointServicePermissions :: forall eff. ModifyVpcEndpointServicePermissionsRequest -> Aff (exception :: EXCEPTION | eff) ModifyVpcEndpointServicePermissionsResult
modifyVpcEndpointServicePermissions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyVpcEndpointServicePermissions"


-- | <p>Modifies the VPC peering connection options on one side of a VPC peering connection. You can do the following:</p> <ul> <li> <p>Enable/disable communication over the peering connection between an EC2-Classic instance that's linked to your VPC (using ClassicLink) and instances in the peer VPC.</p> </li> <li> <p>Enable/disable communication over the peering connection between instances in your VPC and an EC2-Classic instance that's linked to the peer VPC.</p> </li> <li> <p>Enable/disable the ability to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.</p> </li> </ul> <p>If the peered VPCs are in different accounts, each owner must initiate a separate request to modify the peering connection options, depending on whether their VPC was the requester or accepter for the VPC peering connection. If the peered VPCs are in the same account, you can modify the requester and accepter options in the same request. To confirm which VPC is the accepter and requester for a VPC peering connection, use the <a>DescribeVpcPeeringConnections</a> command.</p>
modifyVpcPeeringConnectionOptions :: forall eff. ModifyVpcPeeringConnectionOptionsRequest -> Aff (exception :: EXCEPTION | eff) ModifyVpcPeeringConnectionOptionsResult
modifyVpcPeeringConnectionOptions = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyVpcPeeringConnectionOptions"


-- | <p>Modifies the instance tenancy attribute of the specified VPC. You can change the instance tenancy attribute of a VPC to <code>default</code> only. You cannot change the instance tenancy attribute to <code>dedicated</code>.</p> <p>After you modify the tenancy of the VPC, any new instances that you launch into the VPC have a tenancy of <code>default</code>, unless you specify otherwise during launch. The tenancy of any existing instances in the VPC is not affected.</p> <p>For more information about Dedicated Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html">Dedicated Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
modifyVpcTenancy :: forall eff. ModifyVpcTenancyRequest -> Aff (exception :: EXCEPTION | eff) ModifyVpcTenancyResult
modifyVpcTenancy = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "modifyVpcTenancy"


-- | <p>Enables detailed monitoring for a running instance. Otherwise, basic monitoring is enabled. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>To disable detailed monitoring, see .</p>
monitorInstances :: forall eff. MonitorInstancesRequest -> Aff (exception :: EXCEPTION | eff) MonitorInstancesResult
monitorInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "monitorInstances"


-- | <p>Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform. The Elastic IP address must be allocated to your account for more than 24 hours, and it must not be associated with an instance. After the Elastic IP address is moved, it is no longer available for use in the EC2-Classic platform, unless you move it back using the <a>RestoreAddressToClassic</a> request. You cannot move an Elastic IP address that was originally allocated for use in the EC2-VPC platform to the EC2-Classic platform. </p>
moveAddressToVpc :: forall eff. MoveAddressToVpcRequest -> Aff (exception :: EXCEPTION | eff) MoveAddressToVpcResult
moveAddressToVpc = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "moveAddressToVpc"


-- | <p>Purchase a reservation with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation. This action results in the specified reservation being purchased and charged to your account.</p>
purchaseHostReservation :: forall eff. PurchaseHostReservationRequest -> Aff (exception :: EXCEPTION | eff) PurchaseHostReservationResult
purchaseHostReservation = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "purchaseHostReservation"


-- | <p>Purchases a Reserved Instance for use with your account. With Reserved Instances, you pay a lower hourly rate compared to On-Demand instance pricing.</p> <p>Use <a>DescribeReservedInstancesOfferings</a> to get a list of Reserved Instance offerings that match your specifications. After you've purchased a Reserved Instance, you can check for your new Reserved Instance with <a>DescribeReservedInstances</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
purchaseReservedInstancesOffering :: forall eff. PurchaseReservedInstancesOfferingRequest -> Aff (exception :: EXCEPTION | eff) PurchaseReservedInstancesOfferingResult
purchaseReservedInstancesOffering = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "purchaseReservedInstancesOffering"


-- | <p>Purchases one or more Scheduled Instances with the specified schedule.</p> <p>Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour for a one-year term. Before you can purchase a Scheduled Instance, you must call <a>DescribeScheduledInstanceAvailability</a> to check for available schedules and obtain a purchase token. After you purchase a Scheduled Instance, you must call <a>RunScheduledInstances</a> during each scheduled time period.</p> <p>After you purchase a Scheduled Instance, you can't cancel, modify, or resell your purchase.</p>
purchaseScheduledInstances :: forall eff. PurchaseScheduledInstancesRequest -> Aff (exception :: EXCEPTION | eff) PurchaseScheduledInstancesResult
purchaseScheduledInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "purchaseScheduledInstances"


-- | <p>Requests a reboot of one or more instances. This operation is asynchronous; it only queues a request to reboot the specified instances. The operation succeeds if the instances are valid and belong to you. Requests to reboot terminated instances are ignored.</p> <p>If an instance does not cleanly shut down within four minutes, Amazon EC2 performs a hard reboot.</p> <p>For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Getting Console Output and Rebooting Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
rebootInstances :: forall eff. RebootInstancesRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
rebootInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "rebootInstances"


-- | <p>Registers an AMI. When you're creating an AMI, this is the final step you must complete before you can launch an instance from the AMI. For more information about creating AMIs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html">Creating Your Own AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <note> <p>For Amazon EBS-backed instances, <a>CreateImage</a> creates and registers the AMI in a single request, so you don't have to register the AMI yourself.</p> </note> <p>You can also use <code>RegisterImage</code> to create an Amazon EBS-backed Linux AMI from a snapshot of a root device volume. You specify the snapshot using the block device mapping. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-launch-snapshot.html">Launching a Linux Instance from a Backup</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can't register an image where a secondary (non-root) snapshot has AWS Marketplace product codes.</p> <p>Some Linux distributions, such as Red Hat Enterprise Linux (RHEL) and SUSE Linux Enterprise Server (SLES), use the EC2 billing product code associated with an AMI to verify the subscription status for package updates. Creating an AMI from an EBS snapshot does not maintain this billing code, and subsequent instances launched from such an AMI will not be able to connect to package update infrastructure. To create an AMI that must retain billing codes, see <a>CreateImage</a>.</p> <p>If needed, you can deregister an AMI at any time. Any modifications you make to an AMI backed by an instance store volume invalidates its registration. If you make changes to an image, deregister the previous image and register the new image.</p>
registerImage :: forall eff. RegisterImageRequest -> Aff (exception :: EXCEPTION | eff) RegisterImageResult
registerImage = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "registerImage"


-- | <p>Rejects one or more VPC endpoint connection requests to your VPC endpoint service.</p>
rejectVpcEndpointConnections :: forall eff. RejectVpcEndpointConnectionsRequest -> Aff (exception :: EXCEPTION | eff) RejectVpcEndpointConnectionsResult
rejectVpcEndpointConnections = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "rejectVpcEndpointConnections"


-- | <p>Rejects a VPC peering connection request. The VPC peering connection must be in the <code>pending-acceptance</code> state. Use the <a>DescribeVpcPeeringConnections</a> request to view your outstanding VPC peering connection requests. To delete an active VPC peering connection, or to delete a VPC peering connection request that you initiated, use <a>DeleteVpcPeeringConnection</a>.</p>
rejectVpcPeeringConnection :: forall eff. RejectVpcPeeringConnectionRequest -> Aff (exception :: EXCEPTION | eff) RejectVpcPeeringConnectionResult
rejectVpcPeeringConnection = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "rejectVpcPeeringConnection"


-- | <p>Releases the specified Elastic IP address.</p> <p>[EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates it from any instance that it's associated with. To disassociate an Elastic IP address without releasing it, use <a>DisassociateAddress</a>.</p> <p>[Nondefault VPC] You must use <a>DisassociateAddress</a> to disassociate the Elastic IP address before you can release it. Otherwise, Amazon EC2 returns an error (<code>InvalidIPAddress.InUse</code>).</p> <p>After releasing an Elastic IP address, it is released to the IP address pool. Be sure to update your DNS records and any servers or devices that communicate with the address. If you attempt to release an Elastic IP address that you already released, you'll get an <code>AuthFailure</code> error if the address is already allocated to another AWS account.</p> <p>[EC2-VPC] After you release an Elastic IP address for use in a VPC, you might be able to recover it. For more information, see <a>AllocateAddress</a>.</p>
releaseAddress :: forall eff. ReleaseAddressRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
releaseAddress = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "releaseAddress"


-- | <p>When you no longer want to use an On-Demand Dedicated Host it can be released. On-Demand billing is stopped and the host goes into <code>released</code> state. The host ID of Dedicated Hosts that have been released can no longer be specified in another request, e.g., ModifyHosts. You must stop or terminate all instances on a host before it can be released.</p> <p>When Dedicated Hosts are released, it make take some time for them to stop counting toward your limit and you may receive capacity errors when trying to allocate new Dedicated hosts. Try waiting a few minutes, and then try again.</p> <p>Released hosts will still appear in a <a>DescribeHosts</a> response.</p>
releaseHosts :: forall eff. ReleaseHostsRequest -> Aff (exception :: EXCEPTION | eff) ReleaseHostsResult
releaseHosts = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "releaseHosts"


-- | <p>Replaces an IAM instance profile for the specified running instance. You can use this action to change the IAM instance profile that's associated with an instance without having to disassociate the existing IAM instance profile first.</p> <p>Use <a>DescribeIamInstanceProfileAssociations</a> to get the association ID.</p>
replaceIamInstanceProfileAssociation :: forall eff. ReplaceIamInstanceProfileAssociationRequest -> Aff (exception :: EXCEPTION | eff) ReplaceIamInstanceProfileAssociationResult
replaceIamInstanceProfileAssociation = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "replaceIamInstanceProfileAssociation"


-- | <p>Changes which network ACL a subnet is associated with. By default when you create a subnet, it's automatically associated with the default network ACL. For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>This is an idempotent operation.</p>
replaceNetworkAclAssociation :: forall eff. ReplaceNetworkAclAssociationRequest -> Aff (exception :: EXCEPTION | eff) ReplaceNetworkAclAssociationResult
replaceNetworkAclAssociation = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "replaceNetworkAclAssociation"


-- | <p>Replaces an entry (rule) in a network ACL. For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
replaceNetworkAclEntry :: forall eff. ReplaceNetworkAclEntryRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
replaceNetworkAclEntry = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "replaceNetworkAclEntry"


-- | <p>Replaces an existing route within a route table in a VPC. You must provide only one of the following: Internet gateway or virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, or egress-only Internet gateway.</p> <p>For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
replaceRoute :: forall eff. ReplaceRouteRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
replaceRoute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "replaceRoute"


-- | <p>Changes the route table associated with a given subnet in a VPC. After the operation completes, the subnet uses the routes in the new route table it's associated with. For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can also use ReplaceRouteTableAssociation to change which table is the main route table in the VPC. You just specify the main route table's association ID and the route table to be the new main route table.</p>
replaceRouteTableAssociation :: forall eff. ReplaceRouteTableAssociationRequest -> Aff (exception :: EXCEPTION | eff) ReplaceRouteTableAssociationResult
replaceRouteTableAssociation = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "replaceRouteTableAssociation"


-- | <p>Submits feedback about the status of an instance. The instance must be in the <code>running</code> state. If your experience with the instance differs from the instance status returned by <a>DescribeInstanceStatus</a>, use <a>ReportInstanceStatus</a> to report your experience with the instance. Amazon EC2 collects this information to improve the accuracy of status checks.</p> <p>Use of this action does not change the value returned by <a>DescribeInstanceStatus</a>.</p>
reportInstanceStatus :: forall eff. ReportInstanceStatusRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
reportInstanceStatus = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "reportInstanceStatus"


-- | <p>Creates a Spot Fleet request.</p> <p>You can submit a single request that includes multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.</p> <p>By default, the Spot Fleet requests Spot Instances in the Spot pool where the price per unit is the lowest. Each launch specification can include its own instance weighting that reflects the value of the instance type to your application workload.</p> <p>Alternatively, you can specify that the Spot Fleet distribute the target capacity across the Spot pools included in its launch specifications. By ensuring that the Spot Instances in your Spot Fleet are in different Spot pools, you can improve the availability of your fleet.</p> <p>You can specify tags for the Spot Instances. You cannot tag other resource types in a Spot Fleet request; only the <code>instance</code> resource type is supported.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html">Spot Fleet Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
requestSpotFleet :: forall eff. RequestSpotFleetRequest -> Aff (exception :: EXCEPTION | eff) RequestSpotFleetResponse
requestSpotFleet = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "requestSpotFleet"


-- | <p>Creates a Spot Instance request. Spot Instances are instances that Amazon EC2 launches when the maximum price that you specify exceeds the current Spot price. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
requestSpotInstances :: forall eff. RequestSpotInstancesRequest -> Aff (exception :: EXCEPTION | eff) RequestSpotInstancesResult
requestSpotInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "requestSpotInstances"


-- | <p>Resets the specified attribute of the specified Amazon FPGA Image (AFI) to its default value. You can only reset the load permission attribute.</p>
resetFpgaImageAttribute :: forall eff. ResetFpgaImageAttributeRequest -> Aff (exception :: EXCEPTION | eff) ResetFpgaImageAttributeResult
resetFpgaImageAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "resetFpgaImageAttribute"


-- | <p>Resets an attribute of an AMI to its default value.</p> <note> <p>The productCodes attribute can't be reset.</p> </note>
resetImageAttribute :: forall eff. ResetImageAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
resetImageAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "resetImageAttribute"


-- | <p>Resets an attribute of an instance to its default value. To reset the <code>kernel</code> or <code>ramdisk</code>, the instance must be in a stopped state. To reset the <code>sourceDestCheck</code>, the instance can be either running or stopped.</p> <p>The <code>sourceDestCheck</code> attribute controls whether source/destination checking is enabled. The default value is <code>true</code>, which means checking is enabled. This value must be <code>false</code> for a NAT instance to perform NAT. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
resetInstanceAttribute :: forall eff. ResetInstanceAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
resetInstanceAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "resetInstanceAttribute"


-- | <p>Resets a network interface attribute. You can specify only one attribute at a time.</p>
resetNetworkInterfaceAttribute :: forall eff. ResetNetworkInterfaceAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
resetNetworkInterfaceAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "resetNetworkInterfaceAttribute"


-- | <p>Resets permission settings for the specified snapshot.</p> <p>For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
resetSnapshotAttribute :: forall eff. ResetSnapshotAttributeRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
resetSnapshotAttribute = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "resetSnapshotAttribute"


-- | <p>Restores an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform. You cannot move an Elastic IP address that was originally allocated for use in EC2-VPC. The Elastic IP address must not be associated with an instance or network interface.</p>
restoreAddressToClassic :: forall eff. RestoreAddressToClassicRequest -> Aff (exception :: EXCEPTION | eff) RestoreAddressToClassicResult
restoreAddressToClassic = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "restoreAddressToClassic"


-- | <p>[EC2-VPC only] Removes one or more egress rules from a security group for EC2-VPC. This action doesn't apply to security groups for use in EC2-Classic. To remove a rule, the values that you specify (for example, ports) must match the existing rule's values exactly.</p> <p>Each rule consists of the protocol and the IPv4 or IPv6 CIDR range or source security group. For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. If the security group rule has a description, you do not have to specify the description to revoke the rule.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p>
revokeSecurityGroupEgress :: forall eff. RevokeSecurityGroupEgressRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
revokeSecurityGroupEgress = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "revokeSecurityGroupEgress"


-- | <p>Removes one or more ingress rules from a security group. To remove a rule, the values that you specify (for example, ports) must match the existing rule's values exactly.</p> <note> <p>[EC2-Classic security groups only] If the values you specify do not match the existing rule's values, no error is returned. Use <a>DescribeSecurityGroups</a> to verify that the rule has been removed.</p> </note> <p>Each rule consists of the protocol and the CIDR range or source security group. For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. If the security group rule has a description, you do not have to specify the description to revoke the rule.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p>
revokeSecurityGroupIngress :: forall eff. RevokeSecurityGroupIngressRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
revokeSecurityGroupIngress = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "revokeSecurityGroupIngress"


-- | <p>Launches the specified number of instances using an AMI for which you have permissions. </p> <p>You can specify a number of options, or leave the default options. The following rules apply:</p> <ul> <li> <p>[EC2-VPC] If you don't specify a subnet ID, we choose a default subnet from your default VPC for you. If you don't have a default VPC, you must specify a subnet ID in the request.</p> </li> <li> <p>[EC2-Classic] If don't specify an Availability Zone, we choose one for you.</p> </li> <li> <p>Some instance types must be launched into a VPC. If you do not have a default VPC, or if you do not specify a subnet ID, the request fails. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types">Instance Types Available Only in a VPC</a>.</p> </li> <li> <p>[EC2-VPC] All instances have a network interface with a primary private IPv4 address. If you don't specify this address, we choose one from the IPv4 range of your subnet.</p> </li> <li> <p>Not all instance types support IPv6 addresses. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a>.</p> </li> <li> <p>If you don't specify a security group ID, we use the default security group. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Security Groups</a>.</p> </li> <li> <p>If any of the AMIs have a product code attached for which the user has not subscribed, the request fails.</p> </li> </ul> <p>You can create a <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch template</a>, which is a resource that contains the parameters to launch an instance. When you launch an instance using <a>RunInstances</a>, you can specify the launch template instead of specifying the launch parameters.</p> <p>To ensure faster instance launches, break up large requests into smaller batches. For example, create five separate launch requests for 100 instances each instead of one launch request for 500 instances.</p> <p>An instance is ready for you to use when it's in the <code>running</code> state. You can check the state of your instance using <a>DescribeInstances</a>. You can tag instances and EBS volumes during launch, after launch, or both. For more information, see <a>CreateTags</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a>.</p> <p>Linux instances have access to the public key of the key pair at boot. You can use this key to provide secure access to the instance. Amazon EC2 public images use this feature to provide secure access without passwords. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html">What To Do If An Instance Immediately Terminates</a>, and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html">Troubleshooting Connecting to Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
runInstances :: forall eff. RunInstancesRequest -> Aff (exception :: EXCEPTION | eff) Reservation
runInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "runInstances"


-- | <p>Launches the specified Scheduled Instances.</p> <p>Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier using <a>PurchaseScheduledInstances</a>.</p> <p>You must launch a Scheduled Instance during its scheduled time period. You can't stop or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate a Scheduled Instance before the current scheduled time period ends, you can launch it again after a few minutes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-scheduled-instances.html">Scheduled Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
runScheduledInstances :: forall eff. RunScheduledInstancesRequest -> Aff (exception :: EXCEPTION | eff) RunScheduledInstancesResult
runScheduledInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "runScheduledInstances"


-- | <p>Starts an Amazon EBS-backed instance that you've previously stopped.</p> <p>Instances that use Amazon EBS volumes as their root devices can be quickly stopped and started. When an instance is stopped, the compute resources are released and you are not billed for instance usage. However, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. You can restart your instance at any time. Every time you start your Windows instance, Amazon EC2 charges you for a full instance hour. If you stop and restart your Windows instance, a new instance hour begins and Amazon EC2 charges you for another full instance hour even if you are still within the same 60-minute period when it was stopped. Every time you start your Linux instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.</p> <p>Before stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM.</p> <p>Performing this operation on an instance that uses an instance store as its root device returns an error.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stopping Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
startInstances :: forall eff. StartInstancesRequest -> Aff (exception :: EXCEPTION | eff) StartInstancesResult
startInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "startInstances"


-- | <p>Stops an Amazon EBS-backed instance.</p> <p>We don't charge usage for a stopped instance, or data transfer fees; however, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. Every time you start your Windows instance, Amazon EC2 charges you for a full instance hour. If you stop and restart your Windows instance, a new instance hour begins and Amazon EC2 charges you for another full instance hour even if you are still within the same 60-minute period when it was stopped. Every time you start your Linux instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.</p> <p>You can't start or stop Spot Instances, and you can't stop instance store-backed instances.</p> <p>When you stop an instance, we shut it down. You can restart your instance at any time. Before stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM.</p> <p>Stopping an instance is different to rebooting or terminating it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, the root device and any other devices attached during the instance launch are automatically deleted. For more information about the differences between rebooting, stopping, and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>When you stop an instance, we attempt to shut it down forcibly after a short while. If your instance appears stuck in the stopping state after a period of time, there may be an issue with the underlying host computer. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshooting Stopping Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
stopInstances :: forall eff. StopInstancesRequest -> Aff (exception :: EXCEPTION | eff) StopInstancesResult
stopInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "stopInstances"


-- | <p>Shuts down one or more instances. This operation is idempotent; if you terminate an instance more than once, each call succeeds. </p> <p>If you specify multiple instances and the request fails (for example, because of a single incorrect instance ID), none of the instances are terminated.</p> <p>Terminated instances remain visible after termination (for approximately one hour).</p> <p>By default, Amazon EC2 deletes all EBS volumes that were attached when the instance launched. Volumes attached after instance launch continue running.</p> <p>You can stop, start, and terminate EBS-backed instances. You can only terminate instance store-backed instances. What happens to an instance differs if you stop it or terminate it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, any attached EBS volumes with the <code>DeleteOnTermination</code> block device mapping parameter set to <code>true</code> are automatically deleted. For more information about the differences between stopping and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html">Troubleshooting Terminating Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
terminateInstances :: forall eff. TerminateInstancesRequest -> Aff (exception :: EXCEPTION | eff) TerminateInstancesResult
terminateInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "terminateInstances"


-- | <p>Unassigns one or more IPv6 addresses from a network interface.</p>
unassignIpv6Addresses :: forall eff. UnassignIpv6AddressesRequest -> Aff (exception :: EXCEPTION | eff) UnassignIpv6AddressesResult
unassignIpv6Addresses = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "unassignIpv6Addresses"


-- | <p>Unassigns one or more secondary private IP addresses from a network interface.</p>
unassignPrivateIpAddresses :: forall eff. UnassignPrivateIpAddressesRequest -> Aff (exception :: EXCEPTION | eff) Types.NoOutput
unassignPrivateIpAddresses = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "unassignPrivateIpAddresses"


-- | <p>Disables detailed monitoring for a running instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
unmonitorInstances :: forall eff. UnmonitorInstancesRequest -> Aff (exception :: EXCEPTION | eff) UnmonitorInstancesResult
unmonitorInstances = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "unmonitorInstances"


-- | <p>[EC2-VPC only] Updates the description of an egress (outbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously.</p> <p>You specify the description as part of the IP permissions structure. You can remove a description for a security group rule by omitting the description parameter in the request.</p>
updateSecurityGroupRuleDescriptionsEgress :: forall eff. UpdateSecurityGroupRuleDescriptionsEgressRequest -> Aff (exception :: EXCEPTION | eff) UpdateSecurityGroupRuleDescriptionsEgressResult
updateSecurityGroupRuleDescriptionsEgress = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "updateSecurityGroupRuleDescriptionsEgress"


-- | <p>Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously.</p> <p>You specify the description as part of the IP permissions structure. You can remove a description for a security group rule by omitting the description parameter in the request.</p>
updateSecurityGroupRuleDescriptionsIngress :: forall eff. UpdateSecurityGroupRuleDescriptionsIngressRequest -> Aff (exception :: EXCEPTION | eff) UpdateSecurityGroupRuleDescriptionsIngressResult
updateSecurityGroupRuleDescriptionsIngress = Request.request service method  where
    service = Request.ServiceName "EC2"
    method = Request.MethodName "updateSecurityGroupRuleDescriptionsIngress"


-- | <p>Contains the parameters for accepting the quote.</p>
newtype AcceptReservedInstancesExchangeQuoteRequest = AcceptReservedInstancesExchangeQuoteRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ReservedInstanceIds" :: (ReservedInstanceIdSet)
  , "TargetConfigurations" :: NullOrUndefined.NullOrUndefined (TargetConfigurationRequestSet)
  }
derive instance newtypeAcceptReservedInstancesExchangeQuoteRequest :: Newtype AcceptReservedInstancesExchangeQuoteRequest _
derive instance repGenericAcceptReservedInstancesExchangeQuoteRequest :: Generic AcceptReservedInstancesExchangeQuoteRequest _
instance showAcceptReservedInstancesExchangeQuoteRequest :: Show AcceptReservedInstancesExchangeQuoteRequest where
  show = genericShow
instance decodeAcceptReservedInstancesExchangeQuoteRequest :: Decode AcceptReservedInstancesExchangeQuoteRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAcceptReservedInstancesExchangeQuoteRequest :: Encode AcceptReservedInstancesExchangeQuoteRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AcceptReservedInstancesExchangeQuoteRequest from required parameters
newAcceptReservedInstancesExchangeQuoteRequest :: ReservedInstanceIdSet -> AcceptReservedInstancesExchangeQuoteRequest
newAcceptReservedInstancesExchangeQuoteRequest _ReservedInstanceIds = AcceptReservedInstancesExchangeQuoteRequest { "ReservedInstanceIds": _ReservedInstanceIds, "DryRun": (NullOrUndefined Nothing), "TargetConfigurations": (NullOrUndefined Nothing) }

-- | Constructs AcceptReservedInstancesExchangeQuoteRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAcceptReservedInstancesExchangeQuoteRequest' :: ReservedInstanceIdSet -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ReservedInstanceIds" :: (ReservedInstanceIdSet) , "TargetConfigurations" :: NullOrUndefined.NullOrUndefined (TargetConfigurationRequestSet) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ReservedInstanceIds" :: (ReservedInstanceIdSet) , "TargetConfigurations" :: NullOrUndefined.NullOrUndefined (TargetConfigurationRequestSet) } ) -> AcceptReservedInstancesExchangeQuoteRequest
newAcceptReservedInstancesExchangeQuoteRequest' _ReservedInstanceIds customize = (AcceptReservedInstancesExchangeQuoteRequest <<< customize) { "ReservedInstanceIds": _ReservedInstanceIds, "DryRun": (NullOrUndefined Nothing), "TargetConfigurations": (NullOrUndefined Nothing) }



-- | <p>The result of the exchange and whether it was <code>successful</code>.</p>
newtype AcceptReservedInstancesExchangeQuoteResult = AcceptReservedInstancesExchangeQuoteResult 
  { "ExchangeId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAcceptReservedInstancesExchangeQuoteResult :: Newtype AcceptReservedInstancesExchangeQuoteResult _
derive instance repGenericAcceptReservedInstancesExchangeQuoteResult :: Generic AcceptReservedInstancesExchangeQuoteResult _
instance showAcceptReservedInstancesExchangeQuoteResult :: Show AcceptReservedInstancesExchangeQuoteResult where
  show = genericShow
instance decodeAcceptReservedInstancesExchangeQuoteResult :: Decode AcceptReservedInstancesExchangeQuoteResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAcceptReservedInstancesExchangeQuoteResult :: Encode AcceptReservedInstancesExchangeQuoteResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AcceptReservedInstancesExchangeQuoteResult from required parameters
newAcceptReservedInstancesExchangeQuoteResult :: AcceptReservedInstancesExchangeQuoteResult
newAcceptReservedInstancesExchangeQuoteResult  = AcceptReservedInstancesExchangeQuoteResult { "ExchangeId": (NullOrUndefined Nothing) }

-- | Constructs AcceptReservedInstancesExchangeQuoteResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAcceptReservedInstancesExchangeQuoteResult' :: ( { "ExchangeId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ExchangeId" :: NullOrUndefined.NullOrUndefined (String) } ) -> AcceptReservedInstancesExchangeQuoteResult
newAcceptReservedInstancesExchangeQuoteResult'  customize = (AcceptReservedInstancesExchangeQuoteResult <<< customize) { "ExchangeId": (NullOrUndefined Nothing) }



newtype AcceptVpcEndpointConnectionsRequest = AcceptVpcEndpointConnectionsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ServiceId" :: (String)
  , "VpcEndpointIds" :: (ValueStringList)
  }
derive instance newtypeAcceptVpcEndpointConnectionsRequest :: Newtype AcceptVpcEndpointConnectionsRequest _
derive instance repGenericAcceptVpcEndpointConnectionsRequest :: Generic AcceptVpcEndpointConnectionsRequest _
instance showAcceptVpcEndpointConnectionsRequest :: Show AcceptVpcEndpointConnectionsRequest where
  show = genericShow
instance decodeAcceptVpcEndpointConnectionsRequest :: Decode AcceptVpcEndpointConnectionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAcceptVpcEndpointConnectionsRequest :: Encode AcceptVpcEndpointConnectionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AcceptVpcEndpointConnectionsRequest from required parameters
newAcceptVpcEndpointConnectionsRequest :: String -> ValueStringList -> AcceptVpcEndpointConnectionsRequest
newAcceptVpcEndpointConnectionsRequest _ServiceId _VpcEndpointIds = AcceptVpcEndpointConnectionsRequest { "ServiceId": _ServiceId, "VpcEndpointIds": _VpcEndpointIds, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs AcceptVpcEndpointConnectionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAcceptVpcEndpointConnectionsRequest' :: String -> ValueStringList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: (String) , "VpcEndpointIds" :: (ValueStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: (String) , "VpcEndpointIds" :: (ValueStringList) } ) -> AcceptVpcEndpointConnectionsRequest
newAcceptVpcEndpointConnectionsRequest' _ServiceId _VpcEndpointIds customize = (AcceptVpcEndpointConnectionsRequest <<< customize) { "ServiceId": _ServiceId, "VpcEndpointIds": _VpcEndpointIds, "DryRun": (NullOrUndefined Nothing) }



newtype AcceptVpcEndpointConnectionsResult = AcceptVpcEndpointConnectionsResult 
  { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet)
  }
derive instance newtypeAcceptVpcEndpointConnectionsResult :: Newtype AcceptVpcEndpointConnectionsResult _
derive instance repGenericAcceptVpcEndpointConnectionsResult :: Generic AcceptVpcEndpointConnectionsResult _
instance showAcceptVpcEndpointConnectionsResult :: Show AcceptVpcEndpointConnectionsResult where
  show = genericShow
instance decodeAcceptVpcEndpointConnectionsResult :: Decode AcceptVpcEndpointConnectionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAcceptVpcEndpointConnectionsResult :: Encode AcceptVpcEndpointConnectionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AcceptVpcEndpointConnectionsResult from required parameters
newAcceptVpcEndpointConnectionsResult :: AcceptVpcEndpointConnectionsResult
newAcceptVpcEndpointConnectionsResult  = AcceptVpcEndpointConnectionsResult { "Unsuccessful": (NullOrUndefined Nothing) }

-- | Constructs AcceptVpcEndpointConnectionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAcceptVpcEndpointConnectionsResult' :: ( { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } -> {"Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } ) -> AcceptVpcEndpointConnectionsResult
newAcceptVpcEndpointConnectionsResult'  customize = (AcceptVpcEndpointConnectionsResult <<< customize) { "Unsuccessful": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AcceptVpcPeeringConnection.</p>
newtype AcceptVpcPeeringConnectionRequest = AcceptVpcPeeringConnectionRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAcceptVpcPeeringConnectionRequest :: Newtype AcceptVpcPeeringConnectionRequest _
derive instance repGenericAcceptVpcPeeringConnectionRequest :: Generic AcceptVpcPeeringConnectionRequest _
instance showAcceptVpcPeeringConnectionRequest :: Show AcceptVpcPeeringConnectionRequest where
  show = genericShow
instance decodeAcceptVpcPeeringConnectionRequest :: Decode AcceptVpcPeeringConnectionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAcceptVpcPeeringConnectionRequest :: Encode AcceptVpcPeeringConnectionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AcceptVpcPeeringConnectionRequest from required parameters
newAcceptVpcPeeringConnectionRequest :: AcceptVpcPeeringConnectionRequest
newAcceptVpcPeeringConnectionRequest  = AcceptVpcPeeringConnectionRequest { "DryRun": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }

-- | Constructs AcceptVpcPeeringConnectionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAcceptVpcPeeringConnectionRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } ) -> AcceptVpcPeeringConnectionRequest
newAcceptVpcPeeringConnectionRequest'  customize = (AcceptVpcPeeringConnectionRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }



-- | <p>Contains the output of AcceptVpcPeeringConnection.</p>
newtype AcceptVpcPeeringConnectionResult = AcceptVpcPeeringConnectionResult 
  { "VpcPeeringConnection" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnection)
  }
derive instance newtypeAcceptVpcPeeringConnectionResult :: Newtype AcceptVpcPeeringConnectionResult _
derive instance repGenericAcceptVpcPeeringConnectionResult :: Generic AcceptVpcPeeringConnectionResult _
instance showAcceptVpcPeeringConnectionResult :: Show AcceptVpcPeeringConnectionResult where
  show = genericShow
instance decodeAcceptVpcPeeringConnectionResult :: Decode AcceptVpcPeeringConnectionResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAcceptVpcPeeringConnectionResult :: Encode AcceptVpcPeeringConnectionResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AcceptVpcPeeringConnectionResult from required parameters
newAcceptVpcPeeringConnectionResult :: AcceptVpcPeeringConnectionResult
newAcceptVpcPeeringConnectionResult  = AcceptVpcPeeringConnectionResult { "VpcPeeringConnection": (NullOrUndefined Nothing) }

-- | Constructs AcceptVpcPeeringConnectionResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAcceptVpcPeeringConnectionResult' :: ( { "VpcPeeringConnection" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnection) } -> {"VpcPeeringConnection" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnection) } ) -> AcceptVpcPeeringConnectionResult
newAcceptVpcPeeringConnectionResult'  customize = (AcceptVpcPeeringConnectionResult <<< customize) { "VpcPeeringConnection": (NullOrUndefined Nothing) }



-- | <p>Describes an account attribute.</p>
newtype AccountAttribute = AccountAttribute 
  { "AttributeName" :: NullOrUndefined.NullOrUndefined (String)
  , "AttributeValues" :: NullOrUndefined.NullOrUndefined (AccountAttributeValueList)
  }
derive instance newtypeAccountAttribute :: Newtype AccountAttribute _
derive instance repGenericAccountAttribute :: Generic AccountAttribute _
instance showAccountAttribute :: Show AccountAttribute where
  show = genericShow
instance decodeAccountAttribute :: Decode AccountAttribute where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAccountAttribute :: Encode AccountAttribute where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AccountAttribute from required parameters
newAccountAttribute :: AccountAttribute
newAccountAttribute  = AccountAttribute { "AttributeName": (NullOrUndefined Nothing), "AttributeValues": (NullOrUndefined Nothing) }

-- | Constructs AccountAttribute's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAccountAttribute' :: ( { "AttributeName" :: NullOrUndefined.NullOrUndefined (String) , "AttributeValues" :: NullOrUndefined.NullOrUndefined (AccountAttributeValueList) } -> {"AttributeName" :: NullOrUndefined.NullOrUndefined (String) , "AttributeValues" :: NullOrUndefined.NullOrUndefined (AccountAttributeValueList) } ) -> AccountAttribute
newAccountAttribute'  customize = (AccountAttribute <<< customize) { "AttributeName": (NullOrUndefined Nothing), "AttributeValues": (NullOrUndefined Nothing) }



newtype AccountAttributeList = AccountAttributeList (Array AccountAttribute)
derive instance newtypeAccountAttributeList :: Newtype AccountAttributeList _
derive instance repGenericAccountAttributeList :: Generic AccountAttributeList _
instance showAccountAttributeList :: Show AccountAttributeList where
  show = genericShow
instance decodeAccountAttributeList :: Decode AccountAttributeList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAccountAttributeList :: Encode AccountAttributeList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype AccountAttributeName = AccountAttributeName String
derive instance newtypeAccountAttributeName :: Newtype AccountAttributeName _
derive instance repGenericAccountAttributeName :: Generic AccountAttributeName _
instance showAccountAttributeName :: Show AccountAttributeName where
  show = genericShow
instance decodeAccountAttributeName :: Decode AccountAttributeName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAccountAttributeName :: Encode AccountAttributeName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype AccountAttributeNameStringList = AccountAttributeNameStringList (Array AccountAttributeName)
derive instance newtypeAccountAttributeNameStringList :: Newtype AccountAttributeNameStringList _
derive instance repGenericAccountAttributeNameStringList :: Generic AccountAttributeNameStringList _
instance showAccountAttributeNameStringList :: Show AccountAttributeNameStringList where
  show = genericShow
instance decodeAccountAttributeNameStringList :: Decode AccountAttributeNameStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAccountAttributeNameStringList :: Encode AccountAttributeNameStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a value of an account attribute.</p>
newtype AccountAttributeValue = AccountAttributeValue 
  { "AttributeValue" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAccountAttributeValue :: Newtype AccountAttributeValue _
derive instance repGenericAccountAttributeValue :: Generic AccountAttributeValue _
instance showAccountAttributeValue :: Show AccountAttributeValue where
  show = genericShow
instance decodeAccountAttributeValue :: Decode AccountAttributeValue where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAccountAttributeValue :: Encode AccountAttributeValue where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AccountAttributeValue from required parameters
newAccountAttributeValue :: AccountAttributeValue
newAccountAttributeValue  = AccountAttributeValue { "AttributeValue": (NullOrUndefined Nothing) }

-- | Constructs AccountAttributeValue's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAccountAttributeValue' :: ( { "AttributeValue" :: NullOrUndefined.NullOrUndefined (String) } -> {"AttributeValue" :: NullOrUndefined.NullOrUndefined (String) } ) -> AccountAttributeValue
newAccountAttributeValue'  customize = (AccountAttributeValue <<< customize) { "AttributeValue": (NullOrUndefined Nothing) }



newtype AccountAttributeValueList = AccountAttributeValueList (Array AccountAttributeValue)
derive instance newtypeAccountAttributeValueList :: Newtype AccountAttributeValueList _
derive instance repGenericAccountAttributeValueList :: Generic AccountAttributeValueList _
instance showAccountAttributeValueList :: Show AccountAttributeValueList where
  show = genericShow
instance decodeAccountAttributeValueList :: Decode AccountAttributeValueList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAccountAttributeValueList :: Encode AccountAttributeValueList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a running instance in a Spot Fleet.</p>
newtype ActiveInstance = ActiveInstance 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceHealth" :: NullOrUndefined.NullOrUndefined (InstanceHealthStatus)
  }
derive instance newtypeActiveInstance :: Newtype ActiveInstance _
derive instance repGenericActiveInstance :: Generic ActiveInstance _
instance showActiveInstance :: Show ActiveInstance where
  show = genericShow
instance decodeActiveInstance :: Decode ActiveInstance where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeActiveInstance :: Encode ActiveInstance where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ActiveInstance from required parameters
newActiveInstance :: ActiveInstance
newActiveInstance  = ActiveInstance { "InstanceHealth": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "SpotInstanceRequestId": (NullOrUndefined Nothing) }

-- | Constructs ActiveInstance's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newActiveInstance' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceHealth" :: NullOrUndefined.NullOrUndefined (InstanceHealthStatus) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceHealth" :: NullOrUndefined.NullOrUndefined (InstanceHealthStatus) } ) -> ActiveInstance
newActiveInstance'  customize = (ActiveInstance <<< customize) { "InstanceHealth": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "SpotInstanceRequestId": (NullOrUndefined Nothing) }



newtype ActiveInstanceSet = ActiveInstanceSet (Array ActiveInstance)
derive instance newtypeActiveInstanceSet :: Newtype ActiveInstanceSet _
derive instance repGenericActiveInstanceSet :: Generic ActiveInstanceSet _
instance showActiveInstanceSet :: Show ActiveInstanceSet where
  show = genericShow
instance decodeActiveInstanceSet :: Decode ActiveInstanceSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeActiveInstanceSet :: Encode ActiveInstanceSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ActivityStatus = ActivityStatus String
derive instance newtypeActivityStatus :: Newtype ActivityStatus _
derive instance repGenericActivityStatus :: Generic ActivityStatus _
instance showActivityStatus :: Show ActivityStatus where
  show = genericShow
instance decodeActivityStatus :: Decode ActivityStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeActivityStatus :: Encode ActivityStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an Elastic IP address.</p>
newtype Address = Address 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicIp" :: NullOrUndefined.NullOrUndefined (String)
  , "AllocationId" :: NullOrUndefined.NullOrUndefined (String)
  , "AssociationId" :: NullOrUndefined.NullOrUndefined (String)
  , "Domain" :: NullOrUndefined.NullOrUndefined (DomainType)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkInterfaceOwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeAddress :: Newtype Address _
derive instance repGenericAddress :: Generic Address _
instance showAddress :: Show Address where
  show = genericShow
instance decodeAddress :: Decode Address where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAddress :: Encode Address where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Address from required parameters
newAddress :: Address
newAddress  = Address { "AllocationId": (NullOrUndefined Nothing), "AssociationId": (NullOrUndefined Nothing), "Domain": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "NetworkInterfaceOwnerId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs Address's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAddress' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "Domain" :: NullOrUndefined.NullOrUndefined (DomainType) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "Domain" :: NullOrUndefined.NullOrUndefined (DomainType) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> Address
newAddress'  customize = (Address <<< customize) { "AllocationId": (NullOrUndefined Nothing), "AssociationId": (NullOrUndefined Nothing), "Domain": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "NetworkInterfaceOwnerId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



newtype AddressList = AddressList (Array Address)
derive instance newtypeAddressList :: Newtype AddressList _
derive instance repGenericAddressList :: Generic AddressList _
instance showAddressList :: Show AddressList where
  show = genericShow
instance decodeAddressList :: Decode AddressList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAddressList :: Encode AddressList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype Affinity = Affinity String
derive instance newtypeAffinity :: Newtype Affinity _
derive instance repGenericAffinity :: Generic Affinity _
instance showAffinity :: Show Affinity where
  show = genericShow
instance decodeAffinity :: Decode Affinity where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAffinity :: Encode Affinity where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for AllocateAddress.</p>
newtype AllocateAddressRequest = AllocateAddressRequest 
  { "Domain" :: NullOrUndefined.NullOrUndefined (DomainType)
  , "Address" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeAllocateAddressRequest :: Newtype AllocateAddressRequest _
derive instance repGenericAllocateAddressRequest :: Generic AllocateAddressRequest _
instance showAllocateAddressRequest :: Show AllocateAddressRequest where
  show = genericShow
instance decodeAllocateAddressRequest :: Decode AllocateAddressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAllocateAddressRequest :: Encode AllocateAddressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AllocateAddressRequest from required parameters
newAllocateAddressRequest :: AllocateAddressRequest
newAllocateAddressRequest  = AllocateAddressRequest { "Address": (NullOrUndefined Nothing), "Domain": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs AllocateAddressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAllocateAddressRequest' :: ( { "Domain" :: NullOrUndefined.NullOrUndefined (DomainType) , "Address" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Domain" :: NullOrUndefined.NullOrUndefined (DomainType) , "Address" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> AllocateAddressRequest
newAllocateAddressRequest'  customize = (AllocateAddressRequest <<< customize) { "Address": (NullOrUndefined Nothing), "Domain": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of AllocateAddress.</p>
newtype AllocateAddressResult = AllocateAddressResult 
  { "PublicIp" :: NullOrUndefined.NullOrUndefined (String)
  , "AllocationId" :: NullOrUndefined.NullOrUndefined (String)
  , "Domain" :: NullOrUndefined.NullOrUndefined (DomainType)
  }
derive instance newtypeAllocateAddressResult :: Newtype AllocateAddressResult _
derive instance repGenericAllocateAddressResult :: Generic AllocateAddressResult _
instance showAllocateAddressResult :: Show AllocateAddressResult where
  show = genericShow
instance decodeAllocateAddressResult :: Decode AllocateAddressResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAllocateAddressResult :: Encode AllocateAddressResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AllocateAddressResult from required parameters
newAllocateAddressResult :: AllocateAddressResult
newAllocateAddressResult  = AllocateAddressResult { "AllocationId": (NullOrUndefined Nothing), "Domain": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }

-- | Constructs AllocateAddressResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAllocateAddressResult' :: ( { "PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "Domain" :: NullOrUndefined.NullOrUndefined (DomainType) } -> {"PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "Domain" :: NullOrUndefined.NullOrUndefined (DomainType) } ) -> AllocateAddressResult
newAllocateAddressResult'  customize = (AllocateAddressResult <<< customize) { "AllocationId": (NullOrUndefined Nothing), "Domain": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AllocateHosts.</p>
newtype AllocateHostsRequest = AllocateHostsRequest 
  { "AutoPlacement" :: NullOrUndefined.NullOrUndefined (AutoPlacement)
  , "AvailabilityZone" :: (String)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: (String)
  , "Quantity" :: (Int)
  }
derive instance newtypeAllocateHostsRequest :: Newtype AllocateHostsRequest _
derive instance repGenericAllocateHostsRequest :: Generic AllocateHostsRequest _
instance showAllocateHostsRequest :: Show AllocateHostsRequest where
  show = genericShow
instance decodeAllocateHostsRequest :: Decode AllocateHostsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAllocateHostsRequest :: Encode AllocateHostsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AllocateHostsRequest from required parameters
newAllocateHostsRequest :: String -> String -> Int -> AllocateHostsRequest
newAllocateHostsRequest _AvailabilityZone _InstanceType _Quantity = AllocateHostsRequest { "AvailabilityZone": _AvailabilityZone, "InstanceType": _InstanceType, "Quantity": _Quantity, "AutoPlacement": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing) }

-- | Constructs AllocateHostsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAllocateHostsRequest' :: String -> String -> Int -> ( { "AutoPlacement" :: NullOrUndefined.NullOrUndefined (AutoPlacement) , "AvailabilityZone" :: (String) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: (String) , "Quantity" :: (Int) } -> {"AutoPlacement" :: NullOrUndefined.NullOrUndefined (AutoPlacement) , "AvailabilityZone" :: (String) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: (String) , "Quantity" :: (Int) } ) -> AllocateHostsRequest
newAllocateHostsRequest' _AvailabilityZone _InstanceType _Quantity customize = (AllocateHostsRequest <<< customize) { "AvailabilityZone": _AvailabilityZone, "InstanceType": _InstanceType, "Quantity": _Quantity, "AutoPlacement": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of AllocateHosts.</p>
newtype AllocateHostsResult = AllocateHostsResult 
  { "HostIds" :: NullOrUndefined.NullOrUndefined (ResponseHostIdList)
  }
derive instance newtypeAllocateHostsResult :: Newtype AllocateHostsResult _
derive instance repGenericAllocateHostsResult :: Generic AllocateHostsResult _
instance showAllocateHostsResult :: Show AllocateHostsResult where
  show = genericShow
instance decodeAllocateHostsResult :: Decode AllocateHostsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAllocateHostsResult :: Encode AllocateHostsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AllocateHostsResult from required parameters
newAllocateHostsResult :: AllocateHostsResult
newAllocateHostsResult  = AllocateHostsResult { "HostIds": (NullOrUndefined Nothing) }

-- | Constructs AllocateHostsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAllocateHostsResult' :: ( { "HostIds" :: NullOrUndefined.NullOrUndefined (ResponseHostIdList) } -> {"HostIds" :: NullOrUndefined.NullOrUndefined (ResponseHostIdList) } ) -> AllocateHostsResult
newAllocateHostsResult'  customize = (AllocateHostsResult <<< customize) { "HostIds": (NullOrUndefined Nothing) }



newtype AllocationIdList = AllocationIdList (Array String)
derive instance newtypeAllocationIdList :: Newtype AllocationIdList _
derive instance repGenericAllocationIdList :: Generic AllocationIdList _
instance showAllocationIdList :: Show AllocationIdList where
  show = genericShow
instance decodeAllocationIdList :: Decode AllocationIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAllocationIdList :: Encode AllocationIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype AllocationState = AllocationState String
derive instance newtypeAllocationState :: Newtype AllocationState _
derive instance repGenericAllocationState :: Generic AllocationState _
instance showAllocationState :: Show AllocationState where
  show = genericShow
instance decodeAllocationState :: Decode AllocationState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAllocationState :: Encode AllocationState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype AllocationStrategy = AllocationStrategy String
derive instance newtypeAllocationStrategy :: Newtype AllocationStrategy _
derive instance repGenericAllocationStrategy :: Generic AllocationStrategy _
instance showAllocationStrategy :: Show AllocationStrategy where
  show = genericShow
instance decodeAllocationStrategy :: Decode AllocationStrategy where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAllocationStrategy :: Encode AllocationStrategy where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a principal.</p>
newtype AllowedPrincipal = AllowedPrincipal 
  { "PrincipalType" :: NullOrUndefined.NullOrUndefined (PrincipalType)
  , "Principal" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAllowedPrincipal :: Newtype AllowedPrincipal _
derive instance repGenericAllowedPrincipal :: Generic AllowedPrincipal _
instance showAllowedPrincipal :: Show AllowedPrincipal where
  show = genericShow
instance decodeAllowedPrincipal :: Decode AllowedPrincipal where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAllowedPrincipal :: Encode AllowedPrincipal where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AllowedPrincipal from required parameters
newAllowedPrincipal :: AllowedPrincipal
newAllowedPrincipal  = AllowedPrincipal { "Principal": (NullOrUndefined Nothing), "PrincipalType": (NullOrUndefined Nothing) }

-- | Constructs AllowedPrincipal's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAllowedPrincipal' :: ( { "PrincipalType" :: NullOrUndefined.NullOrUndefined (PrincipalType) , "Principal" :: NullOrUndefined.NullOrUndefined (String) } -> {"PrincipalType" :: NullOrUndefined.NullOrUndefined (PrincipalType) , "Principal" :: NullOrUndefined.NullOrUndefined (String) } ) -> AllowedPrincipal
newAllowedPrincipal'  customize = (AllowedPrincipal <<< customize) { "Principal": (NullOrUndefined Nothing), "PrincipalType": (NullOrUndefined Nothing) }



newtype AllowedPrincipalSet = AllowedPrincipalSet (Array AllowedPrincipal)
derive instance newtypeAllowedPrincipalSet :: Newtype AllowedPrincipalSet _
derive instance repGenericAllowedPrincipalSet :: Generic AllowedPrincipalSet _
instance showAllowedPrincipalSet :: Show AllowedPrincipalSet where
  show = genericShow
instance decodeAllowedPrincipalSet :: Decode AllowedPrincipalSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAllowedPrincipalSet :: Encode AllowedPrincipalSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ArchitectureValues = ArchitectureValues String
derive instance newtypeArchitectureValues :: Newtype ArchitectureValues _
derive instance repGenericArchitectureValues :: Generic ArchitectureValues _
instance showArchitectureValues :: Show ArchitectureValues where
  show = genericShow
instance decodeArchitectureValues :: Decode ArchitectureValues where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeArchitectureValues :: Encode ArchitectureValues where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype AssignIpv6AddressesRequest = AssignIpv6AddressesRequest 
  { "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (Ipv6AddressList)
  , "NetworkInterfaceId" :: (String)
  }
derive instance newtypeAssignIpv6AddressesRequest :: Newtype AssignIpv6AddressesRequest _
derive instance repGenericAssignIpv6AddressesRequest :: Generic AssignIpv6AddressesRequest _
instance showAssignIpv6AddressesRequest :: Show AssignIpv6AddressesRequest where
  show = genericShow
instance decodeAssignIpv6AddressesRequest :: Decode AssignIpv6AddressesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssignIpv6AddressesRequest :: Encode AssignIpv6AddressesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssignIpv6AddressesRequest from required parameters
newAssignIpv6AddressesRequest :: String -> AssignIpv6AddressesRequest
newAssignIpv6AddressesRequest _NetworkInterfaceId = AssignIpv6AddressesRequest { "NetworkInterfaceId": _NetworkInterfaceId, "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing) }

-- | Constructs AssignIpv6AddressesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssignIpv6AddressesRequest' :: String -> ( { "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (Ipv6AddressList) , "NetworkInterfaceId" :: (String) } -> {"Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (Ipv6AddressList) , "NetworkInterfaceId" :: (String) } ) -> AssignIpv6AddressesRequest
newAssignIpv6AddressesRequest' _NetworkInterfaceId customize = (AssignIpv6AddressesRequest <<< customize) { "NetworkInterfaceId": _NetworkInterfaceId, "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing) }



newtype AssignIpv6AddressesResult = AssignIpv6AddressesResult 
  { "AssignedIpv6Addresses" :: NullOrUndefined.NullOrUndefined (Ipv6AddressList)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAssignIpv6AddressesResult :: Newtype AssignIpv6AddressesResult _
derive instance repGenericAssignIpv6AddressesResult :: Generic AssignIpv6AddressesResult _
instance showAssignIpv6AddressesResult :: Show AssignIpv6AddressesResult where
  show = genericShow
instance decodeAssignIpv6AddressesResult :: Decode AssignIpv6AddressesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssignIpv6AddressesResult :: Encode AssignIpv6AddressesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssignIpv6AddressesResult from required parameters
newAssignIpv6AddressesResult :: AssignIpv6AddressesResult
newAssignIpv6AddressesResult  = AssignIpv6AddressesResult { "AssignedIpv6Addresses": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing) }

-- | Constructs AssignIpv6AddressesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssignIpv6AddressesResult' :: ( { "AssignedIpv6Addresses" :: NullOrUndefined.NullOrUndefined (Ipv6AddressList) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AssignedIpv6Addresses" :: NullOrUndefined.NullOrUndefined (Ipv6AddressList) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) } ) -> AssignIpv6AddressesResult
newAssignIpv6AddressesResult'  customize = (AssignIpv6AddressesResult <<< customize) { "AssignedIpv6Addresses": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AssignPrivateIpAddresses.</p>
newtype AssignPrivateIpAddressesRequest = AssignPrivateIpAddressesRequest 
  { "AllowReassignment" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkInterfaceId" :: (String)
  , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressStringList)
  , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeAssignPrivateIpAddressesRequest :: Newtype AssignPrivateIpAddressesRequest _
derive instance repGenericAssignPrivateIpAddressesRequest :: Generic AssignPrivateIpAddressesRequest _
instance showAssignPrivateIpAddressesRequest :: Show AssignPrivateIpAddressesRequest where
  show = genericShow
instance decodeAssignPrivateIpAddressesRequest :: Decode AssignPrivateIpAddressesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssignPrivateIpAddressesRequest :: Encode AssignPrivateIpAddressesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssignPrivateIpAddressesRequest from required parameters
newAssignPrivateIpAddressesRequest :: String -> AssignPrivateIpAddressesRequest
newAssignPrivateIpAddressesRequest _NetworkInterfaceId = AssignPrivateIpAddressesRequest { "NetworkInterfaceId": _NetworkInterfaceId, "AllowReassignment": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing) }

-- | Constructs AssignPrivateIpAddressesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssignPrivateIpAddressesRequest' :: String -> ( { "AllowReassignment" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceId" :: (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressStringList) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) } -> {"AllowReassignment" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceId" :: (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressStringList) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) } ) -> AssignPrivateIpAddressesRequest
newAssignPrivateIpAddressesRequest' _NetworkInterfaceId customize = (AssignPrivateIpAddressesRequest <<< customize) { "NetworkInterfaceId": _NetworkInterfaceId, "AllowReassignment": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AssociateAddress.</p>
newtype AssociateAddressRequest = AssociateAddressRequest 
  { "AllocationId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicIp" :: NullOrUndefined.NullOrUndefined (String)
  , "AllowReassociation" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAssociateAddressRequest :: Newtype AssociateAddressRequest _
derive instance repGenericAssociateAddressRequest :: Generic AssociateAddressRequest _
instance showAssociateAddressRequest :: Show AssociateAddressRequest where
  show = genericShow
instance decodeAssociateAddressRequest :: Decode AssociateAddressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateAddressRequest :: Encode AssociateAddressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateAddressRequest from required parameters
newAssociateAddressRequest :: AssociateAddressRequest
newAssociateAddressRequest  = AssociateAddressRequest { "AllocationId": (NullOrUndefined Nothing), "AllowReassociation": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }

-- | Constructs AssociateAddressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateAddressRequest' :: ( { "AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "AllowReassociation" :: NullOrUndefined.NullOrUndefined (Boolean) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) } -> {"AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "AllowReassociation" :: NullOrUndefined.NullOrUndefined (Boolean) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) } ) -> AssociateAddressRequest
newAssociateAddressRequest'  customize = (AssociateAddressRequest <<< customize) { "AllocationId": (NullOrUndefined Nothing), "AllowReassociation": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }



-- | <p>Contains the output of AssociateAddress.</p>
newtype AssociateAddressResult = AssociateAddressResult 
  { "AssociationId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAssociateAddressResult :: Newtype AssociateAddressResult _
derive instance repGenericAssociateAddressResult :: Generic AssociateAddressResult _
instance showAssociateAddressResult :: Show AssociateAddressResult where
  show = genericShow
instance decodeAssociateAddressResult :: Decode AssociateAddressResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateAddressResult :: Encode AssociateAddressResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateAddressResult from required parameters
newAssociateAddressResult :: AssociateAddressResult
newAssociateAddressResult  = AssociateAddressResult { "AssociationId": (NullOrUndefined Nothing) }

-- | Constructs AssociateAddressResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateAddressResult' :: ( { "AssociationId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AssociationId" :: NullOrUndefined.NullOrUndefined (String) } ) -> AssociateAddressResult
newAssociateAddressResult'  customize = (AssociateAddressResult <<< customize) { "AssociationId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AssociateDhcpOptions.</p>
newtype AssociateDhcpOptionsRequest = AssociateDhcpOptionsRequest 
  { "DhcpOptionsId" :: (String)
  , "VpcId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeAssociateDhcpOptionsRequest :: Newtype AssociateDhcpOptionsRequest _
derive instance repGenericAssociateDhcpOptionsRequest :: Generic AssociateDhcpOptionsRequest _
instance showAssociateDhcpOptionsRequest :: Show AssociateDhcpOptionsRequest where
  show = genericShow
instance decodeAssociateDhcpOptionsRequest :: Decode AssociateDhcpOptionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateDhcpOptionsRequest :: Encode AssociateDhcpOptionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateDhcpOptionsRequest from required parameters
newAssociateDhcpOptionsRequest :: String -> String -> AssociateDhcpOptionsRequest
newAssociateDhcpOptionsRequest _DhcpOptionsId _VpcId = AssociateDhcpOptionsRequest { "DhcpOptionsId": _DhcpOptionsId, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs AssociateDhcpOptionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateDhcpOptionsRequest' :: String -> String -> ( { "DhcpOptionsId" :: (String) , "VpcId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DhcpOptionsId" :: (String) , "VpcId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> AssociateDhcpOptionsRequest
newAssociateDhcpOptionsRequest' _DhcpOptionsId _VpcId customize = (AssociateDhcpOptionsRequest <<< customize) { "DhcpOptionsId": _DhcpOptionsId, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



newtype AssociateIamInstanceProfileRequest = AssociateIamInstanceProfileRequest 
  { "IamInstanceProfile" :: (IamInstanceProfileSpecification)
  , "InstanceId" :: (String)
  }
derive instance newtypeAssociateIamInstanceProfileRequest :: Newtype AssociateIamInstanceProfileRequest _
derive instance repGenericAssociateIamInstanceProfileRequest :: Generic AssociateIamInstanceProfileRequest _
instance showAssociateIamInstanceProfileRequest :: Show AssociateIamInstanceProfileRequest where
  show = genericShow
instance decodeAssociateIamInstanceProfileRequest :: Decode AssociateIamInstanceProfileRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateIamInstanceProfileRequest :: Encode AssociateIamInstanceProfileRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateIamInstanceProfileRequest from required parameters
newAssociateIamInstanceProfileRequest :: IamInstanceProfileSpecification -> String -> AssociateIamInstanceProfileRequest
newAssociateIamInstanceProfileRequest _IamInstanceProfile _InstanceId = AssociateIamInstanceProfileRequest { "IamInstanceProfile": _IamInstanceProfile, "InstanceId": _InstanceId }

-- | Constructs AssociateIamInstanceProfileRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateIamInstanceProfileRequest' :: IamInstanceProfileSpecification -> String -> ( { "IamInstanceProfile" :: (IamInstanceProfileSpecification) , "InstanceId" :: (String) } -> {"IamInstanceProfile" :: (IamInstanceProfileSpecification) , "InstanceId" :: (String) } ) -> AssociateIamInstanceProfileRequest
newAssociateIamInstanceProfileRequest' _IamInstanceProfile _InstanceId customize = (AssociateIamInstanceProfileRequest <<< customize) { "IamInstanceProfile": _IamInstanceProfile, "InstanceId": _InstanceId }



newtype AssociateIamInstanceProfileResult = AssociateIamInstanceProfileResult 
  { "IamInstanceProfileAssociation" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociation)
  }
derive instance newtypeAssociateIamInstanceProfileResult :: Newtype AssociateIamInstanceProfileResult _
derive instance repGenericAssociateIamInstanceProfileResult :: Generic AssociateIamInstanceProfileResult _
instance showAssociateIamInstanceProfileResult :: Show AssociateIamInstanceProfileResult where
  show = genericShow
instance decodeAssociateIamInstanceProfileResult :: Decode AssociateIamInstanceProfileResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateIamInstanceProfileResult :: Encode AssociateIamInstanceProfileResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateIamInstanceProfileResult from required parameters
newAssociateIamInstanceProfileResult :: AssociateIamInstanceProfileResult
newAssociateIamInstanceProfileResult  = AssociateIamInstanceProfileResult { "IamInstanceProfileAssociation": (NullOrUndefined Nothing) }

-- | Constructs AssociateIamInstanceProfileResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateIamInstanceProfileResult' :: ( { "IamInstanceProfileAssociation" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociation) } -> {"IamInstanceProfileAssociation" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociation) } ) -> AssociateIamInstanceProfileResult
newAssociateIamInstanceProfileResult'  customize = (AssociateIamInstanceProfileResult <<< customize) { "IamInstanceProfileAssociation": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AssociateRouteTable.</p>
newtype AssociateRouteTableRequest = AssociateRouteTableRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "RouteTableId" :: (String)
  , "SubnetId" :: (String)
  }
derive instance newtypeAssociateRouteTableRequest :: Newtype AssociateRouteTableRequest _
derive instance repGenericAssociateRouteTableRequest :: Generic AssociateRouteTableRequest _
instance showAssociateRouteTableRequest :: Show AssociateRouteTableRequest where
  show = genericShow
instance decodeAssociateRouteTableRequest :: Decode AssociateRouteTableRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateRouteTableRequest :: Encode AssociateRouteTableRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateRouteTableRequest from required parameters
newAssociateRouteTableRequest :: String -> String -> AssociateRouteTableRequest
newAssociateRouteTableRequest _RouteTableId _SubnetId = AssociateRouteTableRequest { "RouteTableId": _RouteTableId, "SubnetId": _SubnetId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs AssociateRouteTableRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateRouteTableRequest' :: String -> String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableId" :: (String) , "SubnetId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableId" :: (String) , "SubnetId" :: (String) } ) -> AssociateRouteTableRequest
newAssociateRouteTableRequest' _RouteTableId _SubnetId customize = (AssociateRouteTableRequest <<< customize) { "RouteTableId": _RouteTableId, "SubnetId": _SubnetId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of AssociateRouteTable.</p>
newtype AssociateRouteTableResult = AssociateRouteTableResult 
  { "AssociationId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAssociateRouteTableResult :: Newtype AssociateRouteTableResult _
derive instance repGenericAssociateRouteTableResult :: Generic AssociateRouteTableResult _
instance showAssociateRouteTableResult :: Show AssociateRouteTableResult where
  show = genericShow
instance decodeAssociateRouteTableResult :: Decode AssociateRouteTableResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateRouteTableResult :: Encode AssociateRouteTableResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateRouteTableResult from required parameters
newAssociateRouteTableResult :: AssociateRouteTableResult
newAssociateRouteTableResult  = AssociateRouteTableResult { "AssociationId": (NullOrUndefined Nothing) }

-- | Constructs AssociateRouteTableResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateRouteTableResult' :: ( { "AssociationId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AssociationId" :: NullOrUndefined.NullOrUndefined (String) } ) -> AssociateRouteTableResult
newAssociateRouteTableResult'  customize = (AssociateRouteTableResult <<< customize) { "AssociationId": (NullOrUndefined Nothing) }



newtype AssociateSubnetCidrBlockRequest = AssociateSubnetCidrBlockRequest 
  { "Ipv6CidrBlock" :: (String)
  , "SubnetId" :: (String)
  }
derive instance newtypeAssociateSubnetCidrBlockRequest :: Newtype AssociateSubnetCidrBlockRequest _
derive instance repGenericAssociateSubnetCidrBlockRequest :: Generic AssociateSubnetCidrBlockRequest _
instance showAssociateSubnetCidrBlockRequest :: Show AssociateSubnetCidrBlockRequest where
  show = genericShow
instance decodeAssociateSubnetCidrBlockRequest :: Decode AssociateSubnetCidrBlockRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateSubnetCidrBlockRequest :: Encode AssociateSubnetCidrBlockRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateSubnetCidrBlockRequest from required parameters
newAssociateSubnetCidrBlockRequest :: String -> String -> AssociateSubnetCidrBlockRequest
newAssociateSubnetCidrBlockRequest _Ipv6CidrBlock _SubnetId = AssociateSubnetCidrBlockRequest { "Ipv6CidrBlock": _Ipv6CidrBlock, "SubnetId": _SubnetId }

-- | Constructs AssociateSubnetCidrBlockRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateSubnetCidrBlockRequest' :: String -> String -> ( { "Ipv6CidrBlock" :: (String) , "SubnetId" :: (String) } -> {"Ipv6CidrBlock" :: (String) , "SubnetId" :: (String) } ) -> AssociateSubnetCidrBlockRequest
newAssociateSubnetCidrBlockRequest' _Ipv6CidrBlock _SubnetId customize = (AssociateSubnetCidrBlockRequest <<< customize) { "Ipv6CidrBlock": _Ipv6CidrBlock, "SubnetId": _SubnetId }



newtype AssociateSubnetCidrBlockResult = AssociateSubnetCidrBlockResult 
  { "Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (SubnetIpv6CidrBlockAssociation)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAssociateSubnetCidrBlockResult :: Newtype AssociateSubnetCidrBlockResult _
derive instance repGenericAssociateSubnetCidrBlockResult :: Generic AssociateSubnetCidrBlockResult _
instance showAssociateSubnetCidrBlockResult :: Show AssociateSubnetCidrBlockResult where
  show = genericShow
instance decodeAssociateSubnetCidrBlockResult :: Decode AssociateSubnetCidrBlockResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateSubnetCidrBlockResult :: Encode AssociateSubnetCidrBlockResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateSubnetCidrBlockResult from required parameters
newAssociateSubnetCidrBlockResult :: AssociateSubnetCidrBlockResult
newAssociateSubnetCidrBlockResult  = AssociateSubnetCidrBlockResult { "Ipv6CidrBlockAssociation": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }

-- | Constructs AssociateSubnetCidrBlockResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateSubnetCidrBlockResult' :: ( { "Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (SubnetIpv6CidrBlockAssociation) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (SubnetIpv6CidrBlockAssociation) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } ) -> AssociateSubnetCidrBlockResult
newAssociateSubnetCidrBlockResult'  customize = (AssociateSubnetCidrBlockResult <<< customize) { "Ipv6CidrBlockAssociation": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }



newtype AssociateVpcCidrBlockRequest = AssociateVpcCidrBlockRequest 
  { "AmazonProvidedIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcId" :: (String)
  }
derive instance newtypeAssociateVpcCidrBlockRequest :: Newtype AssociateVpcCidrBlockRequest _
derive instance repGenericAssociateVpcCidrBlockRequest :: Generic AssociateVpcCidrBlockRequest _
instance showAssociateVpcCidrBlockRequest :: Show AssociateVpcCidrBlockRequest where
  show = genericShow
instance decodeAssociateVpcCidrBlockRequest :: Decode AssociateVpcCidrBlockRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateVpcCidrBlockRequest :: Encode AssociateVpcCidrBlockRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateVpcCidrBlockRequest from required parameters
newAssociateVpcCidrBlockRequest :: String -> AssociateVpcCidrBlockRequest
newAssociateVpcCidrBlockRequest _VpcId = AssociateVpcCidrBlockRequest { "VpcId": _VpcId, "AmazonProvidedIpv6CidrBlock": (NullOrUndefined Nothing), "CidrBlock": (NullOrUndefined Nothing) }

-- | Constructs AssociateVpcCidrBlockRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateVpcCidrBlockRequest' :: String -> ( { "AmazonProvidedIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (Boolean) , "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: (String) } -> {"AmazonProvidedIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (Boolean) , "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: (String) } ) -> AssociateVpcCidrBlockRequest
newAssociateVpcCidrBlockRequest' _VpcId customize = (AssociateVpcCidrBlockRequest <<< customize) { "VpcId": _VpcId, "AmazonProvidedIpv6CidrBlock": (NullOrUndefined Nothing), "CidrBlock": (NullOrUndefined Nothing) }



newtype AssociateVpcCidrBlockResult = AssociateVpcCidrBlockResult 
  { "Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcIpv6CidrBlockAssociation)
  , "CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockAssociation)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAssociateVpcCidrBlockResult :: Newtype AssociateVpcCidrBlockResult _
derive instance repGenericAssociateVpcCidrBlockResult :: Generic AssociateVpcCidrBlockResult _
instance showAssociateVpcCidrBlockResult :: Show AssociateVpcCidrBlockResult where
  show = genericShow
instance decodeAssociateVpcCidrBlockResult :: Decode AssociateVpcCidrBlockResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociateVpcCidrBlockResult :: Encode AssociateVpcCidrBlockResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AssociateVpcCidrBlockResult from required parameters
newAssociateVpcCidrBlockResult :: AssociateVpcCidrBlockResult
newAssociateVpcCidrBlockResult  = AssociateVpcCidrBlockResult { "CidrBlockAssociation": (NullOrUndefined Nothing), "Ipv6CidrBlockAssociation": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs AssociateVpcCidrBlockResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAssociateVpcCidrBlockResult' :: ( { "Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcIpv6CidrBlockAssociation) , "CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockAssociation) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcIpv6CidrBlockAssociation) , "CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockAssociation) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> AssociateVpcCidrBlockResult
newAssociateVpcCidrBlockResult'  customize = (AssociateVpcCidrBlockResult <<< customize) { "CidrBlockAssociation": (NullOrUndefined Nothing), "Ipv6CidrBlockAssociation": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



newtype AssociationIdList = AssociationIdList (Array String)
derive instance newtypeAssociationIdList :: Newtype AssociationIdList _
derive instance repGenericAssociationIdList :: Generic AssociationIdList _
instance showAssociationIdList :: Show AssociationIdList where
  show = genericShow
instance decodeAssociationIdList :: Decode AssociationIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAssociationIdList :: Encode AssociationIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for AttachClassicLinkVpc.</p>
newtype AttachClassicLinkVpcRequest = AttachClassicLinkVpcRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Groups" :: (GroupIdStringList)
  , "InstanceId" :: (String)
  , "VpcId" :: (String)
  }
derive instance newtypeAttachClassicLinkVpcRequest :: Newtype AttachClassicLinkVpcRequest _
derive instance repGenericAttachClassicLinkVpcRequest :: Generic AttachClassicLinkVpcRequest _
instance showAttachClassicLinkVpcRequest :: Show AttachClassicLinkVpcRequest where
  show = genericShow
instance decodeAttachClassicLinkVpcRequest :: Decode AttachClassicLinkVpcRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttachClassicLinkVpcRequest :: Encode AttachClassicLinkVpcRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AttachClassicLinkVpcRequest from required parameters
newAttachClassicLinkVpcRequest :: GroupIdStringList -> String -> String -> AttachClassicLinkVpcRequest
newAttachClassicLinkVpcRequest _Groups _InstanceId _VpcId = AttachClassicLinkVpcRequest { "Groups": _Groups, "InstanceId": _InstanceId, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs AttachClassicLinkVpcRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAttachClassicLinkVpcRequest' :: GroupIdStringList -> String -> String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Groups" :: (GroupIdStringList) , "InstanceId" :: (String) , "VpcId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Groups" :: (GroupIdStringList) , "InstanceId" :: (String) , "VpcId" :: (String) } ) -> AttachClassicLinkVpcRequest
newAttachClassicLinkVpcRequest' _Groups _InstanceId _VpcId customize = (AttachClassicLinkVpcRequest <<< customize) { "Groups": _Groups, "InstanceId": _InstanceId, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of AttachClassicLinkVpc.</p>
newtype AttachClassicLinkVpcResult = AttachClassicLinkVpcResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeAttachClassicLinkVpcResult :: Newtype AttachClassicLinkVpcResult _
derive instance repGenericAttachClassicLinkVpcResult :: Generic AttachClassicLinkVpcResult _
instance showAttachClassicLinkVpcResult :: Show AttachClassicLinkVpcResult where
  show = genericShow
instance decodeAttachClassicLinkVpcResult :: Decode AttachClassicLinkVpcResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttachClassicLinkVpcResult :: Encode AttachClassicLinkVpcResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AttachClassicLinkVpcResult from required parameters
newAttachClassicLinkVpcResult :: AttachClassicLinkVpcResult
newAttachClassicLinkVpcResult  = AttachClassicLinkVpcResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs AttachClassicLinkVpcResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAttachClassicLinkVpcResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> AttachClassicLinkVpcResult
newAttachClassicLinkVpcResult'  customize = (AttachClassicLinkVpcResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AttachInternetGateway.</p>
newtype AttachInternetGatewayRequest = AttachInternetGatewayRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InternetGatewayId" :: (String)
  , "VpcId" :: (String)
  }
derive instance newtypeAttachInternetGatewayRequest :: Newtype AttachInternetGatewayRequest _
derive instance repGenericAttachInternetGatewayRequest :: Generic AttachInternetGatewayRequest _
instance showAttachInternetGatewayRequest :: Show AttachInternetGatewayRequest where
  show = genericShow
instance decodeAttachInternetGatewayRequest :: Decode AttachInternetGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttachInternetGatewayRequest :: Encode AttachInternetGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AttachInternetGatewayRequest from required parameters
newAttachInternetGatewayRequest :: String -> String -> AttachInternetGatewayRequest
newAttachInternetGatewayRequest _InternetGatewayId _VpcId = AttachInternetGatewayRequest { "InternetGatewayId": _InternetGatewayId, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs AttachInternetGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAttachInternetGatewayRequest' :: String -> String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InternetGatewayId" :: (String) , "VpcId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InternetGatewayId" :: (String) , "VpcId" :: (String) } ) -> AttachInternetGatewayRequest
newAttachInternetGatewayRequest' _InternetGatewayId _VpcId customize = (AttachInternetGatewayRequest <<< customize) { "InternetGatewayId": _InternetGatewayId, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AttachNetworkInterface.</p>
newtype AttachNetworkInterfaceRequest = AttachNetworkInterfaceRequest 
  { "DeviceIndex" :: (Int)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceId" :: (String)
  , "NetworkInterfaceId" :: (String)
  }
derive instance newtypeAttachNetworkInterfaceRequest :: Newtype AttachNetworkInterfaceRequest _
derive instance repGenericAttachNetworkInterfaceRequest :: Generic AttachNetworkInterfaceRequest _
instance showAttachNetworkInterfaceRequest :: Show AttachNetworkInterfaceRequest where
  show = genericShow
instance decodeAttachNetworkInterfaceRequest :: Decode AttachNetworkInterfaceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttachNetworkInterfaceRequest :: Encode AttachNetworkInterfaceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AttachNetworkInterfaceRequest from required parameters
newAttachNetworkInterfaceRequest :: Int -> String -> String -> AttachNetworkInterfaceRequest
newAttachNetworkInterfaceRequest _DeviceIndex _InstanceId _NetworkInterfaceId = AttachNetworkInterfaceRequest { "DeviceIndex": _DeviceIndex, "InstanceId": _InstanceId, "NetworkInterfaceId": _NetworkInterfaceId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs AttachNetworkInterfaceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAttachNetworkInterfaceRequest' :: Int -> String -> String -> ( { "DeviceIndex" :: (Int) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) , "NetworkInterfaceId" :: (String) } -> {"DeviceIndex" :: (Int) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) , "NetworkInterfaceId" :: (String) } ) -> AttachNetworkInterfaceRequest
newAttachNetworkInterfaceRequest' _DeviceIndex _InstanceId _NetworkInterfaceId customize = (AttachNetworkInterfaceRequest <<< customize) { "DeviceIndex": _DeviceIndex, "InstanceId": _InstanceId, "NetworkInterfaceId": _NetworkInterfaceId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of AttachNetworkInterface.</p>
newtype AttachNetworkInterfaceResult = AttachNetworkInterfaceResult 
  { "AttachmentId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAttachNetworkInterfaceResult :: Newtype AttachNetworkInterfaceResult _
derive instance repGenericAttachNetworkInterfaceResult :: Generic AttachNetworkInterfaceResult _
instance showAttachNetworkInterfaceResult :: Show AttachNetworkInterfaceResult where
  show = genericShow
instance decodeAttachNetworkInterfaceResult :: Decode AttachNetworkInterfaceResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttachNetworkInterfaceResult :: Encode AttachNetworkInterfaceResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AttachNetworkInterfaceResult from required parameters
newAttachNetworkInterfaceResult :: AttachNetworkInterfaceResult
newAttachNetworkInterfaceResult  = AttachNetworkInterfaceResult { "AttachmentId": (NullOrUndefined Nothing) }

-- | Constructs AttachNetworkInterfaceResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAttachNetworkInterfaceResult' :: ( { "AttachmentId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AttachmentId" :: NullOrUndefined.NullOrUndefined (String) } ) -> AttachNetworkInterfaceResult
newAttachNetworkInterfaceResult'  customize = (AttachNetworkInterfaceResult <<< customize) { "AttachmentId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AttachVolume.</p>
newtype AttachVolumeRequest = AttachVolumeRequest 
  { "Device" :: (String)
  , "InstanceId" :: (String)
  , "VolumeId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeAttachVolumeRequest :: Newtype AttachVolumeRequest _
derive instance repGenericAttachVolumeRequest :: Generic AttachVolumeRequest _
instance showAttachVolumeRequest :: Show AttachVolumeRequest where
  show = genericShow
instance decodeAttachVolumeRequest :: Decode AttachVolumeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttachVolumeRequest :: Encode AttachVolumeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AttachVolumeRequest from required parameters
newAttachVolumeRequest :: String -> String -> String -> AttachVolumeRequest
newAttachVolumeRequest _Device _InstanceId _VolumeId = AttachVolumeRequest { "Device": _Device, "InstanceId": _InstanceId, "VolumeId": _VolumeId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs AttachVolumeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAttachVolumeRequest' :: String -> String -> String -> ( { "Device" :: (String) , "InstanceId" :: (String) , "VolumeId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Device" :: (String) , "InstanceId" :: (String) , "VolumeId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> AttachVolumeRequest
newAttachVolumeRequest' _Device _InstanceId _VolumeId customize = (AttachVolumeRequest <<< customize) { "Device": _Device, "InstanceId": _InstanceId, "VolumeId": _VolumeId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AttachVpnGateway.</p>
newtype AttachVpnGatewayRequest = AttachVpnGatewayRequest 
  { "VpcId" :: (String)
  , "VpnGatewayId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeAttachVpnGatewayRequest :: Newtype AttachVpnGatewayRequest _
derive instance repGenericAttachVpnGatewayRequest :: Generic AttachVpnGatewayRequest _
instance showAttachVpnGatewayRequest :: Show AttachVpnGatewayRequest where
  show = genericShow
instance decodeAttachVpnGatewayRequest :: Decode AttachVpnGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttachVpnGatewayRequest :: Encode AttachVpnGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AttachVpnGatewayRequest from required parameters
newAttachVpnGatewayRequest :: String -> String -> AttachVpnGatewayRequest
newAttachVpnGatewayRequest _VpcId _VpnGatewayId = AttachVpnGatewayRequest { "VpcId": _VpcId, "VpnGatewayId": _VpnGatewayId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs AttachVpnGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAttachVpnGatewayRequest' :: String -> String -> ( { "VpcId" :: (String) , "VpnGatewayId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"VpcId" :: (String) , "VpnGatewayId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> AttachVpnGatewayRequest
newAttachVpnGatewayRequest' _VpcId _VpnGatewayId customize = (AttachVpnGatewayRequest <<< customize) { "VpcId": _VpcId, "VpnGatewayId": _VpnGatewayId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of AttachVpnGateway.</p>
newtype AttachVpnGatewayResult = AttachVpnGatewayResult 
  { "VpcAttachment" :: NullOrUndefined.NullOrUndefined (VpcAttachment)
  }
derive instance newtypeAttachVpnGatewayResult :: Newtype AttachVpnGatewayResult _
derive instance repGenericAttachVpnGatewayResult :: Generic AttachVpnGatewayResult _
instance showAttachVpnGatewayResult :: Show AttachVpnGatewayResult where
  show = genericShow
instance decodeAttachVpnGatewayResult :: Decode AttachVpnGatewayResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttachVpnGatewayResult :: Encode AttachVpnGatewayResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AttachVpnGatewayResult from required parameters
newAttachVpnGatewayResult :: AttachVpnGatewayResult
newAttachVpnGatewayResult  = AttachVpnGatewayResult { "VpcAttachment": (NullOrUndefined Nothing) }

-- | Constructs AttachVpnGatewayResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAttachVpnGatewayResult' :: ( { "VpcAttachment" :: NullOrUndefined.NullOrUndefined (VpcAttachment) } -> {"VpcAttachment" :: NullOrUndefined.NullOrUndefined (VpcAttachment) } ) -> AttachVpnGatewayResult
newAttachVpnGatewayResult'  customize = (AttachVpnGatewayResult <<< customize) { "VpcAttachment": (NullOrUndefined Nothing) }



newtype AttachmentStatus = AttachmentStatus String
derive instance newtypeAttachmentStatus :: Newtype AttachmentStatus _
derive instance repGenericAttachmentStatus :: Generic AttachmentStatus _
instance showAttachmentStatus :: Show AttachmentStatus where
  show = genericShow
instance decodeAttachmentStatus :: Decode AttachmentStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttachmentStatus :: Encode AttachmentStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a value for a resource attribute that is a Boolean value.</p>
newtype AttributeBooleanValue = AttributeBooleanValue 
  { "Value" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeAttributeBooleanValue :: Newtype AttributeBooleanValue _
derive instance repGenericAttributeBooleanValue :: Generic AttributeBooleanValue _
instance showAttributeBooleanValue :: Show AttributeBooleanValue where
  show = genericShow
instance decodeAttributeBooleanValue :: Decode AttributeBooleanValue where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttributeBooleanValue :: Encode AttributeBooleanValue where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AttributeBooleanValue from required parameters
newAttributeBooleanValue :: AttributeBooleanValue
newAttributeBooleanValue  = AttributeBooleanValue { "Value": (NullOrUndefined Nothing) }

-- | Constructs AttributeBooleanValue's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAttributeBooleanValue' :: ( { "Value" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Value" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> AttributeBooleanValue
newAttributeBooleanValue'  customize = (AttributeBooleanValue <<< customize) { "Value": (NullOrUndefined Nothing) }



-- | <p>Describes a value for a resource attribute that is a String.</p>
newtype AttributeValue = AttributeValue 
  { "Value" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAttributeValue :: Newtype AttributeValue _
derive instance repGenericAttributeValue :: Generic AttributeValue _
instance showAttributeValue :: Show AttributeValue where
  show = genericShow
instance decodeAttributeValue :: Decode AttributeValue where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAttributeValue :: Encode AttributeValue where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AttributeValue from required parameters
newAttributeValue :: AttributeValue
newAttributeValue  = AttributeValue { "Value": (NullOrUndefined Nothing) }

-- | Constructs AttributeValue's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAttributeValue' :: ( { "Value" :: NullOrUndefined.NullOrUndefined (String) } -> {"Value" :: NullOrUndefined.NullOrUndefined (String) } ) -> AttributeValue
newAttributeValue'  customize = (AttributeValue <<< customize) { "Value": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AuthorizeSecurityGroupEgress.</p>
newtype AuthorizeSecurityGroupEgressRequest = AuthorizeSecurityGroupEgressRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "GroupId" :: (String)
  , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList)
  , "CidrIp" :: NullOrUndefined.NullOrUndefined (String)
  , "FromPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String)
  , "ToPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAuthorizeSecurityGroupEgressRequest :: Newtype AuthorizeSecurityGroupEgressRequest _
derive instance repGenericAuthorizeSecurityGroupEgressRequest :: Generic AuthorizeSecurityGroupEgressRequest _
instance showAuthorizeSecurityGroupEgressRequest :: Show AuthorizeSecurityGroupEgressRequest where
  show = genericShow
instance decodeAuthorizeSecurityGroupEgressRequest :: Decode AuthorizeSecurityGroupEgressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAuthorizeSecurityGroupEgressRequest :: Encode AuthorizeSecurityGroupEgressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AuthorizeSecurityGroupEgressRequest from required parameters
newAuthorizeSecurityGroupEgressRequest :: String -> AuthorizeSecurityGroupEgressRequest
newAuthorizeSecurityGroupEgressRequest _GroupId = AuthorizeSecurityGroupEgressRequest { "GroupId": _GroupId, "CidrIp": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "FromPort": (NullOrUndefined Nothing), "IpPermissions": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "SourceSecurityGroupName": (NullOrUndefined Nothing), "SourceSecurityGroupOwnerId": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing) }

-- | Constructs AuthorizeSecurityGroupEgressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAuthorizeSecurityGroupEgressRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupId" :: (String) , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "CidrIp" :: NullOrUndefined.NullOrUndefined (String) , "FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupId" :: (String) , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "CidrIp" :: NullOrUndefined.NullOrUndefined (String) , "FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String) } ) -> AuthorizeSecurityGroupEgressRequest
newAuthorizeSecurityGroupEgressRequest' _GroupId customize = (AuthorizeSecurityGroupEgressRequest <<< customize) { "GroupId": _GroupId, "CidrIp": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "FromPort": (NullOrUndefined Nothing), "IpPermissions": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "SourceSecurityGroupName": (NullOrUndefined Nothing), "SourceSecurityGroupOwnerId": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for AuthorizeSecurityGroupIngress.</p>
newtype AuthorizeSecurityGroupIngressRequest = AuthorizeSecurityGroupIngressRequest 
  { "CidrIp" :: NullOrUndefined.NullOrUndefined (String)
  , "FromPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "GroupId" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList)
  , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String)
  , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "ToPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeAuthorizeSecurityGroupIngressRequest :: Newtype AuthorizeSecurityGroupIngressRequest _
derive instance repGenericAuthorizeSecurityGroupIngressRequest :: Generic AuthorizeSecurityGroupIngressRequest _
instance showAuthorizeSecurityGroupIngressRequest :: Show AuthorizeSecurityGroupIngressRequest where
  show = genericShow
instance decodeAuthorizeSecurityGroupIngressRequest :: Decode AuthorizeSecurityGroupIngressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAuthorizeSecurityGroupIngressRequest :: Encode AuthorizeSecurityGroupIngressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AuthorizeSecurityGroupIngressRequest from required parameters
newAuthorizeSecurityGroupIngressRequest :: AuthorizeSecurityGroupIngressRequest
newAuthorizeSecurityGroupIngressRequest  = AuthorizeSecurityGroupIngressRequest { "CidrIp": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "FromPort": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "IpPermissions": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "SourceSecurityGroupName": (NullOrUndefined Nothing), "SourceSecurityGroupOwnerId": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing) }

-- | Constructs AuthorizeSecurityGroupIngressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAuthorizeSecurityGroupIngressRequest' :: ( { "CidrIp" :: NullOrUndefined.NullOrUndefined (String) , "FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"CidrIp" :: NullOrUndefined.NullOrUndefined (String) , "FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> AuthorizeSecurityGroupIngressRequest
newAuthorizeSecurityGroupIngressRequest'  customize = (AuthorizeSecurityGroupIngressRequest <<< customize) { "CidrIp": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "FromPort": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "IpPermissions": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "SourceSecurityGroupName": (NullOrUndefined Nothing), "SourceSecurityGroupOwnerId": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing) }



newtype AutoPlacement = AutoPlacement String
derive instance newtypeAutoPlacement :: Newtype AutoPlacement _
derive instance repGenericAutoPlacement :: Generic AutoPlacement _
instance showAutoPlacement :: Show AutoPlacement where
  show = genericShow
instance decodeAutoPlacement :: Decode AutoPlacement where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAutoPlacement :: Encode AutoPlacement where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an Availability Zone.</p>
newtype AvailabilityZone = AvailabilityZone 
  { "State" :: NullOrUndefined.NullOrUndefined (AvailabilityZoneState)
  , "Messages" :: NullOrUndefined.NullOrUndefined (AvailabilityZoneMessageList)
  , "RegionName" :: NullOrUndefined.NullOrUndefined (String)
  , "ZoneName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAvailabilityZone :: Newtype AvailabilityZone _
derive instance repGenericAvailabilityZone :: Generic AvailabilityZone _
instance showAvailabilityZone :: Show AvailabilityZone where
  show = genericShow
instance decodeAvailabilityZone :: Decode AvailabilityZone where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAvailabilityZone :: Encode AvailabilityZone where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AvailabilityZone from required parameters
newAvailabilityZone :: AvailabilityZone
newAvailabilityZone  = AvailabilityZone { "Messages": (NullOrUndefined Nothing), "RegionName": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "ZoneName": (NullOrUndefined Nothing) }

-- | Constructs AvailabilityZone's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAvailabilityZone' :: ( { "State" :: NullOrUndefined.NullOrUndefined (AvailabilityZoneState) , "Messages" :: NullOrUndefined.NullOrUndefined (AvailabilityZoneMessageList) , "RegionName" :: NullOrUndefined.NullOrUndefined (String) , "ZoneName" :: NullOrUndefined.NullOrUndefined (String) } -> {"State" :: NullOrUndefined.NullOrUndefined (AvailabilityZoneState) , "Messages" :: NullOrUndefined.NullOrUndefined (AvailabilityZoneMessageList) , "RegionName" :: NullOrUndefined.NullOrUndefined (String) , "ZoneName" :: NullOrUndefined.NullOrUndefined (String) } ) -> AvailabilityZone
newAvailabilityZone'  customize = (AvailabilityZone <<< customize) { "Messages": (NullOrUndefined Nothing), "RegionName": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "ZoneName": (NullOrUndefined Nothing) }



newtype AvailabilityZoneList = AvailabilityZoneList (Array AvailabilityZone)
derive instance newtypeAvailabilityZoneList :: Newtype AvailabilityZoneList _
derive instance repGenericAvailabilityZoneList :: Generic AvailabilityZoneList _
instance showAvailabilityZoneList :: Show AvailabilityZoneList where
  show = genericShow
instance decodeAvailabilityZoneList :: Decode AvailabilityZoneList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAvailabilityZoneList :: Encode AvailabilityZoneList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a message about an Availability Zone.</p>
newtype AvailabilityZoneMessage = AvailabilityZoneMessage 
  { "Message" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeAvailabilityZoneMessage :: Newtype AvailabilityZoneMessage _
derive instance repGenericAvailabilityZoneMessage :: Generic AvailabilityZoneMessage _
instance showAvailabilityZoneMessage :: Show AvailabilityZoneMessage where
  show = genericShow
instance decodeAvailabilityZoneMessage :: Decode AvailabilityZoneMessage where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAvailabilityZoneMessage :: Encode AvailabilityZoneMessage where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AvailabilityZoneMessage from required parameters
newAvailabilityZoneMessage :: AvailabilityZoneMessage
newAvailabilityZoneMessage  = AvailabilityZoneMessage { "Message": (NullOrUndefined Nothing) }

-- | Constructs AvailabilityZoneMessage's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAvailabilityZoneMessage' :: ( { "Message" :: NullOrUndefined.NullOrUndefined (String) } -> {"Message" :: NullOrUndefined.NullOrUndefined (String) } ) -> AvailabilityZoneMessage
newAvailabilityZoneMessage'  customize = (AvailabilityZoneMessage <<< customize) { "Message": (NullOrUndefined Nothing) }



newtype AvailabilityZoneMessageList = AvailabilityZoneMessageList (Array AvailabilityZoneMessage)
derive instance newtypeAvailabilityZoneMessageList :: Newtype AvailabilityZoneMessageList _
derive instance repGenericAvailabilityZoneMessageList :: Generic AvailabilityZoneMessageList _
instance showAvailabilityZoneMessageList :: Show AvailabilityZoneMessageList where
  show = genericShow
instance decodeAvailabilityZoneMessageList :: Decode AvailabilityZoneMessageList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAvailabilityZoneMessageList :: Encode AvailabilityZoneMessageList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype AvailabilityZoneState = AvailabilityZoneState String
derive instance newtypeAvailabilityZoneState :: Newtype AvailabilityZoneState _
derive instance repGenericAvailabilityZoneState :: Generic AvailabilityZoneState _
instance showAvailabilityZoneState :: Show AvailabilityZoneState where
  show = genericShow
instance decodeAvailabilityZoneState :: Decode AvailabilityZoneState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAvailabilityZoneState :: Encode AvailabilityZoneState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The capacity information for instances launched onto the Dedicated Host.</p>
newtype AvailableCapacity = AvailableCapacity 
  { "AvailableInstanceCapacity" :: NullOrUndefined.NullOrUndefined (AvailableInstanceCapacityList)
  , "AvailableVCpus" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeAvailableCapacity :: Newtype AvailableCapacity _
derive instance repGenericAvailableCapacity :: Generic AvailableCapacity _
instance showAvailableCapacity :: Show AvailableCapacity where
  show = genericShow
instance decodeAvailableCapacity :: Decode AvailableCapacity where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAvailableCapacity :: Encode AvailableCapacity where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs AvailableCapacity from required parameters
newAvailableCapacity :: AvailableCapacity
newAvailableCapacity  = AvailableCapacity { "AvailableInstanceCapacity": (NullOrUndefined Nothing), "AvailableVCpus": (NullOrUndefined Nothing) }

-- | Constructs AvailableCapacity's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newAvailableCapacity' :: ( { "AvailableInstanceCapacity" :: NullOrUndefined.NullOrUndefined (AvailableInstanceCapacityList) , "AvailableVCpus" :: NullOrUndefined.NullOrUndefined (Int) } -> {"AvailableInstanceCapacity" :: NullOrUndefined.NullOrUndefined (AvailableInstanceCapacityList) , "AvailableVCpus" :: NullOrUndefined.NullOrUndefined (Int) } ) -> AvailableCapacity
newAvailableCapacity'  customize = (AvailableCapacity <<< customize) { "AvailableInstanceCapacity": (NullOrUndefined Nothing), "AvailableVCpus": (NullOrUndefined Nothing) }



newtype AvailableInstanceCapacityList = AvailableInstanceCapacityList (Array InstanceCapacity)
derive instance newtypeAvailableInstanceCapacityList :: Newtype AvailableInstanceCapacityList _
derive instance repGenericAvailableInstanceCapacityList :: Generic AvailableInstanceCapacityList _
instance showAvailableInstanceCapacityList :: Show AvailableInstanceCapacityList where
  show = genericShow
instance decodeAvailableInstanceCapacityList :: Decode AvailableInstanceCapacityList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeAvailableInstanceCapacityList :: Encode AvailableInstanceCapacityList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype BatchState = BatchState String
derive instance newtypeBatchState :: Newtype BatchState _
derive instance repGenericBatchState :: Generic BatchState _
instance showBatchState :: Show BatchState where
  show = genericShow
instance decodeBatchState :: Decode BatchState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBatchState :: Encode BatchState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype BillingProductList = BillingProductList (Array String)
derive instance newtypeBillingProductList :: Newtype BillingProductList _
derive instance repGenericBillingProductList :: Generic BillingProductList _
instance showBillingProductList :: Show BillingProductList where
  show = genericShow
instance decodeBillingProductList :: Decode BillingProductList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBillingProductList :: Encode BillingProductList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype BlobAttributeValue = BlobAttributeValue 
  { "Value" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeBlobAttributeValue :: Newtype BlobAttributeValue _
derive instance repGenericBlobAttributeValue :: Generic BlobAttributeValue _
instance showBlobAttributeValue :: Show BlobAttributeValue where
  show = genericShow
instance decodeBlobAttributeValue :: Decode BlobAttributeValue where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBlobAttributeValue :: Encode BlobAttributeValue where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs BlobAttributeValue from required parameters
newBlobAttributeValue :: BlobAttributeValue
newBlobAttributeValue  = BlobAttributeValue { "Value": (NullOrUndefined Nothing) }

-- | Constructs BlobAttributeValue's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newBlobAttributeValue' :: ( { "Value" :: NullOrUndefined.NullOrUndefined (String) } -> {"Value" :: NullOrUndefined.NullOrUndefined (String) } ) -> BlobAttributeValue
newBlobAttributeValue'  customize = (BlobAttributeValue <<< customize) { "Value": (NullOrUndefined Nothing) }



-- | <p>Describes a block device mapping.</p>
newtype BlockDeviceMapping = BlockDeviceMapping 
  { "DeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "VirtualName" :: NullOrUndefined.NullOrUndefined (String)
  , "Ebs" :: NullOrUndefined.NullOrUndefined (EbsBlockDevice)
  , "NoDevice" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeBlockDeviceMapping :: Newtype BlockDeviceMapping _
derive instance repGenericBlockDeviceMapping :: Generic BlockDeviceMapping _
instance showBlockDeviceMapping :: Show BlockDeviceMapping where
  show = genericShow
instance decodeBlockDeviceMapping :: Decode BlockDeviceMapping where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBlockDeviceMapping :: Encode BlockDeviceMapping where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs BlockDeviceMapping from required parameters
newBlockDeviceMapping :: BlockDeviceMapping
newBlockDeviceMapping  = BlockDeviceMapping { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing), "NoDevice": (NullOrUndefined Nothing), "VirtualName": (NullOrUndefined Nothing) }

-- | Constructs BlockDeviceMapping's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newBlockDeviceMapping' :: ( { "DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "VirtualName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (EbsBlockDevice) , "NoDevice" :: NullOrUndefined.NullOrUndefined (String) } -> {"DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "VirtualName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (EbsBlockDevice) , "NoDevice" :: NullOrUndefined.NullOrUndefined (String) } ) -> BlockDeviceMapping
newBlockDeviceMapping'  customize = (BlockDeviceMapping <<< customize) { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing), "NoDevice": (NullOrUndefined Nothing), "VirtualName": (NullOrUndefined Nothing) }



newtype BlockDeviceMappingList = BlockDeviceMappingList (Array BlockDeviceMapping)
derive instance newtypeBlockDeviceMappingList :: Newtype BlockDeviceMappingList _
derive instance repGenericBlockDeviceMappingList :: Generic BlockDeviceMappingList _
instance showBlockDeviceMappingList :: Show BlockDeviceMappingList where
  show = genericShow
instance decodeBlockDeviceMappingList :: Decode BlockDeviceMappingList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBlockDeviceMappingList :: Encode BlockDeviceMappingList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype BlockDeviceMappingRequestList = BlockDeviceMappingRequestList (Array BlockDeviceMapping)
derive instance newtypeBlockDeviceMappingRequestList :: Newtype BlockDeviceMappingRequestList _
derive instance repGenericBlockDeviceMappingRequestList :: Generic BlockDeviceMappingRequestList _
instance showBlockDeviceMappingRequestList :: Show BlockDeviceMappingRequestList where
  show = genericShow
instance decodeBlockDeviceMappingRequestList :: Decode BlockDeviceMappingRequestList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBlockDeviceMappingRequestList :: Encode BlockDeviceMappingRequestList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype BundleIdStringList = BundleIdStringList (Array String)
derive instance newtypeBundleIdStringList :: Newtype BundleIdStringList _
derive instance repGenericBundleIdStringList :: Generic BundleIdStringList _
instance showBundleIdStringList :: Show BundleIdStringList where
  show = genericShow
instance decodeBundleIdStringList :: Decode BundleIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBundleIdStringList :: Encode BundleIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for BundleInstance.</p>
newtype BundleInstanceRequest = BundleInstanceRequest 
  { "InstanceId" :: (String)
  , "Storage" :: (Storage)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeBundleInstanceRequest :: Newtype BundleInstanceRequest _
derive instance repGenericBundleInstanceRequest :: Generic BundleInstanceRequest _
instance showBundleInstanceRequest :: Show BundleInstanceRequest where
  show = genericShow
instance decodeBundleInstanceRequest :: Decode BundleInstanceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBundleInstanceRequest :: Encode BundleInstanceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs BundleInstanceRequest from required parameters
newBundleInstanceRequest :: String -> Storage -> BundleInstanceRequest
newBundleInstanceRequest _InstanceId _Storage = BundleInstanceRequest { "InstanceId": _InstanceId, "Storage": _Storage, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs BundleInstanceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newBundleInstanceRequest' :: String -> Storage -> ( { "InstanceId" :: (String) , "Storage" :: (Storage) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"InstanceId" :: (String) , "Storage" :: (Storage) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> BundleInstanceRequest
newBundleInstanceRequest' _InstanceId _Storage customize = (BundleInstanceRequest <<< customize) { "InstanceId": _InstanceId, "Storage": _Storage, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of BundleInstance.</p>
newtype BundleInstanceResult = BundleInstanceResult 
  { "BundleTask" :: NullOrUndefined.NullOrUndefined (BundleTask)
  }
derive instance newtypeBundleInstanceResult :: Newtype BundleInstanceResult _
derive instance repGenericBundleInstanceResult :: Generic BundleInstanceResult _
instance showBundleInstanceResult :: Show BundleInstanceResult where
  show = genericShow
instance decodeBundleInstanceResult :: Decode BundleInstanceResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBundleInstanceResult :: Encode BundleInstanceResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs BundleInstanceResult from required parameters
newBundleInstanceResult :: BundleInstanceResult
newBundleInstanceResult  = BundleInstanceResult { "BundleTask": (NullOrUndefined Nothing) }

-- | Constructs BundleInstanceResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newBundleInstanceResult' :: ( { "BundleTask" :: NullOrUndefined.NullOrUndefined (BundleTask) } -> {"BundleTask" :: NullOrUndefined.NullOrUndefined (BundleTask) } ) -> BundleInstanceResult
newBundleInstanceResult'  customize = (BundleInstanceResult <<< customize) { "BundleTask": (NullOrUndefined Nothing) }



-- | <p>Describes a bundle task.</p>
newtype BundleTask = BundleTask 
  { "BundleId" :: NullOrUndefined.NullOrUndefined (String)
  , "BundleTaskError" :: NullOrUndefined.NullOrUndefined (BundleTaskError)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "Progress" :: NullOrUndefined.NullOrUndefined (String)
  , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "State" :: NullOrUndefined.NullOrUndefined (BundleTaskState)
  , "Storage" :: NullOrUndefined.NullOrUndefined (Storage)
  , "UpdateTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeBundleTask :: Newtype BundleTask _
derive instance repGenericBundleTask :: Generic BundleTask _
instance showBundleTask :: Show BundleTask where
  show = genericShow
instance decodeBundleTask :: Decode BundleTask where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBundleTask :: Encode BundleTask where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs BundleTask from required parameters
newBundleTask :: BundleTask
newBundleTask  = BundleTask { "BundleId": (NullOrUndefined Nothing), "BundleTaskError": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "StartTime": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Storage": (NullOrUndefined Nothing), "UpdateTime": (NullOrUndefined Nothing) }

-- | Constructs BundleTask's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newBundleTask' :: ( { "BundleId" :: NullOrUndefined.NullOrUndefined (String) , "BundleTaskError" :: NullOrUndefined.NullOrUndefined (BundleTaskError) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "State" :: NullOrUndefined.NullOrUndefined (BundleTaskState) , "Storage" :: NullOrUndefined.NullOrUndefined (Storage) , "UpdateTime" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"BundleId" :: NullOrUndefined.NullOrUndefined (String) , "BundleTaskError" :: NullOrUndefined.NullOrUndefined (BundleTaskError) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "State" :: NullOrUndefined.NullOrUndefined (BundleTaskState) , "Storage" :: NullOrUndefined.NullOrUndefined (Storage) , "UpdateTime" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> BundleTask
newBundleTask'  customize = (BundleTask <<< customize) { "BundleId": (NullOrUndefined Nothing), "BundleTaskError": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "StartTime": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Storage": (NullOrUndefined Nothing), "UpdateTime": (NullOrUndefined Nothing) }



-- | <p>Describes an error for <a>BundleInstance</a>.</p>
newtype BundleTaskError = BundleTaskError 
  { "Code" :: NullOrUndefined.NullOrUndefined (String)
  , "Message" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeBundleTaskError :: Newtype BundleTaskError _
derive instance repGenericBundleTaskError :: Generic BundleTaskError _
instance showBundleTaskError :: Show BundleTaskError where
  show = genericShow
instance decodeBundleTaskError :: Decode BundleTaskError where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBundleTaskError :: Encode BundleTaskError where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs BundleTaskError from required parameters
newBundleTaskError :: BundleTaskError
newBundleTaskError  = BundleTaskError { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }

-- | Constructs BundleTaskError's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newBundleTaskError' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (String) , "Message" :: NullOrUndefined.NullOrUndefined (String) } -> {"Code" :: NullOrUndefined.NullOrUndefined (String) , "Message" :: NullOrUndefined.NullOrUndefined (String) } ) -> BundleTaskError
newBundleTaskError'  customize = (BundleTaskError <<< customize) { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }



newtype BundleTaskList = BundleTaskList (Array BundleTask)
derive instance newtypeBundleTaskList :: Newtype BundleTaskList _
derive instance repGenericBundleTaskList :: Generic BundleTaskList _
instance showBundleTaskList :: Show BundleTaskList where
  show = genericShow
instance decodeBundleTaskList :: Decode BundleTaskList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBundleTaskList :: Encode BundleTaskList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype BundleTaskState = BundleTaskState String
derive instance newtypeBundleTaskState :: Newtype BundleTaskState _
derive instance repGenericBundleTaskState :: Generic BundleTaskState _
instance showBundleTaskState :: Show BundleTaskState where
  show = genericShow
instance decodeBundleTaskState :: Decode BundleTaskState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeBundleTaskState :: Encode BundleTaskState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype CancelBatchErrorCode = CancelBatchErrorCode String
derive instance newtypeCancelBatchErrorCode :: Newtype CancelBatchErrorCode _
derive instance repGenericCancelBatchErrorCode :: Generic CancelBatchErrorCode _
instance showCancelBatchErrorCode :: Show CancelBatchErrorCode where
  show = genericShow
instance decodeCancelBatchErrorCode :: Decode CancelBatchErrorCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelBatchErrorCode :: Encode CancelBatchErrorCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for CancelBundleTask.</p>
newtype CancelBundleTaskRequest = CancelBundleTaskRequest 
  { "BundleId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCancelBundleTaskRequest :: Newtype CancelBundleTaskRequest _
derive instance repGenericCancelBundleTaskRequest :: Generic CancelBundleTaskRequest _
instance showCancelBundleTaskRequest :: Show CancelBundleTaskRequest where
  show = genericShow
instance decodeCancelBundleTaskRequest :: Decode CancelBundleTaskRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelBundleTaskRequest :: Encode CancelBundleTaskRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelBundleTaskRequest from required parameters
newCancelBundleTaskRequest :: String -> CancelBundleTaskRequest
newCancelBundleTaskRequest _BundleId = CancelBundleTaskRequest { "BundleId": _BundleId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CancelBundleTaskRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelBundleTaskRequest' :: String -> ( { "BundleId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"BundleId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CancelBundleTaskRequest
newCancelBundleTaskRequest' _BundleId customize = (CancelBundleTaskRequest <<< customize) { "BundleId": _BundleId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CancelBundleTask.</p>
newtype CancelBundleTaskResult = CancelBundleTaskResult 
  { "BundleTask" :: NullOrUndefined.NullOrUndefined (BundleTask)
  }
derive instance newtypeCancelBundleTaskResult :: Newtype CancelBundleTaskResult _
derive instance repGenericCancelBundleTaskResult :: Generic CancelBundleTaskResult _
instance showCancelBundleTaskResult :: Show CancelBundleTaskResult where
  show = genericShow
instance decodeCancelBundleTaskResult :: Decode CancelBundleTaskResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelBundleTaskResult :: Encode CancelBundleTaskResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelBundleTaskResult from required parameters
newCancelBundleTaskResult :: CancelBundleTaskResult
newCancelBundleTaskResult  = CancelBundleTaskResult { "BundleTask": (NullOrUndefined Nothing) }

-- | Constructs CancelBundleTaskResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelBundleTaskResult' :: ( { "BundleTask" :: NullOrUndefined.NullOrUndefined (BundleTask) } -> {"BundleTask" :: NullOrUndefined.NullOrUndefined (BundleTask) } ) -> CancelBundleTaskResult
newCancelBundleTaskResult'  customize = (CancelBundleTaskResult <<< customize) { "BundleTask": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CancelConversionTask.</p>
newtype CancelConversionRequest = CancelConversionRequest 
  { "ConversionTaskId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ReasonMessage" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCancelConversionRequest :: Newtype CancelConversionRequest _
derive instance repGenericCancelConversionRequest :: Generic CancelConversionRequest _
instance showCancelConversionRequest :: Show CancelConversionRequest where
  show = genericShow
instance decodeCancelConversionRequest :: Decode CancelConversionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelConversionRequest :: Encode CancelConversionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelConversionRequest from required parameters
newCancelConversionRequest :: String -> CancelConversionRequest
newCancelConversionRequest _ConversionTaskId = CancelConversionRequest { "ConversionTaskId": _ConversionTaskId, "DryRun": (NullOrUndefined Nothing), "ReasonMessage": (NullOrUndefined Nothing) }

-- | Constructs CancelConversionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelConversionRequest' :: String -> ( { "ConversionTaskId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ReasonMessage" :: NullOrUndefined.NullOrUndefined (String) } -> {"ConversionTaskId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ReasonMessage" :: NullOrUndefined.NullOrUndefined (String) } ) -> CancelConversionRequest
newCancelConversionRequest' _ConversionTaskId customize = (CancelConversionRequest <<< customize) { "ConversionTaskId": _ConversionTaskId, "DryRun": (NullOrUndefined Nothing), "ReasonMessage": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CancelExportTask.</p>
newtype CancelExportTaskRequest = CancelExportTaskRequest 
  { "ExportTaskId" :: (String)
  }
derive instance newtypeCancelExportTaskRequest :: Newtype CancelExportTaskRequest _
derive instance repGenericCancelExportTaskRequest :: Generic CancelExportTaskRequest _
instance showCancelExportTaskRequest :: Show CancelExportTaskRequest where
  show = genericShow
instance decodeCancelExportTaskRequest :: Decode CancelExportTaskRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelExportTaskRequest :: Encode CancelExportTaskRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelExportTaskRequest from required parameters
newCancelExportTaskRequest :: String -> CancelExportTaskRequest
newCancelExportTaskRequest _ExportTaskId = CancelExportTaskRequest { "ExportTaskId": _ExportTaskId }

-- | Constructs CancelExportTaskRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelExportTaskRequest' :: String -> ( { "ExportTaskId" :: (String) } -> {"ExportTaskId" :: (String) } ) -> CancelExportTaskRequest
newCancelExportTaskRequest' _ExportTaskId customize = (CancelExportTaskRequest <<< customize) { "ExportTaskId": _ExportTaskId }



-- | <p>Contains the parameters for CancelImportTask.</p>
newtype CancelImportTaskRequest = CancelImportTaskRequest 
  { "CancelReason" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCancelImportTaskRequest :: Newtype CancelImportTaskRequest _
derive instance repGenericCancelImportTaskRequest :: Generic CancelImportTaskRequest _
instance showCancelImportTaskRequest :: Show CancelImportTaskRequest where
  show = genericShow
instance decodeCancelImportTaskRequest :: Decode CancelImportTaskRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelImportTaskRequest :: Encode CancelImportTaskRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelImportTaskRequest from required parameters
newCancelImportTaskRequest :: CancelImportTaskRequest
newCancelImportTaskRequest  = CancelImportTaskRequest { "CancelReason": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "ImportTaskId": (NullOrUndefined Nothing) }

-- | Constructs CancelImportTaskRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelImportTaskRequest' :: ( { "CancelReason" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) } -> {"CancelReason" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) } ) -> CancelImportTaskRequest
newCancelImportTaskRequest'  customize = (CancelImportTaskRequest <<< customize) { "CancelReason": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "ImportTaskId": (NullOrUndefined Nothing) }



-- | <p>Contains the output for CancelImportTask.</p>
newtype CancelImportTaskResult = CancelImportTaskResult 
  { "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String)
  , "PreviousState" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCancelImportTaskResult :: Newtype CancelImportTaskResult _
derive instance repGenericCancelImportTaskResult :: Generic CancelImportTaskResult _
instance showCancelImportTaskResult :: Show CancelImportTaskResult where
  show = genericShow
instance decodeCancelImportTaskResult :: Decode CancelImportTaskResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelImportTaskResult :: Encode CancelImportTaskResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelImportTaskResult from required parameters
newCancelImportTaskResult :: CancelImportTaskResult
newCancelImportTaskResult  = CancelImportTaskResult { "ImportTaskId": (NullOrUndefined Nothing), "PreviousState": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }

-- | Constructs CancelImportTaskResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelImportTaskResult' :: ( { "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "PreviousState" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (String) } -> {"ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "PreviousState" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (String) } ) -> CancelImportTaskResult
newCancelImportTaskResult'  customize = (CancelImportTaskResult <<< customize) { "ImportTaskId": (NullOrUndefined Nothing), "PreviousState": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CancelReservedInstancesListing.</p>
newtype CancelReservedInstancesListingRequest = CancelReservedInstancesListingRequest 
  { "ReservedInstancesListingId" :: (String)
  }
derive instance newtypeCancelReservedInstancesListingRequest :: Newtype CancelReservedInstancesListingRequest _
derive instance repGenericCancelReservedInstancesListingRequest :: Generic CancelReservedInstancesListingRequest _
instance showCancelReservedInstancesListingRequest :: Show CancelReservedInstancesListingRequest where
  show = genericShow
instance decodeCancelReservedInstancesListingRequest :: Decode CancelReservedInstancesListingRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelReservedInstancesListingRequest :: Encode CancelReservedInstancesListingRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelReservedInstancesListingRequest from required parameters
newCancelReservedInstancesListingRequest :: String -> CancelReservedInstancesListingRequest
newCancelReservedInstancesListingRequest _ReservedInstancesListingId = CancelReservedInstancesListingRequest { "ReservedInstancesListingId": _ReservedInstancesListingId }

-- | Constructs CancelReservedInstancesListingRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelReservedInstancesListingRequest' :: String -> ( { "ReservedInstancesListingId" :: (String) } -> {"ReservedInstancesListingId" :: (String) } ) -> CancelReservedInstancesListingRequest
newCancelReservedInstancesListingRequest' _ReservedInstancesListingId customize = (CancelReservedInstancesListingRequest <<< customize) { "ReservedInstancesListingId": _ReservedInstancesListingId }



-- | <p>Contains the output of CancelReservedInstancesListing.</p>
newtype CancelReservedInstancesListingResult = CancelReservedInstancesListingResult 
  { "ReservedInstancesListings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesListingList)
  }
derive instance newtypeCancelReservedInstancesListingResult :: Newtype CancelReservedInstancesListingResult _
derive instance repGenericCancelReservedInstancesListingResult :: Generic CancelReservedInstancesListingResult _
instance showCancelReservedInstancesListingResult :: Show CancelReservedInstancesListingResult where
  show = genericShow
instance decodeCancelReservedInstancesListingResult :: Decode CancelReservedInstancesListingResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelReservedInstancesListingResult :: Encode CancelReservedInstancesListingResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelReservedInstancesListingResult from required parameters
newCancelReservedInstancesListingResult :: CancelReservedInstancesListingResult
newCancelReservedInstancesListingResult  = CancelReservedInstancesListingResult { "ReservedInstancesListings": (NullOrUndefined Nothing) }

-- | Constructs CancelReservedInstancesListingResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelReservedInstancesListingResult' :: ( { "ReservedInstancesListings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesListingList) } -> {"ReservedInstancesListings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesListingList) } ) -> CancelReservedInstancesListingResult
newCancelReservedInstancesListingResult'  customize = (CancelReservedInstancesListingResult <<< customize) { "ReservedInstancesListings": (NullOrUndefined Nothing) }



-- | <p>Describes a Spot Fleet error.</p>
newtype CancelSpotFleetRequestsError = CancelSpotFleetRequestsError 
  { "Code" :: (CancelBatchErrorCode)
  , "Message" :: (String)
  }
derive instance newtypeCancelSpotFleetRequestsError :: Newtype CancelSpotFleetRequestsError _
derive instance repGenericCancelSpotFleetRequestsError :: Generic CancelSpotFleetRequestsError _
instance showCancelSpotFleetRequestsError :: Show CancelSpotFleetRequestsError where
  show = genericShow
instance decodeCancelSpotFleetRequestsError :: Decode CancelSpotFleetRequestsError where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelSpotFleetRequestsError :: Encode CancelSpotFleetRequestsError where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelSpotFleetRequestsError from required parameters
newCancelSpotFleetRequestsError :: CancelBatchErrorCode -> String -> CancelSpotFleetRequestsError
newCancelSpotFleetRequestsError _Code _Message = CancelSpotFleetRequestsError { "Code": _Code, "Message": _Message }

-- | Constructs CancelSpotFleetRequestsError's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelSpotFleetRequestsError' :: CancelBatchErrorCode -> String -> ( { "Code" :: (CancelBatchErrorCode) , "Message" :: (String) } -> {"Code" :: (CancelBatchErrorCode) , "Message" :: (String) } ) -> CancelSpotFleetRequestsError
newCancelSpotFleetRequestsError' _Code _Message customize = (CancelSpotFleetRequestsError <<< customize) { "Code": _Code, "Message": _Message }



-- | <p>Describes a Spot Fleet request that was not successfully canceled.</p>
newtype CancelSpotFleetRequestsErrorItem = CancelSpotFleetRequestsErrorItem 
  { "Error" :: (CancelSpotFleetRequestsError)
  , "SpotFleetRequestId" :: (String)
  }
derive instance newtypeCancelSpotFleetRequestsErrorItem :: Newtype CancelSpotFleetRequestsErrorItem _
derive instance repGenericCancelSpotFleetRequestsErrorItem :: Generic CancelSpotFleetRequestsErrorItem _
instance showCancelSpotFleetRequestsErrorItem :: Show CancelSpotFleetRequestsErrorItem where
  show = genericShow
instance decodeCancelSpotFleetRequestsErrorItem :: Decode CancelSpotFleetRequestsErrorItem where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelSpotFleetRequestsErrorItem :: Encode CancelSpotFleetRequestsErrorItem where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelSpotFleetRequestsErrorItem from required parameters
newCancelSpotFleetRequestsErrorItem :: CancelSpotFleetRequestsError -> String -> CancelSpotFleetRequestsErrorItem
newCancelSpotFleetRequestsErrorItem _Error _SpotFleetRequestId = CancelSpotFleetRequestsErrorItem { "Error": _Error, "SpotFleetRequestId": _SpotFleetRequestId }

-- | Constructs CancelSpotFleetRequestsErrorItem's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelSpotFleetRequestsErrorItem' :: CancelSpotFleetRequestsError -> String -> ( { "Error" :: (CancelSpotFleetRequestsError) , "SpotFleetRequestId" :: (String) } -> {"Error" :: (CancelSpotFleetRequestsError) , "SpotFleetRequestId" :: (String) } ) -> CancelSpotFleetRequestsErrorItem
newCancelSpotFleetRequestsErrorItem' _Error _SpotFleetRequestId customize = (CancelSpotFleetRequestsErrorItem <<< customize) { "Error": _Error, "SpotFleetRequestId": _SpotFleetRequestId }



newtype CancelSpotFleetRequestsErrorSet = CancelSpotFleetRequestsErrorSet (Array CancelSpotFleetRequestsErrorItem)
derive instance newtypeCancelSpotFleetRequestsErrorSet :: Newtype CancelSpotFleetRequestsErrorSet _
derive instance repGenericCancelSpotFleetRequestsErrorSet :: Generic CancelSpotFleetRequestsErrorSet _
instance showCancelSpotFleetRequestsErrorSet :: Show CancelSpotFleetRequestsErrorSet where
  show = genericShow
instance decodeCancelSpotFleetRequestsErrorSet :: Decode CancelSpotFleetRequestsErrorSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelSpotFleetRequestsErrorSet :: Encode CancelSpotFleetRequestsErrorSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for CancelSpotFleetRequests.</p>
newtype CancelSpotFleetRequestsRequest = CancelSpotFleetRequestsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "SpotFleetRequestIds" :: (ValueStringList)
  , "TerminateInstances" :: (Boolean)
  }
derive instance newtypeCancelSpotFleetRequestsRequest :: Newtype CancelSpotFleetRequestsRequest _
derive instance repGenericCancelSpotFleetRequestsRequest :: Generic CancelSpotFleetRequestsRequest _
instance showCancelSpotFleetRequestsRequest :: Show CancelSpotFleetRequestsRequest where
  show = genericShow
instance decodeCancelSpotFleetRequestsRequest :: Decode CancelSpotFleetRequestsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelSpotFleetRequestsRequest :: Encode CancelSpotFleetRequestsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelSpotFleetRequestsRequest from required parameters
newCancelSpotFleetRequestsRequest :: ValueStringList -> Boolean -> CancelSpotFleetRequestsRequest
newCancelSpotFleetRequestsRequest _SpotFleetRequestIds _TerminateInstances = CancelSpotFleetRequestsRequest { "SpotFleetRequestIds": _SpotFleetRequestIds, "TerminateInstances": _TerminateInstances, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CancelSpotFleetRequestsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelSpotFleetRequestsRequest' :: ValueStringList -> Boolean -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "SpotFleetRequestIds" :: (ValueStringList) , "TerminateInstances" :: (Boolean) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "SpotFleetRequestIds" :: (ValueStringList) , "TerminateInstances" :: (Boolean) } ) -> CancelSpotFleetRequestsRequest
newCancelSpotFleetRequestsRequest' _SpotFleetRequestIds _TerminateInstances customize = (CancelSpotFleetRequestsRequest <<< customize) { "SpotFleetRequestIds": _SpotFleetRequestIds, "TerminateInstances": _TerminateInstances, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CancelSpotFleetRequests.</p>
newtype CancelSpotFleetRequestsResponse = CancelSpotFleetRequestsResponse 
  { "SuccessfulFleetRequests" :: NullOrUndefined.NullOrUndefined (CancelSpotFleetRequestsSuccessSet)
  , "UnsuccessfulFleetRequests" :: NullOrUndefined.NullOrUndefined (CancelSpotFleetRequestsErrorSet)
  }
derive instance newtypeCancelSpotFleetRequestsResponse :: Newtype CancelSpotFleetRequestsResponse _
derive instance repGenericCancelSpotFleetRequestsResponse :: Generic CancelSpotFleetRequestsResponse _
instance showCancelSpotFleetRequestsResponse :: Show CancelSpotFleetRequestsResponse where
  show = genericShow
instance decodeCancelSpotFleetRequestsResponse :: Decode CancelSpotFleetRequestsResponse where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelSpotFleetRequestsResponse :: Encode CancelSpotFleetRequestsResponse where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelSpotFleetRequestsResponse from required parameters
newCancelSpotFleetRequestsResponse :: CancelSpotFleetRequestsResponse
newCancelSpotFleetRequestsResponse  = CancelSpotFleetRequestsResponse { "SuccessfulFleetRequests": (NullOrUndefined Nothing), "UnsuccessfulFleetRequests": (NullOrUndefined Nothing) }

-- | Constructs CancelSpotFleetRequestsResponse's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelSpotFleetRequestsResponse' :: ( { "SuccessfulFleetRequests" :: NullOrUndefined.NullOrUndefined (CancelSpotFleetRequestsSuccessSet) , "UnsuccessfulFleetRequests" :: NullOrUndefined.NullOrUndefined (CancelSpotFleetRequestsErrorSet) } -> {"SuccessfulFleetRequests" :: NullOrUndefined.NullOrUndefined (CancelSpotFleetRequestsSuccessSet) , "UnsuccessfulFleetRequests" :: NullOrUndefined.NullOrUndefined (CancelSpotFleetRequestsErrorSet) } ) -> CancelSpotFleetRequestsResponse
newCancelSpotFleetRequestsResponse'  customize = (CancelSpotFleetRequestsResponse <<< customize) { "SuccessfulFleetRequests": (NullOrUndefined Nothing), "UnsuccessfulFleetRequests": (NullOrUndefined Nothing) }



-- | <p>Describes a Spot Fleet request that was successfully canceled.</p>
newtype CancelSpotFleetRequestsSuccessItem = CancelSpotFleetRequestsSuccessItem 
  { "CurrentSpotFleetRequestState" :: (BatchState)
  , "PreviousSpotFleetRequestState" :: (BatchState)
  , "SpotFleetRequestId" :: (String)
  }
derive instance newtypeCancelSpotFleetRequestsSuccessItem :: Newtype CancelSpotFleetRequestsSuccessItem _
derive instance repGenericCancelSpotFleetRequestsSuccessItem :: Generic CancelSpotFleetRequestsSuccessItem _
instance showCancelSpotFleetRequestsSuccessItem :: Show CancelSpotFleetRequestsSuccessItem where
  show = genericShow
instance decodeCancelSpotFleetRequestsSuccessItem :: Decode CancelSpotFleetRequestsSuccessItem where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelSpotFleetRequestsSuccessItem :: Encode CancelSpotFleetRequestsSuccessItem where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelSpotFleetRequestsSuccessItem from required parameters
newCancelSpotFleetRequestsSuccessItem :: BatchState -> BatchState -> String -> CancelSpotFleetRequestsSuccessItem
newCancelSpotFleetRequestsSuccessItem _CurrentSpotFleetRequestState _PreviousSpotFleetRequestState _SpotFleetRequestId = CancelSpotFleetRequestsSuccessItem { "CurrentSpotFleetRequestState": _CurrentSpotFleetRequestState, "PreviousSpotFleetRequestState": _PreviousSpotFleetRequestState, "SpotFleetRequestId": _SpotFleetRequestId }

-- | Constructs CancelSpotFleetRequestsSuccessItem's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelSpotFleetRequestsSuccessItem' :: BatchState -> BatchState -> String -> ( { "CurrentSpotFleetRequestState" :: (BatchState) , "PreviousSpotFleetRequestState" :: (BatchState) , "SpotFleetRequestId" :: (String) } -> {"CurrentSpotFleetRequestState" :: (BatchState) , "PreviousSpotFleetRequestState" :: (BatchState) , "SpotFleetRequestId" :: (String) } ) -> CancelSpotFleetRequestsSuccessItem
newCancelSpotFleetRequestsSuccessItem' _CurrentSpotFleetRequestState _PreviousSpotFleetRequestState _SpotFleetRequestId customize = (CancelSpotFleetRequestsSuccessItem <<< customize) { "CurrentSpotFleetRequestState": _CurrentSpotFleetRequestState, "PreviousSpotFleetRequestState": _PreviousSpotFleetRequestState, "SpotFleetRequestId": _SpotFleetRequestId }



newtype CancelSpotFleetRequestsSuccessSet = CancelSpotFleetRequestsSuccessSet (Array CancelSpotFleetRequestsSuccessItem)
derive instance newtypeCancelSpotFleetRequestsSuccessSet :: Newtype CancelSpotFleetRequestsSuccessSet _
derive instance repGenericCancelSpotFleetRequestsSuccessSet :: Generic CancelSpotFleetRequestsSuccessSet _
instance showCancelSpotFleetRequestsSuccessSet :: Show CancelSpotFleetRequestsSuccessSet where
  show = genericShow
instance decodeCancelSpotFleetRequestsSuccessSet :: Decode CancelSpotFleetRequestsSuccessSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelSpotFleetRequestsSuccessSet :: Encode CancelSpotFleetRequestsSuccessSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype CancelSpotInstanceRequestState = CancelSpotInstanceRequestState String
derive instance newtypeCancelSpotInstanceRequestState :: Newtype CancelSpotInstanceRequestState _
derive instance repGenericCancelSpotInstanceRequestState :: Generic CancelSpotInstanceRequestState _
instance showCancelSpotInstanceRequestState :: Show CancelSpotInstanceRequestState where
  show = genericShow
instance decodeCancelSpotInstanceRequestState :: Decode CancelSpotInstanceRequestState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelSpotInstanceRequestState :: Encode CancelSpotInstanceRequestState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for CancelSpotInstanceRequests.</p>
newtype CancelSpotInstanceRequestsRequest = CancelSpotInstanceRequestsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "SpotInstanceRequestIds" :: (SpotInstanceRequestIdList)
  }
derive instance newtypeCancelSpotInstanceRequestsRequest :: Newtype CancelSpotInstanceRequestsRequest _
derive instance repGenericCancelSpotInstanceRequestsRequest :: Generic CancelSpotInstanceRequestsRequest _
instance showCancelSpotInstanceRequestsRequest :: Show CancelSpotInstanceRequestsRequest where
  show = genericShow
instance decodeCancelSpotInstanceRequestsRequest :: Decode CancelSpotInstanceRequestsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelSpotInstanceRequestsRequest :: Encode CancelSpotInstanceRequestsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelSpotInstanceRequestsRequest from required parameters
newCancelSpotInstanceRequestsRequest :: SpotInstanceRequestIdList -> CancelSpotInstanceRequestsRequest
newCancelSpotInstanceRequestsRequest _SpotInstanceRequestIds = CancelSpotInstanceRequestsRequest { "SpotInstanceRequestIds": _SpotInstanceRequestIds, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CancelSpotInstanceRequestsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelSpotInstanceRequestsRequest' :: SpotInstanceRequestIdList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "SpotInstanceRequestIds" :: (SpotInstanceRequestIdList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "SpotInstanceRequestIds" :: (SpotInstanceRequestIdList) } ) -> CancelSpotInstanceRequestsRequest
newCancelSpotInstanceRequestsRequest' _SpotInstanceRequestIds customize = (CancelSpotInstanceRequestsRequest <<< customize) { "SpotInstanceRequestIds": _SpotInstanceRequestIds, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CancelSpotInstanceRequests.</p>
newtype CancelSpotInstanceRequestsResult = CancelSpotInstanceRequestsResult 
  { "CancelledSpotInstanceRequests" :: NullOrUndefined.NullOrUndefined (CancelledSpotInstanceRequestList)
  }
derive instance newtypeCancelSpotInstanceRequestsResult :: Newtype CancelSpotInstanceRequestsResult _
derive instance repGenericCancelSpotInstanceRequestsResult :: Generic CancelSpotInstanceRequestsResult _
instance showCancelSpotInstanceRequestsResult :: Show CancelSpotInstanceRequestsResult where
  show = genericShow
instance decodeCancelSpotInstanceRequestsResult :: Decode CancelSpotInstanceRequestsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelSpotInstanceRequestsResult :: Encode CancelSpotInstanceRequestsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelSpotInstanceRequestsResult from required parameters
newCancelSpotInstanceRequestsResult :: CancelSpotInstanceRequestsResult
newCancelSpotInstanceRequestsResult  = CancelSpotInstanceRequestsResult { "CancelledSpotInstanceRequests": (NullOrUndefined Nothing) }

-- | Constructs CancelSpotInstanceRequestsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelSpotInstanceRequestsResult' :: ( { "CancelledSpotInstanceRequests" :: NullOrUndefined.NullOrUndefined (CancelledSpotInstanceRequestList) } -> {"CancelledSpotInstanceRequests" :: NullOrUndefined.NullOrUndefined (CancelledSpotInstanceRequestList) } ) -> CancelSpotInstanceRequestsResult
newCancelSpotInstanceRequestsResult'  customize = (CancelSpotInstanceRequestsResult <<< customize) { "CancelledSpotInstanceRequests": (NullOrUndefined Nothing) }



-- | <p>Describes a request to cancel a Spot Instance.</p>
newtype CancelledSpotInstanceRequest = CancelledSpotInstanceRequest 
  { "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (CancelSpotInstanceRequestState)
  }
derive instance newtypeCancelledSpotInstanceRequest :: Newtype CancelledSpotInstanceRequest _
derive instance repGenericCancelledSpotInstanceRequest :: Generic CancelledSpotInstanceRequest _
instance showCancelledSpotInstanceRequest :: Show CancelledSpotInstanceRequest where
  show = genericShow
instance decodeCancelledSpotInstanceRequest :: Decode CancelledSpotInstanceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelledSpotInstanceRequest :: Encode CancelledSpotInstanceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CancelledSpotInstanceRequest from required parameters
newCancelledSpotInstanceRequest :: CancelledSpotInstanceRequest
newCancelledSpotInstanceRequest  = CancelledSpotInstanceRequest { "SpotInstanceRequestId": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }

-- | Constructs CancelledSpotInstanceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCancelledSpotInstanceRequest' :: ( { "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (CancelSpotInstanceRequestState) } -> {"SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (CancelSpotInstanceRequestState) } ) -> CancelledSpotInstanceRequest
newCancelledSpotInstanceRequest'  customize = (CancelledSpotInstanceRequest <<< customize) { "SpotInstanceRequestId": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }



newtype CancelledSpotInstanceRequestList = CancelledSpotInstanceRequestList (Array CancelledSpotInstanceRequest)
derive instance newtypeCancelledSpotInstanceRequestList :: Newtype CancelledSpotInstanceRequestList _
derive instance repGenericCancelledSpotInstanceRequestList :: Generic CancelledSpotInstanceRequestList _
instance showCancelledSpotInstanceRequestList :: Show CancelledSpotInstanceRequestList where
  show = genericShow
instance decodeCancelledSpotInstanceRequestList :: Decode CancelledSpotInstanceRequestList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCancelledSpotInstanceRequestList :: Encode CancelledSpotInstanceRequestList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IPv4 CIDR block.</p>
newtype CidrBlock = CidrBlock 
  { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCidrBlock :: Newtype CidrBlock _
derive instance repGenericCidrBlock :: Generic CidrBlock _
instance showCidrBlock :: Show CidrBlock where
  show = genericShow
instance decodeCidrBlock :: Decode CidrBlock where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCidrBlock :: Encode CidrBlock where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CidrBlock from required parameters
newCidrBlock :: CidrBlock
newCidrBlock  = CidrBlock { "CidrBlock": (NullOrUndefined Nothing) }

-- | Constructs CidrBlock's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCidrBlock' :: ( { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) } -> {"CidrBlock" :: NullOrUndefined.NullOrUndefined (String) } ) -> CidrBlock
newCidrBlock'  customize = (CidrBlock <<< customize) { "CidrBlock": (NullOrUndefined Nothing) }



newtype CidrBlockSet = CidrBlockSet (Array CidrBlock)
derive instance newtypeCidrBlockSet :: Newtype CidrBlockSet _
derive instance repGenericCidrBlockSet :: Generic CidrBlockSet _
instance showCidrBlockSet :: Show CidrBlockSet where
  show = genericShow
instance decodeCidrBlockSet :: Decode CidrBlockSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCidrBlockSet :: Encode CidrBlockSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the ClassicLink DNS support status of a VPC.</p>
newtype ClassicLinkDnsSupport = ClassicLinkDnsSupport 
  { "ClassicLinkDnsSupported" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeClassicLinkDnsSupport :: Newtype ClassicLinkDnsSupport _
derive instance repGenericClassicLinkDnsSupport :: Generic ClassicLinkDnsSupport _
instance showClassicLinkDnsSupport :: Show ClassicLinkDnsSupport where
  show = genericShow
instance decodeClassicLinkDnsSupport :: Decode ClassicLinkDnsSupport where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeClassicLinkDnsSupport :: Encode ClassicLinkDnsSupport where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ClassicLinkDnsSupport from required parameters
newClassicLinkDnsSupport :: ClassicLinkDnsSupport
newClassicLinkDnsSupport  = ClassicLinkDnsSupport { "ClassicLinkDnsSupported": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs ClassicLinkDnsSupport's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newClassicLinkDnsSupport' :: ( { "ClassicLinkDnsSupported" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ClassicLinkDnsSupported" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> ClassicLinkDnsSupport
newClassicLinkDnsSupport'  customize = (ClassicLinkDnsSupport <<< customize) { "ClassicLinkDnsSupported": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



newtype ClassicLinkDnsSupportList = ClassicLinkDnsSupportList (Array ClassicLinkDnsSupport)
derive instance newtypeClassicLinkDnsSupportList :: Newtype ClassicLinkDnsSupportList _
derive instance repGenericClassicLinkDnsSupportList :: Generic ClassicLinkDnsSupportList _
instance showClassicLinkDnsSupportList :: Show ClassicLinkDnsSupportList where
  show = genericShow
instance decodeClassicLinkDnsSupportList :: Decode ClassicLinkDnsSupportList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeClassicLinkDnsSupportList :: Encode ClassicLinkDnsSupportList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a linked EC2-Classic instance.</p>
newtype ClassicLinkInstance = ClassicLinkInstance 
  { "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeClassicLinkInstance :: Newtype ClassicLinkInstance _
derive instance repGenericClassicLinkInstance :: Generic ClassicLinkInstance _
instance showClassicLinkInstance :: Show ClassicLinkInstance where
  show = genericShow
instance decodeClassicLinkInstance :: Decode ClassicLinkInstance where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeClassicLinkInstance :: Encode ClassicLinkInstance where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ClassicLinkInstance from required parameters
newClassicLinkInstance :: ClassicLinkInstance
newClassicLinkInstance  = ClassicLinkInstance { "Groups": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs ClassicLinkInstance's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newClassicLinkInstance' :: ( { "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> ClassicLinkInstance
newClassicLinkInstance'  customize = (ClassicLinkInstance <<< customize) { "Groups": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



newtype ClassicLinkInstanceList = ClassicLinkInstanceList (Array ClassicLinkInstance)
derive instance newtypeClassicLinkInstanceList :: Newtype ClassicLinkInstanceList _
derive instance repGenericClassicLinkInstanceList :: Generic ClassicLinkInstanceList _
instance showClassicLinkInstanceList :: Show ClassicLinkInstanceList where
  show = genericShow
instance decodeClassicLinkInstanceList :: Decode ClassicLinkInstanceList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeClassicLinkInstanceList :: Encode ClassicLinkInstanceList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a Classic Load Balancer.</p>
newtype ClassicLoadBalancer = ClassicLoadBalancer 
  { "Name" :: (String)
  }
derive instance newtypeClassicLoadBalancer :: Newtype ClassicLoadBalancer _
derive instance repGenericClassicLoadBalancer :: Generic ClassicLoadBalancer _
instance showClassicLoadBalancer :: Show ClassicLoadBalancer where
  show = genericShow
instance decodeClassicLoadBalancer :: Decode ClassicLoadBalancer where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeClassicLoadBalancer :: Encode ClassicLoadBalancer where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ClassicLoadBalancer from required parameters
newClassicLoadBalancer :: String -> ClassicLoadBalancer
newClassicLoadBalancer _Name = ClassicLoadBalancer { "Name": _Name }

-- | Constructs ClassicLoadBalancer's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newClassicLoadBalancer' :: String -> ( { "Name" :: (String) } -> {"Name" :: (String) } ) -> ClassicLoadBalancer
newClassicLoadBalancer' _Name customize = (ClassicLoadBalancer <<< customize) { "Name": _Name }



newtype ClassicLoadBalancers = ClassicLoadBalancers (Array ClassicLoadBalancer)
derive instance newtypeClassicLoadBalancers :: Newtype ClassicLoadBalancers _
derive instance repGenericClassicLoadBalancers :: Generic ClassicLoadBalancers _
instance showClassicLoadBalancers :: Show ClassicLoadBalancers where
  show = genericShow
instance decodeClassicLoadBalancers :: Decode ClassicLoadBalancers where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeClassicLoadBalancers :: Encode ClassicLoadBalancers where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the Classic Load Balancers to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances with these Classic Load Balancers.</p>
newtype ClassicLoadBalancersConfig = ClassicLoadBalancersConfig 
  { "ClassicLoadBalancers" :: (ClassicLoadBalancers)
  }
derive instance newtypeClassicLoadBalancersConfig :: Newtype ClassicLoadBalancersConfig _
derive instance repGenericClassicLoadBalancersConfig :: Generic ClassicLoadBalancersConfig _
instance showClassicLoadBalancersConfig :: Show ClassicLoadBalancersConfig where
  show = genericShow
instance decodeClassicLoadBalancersConfig :: Decode ClassicLoadBalancersConfig where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeClassicLoadBalancersConfig :: Encode ClassicLoadBalancersConfig where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ClassicLoadBalancersConfig from required parameters
newClassicLoadBalancersConfig :: ClassicLoadBalancers -> ClassicLoadBalancersConfig
newClassicLoadBalancersConfig _ClassicLoadBalancers = ClassicLoadBalancersConfig { "ClassicLoadBalancers": _ClassicLoadBalancers }

-- | Constructs ClassicLoadBalancersConfig's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newClassicLoadBalancersConfig' :: ClassicLoadBalancers -> ( { "ClassicLoadBalancers" :: (ClassicLoadBalancers) } -> {"ClassicLoadBalancers" :: (ClassicLoadBalancers) } ) -> ClassicLoadBalancersConfig
newClassicLoadBalancersConfig' _ClassicLoadBalancers customize = (ClassicLoadBalancersConfig <<< customize) { "ClassicLoadBalancers": _ClassicLoadBalancers }



-- | <p>Describes the client-specific data.</p>
newtype ClientData = ClientData 
  { "Comment" :: NullOrUndefined.NullOrUndefined (String)
  , "UploadEnd" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "UploadSize" :: NullOrUndefined.NullOrUndefined (Number)
  , "UploadStart" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeClientData :: Newtype ClientData _
derive instance repGenericClientData :: Generic ClientData _
instance showClientData :: Show ClientData where
  show = genericShow
instance decodeClientData :: Decode ClientData where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeClientData :: Encode ClientData where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ClientData from required parameters
newClientData :: ClientData
newClientData  = ClientData { "Comment": (NullOrUndefined Nothing), "UploadEnd": (NullOrUndefined Nothing), "UploadSize": (NullOrUndefined Nothing), "UploadStart": (NullOrUndefined Nothing) }

-- | Constructs ClientData's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newClientData' :: ( { "Comment" :: NullOrUndefined.NullOrUndefined (String) , "UploadEnd" :: NullOrUndefined.NullOrUndefined (DateTime) , "UploadSize" :: NullOrUndefined.NullOrUndefined (Number) , "UploadStart" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"Comment" :: NullOrUndefined.NullOrUndefined (String) , "UploadEnd" :: NullOrUndefined.NullOrUndefined (DateTime) , "UploadSize" :: NullOrUndefined.NullOrUndefined (Number) , "UploadStart" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> ClientData
newClientData'  customize = (ClientData <<< customize) { "Comment": (NullOrUndefined Nothing), "UploadEnd": (NullOrUndefined Nothing), "UploadSize": (NullOrUndefined Nothing), "UploadStart": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ConfirmProductInstance.</p>
newtype ConfirmProductInstanceRequest = ConfirmProductInstanceRequest 
  { "InstanceId" :: (String)
  , "ProductCode" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeConfirmProductInstanceRequest :: Newtype ConfirmProductInstanceRequest _
derive instance repGenericConfirmProductInstanceRequest :: Generic ConfirmProductInstanceRequest _
instance showConfirmProductInstanceRequest :: Show ConfirmProductInstanceRequest where
  show = genericShow
instance decodeConfirmProductInstanceRequest :: Decode ConfirmProductInstanceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeConfirmProductInstanceRequest :: Encode ConfirmProductInstanceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ConfirmProductInstanceRequest from required parameters
newConfirmProductInstanceRequest :: String -> String -> ConfirmProductInstanceRequest
newConfirmProductInstanceRequest _InstanceId _ProductCode = ConfirmProductInstanceRequest { "InstanceId": _InstanceId, "ProductCode": _ProductCode, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ConfirmProductInstanceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newConfirmProductInstanceRequest' :: String -> String -> ( { "InstanceId" :: (String) , "ProductCode" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"InstanceId" :: (String) , "ProductCode" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ConfirmProductInstanceRequest
newConfirmProductInstanceRequest' _InstanceId _ProductCode customize = (ConfirmProductInstanceRequest <<< customize) { "InstanceId": _InstanceId, "ProductCode": _ProductCode, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of ConfirmProductInstance.</p>
newtype ConfirmProductInstanceResult = ConfirmProductInstanceResult 
  { "OwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeConfirmProductInstanceResult :: Newtype ConfirmProductInstanceResult _
derive instance repGenericConfirmProductInstanceResult :: Generic ConfirmProductInstanceResult _
instance showConfirmProductInstanceResult :: Show ConfirmProductInstanceResult where
  show = genericShow
instance decodeConfirmProductInstanceResult :: Decode ConfirmProductInstanceResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeConfirmProductInstanceResult :: Encode ConfirmProductInstanceResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ConfirmProductInstanceResult from required parameters
newConfirmProductInstanceResult :: ConfirmProductInstanceResult
newConfirmProductInstanceResult  = ConfirmProductInstanceResult { "OwnerId": (NullOrUndefined Nothing), "Return": (NullOrUndefined Nothing) }

-- | Constructs ConfirmProductInstanceResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newConfirmProductInstanceResult' :: ( { "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ConfirmProductInstanceResult
newConfirmProductInstanceResult'  customize = (ConfirmProductInstanceResult <<< customize) { "OwnerId": (NullOrUndefined Nothing), "Return": (NullOrUndefined Nothing) }



-- | <p>Describes a connection notification for a VPC endpoint or VPC endpoint service.</p>
newtype ConnectionNotification = ConnectionNotification 
  { "ConnectionNotificationId" :: NullOrUndefined.NullOrUndefined (String)
  , "ServiceId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String)
  , "ConnectionNotificationType" :: NullOrUndefined.NullOrUndefined (ConnectionNotificationType)
  , "ConnectionNotificationArn" :: NullOrUndefined.NullOrUndefined (String)
  , "ConnectionEvents" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "ConnectionNotificationState" :: NullOrUndefined.NullOrUndefined (ConnectionNotificationState)
  }
derive instance newtypeConnectionNotification :: Newtype ConnectionNotification _
derive instance repGenericConnectionNotification :: Generic ConnectionNotification _
instance showConnectionNotification :: Show ConnectionNotification where
  show = genericShow
instance decodeConnectionNotification :: Decode ConnectionNotification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeConnectionNotification :: Encode ConnectionNotification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ConnectionNotification from required parameters
newConnectionNotification :: ConnectionNotification
newConnectionNotification  = ConnectionNotification { "ConnectionEvents": (NullOrUndefined Nothing), "ConnectionNotificationArn": (NullOrUndefined Nothing), "ConnectionNotificationId": (NullOrUndefined Nothing), "ConnectionNotificationState": (NullOrUndefined Nothing), "ConnectionNotificationType": (NullOrUndefined Nothing), "ServiceId": (NullOrUndefined Nothing), "VpcEndpointId": (NullOrUndefined Nothing) }

-- | Constructs ConnectionNotification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newConnectionNotification' :: ( { "ConnectionNotificationId" :: NullOrUndefined.NullOrUndefined (String) , "ServiceId" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String) , "ConnectionNotificationType" :: NullOrUndefined.NullOrUndefined (ConnectionNotificationType) , "ConnectionNotificationArn" :: NullOrUndefined.NullOrUndefined (String) , "ConnectionEvents" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "ConnectionNotificationState" :: NullOrUndefined.NullOrUndefined (ConnectionNotificationState) } -> {"ConnectionNotificationId" :: NullOrUndefined.NullOrUndefined (String) , "ServiceId" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String) , "ConnectionNotificationType" :: NullOrUndefined.NullOrUndefined (ConnectionNotificationType) , "ConnectionNotificationArn" :: NullOrUndefined.NullOrUndefined (String) , "ConnectionEvents" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "ConnectionNotificationState" :: NullOrUndefined.NullOrUndefined (ConnectionNotificationState) } ) -> ConnectionNotification
newConnectionNotification'  customize = (ConnectionNotification <<< customize) { "ConnectionEvents": (NullOrUndefined Nothing), "ConnectionNotificationArn": (NullOrUndefined Nothing), "ConnectionNotificationId": (NullOrUndefined Nothing), "ConnectionNotificationState": (NullOrUndefined Nothing), "ConnectionNotificationType": (NullOrUndefined Nothing), "ServiceId": (NullOrUndefined Nothing), "VpcEndpointId": (NullOrUndefined Nothing) }



newtype ConnectionNotificationSet = ConnectionNotificationSet (Array ConnectionNotification)
derive instance newtypeConnectionNotificationSet :: Newtype ConnectionNotificationSet _
derive instance repGenericConnectionNotificationSet :: Generic ConnectionNotificationSet _
instance showConnectionNotificationSet :: Show ConnectionNotificationSet where
  show = genericShow
instance decodeConnectionNotificationSet :: Decode ConnectionNotificationSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeConnectionNotificationSet :: Encode ConnectionNotificationSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ConnectionNotificationState = ConnectionNotificationState String
derive instance newtypeConnectionNotificationState :: Newtype ConnectionNotificationState _
derive instance repGenericConnectionNotificationState :: Generic ConnectionNotificationState _
instance showConnectionNotificationState :: Show ConnectionNotificationState where
  show = genericShow
instance decodeConnectionNotificationState :: Decode ConnectionNotificationState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeConnectionNotificationState :: Encode ConnectionNotificationState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ConnectionNotificationType = ConnectionNotificationType String
derive instance newtypeConnectionNotificationType :: Newtype ConnectionNotificationType _
derive instance repGenericConnectionNotificationType :: Generic ConnectionNotificationType _
instance showConnectionNotificationType :: Show ConnectionNotificationType where
  show = genericShow
instance decodeConnectionNotificationType :: Decode ConnectionNotificationType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeConnectionNotificationType :: Encode ConnectionNotificationType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ContainerFormat = ContainerFormat String
derive instance newtypeContainerFormat :: Newtype ContainerFormat _
derive instance repGenericContainerFormat :: Generic ContainerFormat _
instance showContainerFormat :: Show ContainerFormat where
  show = genericShow
instance decodeContainerFormat :: Decode ContainerFormat where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeContainerFormat :: Encode ContainerFormat where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ConversionIdStringList = ConversionIdStringList (Array String)
derive instance newtypeConversionIdStringList :: Newtype ConversionIdStringList _
derive instance repGenericConversionIdStringList :: Generic ConversionIdStringList _
instance showConversionIdStringList :: Show ConversionIdStringList where
  show = genericShow
instance decodeConversionIdStringList :: Decode ConversionIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeConversionIdStringList :: Encode ConversionIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a conversion task.</p>
newtype ConversionTask = ConversionTask 
  { "ConversionTaskId" :: (String)
  , "ExpirationTime" :: NullOrUndefined.NullOrUndefined (String)
  , "ImportInstance" :: NullOrUndefined.NullOrUndefined (ImportInstanceTaskDetails)
  , "ImportVolume" :: NullOrUndefined.NullOrUndefined (ImportVolumeTaskDetails)
  , "State" :: (ConversionTaskState)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeConversionTask :: Newtype ConversionTask _
derive instance repGenericConversionTask :: Generic ConversionTask _
instance showConversionTask :: Show ConversionTask where
  show = genericShow
instance decodeConversionTask :: Decode ConversionTask where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeConversionTask :: Encode ConversionTask where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ConversionTask from required parameters
newConversionTask :: String -> ConversionTaskState -> ConversionTask
newConversionTask _ConversionTaskId _State = ConversionTask { "ConversionTaskId": _ConversionTaskId, "State": _State, "ExpirationTime": (NullOrUndefined Nothing), "ImportInstance": (NullOrUndefined Nothing), "ImportVolume": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs ConversionTask's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newConversionTask' :: String -> ConversionTaskState -> ( { "ConversionTaskId" :: (String) , "ExpirationTime" :: NullOrUndefined.NullOrUndefined (String) , "ImportInstance" :: NullOrUndefined.NullOrUndefined (ImportInstanceTaskDetails) , "ImportVolume" :: NullOrUndefined.NullOrUndefined (ImportVolumeTaskDetails) , "State" :: (ConversionTaskState) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"ConversionTaskId" :: (String) , "ExpirationTime" :: NullOrUndefined.NullOrUndefined (String) , "ImportInstance" :: NullOrUndefined.NullOrUndefined (ImportInstanceTaskDetails) , "ImportVolume" :: NullOrUndefined.NullOrUndefined (ImportVolumeTaskDetails) , "State" :: (ConversionTaskState) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> ConversionTask
newConversionTask' _ConversionTaskId _State customize = (ConversionTask <<< customize) { "ConversionTaskId": _ConversionTaskId, "State": _State, "ExpirationTime": (NullOrUndefined Nothing), "ImportInstance": (NullOrUndefined Nothing), "ImportVolume": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



newtype ConversionTaskState = ConversionTaskState String
derive instance newtypeConversionTaskState :: Newtype ConversionTaskState _
derive instance repGenericConversionTaskState :: Generic ConversionTaskState _
instance showConversionTaskState :: Show ConversionTaskState where
  show = genericShow
instance decodeConversionTaskState :: Decode ConversionTaskState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeConversionTaskState :: Encode ConversionTaskState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype CopyFpgaImageRequest = CopyFpgaImageRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "SourceFpgaImageId" :: (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: NullOrUndefined.NullOrUndefined (String)
  , "SourceRegion" :: (String)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCopyFpgaImageRequest :: Newtype CopyFpgaImageRequest _
derive instance repGenericCopyFpgaImageRequest :: Generic CopyFpgaImageRequest _
instance showCopyFpgaImageRequest :: Show CopyFpgaImageRequest where
  show = genericShow
instance decodeCopyFpgaImageRequest :: Decode CopyFpgaImageRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCopyFpgaImageRequest :: Encode CopyFpgaImageRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CopyFpgaImageRequest from required parameters
newCopyFpgaImageRequest :: String -> String -> CopyFpgaImageRequest
newCopyFpgaImageRequest _SourceFpgaImageId _SourceRegion = CopyFpgaImageRequest { "SourceFpgaImageId": _SourceFpgaImageId, "SourceRegion": _SourceRegion, "ClientToken": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }

-- | Constructs CopyFpgaImageRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCopyFpgaImageRequest' :: String -> String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "SourceFpgaImageId" :: (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) , "SourceRegion" :: (String) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "SourceFpgaImageId" :: (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) , "SourceRegion" :: (String) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> CopyFpgaImageRequest
newCopyFpgaImageRequest' _SourceFpgaImageId _SourceRegion customize = (CopyFpgaImageRequest <<< customize) { "SourceFpgaImageId": _SourceFpgaImageId, "SourceRegion": _SourceRegion, "ClientToken": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }



newtype CopyFpgaImageResult = CopyFpgaImageResult 
  { "FpgaImageId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCopyFpgaImageResult :: Newtype CopyFpgaImageResult _
derive instance repGenericCopyFpgaImageResult :: Generic CopyFpgaImageResult _
instance showCopyFpgaImageResult :: Show CopyFpgaImageResult where
  show = genericShow
instance decodeCopyFpgaImageResult :: Decode CopyFpgaImageResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCopyFpgaImageResult :: Encode CopyFpgaImageResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CopyFpgaImageResult from required parameters
newCopyFpgaImageResult :: CopyFpgaImageResult
newCopyFpgaImageResult  = CopyFpgaImageResult { "FpgaImageId": (NullOrUndefined Nothing) }

-- | Constructs CopyFpgaImageResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCopyFpgaImageResult' :: ( { "FpgaImageId" :: NullOrUndefined.NullOrUndefined (String) } -> {"FpgaImageId" :: NullOrUndefined.NullOrUndefined (String) } ) -> CopyFpgaImageResult
newCopyFpgaImageResult'  customize = (CopyFpgaImageResult <<< customize) { "FpgaImageId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CopyImage.</p>
newtype CopyImageRequest = CopyImageRequest 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: (String)
  , "SourceImageId" :: (String)
  , "SourceRegion" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCopyImageRequest :: Newtype CopyImageRequest _
derive instance repGenericCopyImageRequest :: Generic CopyImageRequest _
instance showCopyImageRequest :: Show CopyImageRequest where
  show = genericShow
instance decodeCopyImageRequest :: Decode CopyImageRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCopyImageRequest :: Encode CopyImageRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CopyImageRequest from required parameters
newCopyImageRequest :: String -> String -> String -> CopyImageRequest
newCopyImageRequest _Name _SourceImageId _SourceRegion = CopyImageRequest { "Name": _Name, "SourceImageId": _SourceImageId, "SourceRegion": _SourceRegion, "ClientToken": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing) }

-- | Constructs CopyImageRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCopyImageRequest' :: String -> String -> String -> ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: (String) , "SourceImageId" :: (String) , "SourceRegion" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: (String) , "SourceImageId" :: (String) , "SourceRegion" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CopyImageRequest
newCopyImageRequest' _Name _SourceImageId _SourceRegion customize = (CopyImageRequest <<< customize) { "Name": _Name, "SourceImageId": _SourceImageId, "SourceRegion": _SourceRegion, "ClientToken": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CopyImage.</p>
newtype CopyImageResult = CopyImageResult 
  { "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCopyImageResult :: Newtype CopyImageResult _
derive instance repGenericCopyImageResult :: Generic CopyImageResult _
instance showCopyImageResult :: Show CopyImageResult where
  show = genericShow
instance decodeCopyImageResult :: Decode CopyImageResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCopyImageResult :: Encode CopyImageResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CopyImageResult from required parameters
newCopyImageResult :: CopyImageResult
newCopyImageResult  = CopyImageResult { "ImageId": (NullOrUndefined Nothing) }

-- | Constructs CopyImageResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCopyImageResult' :: ( { "ImageId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ImageId" :: NullOrUndefined.NullOrUndefined (String) } ) -> CopyImageResult
newCopyImageResult'  customize = (CopyImageResult <<< customize) { "ImageId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CopySnapshot.</p>
newtype CopySnapshotRequest = CopySnapshotRequest 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DestinationRegion" :: NullOrUndefined.NullOrUndefined (String)
  , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String)
  , "PresignedUrl" :: NullOrUndefined.NullOrUndefined (String)
  , "SourceRegion" :: (String)
  , "SourceSnapshotId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCopySnapshotRequest :: Newtype CopySnapshotRequest _
derive instance repGenericCopySnapshotRequest :: Generic CopySnapshotRequest _
instance showCopySnapshotRequest :: Show CopySnapshotRequest where
  show = genericShow
instance decodeCopySnapshotRequest :: Decode CopySnapshotRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCopySnapshotRequest :: Encode CopySnapshotRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CopySnapshotRequest from required parameters
newCopySnapshotRequest :: String -> String -> CopySnapshotRequest
newCopySnapshotRequest _SourceRegion _SourceSnapshotId = CopySnapshotRequest { "SourceRegion": _SourceRegion, "SourceSnapshotId": _SourceSnapshotId, "Description": (NullOrUndefined Nothing), "DestinationRegion": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "PresignedUrl": (NullOrUndefined Nothing) }

-- | Constructs CopySnapshotRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCopySnapshotRequest' :: String -> String -> ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "DestinationRegion" :: NullOrUndefined.NullOrUndefined (String) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "PresignedUrl" :: NullOrUndefined.NullOrUndefined (String) , "SourceRegion" :: (String) , "SourceSnapshotId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "DestinationRegion" :: NullOrUndefined.NullOrUndefined (String) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "PresignedUrl" :: NullOrUndefined.NullOrUndefined (String) , "SourceRegion" :: (String) , "SourceSnapshotId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CopySnapshotRequest
newCopySnapshotRequest' _SourceRegion _SourceSnapshotId customize = (CopySnapshotRequest <<< customize) { "SourceRegion": _SourceRegion, "SourceSnapshotId": _SourceSnapshotId, "Description": (NullOrUndefined Nothing), "DestinationRegion": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "PresignedUrl": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CopySnapshot.</p>
newtype CopySnapshotResult = CopySnapshotResult 
  { "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCopySnapshotResult :: Newtype CopySnapshotResult _
derive instance repGenericCopySnapshotResult :: Generic CopySnapshotResult _
instance showCopySnapshotResult :: Show CopySnapshotResult where
  show = genericShow
instance decodeCopySnapshotResult :: Decode CopySnapshotResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCopySnapshotResult :: Encode CopySnapshotResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CopySnapshotResult from required parameters
newCopySnapshotResult :: CopySnapshotResult
newCopySnapshotResult  = CopySnapshotResult { "SnapshotId": (NullOrUndefined Nothing) }

-- | Constructs CopySnapshotResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCopySnapshotResult' :: ( { "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) } -> {"SnapshotId" :: NullOrUndefined.NullOrUndefined (String) } ) -> CopySnapshotResult
newCopySnapshotResult'  customize = (CopySnapshotResult <<< customize) { "SnapshotId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateCustomerGateway.</p>
newtype CreateCustomerGatewayRequest = CreateCustomerGatewayRequest 
  { "BgpAsn" :: (Int)
  , "PublicIp" :: (String)
  , "Type" :: (GatewayType)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateCustomerGatewayRequest :: Newtype CreateCustomerGatewayRequest _
derive instance repGenericCreateCustomerGatewayRequest :: Generic CreateCustomerGatewayRequest _
instance showCreateCustomerGatewayRequest :: Show CreateCustomerGatewayRequest where
  show = genericShow
instance decodeCreateCustomerGatewayRequest :: Decode CreateCustomerGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateCustomerGatewayRequest :: Encode CreateCustomerGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateCustomerGatewayRequest from required parameters
newCreateCustomerGatewayRequest :: Int -> String -> GatewayType -> CreateCustomerGatewayRequest
newCreateCustomerGatewayRequest _BgpAsn _PublicIp _Type = CreateCustomerGatewayRequest { "BgpAsn": _BgpAsn, "PublicIp": _PublicIp, "Type": _Type, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateCustomerGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateCustomerGatewayRequest' :: Int -> String -> GatewayType -> ( { "BgpAsn" :: (Int) , "PublicIp" :: (String) , "Type" :: (GatewayType) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"BgpAsn" :: (Int) , "PublicIp" :: (String) , "Type" :: (GatewayType) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateCustomerGatewayRequest
newCreateCustomerGatewayRequest' _BgpAsn _PublicIp _Type customize = (CreateCustomerGatewayRequest <<< customize) { "BgpAsn": _BgpAsn, "PublicIp": _PublicIp, "Type": _Type, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateCustomerGateway.</p>
newtype CreateCustomerGatewayResult = CreateCustomerGatewayResult 
  { "CustomerGateway" :: NullOrUndefined.NullOrUndefined (CustomerGateway)
  }
derive instance newtypeCreateCustomerGatewayResult :: Newtype CreateCustomerGatewayResult _
derive instance repGenericCreateCustomerGatewayResult :: Generic CreateCustomerGatewayResult _
instance showCreateCustomerGatewayResult :: Show CreateCustomerGatewayResult where
  show = genericShow
instance decodeCreateCustomerGatewayResult :: Decode CreateCustomerGatewayResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateCustomerGatewayResult :: Encode CreateCustomerGatewayResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateCustomerGatewayResult from required parameters
newCreateCustomerGatewayResult :: CreateCustomerGatewayResult
newCreateCustomerGatewayResult  = CreateCustomerGatewayResult { "CustomerGateway": (NullOrUndefined Nothing) }

-- | Constructs CreateCustomerGatewayResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateCustomerGatewayResult' :: ( { "CustomerGateway" :: NullOrUndefined.NullOrUndefined (CustomerGateway) } -> {"CustomerGateway" :: NullOrUndefined.NullOrUndefined (CustomerGateway) } ) -> CreateCustomerGatewayResult
newCreateCustomerGatewayResult'  customize = (CreateCustomerGatewayResult <<< customize) { "CustomerGateway": (NullOrUndefined Nothing) }



newtype CreateDefaultSubnetRequest = CreateDefaultSubnetRequest 
  { "AvailabilityZone" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateDefaultSubnetRequest :: Newtype CreateDefaultSubnetRequest _
derive instance repGenericCreateDefaultSubnetRequest :: Generic CreateDefaultSubnetRequest _
instance showCreateDefaultSubnetRequest :: Show CreateDefaultSubnetRequest where
  show = genericShow
instance decodeCreateDefaultSubnetRequest :: Decode CreateDefaultSubnetRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateDefaultSubnetRequest :: Encode CreateDefaultSubnetRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateDefaultSubnetRequest from required parameters
newCreateDefaultSubnetRequest :: String -> CreateDefaultSubnetRequest
newCreateDefaultSubnetRequest _AvailabilityZone = CreateDefaultSubnetRequest { "AvailabilityZone": _AvailabilityZone, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateDefaultSubnetRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateDefaultSubnetRequest' :: String -> ( { "AvailabilityZone" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AvailabilityZone" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateDefaultSubnetRequest
newCreateDefaultSubnetRequest' _AvailabilityZone customize = (CreateDefaultSubnetRequest <<< customize) { "AvailabilityZone": _AvailabilityZone, "DryRun": (NullOrUndefined Nothing) }



newtype CreateDefaultSubnetResult = CreateDefaultSubnetResult 
  { "Subnet" :: NullOrUndefined.NullOrUndefined (Subnet)
  }
derive instance newtypeCreateDefaultSubnetResult :: Newtype CreateDefaultSubnetResult _
derive instance repGenericCreateDefaultSubnetResult :: Generic CreateDefaultSubnetResult _
instance showCreateDefaultSubnetResult :: Show CreateDefaultSubnetResult where
  show = genericShow
instance decodeCreateDefaultSubnetResult :: Decode CreateDefaultSubnetResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateDefaultSubnetResult :: Encode CreateDefaultSubnetResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateDefaultSubnetResult from required parameters
newCreateDefaultSubnetResult :: CreateDefaultSubnetResult
newCreateDefaultSubnetResult  = CreateDefaultSubnetResult { "Subnet": (NullOrUndefined Nothing) }

-- | Constructs CreateDefaultSubnetResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateDefaultSubnetResult' :: ( { "Subnet" :: NullOrUndefined.NullOrUndefined (Subnet) } -> {"Subnet" :: NullOrUndefined.NullOrUndefined (Subnet) } ) -> CreateDefaultSubnetResult
newCreateDefaultSubnetResult'  customize = (CreateDefaultSubnetResult <<< customize) { "Subnet": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateDefaultVpc.</p>
newtype CreateDefaultVpcRequest = CreateDefaultVpcRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateDefaultVpcRequest :: Newtype CreateDefaultVpcRequest _
derive instance repGenericCreateDefaultVpcRequest :: Generic CreateDefaultVpcRequest _
instance showCreateDefaultVpcRequest :: Show CreateDefaultVpcRequest where
  show = genericShow
instance decodeCreateDefaultVpcRequest :: Decode CreateDefaultVpcRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateDefaultVpcRequest :: Encode CreateDefaultVpcRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateDefaultVpcRequest from required parameters
newCreateDefaultVpcRequest :: CreateDefaultVpcRequest
newCreateDefaultVpcRequest  = CreateDefaultVpcRequest { "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateDefaultVpcRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateDefaultVpcRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateDefaultVpcRequest
newCreateDefaultVpcRequest'  customize = (CreateDefaultVpcRequest <<< customize) { "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateDefaultVpc.</p>
newtype CreateDefaultVpcResult = CreateDefaultVpcResult 
  { "Vpc" :: NullOrUndefined.NullOrUndefined (Vpc)
  }
derive instance newtypeCreateDefaultVpcResult :: Newtype CreateDefaultVpcResult _
derive instance repGenericCreateDefaultVpcResult :: Generic CreateDefaultVpcResult _
instance showCreateDefaultVpcResult :: Show CreateDefaultVpcResult where
  show = genericShow
instance decodeCreateDefaultVpcResult :: Decode CreateDefaultVpcResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateDefaultVpcResult :: Encode CreateDefaultVpcResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateDefaultVpcResult from required parameters
newCreateDefaultVpcResult :: CreateDefaultVpcResult
newCreateDefaultVpcResult  = CreateDefaultVpcResult { "Vpc": (NullOrUndefined Nothing) }

-- | Constructs CreateDefaultVpcResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateDefaultVpcResult' :: ( { "Vpc" :: NullOrUndefined.NullOrUndefined (Vpc) } -> {"Vpc" :: NullOrUndefined.NullOrUndefined (Vpc) } ) -> CreateDefaultVpcResult
newCreateDefaultVpcResult'  customize = (CreateDefaultVpcResult <<< customize) { "Vpc": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateDhcpOptions.</p>
newtype CreateDhcpOptionsRequest = CreateDhcpOptionsRequest 
  { "DhcpConfigurations" :: (NewDhcpConfigurationList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateDhcpOptionsRequest :: Newtype CreateDhcpOptionsRequest _
derive instance repGenericCreateDhcpOptionsRequest :: Generic CreateDhcpOptionsRequest _
instance showCreateDhcpOptionsRequest :: Show CreateDhcpOptionsRequest where
  show = genericShow
instance decodeCreateDhcpOptionsRequest :: Decode CreateDhcpOptionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateDhcpOptionsRequest :: Encode CreateDhcpOptionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateDhcpOptionsRequest from required parameters
newCreateDhcpOptionsRequest :: NewDhcpConfigurationList -> CreateDhcpOptionsRequest
newCreateDhcpOptionsRequest _DhcpConfigurations = CreateDhcpOptionsRequest { "DhcpConfigurations": _DhcpConfigurations, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateDhcpOptionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateDhcpOptionsRequest' :: NewDhcpConfigurationList -> ( { "DhcpConfigurations" :: (NewDhcpConfigurationList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DhcpConfigurations" :: (NewDhcpConfigurationList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateDhcpOptionsRequest
newCreateDhcpOptionsRequest' _DhcpConfigurations customize = (CreateDhcpOptionsRequest <<< customize) { "DhcpConfigurations": _DhcpConfigurations, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateDhcpOptions.</p>
newtype CreateDhcpOptionsResult = CreateDhcpOptionsResult 
  { "DhcpOptions" :: NullOrUndefined.NullOrUndefined (DhcpOptions)
  }
derive instance newtypeCreateDhcpOptionsResult :: Newtype CreateDhcpOptionsResult _
derive instance repGenericCreateDhcpOptionsResult :: Generic CreateDhcpOptionsResult _
instance showCreateDhcpOptionsResult :: Show CreateDhcpOptionsResult where
  show = genericShow
instance decodeCreateDhcpOptionsResult :: Decode CreateDhcpOptionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateDhcpOptionsResult :: Encode CreateDhcpOptionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateDhcpOptionsResult from required parameters
newCreateDhcpOptionsResult :: CreateDhcpOptionsResult
newCreateDhcpOptionsResult  = CreateDhcpOptionsResult { "DhcpOptions": (NullOrUndefined Nothing) }

-- | Constructs CreateDhcpOptionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateDhcpOptionsResult' :: ( { "DhcpOptions" :: NullOrUndefined.NullOrUndefined (DhcpOptions) } -> {"DhcpOptions" :: NullOrUndefined.NullOrUndefined (DhcpOptions) } ) -> CreateDhcpOptionsResult
newCreateDhcpOptionsResult'  customize = (CreateDhcpOptionsResult <<< customize) { "DhcpOptions": (NullOrUndefined Nothing) }



newtype CreateEgressOnlyInternetGatewayRequest = CreateEgressOnlyInternetGatewayRequest 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcId" :: (String)
  }
derive instance newtypeCreateEgressOnlyInternetGatewayRequest :: Newtype CreateEgressOnlyInternetGatewayRequest _
derive instance repGenericCreateEgressOnlyInternetGatewayRequest :: Generic CreateEgressOnlyInternetGatewayRequest _
instance showCreateEgressOnlyInternetGatewayRequest :: Show CreateEgressOnlyInternetGatewayRequest where
  show = genericShow
instance decodeCreateEgressOnlyInternetGatewayRequest :: Decode CreateEgressOnlyInternetGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateEgressOnlyInternetGatewayRequest :: Encode CreateEgressOnlyInternetGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateEgressOnlyInternetGatewayRequest from required parameters
newCreateEgressOnlyInternetGatewayRequest :: String -> CreateEgressOnlyInternetGatewayRequest
newCreateEgressOnlyInternetGatewayRequest _VpcId = CreateEgressOnlyInternetGatewayRequest { "VpcId": _VpcId, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateEgressOnlyInternetGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateEgressOnlyInternetGatewayRequest' :: String -> ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: (String) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: (String) } ) -> CreateEgressOnlyInternetGatewayRequest
newCreateEgressOnlyInternetGatewayRequest' _VpcId customize = (CreateEgressOnlyInternetGatewayRequest <<< customize) { "VpcId": _VpcId, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



newtype CreateEgressOnlyInternetGatewayResult = CreateEgressOnlyInternetGatewayResult 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "EgressOnlyInternetGateway" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGateway)
  }
derive instance newtypeCreateEgressOnlyInternetGatewayResult :: Newtype CreateEgressOnlyInternetGatewayResult _
derive instance repGenericCreateEgressOnlyInternetGatewayResult :: Generic CreateEgressOnlyInternetGatewayResult _
instance showCreateEgressOnlyInternetGatewayResult :: Show CreateEgressOnlyInternetGatewayResult where
  show = genericShow
instance decodeCreateEgressOnlyInternetGatewayResult :: Decode CreateEgressOnlyInternetGatewayResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateEgressOnlyInternetGatewayResult :: Encode CreateEgressOnlyInternetGatewayResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateEgressOnlyInternetGatewayResult from required parameters
newCreateEgressOnlyInternetGatewayResult :: CreateEgressOnlyInternetGatewayResult
newCreateEgressOnlyInternetGatewayResult  = CreateEgressOnlyInternetGatewayResult { "ClientToken": (NullOrUndefined Nothing), "EgressOnlyInternetGateway": (NullOrUndefined Nothing) }

-- | Constructs CreateEgressOnlyInternetGatewayResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateEgressOnlyInternetGatewayResult' :: ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "EgressOnlyInternetGateway" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGateway) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "EgressOnlyInternetGateway" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGateway) } ) -> CreateEgressOnlyInternetGatewayResult
newCreateEgressOnlyInternetGatewayResult'  customize = (CreateEgressOnlyInternetGatewayResult <<< customize) { "ClientToken": (NullOrUndefined Nothing), "EgressOnlyInternetGateway": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateFlowLogs.</p>
newtype CreateFlowLogsRequest = CreateFlowLogsRequest 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "DeliverLogsPermissionArn" :: (String)
  , "LogGroupName" :: (String)
  , "ResourceIds" :: (ValueStringList)
  , "ResourceType" :: (FlowLogsResourceType)
  , "TrafficType" :: (TrafficType)
  }
derive instance newtypeCreateFlowLogsRequest :: Newtype CreateFlowLogsRequest _
derive instance repGenericCreateFlowLogsRequest :: Generic CreateFlowLogsRequest _
instance showCreateFlowLogsRequest :: Show CreateFlowLogsRequest where
  show = genericShow
instance decodeCreateFlowLogsRequest :: Decode CreateFlowLogsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateFlowLogsRequest :: Encode CreateFlowLogsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateFlowLogsRequest from required parameters
newCreateFlowLogsRequest :: String -> String -> ValueStringList -> FlowLogsResourceType -> TrafficType -> CreateFlowLogsRequest
newCreateFlowLogsRequest _DeliverLogsPermissionArn _LogGroupName _ResourceIds _ResourceType _TrafficType = CreateFlowLogsRequest { "DeliverLogsPermissionArn": _DeliverLogsPermissionArn, "LogGroupName": _LogGroupName, "ResourceIds": _ResourceIds, "ResourceType": _ResourceType, "TrafficType": _TrafficType, "ClientToken": (NullOrUndefined Nothing) }

-- | Constructs CreateFlowLogsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateFlowLogsRequest' :: String -> String -> ValueStringList -> FlowLogsResourceType -> TrafficType -> ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DeliverLogsPermissionArn" :: (String) , "LogGroupName" :: (String) , "ResourceIds" :: (ValueStringList) , "ResourceType" :: (FlowLogsResourceType) , "TrafficType" :: (TrafficType) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DeliverLogsPermissionArn" :: (String) , "LogGroupName" :: (String) , "ResourceIds" :: (ValueStringList) , "ResourceType" :: (FlowLogsResourceType) , "TrafficType" :: (TrafficType) } ) -> CreateFlowLogsRequest
newCreateFlowLogsRequest' _DeliverLogsPermissionArn _LogGroupName _ResourceIds _ResourceType _TrafficType customize = (CreateFlowLogsRequest <<< customize) { "DeliverLogsPermissionArn": _DeliverLogsPermissionArn, "LogGroupName": _LogGroupName, "ResourceIds": _ResourceIds, "ResourceType": _ResourceType, "TrafficType": _TrafficType, "ClientToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateFlowLogs.</p>
newtype CreateFlowLogsResult = CreateFlowLogsResult 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "FlowLogIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet)
  }
derive instance newtypeCreateFlowLogsResult :: Newtype CreateFlowLogsResult _
derive instance repGenericCreateFlowLogsResult :: Generic CreateFlowLogsResult _
instance showCreateFlowLogsResult :: Show CreateFlowLogsResult where
  show = genericShow
instance decodeCreateFlowLogsResult :: Decode CreateFlowLogsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateFlowLogsResult :: Encode CreateFlowLogsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateFlowLogsResult from required parameters
newCreateFlowLogsResult :: CreateFlowLogsResult
newCreateFlowLogsResult  = CreateFlowLogsResult { "ClientToken": (NullOrUndefined Nothing), "FlowLogIds": (NullOrUndefined Nothing), "Unsuccessful": (NullOrUndefined Nothing) }

-- | Constructs CreateFlowLogsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateFlowLogsResult' :: ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "FlowLogIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "FlowLogIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } ) -> CreateFlowLogsResult
newCreateFlowLogsResult'  customize = (CreateFlowLogsResult <<< customize) { "ClientToken": (NullOrUndefined Nothing), "FlowLogIds": (NullOrUndefined Nothing), "Unsuccessful": (NullOrUndefined Nothing) }



newtype CreateFpgaImageRequest = CreateFpgaImageRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InputStorageLocation" :: (StorageLocation)
  , "LogsStorageLocation" :: NullOrUndefined.NullOrUndefined (StorageLocation)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: NullOrUndefined.NullOrUndefined (String)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateFpgaImageRequest :: Newtype CreateFpgaImageRequest _
derive instance repGenericCreateFpgaImageRequest :: Generic CreateFpgaImageRequest _
instance showCreateFpgaImageRequest :: Show CreateFpgaImageRequest where
  show = genericShow
instance decodeCreateFpgaImageRequest :: Decode CreateFpgaImageRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateFpgaImageRequest :: Encode CreateFpgaImageRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateFpgaImageRequest from required parameters
newCreateFpgaImageRequest :: StorageLocation -> CreateFpgaImageRequest
newCreateFpgaImageRequest _InputStorageLocation = CreateFpgaImageRequest { "InputStorageLocation": _InputStorageLocation, "ClientToken": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LogsStorageLocation": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }

-- | Constructs CreateFpgaImageRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateFpgaImageRequest' :: StorageLocation -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InputStorageLocation" :: (StorageLocation) , "LogsStorageLocation" :: NullOrUndefined.NullOrUndefined (StorageLocation) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InputStorageLocation" :: (StorageLocation) , "LogsStorageLocation" :: NullOrUndefined.NullOrUndefined (StorageLocation) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateFpgaImageRequest
newCreateFpgaImageRequest' _InputStorageLocation customize = (CreateFpgaImageRequest <<< customize) { "InputStorageLocation": _InputStorageLocation, "ClientToken": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LogsStorageLocation": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }



newtype CreateFpgaImageResult = CreateFpgaImageResult 
  { "FpgaImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "FpgaImageGlobalId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateFpgaImageResult :: Newtype CreateFpgaImageResult _
derive instance repGenericCreateFpgaImageResult :: Generic CreateFpgaImageResult _
instance showCreateFpgaImageResult :: Show CreateFpgaImageResult where
  show = genericShow
instance decodeCreateFpgaImageResult :: Decode CreateFpgaImageResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateFpgaImageResult :: Encode CreateFpgaImageResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateFpgaImageResult from required parameters
newCreateFpgaImageResult :: CreateFpgaImageResult
newCreateFpgaImageResult  = CreateFpgaImageResult { "FpgaImageGlobalId": (NullOrUndefined Nothing), "FpgaImageId": (NullOrUndefined Nothing) }

-- | Constructs CreateFpgaImageResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateFpgaImageResult' :: ( { "FpgaImageId" :: NullOrUndefined.NullOrUndefined (String) , "FpgaImageGlobalId" :: NullOrUndefined.NullOrUndefined (String) } -> {"FpgaImageId" :: NullOrUndefined.NullOrUndefined (String) , "FpgaImageGlobalId" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateFpgaImageResult
newCreateFpgaImageResult'  customize = (CreateFpgaImageResult <<< customize) { "FpgaImageGlobalId": (NullOrUndefined Nothing), "FpgaImageId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateImage.</p>
newtype CreateImageRequest = CreateImageRequest 
  { "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingRequestList)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceId" :: (String)
  , "Name" :: (String)
  , "NoReboot" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateImageRequest :: Newtype CreateImageRequest _
derive instance repGenericCreateImageRequest :: Generic CreateImageRequest _
instance showCreateImageRequest :: Show CreateImageRequest where
  show = genericShow
instance decodeCreateImageRequest :: Decode CreateImageRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateImageRequest :: Encode CreateImageRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateImageRequest from required parameters
newCreateImageRequest :: String -> String -> CreateImageRequest
newCreateImageRequest _InstanceId _Name = CreateImageRequest { "InstanceId": _InstanceId, "Name": _Name, "BlockDeviceMappings": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "NoReboot": (NullOrUndefined Nothing) }

-- | Constructs CreateImageRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateImageRequest' :: String -> String -> ( { "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingRequestList) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) , "Name" :: (String) , "NoReboot" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingRequestList) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) , "Name" :: (String) , "NoReboot" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateImageRequest
newCreateImageRequest' _InstanceId _Name customize = (CreateImageRequest <<< customize) { "InstanceId": _InstanceId, "Name": _Name, "BlockDeviceMappings": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "NoReboot": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateImage.</p>
newtype CreateImageResult = CreateImageResult 
  { "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateImageResult :: Newtype CreateImageResult _
derive instance repGenericCreateImageResult :: Generic CreateImageResult _
instance showCreateImageResult :: Show CreateImageResult where
  show = genericShow
instance decodeCreateImageResult :: Decode CreateImageResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateImageResult :: Encode CreateImageResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateImageResult from required parameters
newCreateImageResult :: CreateImageResult
newCreateImageResult  = CreateImageResult { "ImageId": (NullOrUndefined Nothing) }

-- | Constructs CreateImageResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateImageResult' :: ( { "ImageId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ImageId" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateImageResult
newCreateImageResult'  customize = (CreateImageResult <<< customize) { "ImageId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateInstanceExportTask.</p>
newtype CreateInstanceExportTaskRequest = CreateInstanceExportTaskRequest 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "ExportToS3Task" :: NullOrUndefined.NullOrUndefined (ExportToS3TaskSpecification)
  , "InstanceId" :: (String)
  , "TargetEnvironment" :: NullOrUndefined.NullOrUndefined (ExportEnvironment)
  }
derive instance newtypeCreateInstanceExportTaskRequest :: Newtype CreateInstanceExportTaskRequest _
derive instance repGenericCreateInstanceExportTaskRequest :: Generic CreateInstanceExportTaskRequest _
instance showCreateInstanceExportTaskRequest :: Show CreateInstanceExportTaskRequest where
  show = genericShow
instance decodeCreateInstanceExportTaskRequest :: Decode CreateInstanceExportTaskRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateInstanceExportTaskRequest :: Encode CreateInstanceExportTaskRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateInstanceExportTaskRequest from required parameters
newCreateInstanceExportTaskRequest :: String -> CreateInstanceExportTaskRequest
newCreateInstanceExportTaskRequest _InstanceId = CreateInstanceExportTaskRequest { "InstanceId": _InstanceId, "Description": (NullOrUndefined Nothing), "ExportToS3Task": (NullOrUndefined Nothing), "TargetEnvironment": (NullOrUndefined Nothing) }

-- | Constructs CreateInstanceExportTaskRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateInstanceExportTaskRequest' :: String -> ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "ExportToS3Task" :: NullOrUndefined.NullOrUndefined (ExportToS3TaskSpecification) , "InstanceId" :: (String) , "TargetEnvironment" :: NullOrUndefined.NullOrUndefined (ExportEnvironment) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "ExportToS3Task" :: NullOrUndefined.NullOrUndefined (ExportToS3TaskSpecification) , "InstanceId" :: (String) , "TargetEnvironment" :: NullOrUndefined.NullOrUndefined (ExportEnvironment) } ) -> CreateInstanceExportTaskRequest
newCreateInstanceExportTaskRequest' _InstanceId customize = (CreateInstanceExportTaskRequest <<< customize) { "InstanceId": _InstanceId, "Description": (NullOrUndefined Nothing), "ExportToS3Task": (NullOrUndefined Nothing), "TargetEnvironment": (NullOrUndefined Nothing) }



-- | <p>Contains the output for CreateInstanceExportTask.</p>
newtype CreateInstanceExportTaskResult = CreateInstanceExportTaskResult 
  { "ExportTask" :: NullOrUndefined.NullOrUndefined (ExportTask)
  }
derive instance newtypeCreateInstanceExportTaskResult :: Newtype CreateInstanceExportTaskResult _
derive instance repGenericCreateInstanceExportTaskResult :: Generic CreateInstanceExportTaskResult _
instance showCreateInstanceExportTaskResult :: Show CreateInstanceExportTaskResult where
  show = genericShow
instance decodeCreateInstanceExportTaskResult :: Decode CreateInstanceExportTaskResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateInstanceExportTaskResult :: Encode CreateInstanceExportTaskResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateInstanceExportTaskResult from required parameters
newCreateInstanceExportTaskResult :: CreateInstanceExportTaskResult
newCreateInstanceExportTaskResult  = CreateInstanceExportTaskResult { "ExportTask": (NullOrUndefined Nothing) }

-- | Constructs CreateInstanceExportTaskResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateInstanceExportTaskResult' :: ( { "ExportTask" :: NullOrUndefined.NullOrUndefined (ExportTask) } -> {"ExportTask" :: NullOrUndefined.NullOrUndefined (ExportTask) } ) -> CreateInstanceExportTaskResult
newCreateInstanceExportTaskResult'  customize = (CreateInstanceExportTaskResult <<< customize) { "ExportTask": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateInternetGateway.</p>
newtype CreateInternetGatewayRequest = CreateInternetGatewayRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateInternetGatewayRequest :: Newtype CreateInternetGatewayRequest _
derive instance repGenericCreateInternetGatewayRequest :: Generic CreateInternetGatewayRequest _
instance showCreateInternetGatewayRequest :: Show CreateInternetGatewayRequest where
  show = genericShow
instance decodeCreateInternetGatewayRequest :: Decode CreateInternetGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateInternetGatewayRequest :: Encode CreateInternetGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateInternetGatewayRequest from required parameters
newCreateInternetGatewayRequest :: CreateInternetGatewayRequest
newCreateInternetGatewayRequest  = CreateInternetGatewayRequest { "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateInternetGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateInternetGatewayRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateInternetGatewayRequest
newCreateInternetGatewayRequest'  customize = (CreateInternetGatewayRequest <<< customize) { "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateInternetGateway.</p>
newtype CreateInternetGatewayResult = CreateInternetGatewayResult 
  { "InternetGateway" :: NullOrUndefined.NullOrUndefined (InternetGateway)
  }
derive instance newtypeCreateInternetGatewayResult :: Newtype CreateInternetGatewayResult _
derive instance repGenericCreateInternetGatewayResult :: Generic CreateInternetGatewayResult _
instance showCreateInternetGatewayResult :: Show CreateInternetGatewayResult where
  show = genericShow
instance decodeCreateInternetGatewayResult :: Decode CreateInternetGatewayResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateInternetGatewayResult :: Encode CreateInternetGatewayResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateInternetGatewayResult from required parameters
newCreateInternetGatewayResult :: CreateInternetGatewayResult
newCreateInternetGatewayResult  = CreateInternetGatewayResult { "InternetGateway": (NullOrUndefined Nothing) }

-- | Constructs CreateInternetGatewayResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateInternetGatewayResult' :: ( { "InternetGateway" :: NullOrUndefined.NullOrUndefined (InternetGateway) } -> {"InternetGateway" :: NullOrUndefined.NullOrUndefined (InternetGateway) } ) -> CreateInternetGatewayResult
newCreateInternetGatewayResult'  customize = (CreateInternetGatewayResult <<< customize) { "InternetGateway": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateKeyPair.</p>
newtype CreateKeyPairRequest = CreateKeyPairRequest 
  { "KeyName" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateKeyPairRequest :: Newtype CreateKeyPairRequest _
derive instance repGenericCreateKeyPairRequest :: Generic CreateKeyPairRequest _
instance showCreateKeyPairRequest :: Show CreateKeyPairRequest where
  show = genericShow
instance decodeCreateKeyPairRequest :: Decode CreateKeyPairRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateKeyPairRequest :: Encode CreateKeyPairRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateKeyPairRequest from required parameters
newCreateKeyPairRequest :: String -> CreateKeyPairRequest
newCreateKeyPairRequest _KeyName = CreateKeyPairRequest { "KeyName": _KeyName, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateKeyPairRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateKeyPairRequest' :: String -> ( { "KeyName" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"KeyName" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateKeyPairRequest
newCreateKeyPairRequest' _KeyName customize = (CreateKeyPairRequest <<< customize) { "KeyName": _KeyName, "DryRun": (NullOrUndefined Nothing) }



newtype CreateLaunchTemplateRequest = CreateLaunchTemplateRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: (LaunchTemplateName)
  , "VersionDescription" :: NullOrUndefined.NullOrUndefined (VersionDescription)
  , "LaunchTemplateData" :: (RequestLaunchTemplateData)
  }
derive instance newtypeCreateLaunchTemplateRequest :: Newtype CreateLaunchTemplateRequest _
derive instance repGenericCreateLaunchTemplateRequest :: Generic CreateLaunchTemplateRequest _
instance showCreateLaunchTemplateRequest :: Show CreateLaunchTemplateRequest where
  show = genericShow
instance decodeCreateLaunchTemplateRequest :: Decode CreateLaunchTemplateRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateLaunchTemplateRequest :: Encode CreateLaunchTemplateRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateLaunchTemplateRequest from required parameters
newCreateLaunchTemplateRequest :: RequestLaunchTemplateData -> LaunchTemplateName -> CreateLaunchTemplateRequest
newCreateLaunchTemplateRequest _LaunchTemplateData _LaunchTemplateName = CreateLaunchTemplateRequest { "LaunchTemplateData": _LaunchTemplateData, "LaunchTemplateName": _LaunchTemplateName, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "VersionDescription": (NullOrUndefined Nothing) }

-- | Constructs CreateLaunchTemplateRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateLaunchTemplateRequest' :: RequestLaunchTemplateData -> LaunchTemplateName -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: (LaunchTemplateName) , "VersionDescription" :: NullOrUndefined.NullOrUndefined (VersionDescription) , "LaunchTemplateData" :: (RequestLaunchTemplateData) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: (LaunchTemplateName) , "VersionDescription" :: NullOrUndefined.NullOrUndefined (VersionDescription) , "LaunchTemplateData" :: (RequestLaunchTemplateData) } ) -> CreateLaunchTemplateRequest
newCreateLaunchTemplateRequest' _LaunchTemplateData _LaunchTemplateName customize = (CreateLaunchTemplateRequest <<< customize) { "LaunchTemplateData": _LaunchTemplateData, "LaunchTemplateName": _LaunchTemplateName, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "VersionDescription": (NullOrUndefined Nothing) }



newtype CreateLaunchTemplateResult = CreateLaunchTemplateResult 
  { "LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplate)
  }
derive instance newtypeCreateLaunchTemplateResult :: Newtype CreateLaunchTemplateResult _
derive instance repGenericCreateLaunchTemplateResult :: Generic CreateLaunchTemplateResult _
instance showCreateLaunchTemplateResult :: Show CreateLaunchTemplateResult where
  show = genericShow
instance decodeCreateLaunchTemplateResult :: Decode CreateLaunchTemplateResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateLaunchTemplateResult :: Encode CreateLaunchTemplateResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateLaunchTemplateResult from required parameters
newCreateLaunchTemplateResult :: CreateLaunchTemplateResult
newCreateLaunchTemplateResult  = CreateLaunchTemplateResult { "LaunchTemplate": (NullOrUndefined Nothing) }

-- | Constructs CreateLaunchTemplateResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateLaunchTemplateResult' :: ( { "LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplate) } -> {"LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplate) } ) -> CreateLaunchTemplateResult
newCreateLaunchTemplateResult'  customize = (CreateLaunchTemplateResult <<< customize) { "LaunchTemplate": (NullOrUndefined Nothing) }



newtype CreateLaunchTemplateVersionRequest = CreateLaunchTemplateVersionRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName)
  , "SourceVersion" :: NullOrUndefined.NullOrUndefined (String)
  , "VersionDescription" :: NullOrUndefined.NullOrUndefined (VersionDescription)
  , "LaunchTemplateData" :: (RequestLaunchTemplateData)
  }
derive instance newtypeCreateLaunchTemplateVersionRequest :: Newtype CreateLaunchTemplateVersionRequest _
derive instance repGenericCreateLaunchTemplateVersionRequest :: Generic CreateLaunchTemplateVersionRequest _
instance showCreateLaunchTemplateVersionRequest :: Show CreateLaunchTemplateVersionRequest where
  show = genericShow
instance decodeCreateLaunchTemplateVersionRequest :: Decode CreateLaunchTemplateVersionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateLaunchTemplateVersionRequest :: Encode CreateLaunchTemplateVersionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateLaunchTemplateVersionRequest from required parameters
newCreateLaunchTemplateVersionRequest :: RequestLaunchTemplateData -> CreateLaunchTemplateVersionRequest
newCreateLaunchTemplateVersionRequest _LaunchTemplateData = CreateLaunchTemplateVersionRequest { "LaunchTemplateData": _LaunchTemplateData, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "SourceVersion": (NullOrUndefined Nothing), "VersionDescription": (NullOrUndefined Nothing) }

-- | Constructs CreateLaunchTemplateVersionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateLaunchTemplateVersionRequest' :: RequestLaunchTemplateData -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "SourceVersion" :: NullOrUndefined.NullOrUndefined (String) , "VersionDescription" :: NullOrUndefined.NullOrUndefined (VersionDescription) , "LaunchTemplateData" :: (RequestLaunchTemplateData) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "SourceVersion" :: NullOrUndefined.NullOrUndefined (String) , "VersionDescription" :: NullOrUndefined.NullOrUndefined (VersionDescription) , "LaunchTemplateData" :: (RequestLaunchTemplateData) } ) -> CreateLaunchTemplateVersionRequest
newCreateLaunchTemplateVersionRequest' _LaunchTemplateData customize = (CreateLaunchTemplateVersionRequest <<< customize) { "LaunchTemplateData": _LaunchTemplateData, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "SourceVersion": (NullOrUndefined Nothing), "VersionDescription": (NullOrUndefined Nothing) }



newtype CreateLaunchTemplateVersionResult = CreateLaunchTemplateVersionResult 
  { "LaunchTemplateVersion" :: NullOrUndefined.NullOrUndefined (LaunchTemplateVersion)
  }
derive instance newtypeCreateLaunchTemplateVersionResult :: Newtype CreateLaunchTemplateVersionResult _
derive instance repGenericCreateLaunchTemplateVersionResult :: Generic CreateLaunchTemplateVersionResult _
instance showCreateLaunchTemplateVersionResult :: Show CreateLaunchTemplateVersionResult where
  show = genericShow
instance decodeCreateLaunchTemplateVersionResult :: Decode CreateLaunchTemplateVersionResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateLaunchTemplateVersionResult :: Encode CreateLaunchTemplateVersionResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateLaunchTemplateVersionResult from required parameters
newCreateLaunchTemplateVersionResult :: CreateLaunchTemplateVersionResult
newCreateLaunchTemplateVersionResult  = CreateLaunchTemplateVersionResult { "LaunchTemplateVersion": (NullOrUndefined Nothing) }

-- | Constructs CreateLaunchTemplateVersionResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateLaunchTemplateVersionResult' :: ( { "LaunchTemplateVersion" :: NullOrUndefined.NullOrUndefined (LaunchTemplateVersion) } -> {"LaunchTemplateVersion" :: NullOrUndefined.NullOrUndefined (LaunchTemplateVersion) } ) -> CreateLaunchTemplateVersionResult
newCreateLaunchTemplateVersionResult'  customize = (CreateLaunchTemplateVersionResult <<< customize) { "LaunchTemplateVersion": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateNatGateway.</p>
newtype CreateNatGatewayRequest = CreateNatGatewayRequest 
  { "AllocationId" :: (String)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "SubnetId" :: (String)
  }
derive instance newtypeCreateNatGatewayRequest :: Newtype CreateNatGatewayRequest _
derive instance repGenericCreateNatGatewayRequest :: Generic CreateNatGatewayRequest _
instance showCreateNatGatewayRequest :: Show CreateNatGatewayRequest where
  show = genericShow
instance decodeCreateNatGatewayRequest :: Decode CreateNatGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateNatGatewayRequest :: Encode CreateNatGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateNatGatewayRequest from required parameters
newCreateNatGatewayRequest :: String -> String -> CreateNatGatewayRequest
newCreateNatGatewayRequest _AllocationId _SubnetId = CreateNatGatewayRequest { "AllocationId": _AllocationId, "SubnetId": _SubnetId, "ClientToken": (NullOrUndefined Nothing) }

-- | Constructs CreateNatGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateNatGatewayRequest' :: String -> String -> ( { "AllocationId" :: (String) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: (String) } -> {"AllocationId" :: (String) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: (String) } ) -> CreateNatGatewayRequest
newCreateNatGatewayRequest' _AllocationId _SubnetId customize = (CreateNatGatewayRequest <<< customize) { "AllocationId": _AllocationId, "SubnetId": _SubnetId, "ClientToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateNatGateway.</p>
newtype CreateNatGatewayResult = CreateNatGatewayResult 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "NatGateway" :: NullOrUndefined.NullOrUndefined (NatGateway)
  }
derive instance newtypeCreateNatGatewayResult :: Newtype CreateNatGatewayResult _
derive instance repGenericCreateNatGatewayResult :: Generic CreateNatGatewayResult _
instance showCreateNatGatewayResult :: Show CreateNatGatewayResult where
  show = genericShow
instance decodeCreateNatGatewayResult :: Decode CreateNatGatewayResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateNatGatewayResult :: Encode CreateNatGatewayResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateNatGatewayResult from required parameters
newCreateNatGatewayResult :: CreateNatGatewayResult
newCreateNatGatewayResult  = CreateNatGatewayResult { "ClientToken": (NullOrUndefined Nothing), "NatGateway": (NullOrUndefined Nothing) }

-- | Constructs CreateNatGatewayResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateNatGatewayResult' :: ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "NatGateway" :: NullOrUndefined.NullOrUndefined (NatGateway) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "NatGateway" :: NullOrUndefined.NullOrUndefined (NatGateway) } ) -> CreateNatGatewayResult
newCreateNatGatewayResult'  customize = (CreateNatGatewayResult <<< customize) { "ClientToken": (NullOrUndefined Nothing), "NatGateway": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateNetworkAclEntry.</p>
newtype CreateNetworkAclEntryRequest = CreateNetworkAclEntryRequest 
  { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Egress" :: (Boolean)
  , "IcmpTypeCode" :: NullOrUndefined.NullOrUndefined (IcmpTypeCode)
  , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkAclId" :: (String)
  , "PortRange" :: NullOrUndefined.NullOrUndefined (PortRange)
  , "Protocol" :: (String)
  , "RuleAction" :: (RuleAction)
  , "RuleNumber" :: (Int)
  }
derive instance newtypeCreateNetworkAclEntryRequest :: Newtype CreateNetworkAclEntryRequest _
derive instance repGenericCreateNetworkAclEntryRequest :: Generic CreateNetworkAclEntryRequest _
instance showCreateNetworkAclEntryRequest :: Show CreateNetworkAclEntryRequest where
  show = genericShow
instance decodeCreateNetworkAclEntryRequest :: Decode CreateNetworkAclEntryRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateNetworkAclEntryRequest :: Encode CreateNetworkAclEntryRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateNetworkAclEntryRequest from required parameters
newCreateNetworkAclEntryRequest :: Boolean -> String -> String -> RuleAction -> Int -> CreateNetworkAclEntryRequest
newCreateNetworkAclEntryRequest _Egress _NetworkAclId _Protocol _RuleAction _RuleNumber = CreateNetworkAclEntryRequest { "Egress": _Egress, "NetworkAclId": _NetworkAclId, "Protocol": _Protocol, "RuleAction": _RuleAction, "RuleNumber": _RuleNumber, "CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "IcmpTypeCode": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing), "PortRange": (NullOrUndefined Nothing) }

-- | Constructs CreateNetworkAclEntryRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateNetworkAclEntryRequest' :: Boolean -> String -> String -> RuleAction -> Int -> ( { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Egress" :: (Boolean) , "IcmpTypeCode" :: NullOrUndefined.NullOrUndefined (IcmpTypeCode) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "NetworkAclId" :: (String) , "PortRange" :: NullOrUndefined.NullOrUndefined (PortRange) , "Protocol" :: (String) , "RuleAction" :: (RuleAction) , "RuleNumber" :: (Int) } -> {"CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Egress" :: (Boolean) , "IcmpTypeCode" :: NullOrUndefined.NullOrUndefined (IcmpTypeCode) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "NetworkAclId" :: (String) , "PortRange" :: NullOrUndefined.NullOrUndefined (PortRange) , "Protocol" :: (String) , "RuleAction" :: (RuleAction) , "RuleNumber" :: (Int) } ) -> CreateNetworkAclEntryRequest
newCreateNetworkAclEntryRequest' _Egress _NetworkAclId _Protocol _RuleAction _RuleNumber customize = (CreateNetworkAclEntryRequest <<< customize) { "Egress": _Egress, "NetworkAclId": _NetworkAclId, "Protocol": _Protocol, "RuleAction": _RuleAction, "RuleNumber": _RuleNumber, "CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "IcmpTypeCode": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing), "PortRange": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateNetworkAcl.</p>
newtype CreateNetworkAclRequest = CreateNetworkAclRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcId" :: (String)
  }
derive instance newtypeCreateNetworkAclRequest :: Newtype CreateNetworkAclRequest _
derive instance repGenericCreateNetworkAclRequest :: Generic CreateNetworkAclRequest _
instance showCreateNetworkAclRequest :: Show CreateNetworkAclRequest where
  show = genericShow
instance decodeCreateNetworkAclRequest :: Decode CreateNetworkAclRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateNetworkAclRequest :: Encode CreateNetworkAclRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateNetworkAclRequest from required parameters
newCreateNetworkAclRequest :: String -> CreateNetworkAclRequest
newCreateNetworkAclRequest _VpcId = CreateNetworkAclRequest { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateNetworkAclRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateNetworkAclRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: (String) } ) -> CreateNetworkAclRequest
newCreateNetworkAclRequest' _VpcId customize = (CreateNetworkAclRequest <<< customize) { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateNetworkAcl.</p>
newtype CreateNetworkAclResult = CreateNetworkAclResult 
  { "NetworkAcl" :: NullOrUndefined.NullOrUndefined (NetworkAcl)
  }
derive instance newtypeCreateNetworkAclResult :: Newtype CreateNetworkAclResult _
derive instance repGenericCreateNetworkAclResult :: Generic CreateNetworkAclResult _
instance showCreateNetworkAclResult :: Show CreateNetworkAclResult where
  show = genericShow
instance decodeCreateNetworkAclResult :: Decode CreateNetworkAclResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateNetworkAclResult :: Encode CreateNetworkAclResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateNetworkAclResult from required parameters
newCreateNetworkAclResult :: CreateNetworkAclResult
newCreateNetworkAclResult  = CreateNetworkAclResult { "NetworkAcl": (NullOrUndefined Nothing) }

-- | Constructs CreateNetworkAclResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateNetworkAclResult' :: ( { "NetworkAcl" :: NullOrUndefined.NullOrUndefined (NetworkAcl) } -> {"NetworkAcl" :: NullOrUndefined.NullOrUndefined (NetworkAcl) } ) -> CreateNetworkAclResult
newCreateNetworkAclResult'  customize = (CreateNetworkAclResult <<< customize) { "NetworkAcl": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateNetworkInterfacePermission.</p>
newtype CreateNetworkInterfacePermissionRequest = CreateNetworkInterfacePermissionRequest 
  { "NetworkInterfaceId" :: (String)
  , "AwsAccountId" :: NullOrUndefined.NullOrUndefined (String)
  , "AwsService" :: NullOrUndefined.NullOrUndefined (String)
  , "Permission" :: (InterfacePermissionType)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateNetworkInterfacePermissionRequest :: Newtype CreateNetworkInterfacePermissionRequest _
derive instance repGenericCreateNetworkInterfacePermissionRequest :: Generic CreateNetworkInterfacePermissionRequest _
instance showCreateNetworkInterfacePermissionRequest :: Show CreateNetworkInterfacePermissionRequest where
  show = genericShow
instance decodeCreateNetworkInterfacePermissionRequest :: Decode CreateNetworkInterfacePermissionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateNetworkInterfacePermissionRequest :: Encode CreateNetworkInterfacePermissionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateNetworkInterfacePermissionRequest from required parameters
newCreateNetworkInterfacePermissionRequest :: String -> InterfacePermissionType -> CreateNetworkInterfacePermissionRequest
newCreateNetworkInterfacePermissionRequest _NetworkInterfaceId _Permission = CreateNetworkInterfacePermissionRequest { "NetworkInterfaceId": _NetworkInterfaceId, "Permission": _Permission, "AwsAccountId": (NullOrUndefined Nothing), "AwsService": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateNetworkInterfacePermissionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateNetworkInterfacePermissionRequest' :: String -> InterfacePermissionType -> ( { "NetworkInterfaceId" :: (String) , "AwsAccountId" :: NullOrUndefined.NullOrUndefined (String) , "AwsService" :: NullOrUndefined.NullOrUndefined (String) , "Permission" :: (InterfacePermissionType) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"NetworkInterfaceId" :: (String) , "AwsAccountId" :: NullOrUndefined.NullOrUndefined (String) , "AwsService" :: NullOrUndefined.NullOrUndefined (String) , "Permission" :: (InterfacePermissionType) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateNetworkInterfacePermissionRequest
newCreateNetworkInterfacePermissionRequest' _NetworkInterfaceId _Permission customize = (CreateNetworkInterfacePermissionRequest <<< customize) { "NetworkInterfaceId": _NetworkInterfaceId, "Permission": _Permission, "AwsAccountId": (NullOrUndefined Nothing), "AwsService": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateNetworkInterfacePermission.</p>
newtype CreateNetworkInterfacePermissionResult = CreateNetworkInterfacePermissionResult 
  { "InterfacePermission" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermission)
  }
derive instance newtypeCreateNetworkInterfacePermissionResult :: Newtype CreateNetworkInterfacePermissionResult _
derive instance repGenericCreateNetworkInterfacePermissionResult :: Generic CreateNetworkInterfacePermissionResult _
instance showCreateNetworkInterfacePermissionResult :: Show CreateNetworkInterfacePermissionResult where
  show = genericShow
instance decodeCreateNetworkInterfacePermissionResult :: Decode CreateNetworkInterfacePermissionResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateNetworkInterfacePermissionResult :: Encode CreateNetworkInterfacePermissionResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateNetworkInterfacePermissionResult from required parameters
newCreateNetworkInterfacePermissionResult :: CreateNetworkInterfacePermissionResult
newCreateNetworkInterfacePermissionResult  = CreateNetworkInterfacePermissionResult { "InterfacePermission": (NullOrUndefined Nothing) }

-- | Constructs CreateNetworkInterfacePermissionResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateNetworkInterfacePermissionResult' :: ( { "InterfacePermission" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermission) } -> {"InterfacePermission" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermission) } ) -> CreateNetworkInterfacePermissionResult
newCreateNetworkInterfacePermissionResult'  customize = (CreateNetworkInterfacePermissionResult <<< customize) { "InterfacePermission": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateNetworkInterface.</p>
newtype CreateNetworkInterfaceRequest = CreateNetworkInterfaceRequest 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList)
  , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList)
  , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "SubnetId" :: (String)
  }
derive instance newtypeCreateNetworkInterfaceRequest :: Newtype CreateNetworkInterfaceRequest _
derive instance repGenericCreateNetworkInterfaceRequest :: Generic CreateNetworkInterfaceRequest _
instance showCreateNetworkInterfaceRequest :: Show CreateNetworkInterfaceRequest where
  show = genericShow
instance decodeCreateNetworkInterfaceRequest :: Decode CreateNetworkInterfaceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateNetworkInterfaceRequest :: Encode CreateNetworkInterfaceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateNetworkInterfaceRequest from required parameters
newCreateNetworkInterfaceRequest :: String -> CreateNetworkInterfaceRequest
newCreateNetworkInterfaceRequest _SubnetId = CreateNetworkInterfaceRequest { "SubnetId": _SubnetId, "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing) }

-- | Constructs CreateNetworkInterfaceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateNetworkInterfaceRequest' :: String -> ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "SubnetId" :: (String) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "SubnetId" :: (String) } ) -> CreateNetworkInterfaceRequest
newCreateNetworkInterfaceRequest' _SubnetId customize = (CreateNetworkInterfaceRequest <<< customize) { "SubnetId": _SubnetId, "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateNetworkInterface.</p>
newtype CreateNetworkInterfaceResult = CreateNetworkInterfaceResult 
  { "NetworkInterface" :: NullOrUndefined.NullOrUndefined (NetworkInterface)
  }
derive instance newtypeCreateNetworkInterfaceResult :: Newtype CreateNetworkInterfaceResult _
derive instance repGenericCreateNetworkInterfaceResult :: Generic CreateNetworkInterfaceResult _
instance showCreateNetworkInterfaceResult :: Show CreateNetworkInterfaceResult where
  show = genericShow
instance decodeCreateNetworkInterfaceResult :: Decode CreateNetworkInterfaceResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateNetworkInterfaceResult :: Encode CreateNetworkInterfaceResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateNetworkInterfaceResult from required parameters
newCreateNetworkInterfaceResult :: CreateNetworkInterfaceResult
newCreateNetworkInterfaceResult  = CreateNetworkInterfaceResult { "NetworkInterface": (NullOrUndefined Nothing) }

-- | Constructs CreateNetworkInterfaceResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateNetworkInterfaceResult' :: ( { "NetworkInterface" :: NullOrUndefined.NullOrUndefined (NetworkInterface) } -> {"NetworkInterface" :: NullOrUndefined.NullOrUndefined (NetworkInterface) } ) -> CreateNetworkInterfaceResult
newCreateNetworkInterfaceResult'  customize = (CreateNetworkInterfaceResult <<< customize) { "NetworkInterface": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreatePlacementGroup.</p>
newtype CreatePlacementGroupRequest = CreatePlacementGroupRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "GroupName" :: (String)
  , "Strategy" :: (PlacementStrategy)
  }
derive instance newtypeCreatePlacementGroupRequest :: Newtype CreatePlacementGroupRequest _
derive instance repGenericCreatePlacementGroupRequest :: Generic CreatePlacementGroupRequest _
instance showCreatePlacementGroupRequest :: Show CreatePlacementGroupRequest where
  show = genericShow
instance decodeCreatePlacementGroupRequest :: Decode CreatePlacementGroupRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreatePlacementGroupRequest :: Encode CreatePlacementGroupRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreatePlacementGroupRequest from required parameters
newCreatePlacementGroupRequest :: String -> PlacementStrategy -> CreatePlacementGroupRequest
newCreatePlacementGroupRequest _GroupName _Strategy = CreatePlacementGroupRequest { "GroupName": _GroupName, "Strategy": _Strategy, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreatePlacementGroupRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreatePlacementGroupRequest' :: String -> PlacementStrategy -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupName" :: (String) , "Strategy" :: (PlacementStrategy) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupName" :: (String) , "Strategy" :: (PlacementStrategy) } ) -> CreatePlacementGroupRequest
newCreatePlacementGroupRequest' _GroupName _Strategy customize = (CreatePlacementGroupRequest <<< customize) { "GroupName": _GroupName, "Strategy": _Strategy, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateReservedInstancesListing.</p>
newtype CreateReservedInstancesListingRequest = CreateReservedInstancesListingRequest 
  { "ClientToken" :: (String)
  , "InstanceCount" :: (Int)
  , "PriceSchedules" :: (PriceScheduleSpecificationList)
  , "ReservedInstancesId" :: (String)
  }
derive instance newtypeCreateReservedInstancesListingRequest :: Newtype CreateReservedInstancesListingRequest _
derive instance repGenericCreateReservedInstancesListingRequest :: Generic CreateReservedInstancesListingRequest _
instance showCreateReservedInstancesListingRequest :: Show CreateReservedInstancesListingRequest where
  show = genericShow
instance decodeCreateReservedInstancesListingRequest :: Decode CreateReservedInstancesListingRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateReservedInstancesListingRequest :: Encode CreateReservedInstancesListingRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateReservedInstancesListingRequest from required parameters
newCreateReservedInstancesListingRequest :: String -> Int -> PriceScheduleSpecificationList -> String -> CreateReservedInstancesListingRequest
newCreateReservedInstancesListingRequest _ClientToken _InstanceCount _PriceSchedules _ReservedInstancesId = CreateReservedInstancesListingRequest { "ClientToken": _ClientToken, "InstanceCount": _InstanceCount, "PriceSchedules": _PriceSchedules, "ReservedInstancesId": _ReservedInstancesId }

-- | Constructs CreateReservedInstancesListingRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateReservedInstancesListingRequest' :: String -> Int -> PriceScheduleSpecificationList -> String -> ( { "ClientToken" :: (String) , "InstanceCount" :: (Int) , "PriceSchedules" :: (PriceScheduleSpecificationList) , "ReservedInstancesId" :: (String) } -> {"ClientToken" :: (String) , "InstanceCount" :: (Int) , "PriceSchedules" :: (PriceScheduleSpecificationList) , "ReservedInstancesId" :: (String) } ) -> CreateReservedInstancesListingRequest
newCreateReservedInstancesListingRequest' _ClientToken _InstanceCount _PriceSchedules _ReservedInstancesId customize = (CreateReservedInstancesListingRequest <<< customize) { "ClientToken": _ClientToken, "InstanceCount": _InstanceCount, "PriceSchedules": _PriceSchedules, "ReservedInstancesId": _ReservedInstancesId }



-- | <p>Contains the output of CreateReservedInstancesListing.</p>
newtype CreateReservedInstancesListingResult = CreateReservedInstancesListingResult 
  { "ReservedInstancesListings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesListingList)
  }
derive instance newtypeCreateReservedInstancesListingResult :: Newtype CreateReservedInstancesListingResult _
derive instance repGenericCreateReservedInstancesListingResult :: Generic CreateReservedInstancesListingResult _
instance showCreateReservedInstancesListingResult :: Show CreateReservedInstancesListingResult where
  show = genericShow
instance decodeCreateReservedInstancesListingResult :: Decode CreateReservedInstancesListingResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateReservedInstancesListingResult :: Encode CreateReservedInstancesListingResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateReservedInstancesListingResult from required parameters
newCreateReservedInstancesListingResult :: CreateReservedInstancesListingResult
newCreateReservedInstancesListingResult  = CreateReservedInstancesListingResult { "ReservedInstancesListings": (NullOrUndefined Nothing) }

-- | Constructs CreateReservedInstancesListingResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateReservedInstancesListingResult' :: ( { "ReservedInstancesListings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesListingList) } -> {"ReservedInstancesListings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesListingList) } ) -> CreateReservedInstancesListingResult
newCreateReservedInstancesListingResult'  customize = (CreateReservedInstancesListingResult <<< customize) { "ReservedInstancesListings": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateRoute.</p>
newtype CreateRouteRequest = CreateRouteRequest 
  { "DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "GatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "RouteTableId" :: (String)
  , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateRouteRequest :: Newtype CreateRouteRequest _
derive instance repGenericCreateRouteRequest :: Generic CreateRouteRequest _
instance showCreateRouteRequest :: Show CreateRouteRequest where
  show = genericShow
instance decodeCreateRouteRequest :: Decode CreateRouteRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateRouteRequest :: Encode CreateRouteRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateRouteRequest from required parameters
newCreateRouteRequest :: String -> CreateRouteRequest
newCreateRouteRequest _RouteTableId = CreateRouteRequest { "RouteTableId": _RouteTableId, "DestinationCidrBlock": (NullOrUndefined Nothing), "DestinationIpv6CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EgressOnlyInternetGatewayId": (NullOrUndefined Nothing), "GatewayId": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "NatGatewayId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }

-- | Constructs CreateRouteRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateRouteRequest' :: String -> ( { "DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "GatewayId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "RouteTableId" :: (String) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } -> {"DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "GatewayId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "RouteTableId" :: (String) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateRouteRequest
newCreateRouteRequest' _RouteTableId customize = (CreateRouteRequest <<< customize) { "RouteTableId": _RouteTableId, "DestinationCidrBlock": (NullOrUndefined Nothing), "DestinationIpv6CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EgressOnlyInternetGatewayId": (NullOrUndefined Nothing), "GatewayId": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "NatGatewayId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateRoute.</p>
newtype CreateRouteResult = CreateRouteResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateRouteResult :: Newtype CreateRouteResult _
derive instance repGenericCreateRouteResult :: Generic CreateRouteResult _
instance showCreateRouteResult :: Show CreateRouteResult where
  show = genericShow
instance decodeCreateRouteResult :: Decode CreateRouteResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateRouteResult :: Encode CreateRouteResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateRouteResult from required parameters
newCreateRouteResult :: CreateRouteResult
newCreateRouteResult  = CreateRouteResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs CreateRouteResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateRouteResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateRouteResult
newCreateRouteResult'  customize = (CreateRouteResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateRouteTable.</p>
newtype CreateRouteTableRequest = CreateRouteTableRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcId" :: (String)
  }
derive instance newtypeCreateRouteTableRequest :: Newtype CreateRouteTableRequest _
derive instance repGenericCreateRouteTableRequest :: Generic CreateRouteTableRequest _
instance showCreateRouteTableRequest :: Show CreateRouteTableRequest where
  show = genericShow
instance decodeCreateRouteTableRequest :: Decode CreateRouteTableRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateRouteTableRequest :: Encode CreateRouteTableRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateRouteTableRequest from required parameters
newCreateRouteTableRequest :: String -> CreateRouteTableRequest
newCreateRouteTableRequest _VpcId = CreateRouteTableRequest { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateRouteTableRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateRouteTableRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: (String) } ) -> CreateRouteTableRequest
newCreateRouteTableRequest' _VpcId customize = (CreateRouteTableRequest <<< customize) { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateRouteTable.</p>
newtype CreateRouteTableResult = CreateRouteTableResult 
  { "RouteTable" :: NullOrUndefined.NullOrUndefined (RouteTable)
  }
derive instance newtypeCreateRouteTableResult :: Newtype CreateRouteTableResult _
derive instance repGenericCreateRouteTableResult :: Generic CreateRouteTableResult _
instance showCreateRouteTableResult :: Show CreateRouteTableResult where
  show = genericShow
instance decodeCreateRouteTableResult :: Decode CreateRouteTableResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateRouteTableResult :: Encode CreateRouteTableResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateRouteTableResult from required parameters
newCreateRouteTableResult :: CreateRouteTableResult
newCreateRouteTableResult  = CreateRouteTableResult { "RouteTable": (NullOrUndefined Nothing) }

-- | Constructs CreateRouteTableResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateRouteTableResult' :: ( { "RouteTable" :: NullOrUndefined.NullOrUndefined (RouteTable) } -> {"RouteTable" :: NullOrUndefined.NullOrUndefined (RouteTable) } ) -> CreateRouteTableResult
newCreateRouteTableResult'  customize = (CreateRouteTableResult <<< customize) { "RouteTable": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateSecurityGroup.</p>
newtype CreateSecurityGroupRequest = CreateSecurityGroupRequest 
  { "Description" :: (String)
  , "GroupName" :: (String)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateSecurityGroupRequest :: Newtype CreateSecurityGroupRequest _
derive instance repGenericCreateSecurityGroupRequest :: Generic CreateSecurityGroupRequest _
instance showCreateSecurityGroupRequest :: Show CreateSecurityGroupRequest where
  show = genericShow
instance decodeCreateSecurityGroupRequest :: Decode CreateSecurityGroupRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateSecurityGroupRequest :: Encode CreateSecurityGroupRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateSecurityGroupRequest from required parameters
newCreateSecurityGroupRequest :: String -> String -> CreateSecurityGroupRequest
newCreateSecurityGroupRequest _Description _GroupName = CreateSecurityGroupRequest { "Description": _Description, "GroupName": _GroupName, "DryRun": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs CreateSecurityGroupRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateSecurityGroupRequest' :: String -> String -> ( { "Description" :: (String) , "GroupName" :: (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Description" :: (String) , "GroupName" :: (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateSecurityGroupRequest
newCreateSecurityGroupRequest' _Description _GroupName customize = (CreateSecurityGroupRequest <<< customize) { "Description": _Description, "GroupName": _GroupName, "DryRun": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateSecurityGroup.</p>
newtype CreateSecurityGroupResult = CreateSecurityGroupResult 
  { "GroupId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateSecurityGroupResult :: Newtype CreateSecurityGroupResult _
derive instance repGenericCreateSecurityGroupResult :: Generic CreateSecurityGroupResult _
instance showCreateSecurityGroupResult :: Show CreateSecurityGroupResult where
  show = genericShow
instance decodeCreateSecurityGroupResult :: Decode CreateSecurityGroupResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateSecurityGroupResult :: Encode CreateSecurityGroupResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateSecurityGroupResult from required parameters
newCreateSecurityGroupResult :: CreateSecurityGroupResult
newCreateSecurityGroupResult  = CreateSecurityGroupResult { "GroupId": (NullOrUndefined Nothing) }

-- | Constructs CreateSecurityGroupResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateSecurityGroupResult' :: ( { "GroupId" :: NullOrUndefined.NullOrUndefined (String) } -> {"GroupId" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateSecurityGroupResult
newCreateSecurityGroupResult'  customize = (CreateSecurityGroupResult <<< customize) { "GroupId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateSnapshot.</p>
newtype CreateSnapshotRequest = CreateSnapshotRequest 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeId" :: (String)
  , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (TagSpecificationList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateSnapshotRequest :: Newtype CreateSnapshotRequest _
derive instance repGenericCreateSnapshotRequest :: Generic CreateSnapshotRequest _
instance showCreateSnapshotRequest :: Show CreateSnapshotRequest where
  show = genericShow
instance decodeCreateSnapshotRequest :: Decode CreateSnapshotRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateSnapshotRequest :: Encode CreateSnapshotRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateSnapshotRequest from required parameters
newCreateSnapshotRequest :: String -> CreateSnapshotRequest
newCreateSnapshotRequest _VolumeId = CreateSnapshotRequest { "VolumeId": _VolumeId, "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing) }

-- | Constructs CreateSnapshotRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateSnapshotRequest' :: String -> ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "VolumeId" :: (String) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (TagSpecificationList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "VolumeId" :: (String) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (TagSpecificationList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateSnapshotRequest
newCreateSnapshotRequest' _VolumeId customize = (CreateSnapshotRequest <<< customize) { "VolumeId": _VolumeId, "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateSpotDatafeedSubscription.</p>
newtype CreateSpotDatafeedSubscriptionRequest = CreateSpotDatafeedSubscriptionRequest 
  { "Bucket" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Prefix" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateSpotDatafeedSubscriptionRequest :: Newtype CreateSpotDatafeedSubscriptionRequest _
derive instance repGenericCreateSpotDatafeedSubscriptionRequest :: Generic CreateSpotDatafeedSubscriptionRequest _
instance showCreateSpotDatafeedSubscriptionRequest :: Show CreateSpotDatafeedSubscriptionRequest where
  show = genericShow
instance decodeCreateSpotDatafeedSubscriptionRequest :: Decode CreateSpotDatafeedSubscriptionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateSpotDatafeedSubscriptionRequest :: Encode CreateSpotDatafeedSubscriptionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateSpotDatafeedSubscriptionRequest from required parameters
newCreateSpotDatafeedSubscriptionRequest :: String -> CreateSpotDatafeedSubscriptionRequest
newCreateSpotDatafeedSubscriptionRequest _Bucket = CreateSpotDatafeedSubscriptionRequest { "Bucket": _Bucket, "DryRun": (NullOrUndefined Nothing), "Prefix": (NullOrUndefined Nothing) }

-- | Constructs CreateSpotDatafeedSubscriptionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateSpotDatafeedSubscriptionRequest' :: String -> ( { "Bucket" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Prefix" :: NullOrUndefined.NullOrUndefined (String) } -> {"Bucket" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Prefix" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateSpotDatafeedSubscriptionRequest
newCreateSpotDatafeedSubscriptionRequest' _Bucket customize = (CreateSpotDatafeedSubscriptionRequest <<< customize) { "Bucket": _Bucket, "DryRun": (NullOrUndefined Nothing), "Prefix": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateSpotDatafeedSubscription.</p>
newtype CreateSpotDatafeedSubscriptionResult = CreateSpotDatafeedSubscriptionResult 
  { "SpotDatafeedSubscription" :: NullOrUndefined.NullOrUndefined (SpotDatafeedSubscription)
  }
derive instance newtypeCreateSpotDatafeedSubscriptionResult :: Newtype CreateSpotDatafeedSubscriptionResult _
derive instance repGenericCreateSpotDatafeedSubscriptionResult :: Generic CreateSpotDatafeedSubscriptionResult _
instance showCreateSpotDatafeedSubscriptionResult :: Show CreateSpotDatafeedSubscriptionResult where
  show = genericShow
instance decodeCreateSpotDatafeedSubscriptionResult :: Decode CreateSpotDatafeedSubscriptionResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateSpotDatafeedSubscriptionResult :: Encode CreateSpotDatafeedSubscriptionResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateSpotDatafeedSubscriptionResult from required parameters
newCreateSpotDatafeedSubscriptionResult :: CreateSpotDatafeedSubscriptionResult
newCreateSpotDatafeedSubscriptionResult  = CreateSpotDatafeedSubscriptionResult { "SpotDatafeedSubscription": (NullOrUndefined Nothing) }

-- | Constructs CreateSpotDatafeedSubscriptionResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateSpotDatafeedSubscriptionResult' :: ( { "SpotDatafeedSubscription" :: NullOrUndefined.NullOrUndefined (SpotDatafeedSubscription) } -> {"SpotDatafeedSubscription" :: NullOrUndefined.NullOrUndefined (SpotDatafeedSubscription) } ) -> CreateSpotDatafeedSubscriptionResult
newCreateSpotDatafeedSubscriptionResult'  customize = (CreateSpotDatafeedSubscriptionResult <<< customize) { "SpotDatafeedSubscription": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateSubnet.</p>
newtype CreateSubnetRequest = CreateSubnetRequest 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "CidrBlock" :: (String)
  , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateSubnetRequest :: Newtype CreateSubnetRequest _
derive instance repGenericCreateSubnetRequest :: Generic CreateSubnetRequest _
instance showCreateSubnetRequest :: Show CreateSubnetRequest where
  show = genericShow
instance decodeCreateSubnetRequest :: Decode CreateSubnetRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateSubnetRequest :: Encode CreateSubnetRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateSubnetRequest from required parameters
newCreateSubnetRequest :: String -> String -> CreateSubnetRequest
newCreateSubnetRequest _CidrBlock _VpcId = CreateSubnetRequest { "CidrBlock": _CidrBlock, "VpcId": _VpcId, "AvailabilityZone": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing) }

-- | Constructs CreateSubnetRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateSubnetRequest' :: String -> String -> ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "CidrBlock" :: (String) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "CidrBlock" :: (String) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateSubnetRequest
newCreateSubnetRequest' _CidrBlock _VpcId customize = (CreateSubnetRequest <<< customize) { "CidrBlock": _CidrBlock, "VpcId": _VpcId, "AvailabilityZone": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateSubnet.</p>
newtype CreateSubnetResult = CreateSubnetResult 
  { "Subnet" :: NullOrUndefined.NullOrUndefined (Subnet)
  }
derive instance newtypeCreateSubnetResult :: Newtype CreateSubnetResult _
derive instance repGenericCreateSubnetResult :: Generic CreateSubnetResult _
instance showCreateSubnetResult :: Show CreateSubnetResult where
  show = genericShow
instance decodeCreateSubnetResult :: Decode CreateSubnetResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateSubnetResult :: Encode CreateSubnetResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateSubnetResult from required parameters
newCreateSubnetResult :: CreateSubnetResult
newCreateSubnetResult  = CreateSubnetResult { "Subnet": (NullOrUndefined Nothing) }

-- | Constructs CreateSubnetResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateSubnetResult' :: ( { "Subnet" :: NullOrUndefined.NullOrUndefined (Subnet) } -> {"Subnet" :: NullOrUndefined.NullOrUndefined (Subnet) } ) -> CreateSubnetResult
newCreateSubnetResult'  customize = (CreateSubnetResult <<< customize) { "Subnet": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateTags.</p>
newtype CreateTagsRequest = CreateTagsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Resources" :: (ResourceIdList)
  , "Tags" :: (TagList)
  }
derive instance newtypeCreateTagsRequest :: Newtype CreateTagsRequest _
derive instance repGenericCreateTagsRequest :: Generic CreateTagsRequest _
instance showCreateTagsRequest :: Show CreateTagsRequest where
  show = genericShow
instance decodeCreateTagsRequest :: Decode CreateTagsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateTagsRequest :: Encode CreateTagsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateTagsRequest from required parameters
newCreateTagsRequest :: ResourceIdList -> TagList -> CreateTagsRequest
newCreateTagsRequest _Resources _Tags = CreateTagsRequest { "Resources": _Resources, "Tags": _Tags, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateTagsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateTagsRequest' :: ResourceIdList -> TagList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Resources" :: (ResourceIdList) , "Tags" :: (TagList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Resources" :: (ResourceIdList) , "Tags" :: (TagList) } ) -> CreateTagsRequest
newCreateTagsRequest' _Resources _Tags customize = (CreateTagsRequest <<< customize) { "Resources": _Resources, "Tags": _Tags, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Describes the user or group to be added or removed from the permissions for a volume.</p>
newtype CreateVolumePermission = CreateVolumePermission 
  { "Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup)
  , "UserId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateVolumePermission :: Newtype CreateVolumePermission _
derive instance repGenericCreateVolumePermission :: Generic CreateVolumePermission _
instance showCreateVolumePermission :: Show CreateVolumePermission where
  show = genericShow
instance decodeCreateVolumePermission :: Decode CreateVolumePermission where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVolumePermission :: Encode CreateVolumePermission where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVolumePermission from required parameters
newCreateVolumePermission :: CreateVolumePermission
newCreateVolumePermission  = CreateVolumePermission { "Group": (NullOrUndefined Nothing), "UserId": (NullOrUndefined Nothing) }

-- | Constructs CreateVolumePermission's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVolumePermission' :: ( { "Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup) , "UserId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup) , "UserId" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateVolumePermission
newCreateVolumePermission'  customize = (CreateVolumePermission <<< customize) { "Group": (NullOrUndefined Nothing), "UserId": (NullOrUndefined Nothing) }



newtype CreateVolumePermissionList = CreateVolumePermissionList (Array CreateVolumePermission)
derive instance newtypeCreateVolumePermissionList :: Newtype CreateVolumePermissionList _
derive instance repGenericCreateVolumePermissionList :: Generic CreateVolumePermissionList _
instance showCreateVolumePermissionList :: Show CreateVolumePermissionList where
  show = genericShow
instance decodeCreateVolumePermissionList :: Decode CreateVolumePermissionList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVolumePermissionList :: Encode CreateVolumePermissionList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes modifications to the permissions for a volume.</p>
newtype CreateVolumePermissionModifications = CreateVolumePermissionModifications 
  { "Add" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionList)
  , "Remove" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionList)
  }
derive instance newtypeCreateVolumePermissionModifications :: Newtype CreateVolumePermissionModifications _
derive instance repGenericCreateVolumePermissionModifications :: Generic CreateVolumePermissionModifications _
instance showCreateVolumePermissionModifications :: Show CreateVolumePermissionModifications where
  show = genericShow
instance decodeCreateVolumePermissionModifications :: Decode CreateVolumePermissionModifications where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVolumePermissionModifications :: Encode CreateVolumePermissionModifications where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVolumePermissionModifications from required parameters
newCreateVolumePermissionModifications :: CreateVolumePermissionModifications
newCreateVolumePermissionModifications  = CreateVolumePermissionModifications { "Add": (NullOrUndefined Nothing), "Remove": (NullOrUndefined Nothing) }

-- | Constructs CreateVolumePermissionModifications's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVolumePermissionModifications' :: ( { "Add" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionList) , "Remove" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionList) } -> {"Add" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionList) , "Remove" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionList) } ) -> CreateVolumePermissionModifications
newCreateVolumePermissionModifications'  customize = (CreateVolumePermissionModifications <<< customize) { "Add": (NullOrUndefined Nothing), "Remove": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateVolume.</p>
newtype CreateVolumeRequest = CreateVolumeRequest 
  { "AvailabilityZone" :: (String)
  , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Iops" :: NullOrUndefined.NullOrUndefined (Int)
  , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String)
  , "Size" :: NullOrUndefined.NullOrUndefined (Int)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (TagSpecificationList)
  }
derive instance newtypeCreateVolumeRequest :: Newtype CreateVolumeRequest _
derive instance repGenericCreateVolumeRequest :: Generic CreateVolumeRequest _
instance showCreateVolumeRequest :: Show CreateVolumeRequest where
  show = genericShow
instance decodeCreateVolumeRequest :: Decode CreateVolumeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVolumeRequest :: Encode CreateVolumeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVolumeRequest from required parameters
newCreateVolumeRequest :: String -> CreateVolumeRequest
newCreateVolumeRequest _AvailabilityZone = CreateVolumeRequest { "AvailabilityZone": _AvailabilityZone, "DryRun": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "Size": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }

-- | Constructs CreateVolumeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVolumeRequest' :: String -> ( { "AvailabilityZone" :: (String) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "Size" :: NullOrUndefined.NullOrUndefined (Int) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (TagSpecificationList) } -> {"AvailabilityZone" :: (String) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "Size" :: NullOrUndefined.NullOrUndefined (Int) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (TagSpecificationList) } ) -> CreateVolumeRequest
newCreateVolumeRequest' _AvailabilityZone customize = (CreateVolumeRequest <<< customize) { "AvailabilityZone": _AvailabilityZone, "DryRun": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "Size": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }



newtype CreateVpcEndpointConnectionNotificationRequest = CreateVpcEndpointConnectionNotificationRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ServiceId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String)
  , "ConnectionNotificationArn" :: (String)
  , "ConnectionEvents" :: (ValueStringList)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateVpcEndpointConnectionNotificationRequest :: Newtype CreateVpcEndpointConnectionNotificationRequest _
derive instance repGenericCreateVpcEndpointConnectionNotificationRequest :: Generic CreateVpcEndpointConnectionNotificationRequest _
instance showCreateVpcEndpointConnectionNotificationRequest :: Show CreateVpcEndpointConnectionNotificationRequest where
  show = genericShow
instance decodeCreateVpcEndpointConnectionNotificationRequest :: Decode CreateVpcEndpointConnectionNotificationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpcEndpointConnectionNotificationRequest :: Encode CreateVpcEndpointConnectionNotificationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpcEndpointConnectionNotificationRequest from required parameters
newCreateVpcEndpointConnectionNotificationRequest :: ValueStringList -> String -> CreateVpcEndpointConnectionNotificationRequest
newCreateVpcEndpointConnectionNotificationRequest _ConnectionEvents _ConnectionNotificationArn = CreateVpcEndpointConnectionNotificationRequest { "ConnectionEvents": _ConnectionEvents, "ConnectionNotificationArn": _ConnectionNotificationArn, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "ServiceId": (NullOrUndefined Nothing), "VpcEndpointId": (NullOrUndefined Nothing) }

-- | Constructs CreateVpcEndpointConnectionNotificationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpcEndpointConnectionNotificationRequest' :: ValueStringList -> String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String) , "ConnectionNotificationArn" :: (String) , "ConnectionEvents" :: (ValueStringList) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String) , "ConnectionNotificationArn" :: (String) , "ConnectionEvents" :: (ValueStringList) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateVpcEndpointConnectionNotificationRequest
newCreateVpcEndpointConnectionNotificationRequest' _ConnectionEvents _ConnectionNotificationArn customize = (CreateVpcEndpointConnectionNotificationRequest <<< customize) { "ConnectionEvents": _ConnectionEvents, "ConnectionNotificationArn": _ConnectionNotificationArn, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "ServiceId": (NullOrUndefined Nothing), "VpcEndpointId": (NullOrUndefined Nothing) }



newtype CreateVpcEndpointConnectionNotificationResult = CreateVpcEndpointConnectionNotificationResult 
  { "ConnectionNotification" :: NullOrUndefined.NullOrUndefined (ConnectionNotification)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateVpcEndpointConnectionNotificationResult :: Newtype CreateVpcEndpointConnectionNotificationResult _
derive instance repGenericCreateVpcEndpointConnectionNotificationResult :: Generic CreateVpcEndpointConnectionNotificationResult _
instance showCreateVpcEndpointConnectionNotificationResult :: Show CreateVpcEndpointConnectionNotificationResult where
  show = genericShow
instance decodeCreateVpcEndpointConnectionNotificationResult :: Decode CreateVpcEndpointConnectionNotificationResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpcEndpointConnectionNotificationResult :: Encode CreateVpcEndpointConnectionNotificationResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpcEndpointConnectionNotificationResult from required parameters
newCreateVpcEndpointConnectionNotificationResult :: CreateVpcEndpointConnectionNotificationResult
newCreateVpcEndpointConnectionNotificationResult  = CreateVpcEndpointConnectionNotificationResult { "ClientToken": (NullOrUndefined Nothing), "ConnectionNotification": (NullOrUndefined Nothing) }

-- | Constructs CreateVpcEndpointConnectionNotificationResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpcEndpointConnectionNotificationResult' :: ( { "ConnectionNotification" :: NullOrUndefined.NullOrUndefined (ConnectionNotification) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"ConnectionNotification" :: NullOrUndefined.NullOrUndefined (ConnectionNotification) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateVpcEndpointConnectionNotificationResult
newCreateVpcEndpointConnectionNotificationResult'  customize = (CreateVpcEndpointConnectionNotificationResult <<< customize) { "ClientToken": (NullOrUndefined Nothing), "ConnectionNotification": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateVpcEndpoint.</p>
newtype CreateVpcEndpointRequest = CreateVpcEndpointRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcEndpointType" :: NullOrUndefined.NullOrUndefined (VpcEndpointType)
  , "VpcId" :: (String)
  , "ServiceName" :: (String)
  , "PolicyDocument" :: NullOrUndefined.NullOrUndefined (String)
  , "RouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "SubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateDnsEnabled" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateVpcEndpointRequest :: Newtype CreateVpcEndpointRequest _
derive instance repGenericCreateVpcEndpointRequest :: Generic CreateVpcEndpointRequest _
instance showCreateVpcEndpointRequest :: Show CreateVpcEndpointRequest where
  show = genericShow
instance decodeCreateVpcEndpointRequest :: Decode CreateVpcEndpointRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpcEndpointRequest :: Encode CreateVpcEndpointRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpcEndpointRequest from required parameters
newCreateVpcEndpointRequest :: String -> String -> CreateVpcEndpointRequest
newCreateVpcEndpointRequest _ServiceName _VpcId = CreateVpcEndpointRequest { "ServiceName": _ServiceName, "VpcId": _VpcId, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "PolicyDocument": (NullOrUndefined Nothing), "PrivateDnsEnabled": (NullOrUndefined Nothing), "RouteTableIds": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SubnetIds": (NullOrUndefined Nothing), "VpcEndpointType": (NullOrUndefined Nothing) }

-- | Constructs CreateVpcEndpointRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpcEndpointRequest' :: String -> String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcEndpointType" :: NullOrUndefined.NullOrUndefined (VpcEndpointType) , "VpcId" :: (String) , "ServiceName" :: (String) , "PolicyDocument" :: NullOrUndefined.NullOrUndefined (String) , "RouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "SubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "PrivateDnsEnabled" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcEndpointType" :: NullOrUndefined.NullOrUndefined (VpcEndpointType) , "VpcId" :: (String) , "ServiceName" :: (String) , "PolicyDocument" :: NullOrUndefined.NullOrUndefined (String) , "RouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "SubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "PrivateDnsEnabled" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateVpcEndpointRequest
newCreateVpcEndpointRequest' _ServiceName _VpcId customize = (CreateVpcEndpointRequest <<< customize) { "ServiceName": _ServiceName, "VpcId": _VpcId, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "PolicyDocument": (NullOrUndefined Nothing), "PrivateDnsEnabled": (NullOrUndefined Nothing), "RouteTableIds": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SubnetIds": (NullOrUndefined Nothing), "VpcEndpointType": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateVpcEndpoint.</p>
newtype CreateVpcEndpointResult = CreateVpcEndpointResult 
  { "VpcEndpoint" :: NullOrUndefined.NullOrUndefined (VpcEndpoint)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateVpcEndpointResult :: Newtype CreateVpcEndpointResult _
derive instance repGenericCreateVpcEndpointResult :: Generic CreateVpcEndpointResult _
instance showCreateVpcEndpointResult :: Show CreateVpcEndpointResult where
  show = genericShow
instance decodeCreateVpcEndpointResult :: Decode CreateVpcEndpointResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpcEndpointResult :: Encode CreateVpcEndpointResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpcEndpointResult from required parameters
newCreateVpcEndpointResult :: CreateVpcEndpointResult
newCreateVpcEndpointResult  = CreateVpcEndpointResult { "ClientToken": (NullOrUndefined Nothing), "VpcEndpoint": (NullOrUndefined Nothing) }

-- | Constructs CreateVpcEndpointResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpcEndpointResult' :: ( { "VpcEndpoint" :: NullOrUndefined.NullOrUndefined (VpcEndpoint) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"VpcEndpoint" :: NullOrUndefined.NullOrUndefined (VpcEndpoint) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateVpcEndpointResult
newCreateVpcEndpointResult'  customize = (CreateVpcEndpointResult <<< customize) { "ClientToken": (NullOrUndefined Nothing), "VpcEndpoint": (NullOrUndefined Nothing) }



newtype CreateVpcEndpointServiceConfigurationRequest = CreateVpcEndpointServiceConfigurationRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkLoadBalancerArns" :: (ValueStringList)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateVpcEndpointServiceConfigurationRequest :: Newtype CreateVpcEndpointServiceConfigurationRequest _
derive instance repGenericCreateVpcEndpointServiceConfigurationRequest :: Generic CreateVpcEndpointServiceConfigurationRequest _
instance showCreateVpcEndpointServiceConfigurationRequest :: Show CreateVpcEndpointServiceConfigurationRequest where
  show = genericShow
instance decodeCreateVpcEndpointServiceConfigurationRequest :: Decode CreateVpcEndpointServiceConfigurationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpcEndpointServiceConfigurationRequest :: Encode CreateVpcEndpointServiceConfigurationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpcEndpointServiceConfigurationRequest from required parameters
newCreateVpcEndpointServiceConfigurationRequest :: ValueStringList -> CreateVpcEndpointServiceConfigurationRequest
newCreateVpcEndpointServiceConfigurationRequest _NetworkLoadBalancerArns = CreateVpcEndpointServiceConfigurationRequest { "NetworkLoadBalancerArns": _NetworkLoadBalancerArns, "AcceptanceRequired": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateVpcEndpointServiceConfigurationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpcEndpointServiceConfigurationRequest' :: ValueStringList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkLoadBalancerArns" :: (ValueStringList) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkLoadBalancerArns" :: (ValueStringList) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateVpcEndpointServiceConfigurationRequest
newCreateVpcEndpointServiceConfigurationRequest' _NetworkLoadBalancerArns customize = (CreateVpcEndpointServiceConfigurationRequest <<< customize) { "NetworkLoadBalancerArns": _NetworkLoadBalancerArns, "AcceptanceRequired": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



newtype CreateVpcEndpointServiceConfigurationResult = CreateVpcEndpointServiceConfigurationResult 
  { "ServiceConfiguration" :: NullOrUndefined.NullOrUndefined (ServiceConfiguration)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateVpcEndpointServiceConfigurationResult :: Newtype CreateVpcEndpointServiceConfigurationResult _
derive instance repGenericCreateVpcEndpointServiceConfigurationResult :: Generic CreateVpcEndpointServiceConfigurationResult _
instance showCreateVpcEndpointServiceConfigurationResult :: Show CreateVpcEndpointServiceConfigurationResult where
  show = genericShow
instance decodeCreateVpcEndpointServiceConfigurationResult :: Decode CreateVpcEndpointServiceConfigurationResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpcEndpointServiceConfigurationResult :: Encode CreateVpcEndpointServiceConfigurationResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpcEndpointServiceConfigurationResult from required parameters
newCreateVpcEndpointServiceConfigurationResult :: CreateVpcEndpointServiceConfigurationResult
newCreateVpcEndpointServiceConfigurationResult  = CreateVpcEndpointServiceConfigurationResult { "ClientToken": (NullOrUndefined Nothing), "ServiceConfiguration": (NullOrUndefined Nothing) }

-- | Constructs CreateVpcEndpointServiceConfigurationResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpcEndpointServiceConfigurationResult' :: ( { "ServiceConfiguration" :: NullOrUndefined.NullOrUndefined (ServiceConfiguration) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"ServiceConfiguration" :: NullOrUndefined.NullOrUndefined (ServiceConfiguration) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateVpcEndpointServiceConfigurationResult
newCreateVpcEndpointServiceConfigurationResult'  customize = (CreateVpcEndpointServiceConfigurationResult <<< customize) { "ClientToken": (NullOrUndefined Nothing), "ServiceConfiguration": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateVpcPeeringConnection.</p>
newtype CreateVpcPeeringConnectionRequest = CreateVpcPeeringConnectionRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "PeerOwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "PeerVpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "PeerRegion" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreateVpcPeeringConnectionRequest :: Newtype CreateVpcPeeringConnectionRequest _
derive instance repGenericCreateVpcPeeringConnectionRequest :: Generic CreateVpcPeeringConnectionRequest _
instance showCreateVpcPeeringConnectionRequest :: Show CreateVpcPeeringConnectionRequest where
  show = genericShow
instance decodeCreateVpcPeeringConnectionRequest :: Decode CreateVpcPeeringConnectionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpcPeeringConnectionRequest :: Encode CreateVpcPeeringConnectionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpcPeeringConnectionRequest from required parameters
newCreateVpcPeeringConnectionRequest :: CreateVpcPeeringConnectionRequest
newCreateVpcPeeringConnectionRequest  = CreateVpcPeeringConnectionRequest { "DryRun": (NullOrUndefined Nothing), "PeerOwnerId": (NullOrUndefined Nothing), "PeerRegion": (NullOrUndefined Nothing), "PeerVpcId": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs CreateVpcPeeringConnectionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpcPeeringConnectionRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "PeerOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PeerVpcId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "PeerRegion" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "PeerOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PeerVpcId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "PeerRegion" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreateVpcPeeringConnectionRequest
newCreateVpcPeeringConnectionRequest'  customize = (CreateVpcPeeringConnectionRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "PeerOwnerId": (NullOrUndefined Nothing), "PeerRegion": (NullOrUndefined Nothing), "PeerVpcId": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateVpcPeeringConnection.</p>
newtype CreateVpcPeeringConnectionResult = CreateVpcPeeringConnectionResult 
  { "VpcPeeringConnection" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnection)
  }
derive instance newtypeCreateVpcPeeringConnectionResult :: Newtype CreateVpcPeeringConnectionResult _
derive instance repGenericCreateVpcPeeringConnectionResult :: Generic CreateVpcPeeringConnectionResult _
instance showCreateVpcPeeringConnectionResult :: Show CreateVpcPeeringConnectionResult where
  show = genericShow
instance decodeCreateVpcPeeringConnectionResult :: Decode CreateVpcPeeringConnectionResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpcPeeringConnectionResult :: Encode CreateVpcPeeringConnectionResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpcPeeringConnectionResult from required parameters
newCreateVpcPeeringConnectionResult :: CreateVpcPeeringConnectionResult
newCreateVpcPeeringConnectionResult  = CreateVpcPeeringConnectionResult { "VpcPeeringConnection": (NullOrUndefined Nothing) }

-- | Constructs CreateVpcPeeringConnectionResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpcPeeringConnectionResult' :: ( { "VpcPeeringConnection" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnection) } -> {"VpcPeeringConnection" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnection) } ) -> CreateVpcPeeringConnectionResult
newCreateVpcPeeringConnectionResult'  customize = (CreateVpcPeeringConnectionResult <<< customize) { "VpcPeeringConnection": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateVpc.</p>
newtype CreateVpcRequest = CreateVpcRequest 
  { "CidrBlock" :: (String)
  , "AmazonProvidedIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy)
  }
derive instance newtypeCreateVpcRequest :: Newtype CreateVpcRequest _
derive instance repGenericCreateVpcRequest :: Generic CreateVpcRequest _
instance showCreateVpcRequest :: Show CreateVpcRequest where
  show = genericShow
instance decodeCreateVpcRequest :: Decode CreateVpcRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpcRequest :: Encode CreateVpcRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpcRequest from required parameters
newCreateVpcRequest :: String -> CreateVpcRequest
newCreateVpcRequest _CidrBlock = CreateVpcRequest { "CidrBlock": _CidrBlock, "AmazonProvidedIpv6CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "InstanceTenancy": (NullOrUndefined Nothing) }

-- | Constructs CreateVpcRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpcRequest' :: String -> ( { "CidrBlock" :: (String) , "AmazonProvidedIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (Boolean) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) } -> {"CidrBlock" :: (String) , "AmazonProvidedIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (Boolean) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) } ) -> CreateVpcRequest
newCreateVpcRequest' _CidrBlock customize = (CreateVpcRequest <<< customize) { "CidrBlock": _CidrBlock, "AmazonProvidedIpv6CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "InstanceTenancy": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateVpc.</p>
newtype CreateVpcResult = CreateVpcResult 
  { "Vpc" :: NullOrUndefined.NullOrUndefined (Vpc)
  }
derive instance newtypeCreateVpcResult :: Newtype CreateVpcResult _
derive instance repGenericCreateVpcResult :: Generic CreateVpcResult _
instance showCreateVpcResult :: Show CreateVpcResult where
  show = genericShow
instance decodeCreateVpcResult :: Decode CreateVpcResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpcResult :: Encode CreateVpcResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpcResult from required parameters
newCreateVpcResult :: CreateVpcResult
newCreateVpcResult  = CreateVpcResult { "Vpc": (NullOrUndefined Nothing) }

-- | Constructs CreateVpcResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpcResult' :: ( { "Vpc" :: NullOrUndefined.NullOrUndefined (Vpc) } -> {"Vpc" :: NullOrUndefined.NullOrUndefined (Vpc) } ) -> CreateVpcResult
newCreateVpcResult'  customize = (CreateVpcResult <<< customize) { "Vpc": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateVpnConnection.</p>
newtype CreateVpnConnectionRequest = CreateVpnConnectionRequest 
  { "CustomerGatewayId" :: (String)
  , "Type" :: (String)
  , "VpnGatewayId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Options" :: NullOrUndefined.NullOrUndefined (VpnConnectionOptionsSpecification)
  }
derive instance newtypeCreateVpnConnectionRequest :: Newtype CreateVpnConnectionRequest _
derive instance repGenericCreateVpnConnectionRequest :: Generic CreateVpnConnectionRequest _
instance showCreateVpnConnectionRequest :: Show CreateVpnConnectionRequest where
  show = genericShow
instance decodeCreateVpnConnectionRequest :: Decode CreateVpnConnectionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpnConnectionRequest :: Encode CreateVpnConnectionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpnConnectionRequest from required parameters
newCreateVpnConnectionRequest :: String -> String -> String -> CreateVpnConnectionRequest
newCreateVpnConnectionRequest _CustomerGatewayId _Type _VpnGatewayId = CreateVpnConnectionRequest { "CustomerGatewayId": _CustomerGatewayId, "Type": _Type, "VpnGatewayId": _VpnGatewayId, "DryRun": (NullOrUndefined Nothing), "Options": (NullOrUndefined Nothing) }

-- | Constructs CreateVpnConnectionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpnConnectionRequest' :: String -> String -> String -> ( { "CustomerGatewayId" :: (String) , "Type" :: (String) , "VpnGatewayId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Options" :: NullOrUndefined.NullOrUndefined (VpnConnectionOptionsSpecification) } -> {"CustomerGatewayId" :: (String) , "Type" :: (String) , "VpnGatewayId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Options" :: NullOrUndefined.NullOrUndefined (VpnConnectionOptionsSpecification) } ) -> CreateVpnConnectionRequest
newCreateVpnConnectionRequest' _CustomerGatewayId _Type _VpnGatewayId customize = (CreateVpnConnectionRequest <<< customize) { "CustomerGatewayId": _CustomerGatewayId, "Type": _Type, "VpnGatewayId": _VpnGatewayId, "DryRun": (NullOrUndefined Nothing), "Options": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateVpnConnection.</p>
newtype CreateVpnConnectionResult = CreateVpnConnectionResult 
  { "VpnConnection" :: NullOrUndefined.NullOrUndefined (VpnConnection)
  }
derive instance newtypeCreateVpnConnectionResult :: Newtype CreateVpnConnectionResult _
derive instance repGenericCreateVpnConnectionResult :: Generic CreateVpnConnectionResult _
instance showCreateVpnConnectionResult :: Show CreateVpnConnectionResult where
  show = genericShow
instance decodeCreateVpnConnectionResult :: Decode CreateVpnConnectionResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpnConnectionResult :: Encode CreateVpnConnectionResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpnConnectionResult from required parameters
newCreateVpnConnectionResult :: CreateVpnConnectionResult
newCreateVpnConnectionResult  = CreateVpnConnectionResult { "VpnConnection": (NullOrUndefined Nothing) }

-- | Constructs CreateVpnConnectionResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpnConnectionResult' :: ( { "VpnConnection" :: NullOrUndefined.NullOrUndefined (VpnConnection) } -> {"VpnConnection" :: NullOrUndefined.NullOrUndefined (VpnConnection) } ) -> CreateVpnConnectionResult
newCreateVpnConnectionResult'  customize = (CreateVpnConnectionResult <<< customize) { "VpnConnection": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for CreateVpnConnectionRoute.</p>
newtype CreateVpnConnectionRouteRequest = CreateVpnConnectionRouteRequest 
  { "DestinationCidrBlock" :: (String)
  , "VpnConnectionId" :: (String)
  }
derive instance newtypeCreateVpnConnectionRouteRequest :: Newtype CreateVpnConnectionRouteRequest _
derive instance repGenericCreateVpnConnectionRouteRequest :: Generic CreateVpnConnectionRouteRequest _
instance showCreateVpnConnectionRouteRequest :: Show CreateVpnConnectionRouteRequest where
  show = genericShow
instance decodeCreateVpnConnectionRouteRequest :: Decode CreateVpnConnectionRouteRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpnConnectionRouteRequest :: Encode CreateVpnConnectionRouteRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpnConnectionRouteRequest from required parameters
newCreateVpnConnectionRouteRequest :: String -> String -> CreateVpnConnectionRouteRequest
newCreateVpnConnectionRouteRequest _DestinationCidrBlock _VpnConnectionId = CreateVpnConnectionRouteRequest { "DestinationCidrBlock": _DestinationCidrBlock, "VpnConnectionId": _VpnConnectionId }

-- | Constructs CreateVpnConnectionRouteRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpnConnectionRouteRequest' :: String -> String -> ( { "DestinationCidrBlock" :: (String) , "VpnConnectionId" :: (String) } -> {"DestinationCidrBlock" :: (String) , "VpnConnectionId" :: (String) } ) -> CreateVpnConnectionRouteRequest
newCreateVpnConnectionRouteRequest' _DestinationCidrBlock _VpnConnectionId customize = (CreateVpnConnectionRouteRequest <<< customize) { "DestinationCidrBlock": _DestinationCidrBlock, "VpnConnectionId": _VpnConnectionId }



-- | <p>Contains the parameters for CreateVpnGateway.</p>
newtype CreateVpnGatewayRequest = CreateVpnGatewayRequest 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "Type" :: (GatewayType)
  , "AmazonSideAsn" :: NullOrUndefined.NullOrUndefined (Number)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeCreateVpnGatewayRequest :: Newtype CreateVpnGatewayRequest _
derive instance repGenericCreateVpnGatewayRequest :: Generic CreateVpnGatewayRequest _
instance showCreateVpnGatewayRequest :: Show CreateVpnGatewayRequest where
  show = genericShow
instance decodeCreateVpnGatewayRequest :: Decode CreateVpnGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpnGatewayRequest :: Encode CreateVpnGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpnGatewayRequest from required parameters
newCreateVpnGatewayRequest :: GatewayType -> CreateVpnGatewayRequest
newCreateVpnGatewayRequest _Type = CreateVpnGatewayRequest { "Type": _Type, "AmazonSideAsn": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs CreateVpnGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpnGatewayRequest' :: GatewayType -> ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Type" :: (GatewayType) , "AmazonSideAsn" :: NullOrUndefined.NullOrUndefined (Number) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Type" :: (GatewayType) , "AmazonSideAsn" :: NullOrUndefined.NullOrUndefined (Number) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> CreateVpnGatewayRequest
newCreateVpnGatewayRequest' _Type customize = (CreateVpnGatewayRequest <<< customize) { "Type": _Type, "AmazonSideAsn": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of CreateVpnGateway.</p>
newtype CreateVpnGatewayResult = CreateVpnGatewayResult 
  { "VpnGateway" :: NullOrUndefined.NullOrUndefined (VpnGateway)
  }
derive instance newtypeCreateVpnGatewayResult :: Newtype CreateVpnGatewayResult _
derive instance repGenericCreateVpnGatewayResult :: Generic CreateVpnGatewayResult _
instance showCreateVpnGatewayResult :: Show CreateVpnGatewayResult where
  show = genericShow
instance decodeCreateVpnGatewayResult :: Decode CreateVpnGatewayResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreateVpnGatewayResult :: Encode CreateVpnGatewayResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreateVpnGatewayResult from required parameters
newCreateVpnGatewayResult :: CreateVpnGatewayResult
newCreateVpnGatewayResult  = CreateVpnGatewayResult { "VpnGateway": (NullOrUndefined Nothing) }

-- | Constructs CreateVpnGatewayResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreateVpnGatewayResult' :: ( { "VpnGateway" :: NullOrUndefined.NullOrUndefined (VpnGateway) } -> {"VpnGateway" :: NullOrUndefined.NullOrUndefined (VpnGateway) } ) -> CreateVpnGatewayResult
newCreateVpnGatewayResult'  customize = (CreateVpnGatewayResult <<< customize) { "VpnGateway": (NullOrUndefined Nothing) }



-- | <p>Describes the credit option for CPU usage of a T2 instance.</p>
newtype CreditSpecification = CreditSpecification 
  { "CpuCredits" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeCreditSpecification :: Newtype CreditSpecification _
derive instance repGenericCreditSpecification :: Generic CreditSpecification _
instance showCreditSpecification :: Show CreditSpecification where
  show = genericShow
instance decodeCreditSpecification :: Decode CreditSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreditSpecification :: Encode CreditSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreditSpecification from required parameters
newCreditSpecification :: CreditSpecification
newCreditSpecification  = CreditSpecification { "CpuCredits": (NullOrUndefined Nothing) }

-- | Constructs CreditSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreditSpecification' :: ( { "CpuCredits" :: NullOrUndefined.NullOrUndefined (String) } -> {"CpuCredits" :: NullOrUndefined.NullOrUndefined (String) } ) -> CreditSpecification
newCreditSpecification'  customize = (CreditSpecification <<< customize) { "CpuCredits": (NullOrUndefined Nothing) }



-- | <p>The credit option for CPU usage of a T2 instance.</p>
newtype CreditSpecificationRequest = CreditSpecificationRequest 
  { "CpuCredits" :: (String)
  }
derive instance newtypeCreditSpecificationRequest :: Newtype CreditSpecificationRequest _
derive instance repGenericCreditSpecificationRequest :: Generic CreditSpecificationRequest _
instance showCreditSpecificationRequest :: Show CreditSpecificationRequest where
  show = genericShow
instance decodeCreditSpecificationRequest :: Decode CreditSpecificationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCreditSpecificationRequest :: Encode CreditSpecificationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CreditSpecificationRequest from required parameters
newCreditSpecificationRequest :: String -> CreditSpecificationRequest
newCreditSpecificationRequest _CpuCredits = CreditSpecificationRequest { "CpuCredits": _CpuCredits }

-- | Constructs CreditSpecificationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCreditSpecificationRequest' :: String -> ( { "CpuCredits" :: (String) } -> {"CpuCredits" :: (String) } ) -> CreditSpecificationRequest
newCreditSpecificationRequest' _CpuCredits customize = (CreditSpecificationRequest <<< customize) { "CpuCredits": _CpuCredits }



newtype CurrencyCodeValues = CurrencyCodeValues String
derive instance newtypeCurrencyCodeValues :: Newtype CurrencyCodeValues _
derive instance repGenericCurrencyCodeValues :: Generic CurrencyCodeValues _
instance showCurrencyCodeValues :: Show CurrencyCodeValues where
  show = genericShow
instance decodeCurrencyCodeValues :: Decode CurrencyCodeValues where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCurrencyCodeValues :: Encode CurrencyCodeValues where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a customer gateway.</p>
newtype CustomerGateway = CustomerGateway 
  { "BgpAsn" :: NullOrUndefined.NullOrUndefined (String)
  , "CustomerGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "IpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (String)
  , "Type" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeCustomerGateway :: Newtype CustomerGateway _
derive instance repGenericCustomerGateway :: Generic CustomerGateway _
instance showCustomerGateway :: Show CustomerGateway where
  show = genericShow
instance decodeCustomerGateway :: Decode CustomerGateway where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCustomerGateway :: Encode CustomerGateway where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs CustomerGateway from required parameters
newCustomerGateway :: CustomerGateway
newCustomerGateway  = CustomerGateway { "BgpAsn": (NullOrUndefined Nothing), "CustomerGatewayId": (NullOrUndefined Nothing), "IpAddress": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing) }

-- | Constructs CustomerGateway's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newCustomerGateway' :: ( { "BgpAsn" :: NullOrUndefined.NullOrUndefined (String) , "CustomerGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "IpAddress" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (String) , "Type" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"BgpAsn" :: NullOrUndefined.NullOrUndefined (String) , "CustomerGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "IpAddress" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (String) , "Type" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> CustomerGateway
newCustomerGateway'  customize = (CustomerGateway <<< customize) { "BgpAsn": (NullOrUndefined Nothing), "CustomerGatewayId": (NullOrUndefined Nothing), "IpAddress": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing) }



newtype CustomerGatewayIdStringList = CustomerGatewayIdStringList (Array String)
derive instance newtypeCustomerGatewayIdStringList :: Newtype CustomerGatewayIdStringList _
derive instance repGenericCustomerGatewayIdStringList :: Generic CustomerGatewayIdStringList _
instance showCustomerGatewayIdStringList :: Show CustomerGatewayIdStringList where
  show = genericShow
instance decodeCustomerGatewayIdStringList :: Decode CustomerGatewayIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCustomerGatewayIdStringList :: Encode CustomerGatewayIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype CustomerGatewayList = CustomerGatewayList (Array CustomerGateway)
derive instance newtypeCustomerGatewayList :: Newtype CustomerGatewayList _
derive instance repGenericCustomerGatewayList :: Generic CustomerGatewayList _
instance showCustomerGatewayList :: Show CustomerGatewayList where
  show = genericShow
instance decodeCustomerGatewayList :: Decode CustomerGatewayList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeCustomerGatewayList :: Encode CustomerGatewayList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype DatafeedSubscriptionState = DatafeedSubscriptionState String
derive instance newtypeDatafeedSubscriptionState :: Newtype DatafeedSubscriptionState _
derive instance repGenericDatafeedSubscriptionState :: Generic DatafeedSubscriptionState _
instance showDatafeedSubscriptionState :: Show DatafeedSubscriptionState where
  show = genericShow
instance decodeDatafeedSubscriptionState :: Decode DatafeedSubscriptionState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDatafeedSubscriptionState :: Encode DatafeedSubscriptionState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype DateTime = DateTime Types.Timestamp
derive instance newtypeDateTime :: Newtype DateTime _
derive instance repGenericDateTime :: Generic DateTime _
instance showDateTime :: Show DateTime where
  show = genericShow
instance decodeDateTime :: Decode DateTime where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDateTime :: Encode DateTime where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for DeleteCustomerGateway.</p>
newtype DeleteCustomerGatewayRequest = DeleteCustomerGatewayRequest 
  { "CustomerGatewayId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteCustomerGatewayRequest :: Newtype DeleteCustomerGatewayRequest _
derive instance repGenericDeleteCustomerGatewayRequest :: Generic DeleteCustomerGatewayRequest _
instance showDeleteCustomerGatewayRequest :: Show DeleteCustomerGatewayRequest where
  show = genericShow
instance decodeDeleteCustomerGatewayRequest :: Decode DeleteCustomerGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteCustomerGatewayRequest :: Encode DeleteCustomerGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteCustomerGatewayRequest from required parameters
newDeleteCustomerGatewayRequest :: String -> DeleteCustomerGatewayRequest
newDeleteCustomerGatewayRequest _CustomerGatewayId = DeleteCustomerGatewayRequest { "CustomerGatewayId": _CustomerGatewayId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteCustomerGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteCustomerGatewayRequest' :: String -> ( { "CustomerGatewayId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"CustomerGatewayId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteCustomerGatewayRequest
newDeleteCustomerGatewayRequest' _CustomerGatewayId customize = (DeleteCustomerGatewayRequest <<< customize) { "CustomerGatewayId": _CustomerGatewayId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteDhcpOptions.</p>
newtype DeleteDhcpOptionsRequest = DeleteDhcpOptionsRequest 
  { "DhcpOptionsId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteDhcpOptionsRequest :: Newtype DeleteDhcpOptionsRequest _
derive instance repGenericDeleteDhcpOptionsRequest :: Generic DeleteDhcpOptionsRequest _
instance showDeleteDhcpOptionsRequest :: Show DeleteDhcpOptionsRequest where
  show = genericShow
instance decodeDeleteDhcpOptionsRequest :: Decode DeleteDhcpOptionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteDhcpOptionsRequest :: Encode DeleteDhcpOptionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteDhcpOptionsRequest from required parameters
newDeleteDhcpOptionsRequest :: String -> DeleteDhcpOptionsRequest
newDeleteDhcpOptionsRequest _DhcpOptionsId = DeleteDhcpOptionsRequest { "DhcpOptionsId": _DhcpOptionsId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteDhcpOptionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteDhcpOptionsRequest' :: String -> ( { "DhcpOptionsId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DhcpOptionsId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteDhcpOptionsRequest
newDeleteDhcpOptionsRequest' _DhcpOptionsId customize = (DeleteDhcpOptionsRequest <<< customize) { "DhcpOptionsId": _DhcpOptionsId, "DryRun": (NullOrUndefined Nothing) }



newtype DeleteEgressOnlyInternetGatewayRequest = DeleteEgressOnlyInternetGatewayRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EgressOnlyInternetGatewayId" :: (EgressOnlyInternetGatewayId)
  }
derive instance newtypeDeleteEgressOnlyInternetGatewayRequest :: Newtype DeleteEgressOnlyInternetGatewayRequest _
derive instance repGenericDeleteEgressOnlyInternetGatewayRequest :: Generic DeleteEgressOnlyInternetGatewayRequest _
instance showDeleteEgressOnlyInternetGatewayRequest :: Show DeleteEgressOnlyInternetGatewayRequest where
  show = genericShow
instance decodeDeleteEgressOnlyInternetGatewayRequest :: Decode DeleteEgressOnlyInternetGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteEgressOnlyInternetGatewayRequest :: Encode DeleteEgressOnlyInternetGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteEgressOnlyInternetGatewayRequest from required parameters
newDeleteEgressOnlyInternetGatewayRequest :: EgressOnlyInternetGatewayId -> DeleteEgressOnlyInternetGatewayRequest
newDeleteEgressOnlyInternetGatewayRequest _EgressOnlyInternetGatewayId = DeleteEgressOnlyInternetGatewayRequest { "EgressOnlyInternetGatewayId": _EgressOnlyInternetGatewayId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteEgressOnlyInternetGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteEgressOnlyInternetGatewayRequest' :: EgressOnlyInternetGatewayId -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EgressOnlyInternetGatewayId" :: (EgressOnlyInternetGatewayId) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EgressOnlyInternetGatewayId" :: (EgressOnlyInternetGatewayId) } ) -> DeleteEgressOnlyInternetGatewayRequest
newDeleteEgressOnlyInternetGatewayRequest' _EgressOnlyInternetGatewayId customize = (DeleteEgressOnlyInternetGatewayRequest <<< customize) { "EgressOnlyInternetGatewayId": _EgressOnlyInternetGatewayId, "DryRun": (NullOrUndefined Nothing) }



newtype DeleteEgressOnlyInternetGatewayResult = DeleteEgressOnlyInternetGatewayResult 
  { "ReturnCode" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteEgressOnlyInternetGatewayResult :: Newtype DeleteEgressOnlyInternetGatewayResult _
derive instance repGenericDeleteEgressOnlyInternetGatewayResult :: Generic DeleteEgressOnlyInternetGatewayResult _
instance showDeleteEgressOnlyInternetGatewayResult :: Show DeleteEgressOnlyInternetGatewayResult where
  show = genericShow
instance decodeDeleteEgressOnlyInternetGatewayResult :: Decode DeleteEgressOnlyInternetGatewayResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteEgressOnlyInternetGatewayResult :: Encode DeleteEgressOnlyInternetGatewayResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteEgressOnlyInternetGatewayResult from required parameters
newDeleteEgressOnlyInternetGatewayResult :: DeleteEgressOnlyInternetGatewayResult
newDeleteEgressOnlyInternetGatewayResult  = DeleteEgressOnlyInternetGatewayResult { "ReturnCode": (NullOrUndefined Nothing) }

-- | Constructs DeleteEgressOnlyInternetGatewayResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteEgressOnlyInternetGatewayResult' :: ( { "ReturnCode" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"ReturnCode" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteEgressOnlyInternetGatewayResult
newDeleteEgressOnlyInternetGatewayResult'  customize = (DeleteEgressOnlyInternetGatewayResult <<< customize) { "ReturnCode": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteFlowLogs.</p>
newtype DeleteFlowLogsRequest = DeleteFlowLogsRequest 
  { "FlowLogIds" :: (ValueStringList)
  }
derive instance newtypeDeleteFlowLogsRequest :: Newtype DeleteFlowLogsRequest _
derive instance repGenericDeleteFlowLogsRequest :: Generic DeleteFlowLogsRequest _
instance showDeleteFlowLogsRequest :: Show DeleteFlowLogsRequest where
  show = genericShow
instance decodeDeleteFlowLogsRequest :: Decode DeleteFlowLogsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteFlowLogsRequest :: Encode DeleteFlowLogsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteFlowLogsRequest from required parameters
newDeleteFlowLogsRequest :: ValueStringList -> DeleteFlowLogsRequest
newDeleteFlowLogsRequest _FlowLogIds = DeleteFlowLogsRequest { "FlowLogIds": _FlowLogIds }

-- | Constructs DeleteFlowLogsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteFlowLogsRequest' :: ValueStringList -> ( { "FlowLogIds" :: (ValueStringList) } -> {"FlowLogIds" :: (ValueStringList) } ) -> DeleteFlowLogsRequest
newDeleteFlowLogsRequest' _FlowLogIds customize = (DeleteFlowLogsRequest <<< customize) { "FlowLogIds": _FlowLogIds }



-- | <p>Contains the output of DeleteFlowLogs.</p>
newtype DeleteFlowLogsResult = DeleteFlowLogsResult 
  { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet)
  }
derive instance newtypeDeleteFlowLogsResult :: Newtype DeleteFlowLogsResult _
derive instance repGenericDeleteFlowLogsResult :: Generic DeleteFlowLogsResult _
instance showDeleteFlowLogsResult :: Show DeleteFlowLogsResult where
  show = genericShow
instance decodeDeleteFlowLogsResult :: Decode DeleteFlowLogsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteFlowLogsResult :: Encode DeleteFlowLogsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteFlowLogsResult from required parameters
newDeleteFlowLogsResult :: DeleteFlowLogsResult
newDeleteFlowLogsResult  = DeleteFlowLogsResult { "Unsuccessful": (NullOrUndefined Nothing) }

-- | Constructs DeleteFlowLogsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteFlowLogsResult' :: ( { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } -> {"Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } ) -> DeleteFlowLogsResult
newDeleteFlowLogsResult'  customize = (DeleteFlowLogsResult <<< customize) { "Unsuccessful": (NullOrUndefined Nothing) }



newtype DeleteFpgaImageRequest = DeleteFpgaImageRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "FpgaImageId" :: (String)
  }
derive instance newtypeDeleteFpgaImageRequest :: Newtype DeleteFpgaImageRequest _
derive instance repGenericDeleteFpgaImageRequest :: Generic DeleteFpgaImageRequest _
instance showDeleteFpgaImageRequest :: Show DeleteFpgaImageRequest where
  show = genericShow
instance decodeDeleteFpgaImageRequest :: Decode DeleteFpgaImageRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteFpgaImageRequest :: Encode DeleteFpgaImageRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteFpgaImageRequest from required parameters
newDeleteFpgaImageRequest :: String -> DeleteFpgaImageRequest
newDeleteFpgaImageRequest _FpgaImageId = DeleteFpgaImageRequest { "FpgaImageId": _FpgaImageId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteFpgaImageRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteFpgaImageRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "FpgaImageId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "FpgaImageId" :: (String) } ) -> DeleteFpgaImageRequest
newDeleteFpgaImageRequest' _FpgaImageId customize = (DeleteFpgaImageRequest <<< customize) { "FpgaImageId": _FpgaImageId, "DryRun": (NullOrUndefined Nothing) }



newtype DeleteFpgaImageResult = DeleteFpgaImageResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteFpgaImageResult :: Newtype DeleteFpgaImageResult _
derive instance repGenericDeleteFpgaImageResult :: Generic DeleteFpgaImageResult _
instance showDeleteFpgaImageResult :: Show DeleteFpgaImageResult where
  show = genericShow
instance decodeDeleteFpgaImageResult :: Decode DeleteFpgaImageResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteFpgaImageResult :: Encode DeleteFpgaImageResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteFpgaImageResult from required parameters
newDeleteFpgaImageResult :: DeleteFpgaImageResult
newDeleteFpgaImageResult  = DeleteFpgaImageResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs DeleteFpgaImageResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteFpgaImageResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteFpgaImageResult
newDeleteFpgaImageResult'  customize = (DeleteFpgaImageResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteInternetGateway.</p>
newtype DeleteInternetGatewayRequest = DeleteInternetGatewayRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InternetGatewayId" :: (String)
  }
derive instance newtypeDeleteInternetGatewayRequest :: Newtype DeleteInternetGatewayRequest _
derive instance repGenericDeleteInternetGatewayRequest :: Generic DeleteInternetGatewayRequest _
instance showDeleteInternetGatewayRequest :: Show DeleteInternetGatewayRequest where
  show = genericShow
instance decodeDeleteInternetGatewayRequest :: Decode DeleteInternetGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteInternetGatewayRequest :: Encode DeleteInternetGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteInternetGatewayRequest from required parameters
newDeleteInternetGatewayRequest :: String -> DeleteInternetGatewayRequest
newDeleteInternetGatewayRequest _InternetGatewayId = DeleteInternetGatewayRequest { "InternetGatewayId": _InternetGatewayId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteInternetGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteInternetGatewayRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InternetGatewayId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InternetGatewayId" :: (String) } ) -> DeleteInternetGatewayRequest
newDeleteInternetGatewayRequest' _InternetGatewayId customize = (DeleteInternetGatewayRequest <<< customize) { "InternetGatewayId": _InternetGatewayId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteKeyPair.</p>
newtype DeleteKeyPairRequest = DeleteKeyPairRequest 
  { "KeyName" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteKeyPairRequest :: Newtype DeleteKeyPairRequest _
derive instance repGenericDeleteKeyPairRequest :: Generic DeleteKeyPairRequest _
instance showDeleteKeyPairRequest :: Show DeleteKeyPairRequest where
  show = genericShow
instance decodeDeleteKeyPairRequest :: Decode DeleteKeyPairRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteKeyPairRequest :: Encode DeleteKeyPairRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteKeyPairRequest from required parameters
newDeleteKeyPairRequest :: String -> DeleteKeyPairRequest
newDeleteKeyPairRequest _KeyName = DeleteKeyPairRequest { "KeyName": _KeyName, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteKeyPairRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteKeyPairRequest' :: String -> ( { "KeyName" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"KeyName" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteKeyPairRequest
newDeleteKeyPairRequest' _KeyName customize = (DeleteKeyPairRequest <<< customize) { "KeyName": _KeyName, "DryRun": (NullOrUndefined Nothing) }



newtype DeleteLaunchTemplateRequest = DeleteLaunchTemplateRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName)
  }
derive instance newtypeDeleteLaunchTemplateRequest :: Newtype DeleteLaunchTemplateRequest _
derive instance repGenericDeleteLaunchTemplateRequest :: Generic DeleteLaunchTemplateRequest _
instance showDeleteLaunchTemplateRequest :: Show DeleteLaunchTemplateRequest where
  show = genericShow
instance decodeDeleteLaunchTemplateRequest :: Decode DeleteLaunchTemplateRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteLaunchTemplateRequest :: Encode DeleteLaunchTemplateRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteLaunchTemplateRequest from required parameters
newDeleteLaunchTemplateRequest :: DeleteLaunchTemplateRequest
newDeleteLaunchTemplateRequest  = DeleteLaunchTemplateRequest { "DryRun": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing) }

-- | Constructs DeleteLaunchTemplateRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteLaunchTemplateRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) } ) -> DeleteLaunchTemplateRequest
newDeleteLaunchTemplateRequest'  customize = (DeleteLaunchTemplateRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing) }



newtype DeleteLaunchTemplateResult = DeleteLaunchTemplateResult 
  { "LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplate)
  }
derive instance newtypeDeleteLaunchTemplateResult :: Newtype DeleteLaunchTemplateResult _
derive instance repGenericDeleteLaunchTemplateResult :: Generic DeleteLaunchTemplateResult _
instance showDeleteLaunchTemplateResult :: Show DeleteLaunchTemplateResult where
  show = genericShow
instance decodeDeleteLaunchTemplateResult :: Decode DeleteLaunchTemplateResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteLaunchTemplateResult :: Encode DeleteLaunchTemplateResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteLaunchTemplateResult from required parameters
newDeleteLaunchTemplateResult :: DeleteLaunchTemplateResult
newDeleteLaunchTemplateResult  = DeleteLaunchTemplateResult { "LaunchTemplate": (NullOrUndefined Nothing) }

-- | Constructs DeleteLaunchTemplateResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteLaunchTemplateResult' :: ( { "LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplate) } -> {"LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplate) } ) -> DeleteLaunchTemplateResult
newDeleteLaunchTemplateResult'  customize = (DeleteLaunchTemplateResult <<< customize) { "LaunchTemplate": (NullOrUndefined Nothing) }



newtype DeleteLaunchTemplateVersionsRequest = DeleteLaunchTemplateVersionsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName)
  , "Versions" :: (VersionStringList)
  }
derive instance newtypeDeleteLaunchTemplateVersionsRequest :: Newtype DeleteLaunchTemplateVersionsRequest _
derive instance repGenericDeleteLaunchTemplateVersionsRequest :: Generic DeleteLaunchTemplateVersionsRequest _
instance showDeleteLaunchTemplateVersionsRequest :: Show DeleteLaunchTemplateVersionsRequest where
  show = genericShow
instance decodeDeleteLaunchTemplateVersionsRequest :: Decode DeleteLaunchTemplateVersionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteLaunchTemplateVersionsRequest :: Encode DeleteLaunchTemplateVersionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteLaunchTemplateVersionsRequest from required parameters
newDeleteLaunchTemplateVersionsRequest :: VersionStringList -> DeleteLaunchTemplateVersionsRequest
newDeleteLaunchTemplateVersionsRequest _Versions = DeleteLaunchTemplateVersionsRequest { "Versions": _Versions, "DryRun": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing) }

-- | Constructs DeleteLaunchTemplateVersionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteLaunchTemplateVersionsRequest' :: VersionStringList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "Versions" :: (VersionStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "Versions" :: (VersionStringList) } ) -> DeleteLaunchTemplateVersionsRequest
newDeleteLaunchTemplateVersionsRequest' _Versions customize = (DeleteLaunchTemplateVersionsRequest <<< customize) { "Versions": _Versions, "DryRun": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing) }



-- | <p>Describes a launch template version that could not be deleted.</p>
newtype DeleteLaunchTemplateVersionsResponseErrorItem = DeleteLaunchTemplateVersionsResponseErrorItem 
  { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (String)
  , "VersionNumber" :: NullOrUndefined.NullOrUndefined (Number)
  , "ResponseError" :: NullOrUndefined.NullOrUndefined (ResponseError)
  }
derive instance newtypeDeleteLaunchTemplateVersionsResponseErrorItem :: Newtype DeleteLaunchTemplateVersionsResponseErrorItem _
derive instance repGenericDeleteLaunchTemplateVersionsResponseErrorItem :: Generic DeleteLaunchTemplateVersionsResponseErrorItem _
instance showDeleteLaunchTemplateVersionsResponseErrorItem :: Show DeleteLaunchTemplateVersionsResponseErrorItem where
  show = genericShow
instance decodeDeleteLaunchTemplateVersionsResponseErrorItem :: Decode DeleteLaunchTemplateVersionsResponseErrorItem where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteLaunchTemplateVersionsResponseErrorItem :: Encode DeleteLaunchTemplateVersionsResponseErrorItem where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteLaunchTemplateVersionsResponseErrorItem from required parameters
newDeleteLaunchTemplateVersionsResponseErrorItem :: DeleteLaunchTemplateVersionsResponseErrorItem
newDeleteLaunchTemplateVersionsResponseErrorItem  = DeleteLaunchTemplateVersionsResponseErrorItem { "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "ResponseError": (NullOrUndefined Nothing), "VersionNumber": (NullOrUndefined Nothing) }

-- | Constructs DeleteLaunchTemplateVersionsResponseErrorItem's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteLaunchTemplateVersionsResponseErrorItem' :: ( { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (String) , "VersionNumber" :: NullOrUndefined.NullOrUndefined (Number) , "ResponseError" :: NullOrUndefined.NullOrUndefined (ResponseError) } -> {"LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (String) , "VersionNumber" :: NullOrUndefined.NullOrUndefined (Number) , "ResponseError" :: NullOrUndefined.NullOrUndefined (ResponseError) } ) -> DeleteLaunchTemplateVersionsResponseErrorItem
newDeleteLaunchTemplateVersionsResponseErrorItem'  customize = (DeleteLaunchTemplateVersionsResponseErrorItem <<< customize) { "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "ResponseError": (NullOrUndefined Nothing), "VersionNumber": (NullOrUndefined Nothing) }



newtype DeleteLaunchTemplateVersionsResponseErrorSet = DeleteLaunchTemplateVersionsResponseErrorSet (Array DeleteLaunchTemplateVersionsResponseErrorItem)
derive instance newtypeDeleteLaunchTemplateVersionsResponseErrorSet :: Newtype DeleteLaunchTemplateVersionsResponseErrorSet _
derive instance repGenericDeleteLaunchTemplateVersionsResponseErrorSet :: Generic DeleteLaunchTemplateVersionsResponseErrorSet _
instance showDeleteLaunchTemplateVersionsResponseErrorSet :: Show DeleteLaunchTemplateVersionsResponseErrorSet where
  show = genericShow
instance decodeDeleteLaunchTemplateVersionsResponseErrorSet :: Decode DeleteLaunchTemplateVersionsResponseErrorSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteLaunchTemplateVersionsResponseErrorSet :: Encode DeleteLaunchTemplateVersionsResponseErrorSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a launch template version that was successfully deleted.</p>
newtype DeleteLaunchTemplateVersionsResponseSuccessItem = DeleteLaunchTemplateVersionsResponseSuccessItem 
  { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (String)
  , "VersionNumber" :: NullOrUndefined.NullOrUndefined (Number)
  }
derive instance newtypeDeleteLaunchTemplateVersionsResponseSuccessItem :: Newtype DeleteLaunchTemplateVersionsResponseSuccessItem _
derive instance repGenericDeleteLaunchTemplateVersionsResponseSuccessItem :: Generic DeleteLaunchTemplateVersionsResponseSuccessItem _
instance showDeleteLaunchTemplateVersionsResponseSuccessItem :: Show DeleteLaunchTemplateVersionsResponseSuccessItem where
  show = genericShow
instance decodeDeleteLaunchTemplateVersionsResponseSuccessItem :: Decode DeleteLaunchTemplateVersionsResponseSuccessItem where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteLaunchTemplateVersionsResponseSuccessItem :: Encode DeleteLaunchTemplateVersionsResponseSuccessItem where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteLaunchTemplateVersionsResponseSuccessItem from required parameters
newDeleteLaunchTemplateVersionsResponseSuccessItem :: DeleteLaunchTemplateVersionsResponseSuccessItem
newDeleteLaunchTemplateVersionsResponseSuccessItem  = DeleteLaunchTemplateVersionsResponseSuccessItem { "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "VersionNumber": (NullOrUndefined Nothing) }

-- | Constructs DeleteLaunchTemplateVersionsResponseSuccessItem's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteLaunchTemplateVersionsResponseSuccessItem' :: ( { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (String) , "VersionNumber" :: NullOrUndefined.NullOrUndefined (Number) } -> {"LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (String) , "VersionNumber" :: NullOrUndefined.NullOrUndefined (Number) } ) -> DeleteLaunchTemplateVersionsResponseSuccessItem
newDeleteLaunchTemplateVersionsResponseSuccessItem'  customize = (DeleteLaunchTemplateVersionsResponseSuccessItem <<< customize) { "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "VersionNumber": (NullOrUndefined Nothing) }



newtype DeleteLaunchTemplateVersionsResponseSuccessSet = DeleteLaunchTemplateVersionsResponseSuccessSet (Array DeleteLaunchTemplateVersionsResponseSuccessItem)
derive instance newtypeDeleteLaunchTemplateVersionsResponseSuccessSet :: Newtype DeleteLaunchTemplateVersionsResponseSuccessSet _
derive instance repGenericDeleteLaunchTemplateVersionsResponseSuccessSet :: Generic DeleteLaunchTemplateVersionsResponseSuccessSet _
instance showDeleteLaunchTemplateVersionsResponseSuccessSet :: Show DeleteLaunchTemplateVersionsResponseSuccessSet where
  show = genericShow
instance decodeDeleteLaunchTemplateVersionsResponseSuccessSet :: Decode DeleteLaunchTemplateVersionsResponseSuccessSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteLaunchTemplateVersionsResponseSuccessSet :: Encode DeleteLaunchTemplateVersionsResponseSuccessSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype DeleteLaunchTemplateVersionsResult = DeleteLaunchTemplateVersionsResult 
  { "SuccessfullyDeletedLaunchTemplateVersions" :: NullOrUndefined.NullOrUndefined (DeleteLaunchTemplateVersionsResponseSuccessSet)
  , "UnsuccessfullyDeletedLaunchTemplateVersions" :: NullOrUndefined.NullOrUndefined (DeleteLaunchTemplateVersionsResponseErrorSet)
  }
derive instance newtypeDeleteLaunchTemplateVersionsResult :: Newtype DeleteLaunchTemplateVersionsResult _
derive instance repGenericDeleteLaunchTemplateVersionsResult :: Generic DeleteLaunchTemplateVersionsResult _
instance showDeleteLaunchTemplateVersionsResult :: Show DeleteLaunchTemplateVersionsResult where
  show = genericShow
instance decodeDeleteLaunchTemplateVersionsResult :: Decode DeleteLaunchTemplateVersionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteLaunchTemplateVersionsResult :: Encode DeleteLaunchTemplateVersionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteLaunchTemplateVersionsResult from required parameters
newDeleteLaunchTemplateVersionsResult :: DeleteLaunchTemplateVersionsResult
newDeleteLaunchTemplateVersionsResult  = DeleteLaunchTemplateVersionsResult { "SuccessfullyDeletedLaunchTemplateVersions": (NullOrUndefined Nothing), "UnsuccessfullyDeletedLaunchTemplateVersions": (NullOrUndefined Nothing) }

-- | Constructs DeleteLaunchTemplateVersionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteLaunchTemplateVersionsResult' :: ( { "SuccessfullyDeletedLaunchTemplateVersions" :: NullOrUndefined.NullOrUndefined (DeleteLaunchTemplateVersionsResponseSuccessSet) , "UnsuccessfullyDeletedLaunchTemplateVersions" :: NullOrUndefined.NullOrUndefined (DeleteLaunchTemplateVersionsResponseErrorSet) } -> {"SuccessfullyDeletedLaunchTemplateVersions" :: NullOrUndefined.NullOrUndefined (DeleteLaunchTemplateVersionsResponseSuccessSet) , "UnsuccessfullyDeletedLaunchTemplateVersions" :: NullOrUndefined.NullOrUndefined (DeleteLaunchTemplateVersionsResponseErrorSet) } ) -> DeleteLaunchTemplateVersionsResult
newDeleteLaunchTemplateVersionsResult'  customize = (DeleteLaunchTemplateVersionsResult <<< customize) { "SuccessfullyDeletedLaunchTemplateVersions": (NullOrUndefined Nothing), "UnsuccessfullyDeletedLaunchTemplateVersions": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteNatGateway.</p>
newtype DeleteNatGatewayRequest = DeleteNatGatewayRequest 
  { "NatGatewayId" :: (String)
  }
derive instance newtypeDeleteNatGatewayRequest :: Newtype DeleteNatGatewayRequest _
derive instance repGenericDeleteNatGatewayRequest :: Generic DeleteNatGatewayRequest _
instance showDeleteNatGatewayRequest :: Show DeleteNatGatewayRequest where
  show = genericShow
instance decodeDeleteNatGatewayRequest :: Decode DeleteNatGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteNatGatewayRequest :: Encode DeleteNatGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteNatGatewayRequest from required parameters
newDeleteNatGatewayRequest :: String -> DeleteNatGatewayRequest
newDeleteNatGatewayRequest _NatGatewayId = DeleteNatGatewayRequest { "NatGatewayId": _NatGatewayId }

-- | Constructs DeleteNatGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteNatGatewayRequest' :: String -> ( { "NatGatewayId" :: (String) } -> {"NatGatewayId" :: (String) } ) -> DeleteNatGatewayRequest
newDeleteNatGatewayRequest' _NatGatewayId customize = (DeleteNatGatewayRequest <<< customize) { "NatGatewayId": _NatGatewayId }



-- | <p>Contains the output of DeleteNatGateway.</p>
newtype DeleteNatGatewayResult = DeleteNatGatewayResult 
  { "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDeleteNatGatewayResult :: Newtype DeleteNatGatewayResult _
derive instance repGenericDeleteNatGatewayResult :: Generic DeleteNatGatewayResult _
instance showDeleteNatGatewayResult :: Show DeleteNatGatewayResult where
  show = genericShow
instance decodeDeleteNatGatewayResult :: Decode DeleteNatGatewayResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteNatGatewayResult :: Encode DeleteNatGatewayResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteNatGatewayResult from required parameters
newDeleteNatGatewayResult :: DeleteNatGatewayResult
newDeleteNatGatewayResult  = DeleteNatGatewayResult { "NatGatewayId": (NullOrUndefined Nothing) }

-- | Constructs DeleteNatGatewayResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteNatGatewayResult' :: ( { "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String) } -> {"NatGatewayId" :: NullOrUndefined.NullOrUndefined (String) } ) -> DeleteNatGatewayResult
newDeleteNatGatewayResult'  customize = (DeleteNatGatewayResult <<< customize) { "NatGatewayId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteNetworkAclEntry.</p>
newtype DeleteNetworkAclEntryRequest = DeleteNetworkAclEntryRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Egress" :: (Boolean)
  , "NetworkAclId" :: (String)
  , "RuleNumber" :: (Int)
  }
derive instance newtypeDeleteNetworkAclEntryRequest :: Newtype DeleteNetworkAclEntryRequest _
derive instance repGenericDeleteNetworkAclEntryRequest :: Generic DeleteNetworkAclEntryRequest _
instance showDeleteNetworkAclEntryRequest :: Show DeleteNetworkAclEntryRequest where
  show = genericShow
instance decodeDeleteNetworkAclEntryRequest :: Decode DeleteNetworkAclEntryRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteNetworkAclEntryRequest :: Encode DeleteNetworkAclEntryRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteNetworkAclEntryRequest from required parameters
newDeleteNetworkAclEntryRequest :: Boolean -> String -> Int -> DeleteNetworkAclEntryRequest
newDeleteNetworkAclEntryRequest _Egress _NetworkAclId _RuleNumber = DeleteNetworkAclEntryRequest { "Egress": _Egress, "NetworkAclId": _NetworkAclId, "RuleNumber": _RuleNumber, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteNetworkAclEntryRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteNetworkAclEntryRequest' :: Boolean -> String -> Int -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Egress" :: (Boolean) , "NetworkAclId" :: (String) , "RuleNumber" :: (Int) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Egress" :: (Boolean) , "NetworkAclId" :: (String) , "RuleNumber" :: (Int) } ) -> DeleteNetworkAclEntryRequest
newDeleteNetworkAclEntryRequest' _Egress _NetworkAclId _RuleNumber customize = (DeleteNetworkAclEntryRequest <<< customize) { "Egress": _Egress, "NetworkAclId": _NetworkAclId, "RuleNumber": _RuleNumber, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteNetworkAcl.</p>
newtype DeleteNetworkAclRequest = DeleteNetworkAclRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkAclId" :: (String)
  }
derive instance newtypeDeleteNetworkAclRequest :: Newtype DeleteNetworkAclRequest _
derive instance repGenericDeleteNetworkAclRequest :: Generic DeleteNetworkAclRequest _
instance showDeleteNetworkAclRequest :: Show DeleteNetworkAclRequest where
  show = genericShow
instance decodeDeleteNetworkAclRequest :: Decode DeleteNetworkAclRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteNetworkAclRequest :: Encode DeleteNetworkAclRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteNetworkAclRequest from required parameters
newDeleteNetworkAclRequest :: String -> DeleteNetworkAclRequest
newDeleteNetworkAclRequest _NetworkAclId = DeleteNetworkAclRequest { "NetworkAclId": _NetworkAclId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteNetworkAclRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteNetworkAclRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkAclId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkAclId" :: (String) } ) -> DeleteNetworkAclRequest
newDeleteNetworkAclRequest' _NetworkAclId customize = (DeleteNetworkAclRequest <<< customize) { "NetworkAclId": _NetworkAclId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteNetworkInterfacePermission.</p>
newtype DeleteNetworkInterfacePermissionRequest = DeleteNetworkInterfacePermissionRequest 
  { "NetworkInterfacePermissionId" :: (String)
  , "Force" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteNetworkInterfacePermissionRequest :: Newtype DeleteNetworkInterfacePermissionRequest _
derive instance repGenericDeleteNetworkInterfacePermissionRequest :: Generic DeleteNetworkInterfacePermissionRequest _
instance showDeleteNetworkInterfacePermissionRequest :: Show DeleteNetworkInterfacePermissionRequest where
  show = genericShow
instance decodeDeleteNetworkInterfacePermissionRequest :: Decode DeleteNetworkInterfacePermissionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteNetworkInterfacePermissionRequest :: Encode DeleteNetworkInterfacePermissionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteNetworkInterfacePermissionRequest from required parameters
newDeleteNetworkInterfacePermissionRequest :: String -> DeleteNetworkInterfacePermissionRequest
newDeleteNetworkInterfacePermissionRequest _NetworkInterfacePermissionId = DeleteNetworkInterfacePermissionRequest { "NetworkInterfacePermissionId": _NetworkInterfacePermissionId, "DryRun": (NullOrUndefined Nothing), "Force": (NullOrUndefined Nothing) }

-- | Constructs DeleteNetworkInterfacePermissionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteNetworkInterfacePermissionRequest' :: String -> ( { "NetworkInterfacePermissionId" :: (String) , "Force" :: NullOrUndefined.NullOrUndefined (Boolean) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"NetworkInterfacePermissionId" :: (String) , "Force" :: NullOrUndefined.NullOrUndefined (Boolean) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteNetworkInterfacePermissionRequest
newDeleteNetworkInterfacePermissionRequest' _NetworkInterfacePermissionId customize = (DeleteNetworkInterfacePermissionRequest <<< customize) { "NetworkInterfacePermissionId": _NetworkInterfacePermissionId, "DryRun": (NullOrUndefined Nothing), "Force": (NullOrUndefined Nothing) }



-- | <p>Contains the output for DeleteNetworkInterfacePermission.</p>
newtype DeleteNetworkInterfacePermissionResult = DeleteNetworkInterfacePermissionResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteNetworkInterfacePermissionResult :: Newtype DeleteNetworkInterfacePermissionResult _
derive instance repGenericDeleteNetworkInterfacePermissionResult :: Generic DeleteNetworkInterfacePermissionResult _
instance showDeleteNetworkInterfacePermissionResult :: Show DeleteNetworkInterfacePermissionResult where
  show = genericShow
instance decodeDeleteNetworkInterfacePermissionResult :: Decode DeleteNetworkInterfacePermissionResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteNetworkInterfacePermissionResult :: Encode DeleteNetworkInterfacePermissionResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteNetworkInterfacePermissionResult from required parameters
newDeleteNetworkInterfacePermissionResult :: DeleteNetworkInterfacePermissionResult
newDeleteNetworkInterfacePermissionResult  = DeleteNetworkInterfacePermissionResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs DeleteNetworkInterfacePermissionResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteNetworkInterfacePermissionResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteNetworkInterfacePermissionResult
newDeleteNetworkInterfacePermissionResult'  customize = (DeleteNetworkInterfacePermissionResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteNetworkInterface.</p>
newtype DeleteNetworkInterfaceRequest = DeleteNetworkInterfaceRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkInterfaceId" :: (String)
  }
derive instance newtypeDeleteNetworkInterfaceRequest :: Newtype DeleteNetworkInterfaceRequest _
derive instance repGenericDeleteNetworkInterfaceRequest :: Generic DeleteNetworkInterfaceRequest _
instance showDeleteNetworkInterfaceRequest :: Show DeleteNetworkInterfaceRequest where
  show = genericShow
instance decodeDeleteNetworkInterfaceRequest :: Decode DeleteNetworkInterfaceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteNetworkInterfaceRequest :: Encode DeleteNetworkInterfaceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteNetworkInterfaceRequest from required parameters
newDeleteNetworkInterfaceRequest :: String -> DeleteNetworkInterfaceRequest
newDeleteNetworkInterfaceRequest _NetworkInterfaceId = DeleteNetworkInterfaceRequest { "NetworkInterfaceId": _NetworkInterfaceId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteNetworkInterfaceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteNetworkInterfaceRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceId" :: (String) } ) -> DeleteNetworkInterfaceRequest
newDeleteNetworkInterfaceRequest' _NetworkInterfaceId customize = (DeleteNetworkInterfaceRequest <<< customize) { "NetworkInterfaceId": _NetworkInterfaceId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeletePlacementGroup.</p>
newtype DeletePlacementGroupRequest = DeletePlacementGroupRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "GroupName" :: (String)
  }
derive instance newtypeDeletePlacementGroupRequest :: Newtype DeletePlacementGroupRequest _
derive instance repGenericDeletePlacementGroupRequest :: Generic DeletePlacementGroupRequest _
instance showDeletePlacementGroupRequest :: Show DeletePlacementGroupRequest where
  show = genericShow
instance decodeDeletePlacementGroupRequest :: Decode DeletePlacementGroupRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeletePlacementGroupRequest :: Encode DeletePlacementGroupRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeletePlacementGroupRequest from required parameters
newDeletePlacementGroupRequest :: String -> DeletePlacementGroupRequest
newDeletePlacementGroupRequest _GroupName = DeletePlacementGroupRequest { "GroupName": _GroupName, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeletePlacementGroupRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeletePlacementGroupRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupName" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupName" :: (String) } ) -> DeletePlacementGroupRequest
newDeletePlacementGroupRequest' _GroupName customize = (DeletePlacementGroupRequest <<< customize) { "GroupName": _GroupName, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteRoute.</p>
newtype DeleteRouteRequest = DeleteRouteRequest 
  { "DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "RouteTableId" :: (String)
  }
derive instance newtypeDeleteRouteRequest :: Newtype DeleteRouteRequest _
derive instance repGenericDeleteRouteRequest :: Generic DeleteRouteRequest _
instance showDeleteRouteRequest :: Show DeleteRouteRequest where
  show = genericShow
instance decodeDeleteRouteRequest :: Decode DeleteRouteRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteRouteRequest :: Encode DeleteRouteRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteRouteRequest from required parameters
newDeleteRouteRequest :: String -> DeleteRouteRequest
newDeleteRouteRequest _RouteTableId = DeleteRouteRequest { "RouteTableId": _RouteTableId, "DestinationCidrBlock": (NullOrUndefined Nothing), "DestinationIpv6CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteRouteRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteRouteRequest' :: String -> ( { "DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableId" :: (String) } -> {"DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableId" :: (String) } ) -> DeleteRouteRequest
newDeleteRouteRequest' _RouteTableId customize = (DeleteRouteRequest <<< customize) { "RouteTableId": _RouteTableId, "DestinationCidrBlock": (NullOrUndefined Nothing), "DestinationIpv6CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteRouteTable.</p>
newtype DeleteRouteTableRequest = DeleteRouteTableRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "RouteTableId" :: (String)
  }
derive instance newtypeDeleteRouteTableRequest :: Newtype DeleteRouteTableRequest _
derive instance repGenericDeleteRouteTableRequest :: Generic DeleteRouteTableRequest _
instance showDeleteRouteTableRequest :: Show DeleteRouteTableRequest where
  show = genericShow
instance decodeDeleteRouteTableRequest :: Decode DeleteRouteTableRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteRouteTableRequest :: Encode DeleteRouteTableRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteRouteTableRequest from required parameters
newDeleteRouteTableRequest :: String -> DeleteRouteTableRequest
newDeleteRouteTableRequest _RouteTableId = DeleteRouteTableRequest { "RouteTableId": _RouteTableId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteRouteTableRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteRouteTableRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableId" :: (String) } ) -> DeleteRouteTableRequest
newDeleteRouteTableRequest' _RouteTableId customize = (DeleteRouteTableRequest <<< customize) { "RouteTableId": _RouteTableId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteSecurityGroup.</p>
newtype DeleteSecurityGroupRequest = DeleteSecurityGroupRequest 
  { "GroupId" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteSecurityGroupRequest :: Newtype DeleteSecurityGroupRequest _
derive instance repGenericDeleteSecurityGroupRequest :: Generic DeleteSecurityGroupRequest _
instance showDeleteSecurityGroupRequest :: Show DeleteSecurityGroupRequest where
  show = genericShow
instance decodeDeleteSecurityGroupRequest :: Decode DeleteSecurityGroupRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteSecurityGroupRequest :: Encode DeleteSecurityGroupRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteSecurityGroupRequest from required parameters
newDeleteSecurityGroupRequest :: DeleteSecurityGroupRequest
newDeleteSecurityGroupRequest  = DeleteSecurityGroupRequest { "DryRun": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }

-- | Constructs DeleteSecurityGroupRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteSecurityGroupRequest' :: ( { "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteSecurityGroupRequest
newDeleteSecurityGroupRequest'  customize = (DeleteSecurityGroupRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteSnapshot.</p>
newtype DeleteSnapshotRequest = DeleteSnapshotRequest 
  { "SnapshotId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteSnapshotRequest :: Newtype DeleteSnapshotRequest _
derive instance repGenericDeleteSnapshotRequest :: Generic DeleteSnapshotRequest _
instance showDeleteSnapshotRequest :: Show DeleteSnapshotRequest where
  show = genericShow
instance decodeDeleteSnapshotRequest :: Decode DeleteSnapshotRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteSnapshotRequest :: Encode DeleteSnapshotRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteSnapshotRequest from required parameters
newDeleteSnapshotRequest :: String -> DeleteSnapshotRequest
newDeleteSnapshotRequest _SnapshotId = DeleteSnapshotRequest { "SnapshotId": _SnapshotId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteSnapshotRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteSnapshotRequest' :: String -> ( { "SnapshotId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"SnapshotId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteSnapshotRequest
newDeleteSnapshotRequest' _SnapshotId customize = (DeleteSnapshotRequest <<< customize) { "SnapshotId": _SnapshotId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteSpotDatafeedSubscription.</p>
newtype DeleteSpotDatafeedSubscriptionRequest = DeleteSpotDatafeedSubscriptionRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteSpotDatafeedSubscriptionRequest :: Newtype DeleteSpotDatafeedSubscriptionRequest _
derive instance repGenericDeleteSpotDatafeedSubscriptionRequest :: Generic DeleteSpotDatafeedSubscriptionRequest _
instance showDeleteSpotDatafeedSubscriptionRequest :: Show DeleteSpotDatafeedSubscriptionRequest where
  show = genericShow
instance decodeDeleteSpotDatafeedSubscriptionRequest :: Decode DeleteSpotDatafeedSubscriptionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteSpotDatafeedSubscriptionRequest :: Encode DeleteSpotDatafeedSubscriptionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteSpotDatafeedSubscriptionRequest from required parameters
newDeleteSpotDatafeedSubscriptionRequest :: DeleteSpotDatafeedSubscriptionRequest
newDeleteSpotDatafeedSubscriptionRequest  = DeleteSpotDatafeedSubscriptionRequest { "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteSpotDatafeedSubscriptionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteSpotDatafeedSubscriptionRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteSpotDatafeedSubscriptionRequest
newDeleteSpotDatafeedSubscriptionRequest'  customize = (DeleteSpotDatafeedSubscriptionRequest <<< customize) { "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteSubnet.</p>
newtype DeleteSubnetRequest = DeleteSubnetRequest 
  { "SubnetId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteSubnetRequest :: Newtype DeleteSubnetRequest _
derive instance repGenericDeleteSubnetRequest :: Generic DeleteSubnetRequest _
instance showDeleteSubnetRequest :: Show DeleteSubnetRequest where
  show = genericShow
instance decodeDeleteSubnetRequest :: Decode DeleteSubnetRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteSubnetRequest :: Encode DeleteSubnetRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteSubnetRequest from required parameters
newDeleteSubnetRequest :: String -> DeleteSubnetRequest
newDeleteSubnetRequest _SubnetId = DeleteSubnetRequest { "SubnetId": _SubnetId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteSubnetRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteSubnetRequest' :: String -> ( { "SubnetId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"SubnetId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteSubnetRequest
newDeleteSubnetRequest' _SubnetId customize = (DeleteSubnetRequest <<< customize) { "SubnetId": _SubnetId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteTags.</p>
newtype DeleteTagsRequest = DeleteTagsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Resources" :: (ResourceIdList)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeDeleteTagsRequest :: Newtype DeleteTagsRequest _
derive instance repGenericDeleteTagsRequest :: Generic DeleteTagsRequest _
instance showDeleteTagsRequest :: Show DeleteTagsRequest where
  show = genericShow
instance decodeDeleteTagsRequest :: Decode DeleteTagsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteTagsRequest :: Encode DeleteTagsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteTagsRequest from required parameters
newDeleteTagsRequest :: ResourceIdList -> DeleteTagsRequest
newDeleteTagsRequest _Resources = DeleteTagsRequest { "Resources": _Resources, "DryRun": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs DeleteTagsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteTagsRequest' :: ResourceIdList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Resources" :: (ResourceIdList) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Resources" :: (ResourceIdList) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> DeleteTagsRequest
newDeleteTagsRequest' _Resources customize = (DeleteTagsRequest <<< customize) { "Resources": _Resources, "DryRun": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteVolume.</p>
newtype DeleteVolumeRequest = DeleteVolumeRequest 
  { "VolumeId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteVolumeRequest :: Newtype DeleteVolumeRequest _
derive instance repGenericDeleteVolumeRequest :: Generic DeleteVolumeRequest _
instance showDeleteVolumeRequest :: Show DeleteVolumeRequest where
  show = genericShow
instance decodeDeleteVolumeRequest :: Decode DeleteVolumeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVolumeRequest :: Encode DeleteVolumeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVolumeRequest from required parameters
newDeleteVolumeRequest :: String -> DeleteVolumeRequest
newDeleteVolumeRequest _VolumeId = DeleteVolumeRequest { "VolumeId": _VolumeId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteVolumeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVolumeRequest' :: String -> ( { "VolumeId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"VolumeId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteVolumeRequest
newDeleteVolumeRequest' _VolumeId customize = (DeleteVolumeRequest <<< customize) { "VolumeId": _VolumeId, "DryRun": (NullOrUndefined Nothing) }



newtype DeleteVpcEndpointConnectionNotificationsRequest = DeleteVpcEndpointConnectionNotificationsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ConnectionNotificationIds" :: (ValueStringList)
  }
derive instance newtypeDeleteVpcEndpointConnectionNotificationsRequest :: Newtype DeleteVpcEndpointConnectionNotificationsRequest _
derive instance repGenericDeleteVpcEndpointConnectionNotificationsRequest :: Generic DeleteVpcEndpointConnectionNotificationsRequest _
instance showDeleteVpcEndpointConnectionNotificationsRequest :: Show DeleteVpcEndpointConnectionNotificationsRequest where
  show = genericShow
instance decodeDeleteVpcEndpointConnectionNotificationsRequest :: Decode DeleteVpcEndpointConnectionNotificationsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpcEndpointConnectionNotificationsRequest :: Encode DeleteVpcEndpointConnectionNotificationsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpcEndpointConnectionNotificationsRequest from required parameters
newDeleteVpcEndpointConnectionNotificationsRequest :: ValueStringList -> DeleteVpcEndpointConnectionNotificationsRequest
newDeleteVpcEndpointConnectionNotificationsRequest _ConnectionNotificationIds = DeleteVpcEndpointConnectionNotificationsRequest { "ConnectionNotificationIds": _ConnectionNotificationIds, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpcEndpointConnectionNotificationsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpcEndpointConnectionNotificationsRequest' :: ValueStringList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ConnectionNotificationIds" :: (ValueStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ConnectionNotificationIds" :: (ValueStringList) } ) -> DeleteVpcEndpointConnectionNotificationsRequest
newDeleteVpcEndpointConnectionNotificationsRequest' _ConnectionNotificationIds customize = (DeleteVpcEndpointConnectionNotificationsRequest <<< customize) { "ConnectionNotificationIds": _ConnectionNotificationIds, "DryRun": (NullOrUndefined Nothing) }



newtype DeleteVpcEndpointConnectionNotificationsResult = DeleteVpcEndpointConnectionNotificationsResult 
  { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet)
  }
derive instance newtypeDeleteVpcEndpointConnectionNotificationsResult :: Newtype DeleteVpcEndpointConnectionNotificationsResult _
derive instance repGenericDeleteVpcEndpointConnectionNotificationsResult :: Generic DeleteVpcEndpointConnectionNotificationsResult _
instance showDeleteVpcEndpointConnectionNotificationsResult :: Show DeleteVpcEndpointConnectionNotificationsResult where
  show = genericShow
instance decodeDeleteVpcEndpointConnectionNotificationsResult :: Decode DeleteVpcEndpointConnectionNotificationsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpcEndpointConnectionNotificationsResult :: Encode DeleteVpcEndpointConnectionNotificationsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpcEndpointConnectionNotificationsResult from required parameters
newDeleteVpcEndpointConnectionNotificationsResult :: DeleteVpcEndpointConnectionNotificationsResult
newDeleteVpcEndpointConnectionNotificationsResult  = DeleteVpcEndpointConnectionNotificationsResult { "Unsuccessful": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpcEndpointConnectionNotificationsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpcEndpointConnectionNotificationsResult' :: ( { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } -> {"Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } ) -> DeleteVpcEndpointConnectionNotificationsResult
newDeleteVpcEndpointConnectionNotificationsResult'  customize = (DeleteVpcEndpointConnectionNotificationsResult <<< customize) { "Unsuccessful": (NullOrUndefined Nothing) }



newtype DeleteVpcEndpointServiceConfigurationsRequest = DeleteVpcEndpointServiceConfigurationsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ServiceIds" :: (ValueStringList)
  }
derive instance newtypeDeleteVpcEndpointServiceConfigurationsRequest :: Newtype DeleteVpcEndpointServiceConfigurationsRequest _
derive instance repGenericDeleteVpcEndpointServiceConfigurationsRequest :: Generic DeleteVpcEndpointServiceConfigurationsRequest _
instance showDeleteVpcEndpointServiceConfigurationsRequest :: Show DeleteVpcEndpointServiceConfigurationsRequest where
  show = genericShow
instance decodeDeleteVpcEndpointServiceConfigurationsRequest :: Decode DeleteVpcEndpointServiceConfigurationsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpcEndpointServiceConfigurationsRequest :: Encode DeleteVpcEndpointServiceConfigurationsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpcEndpointServiceConfigurationsRequest from required parameters
newDeleteVpcEndpointServiceConfigurationsRequest :: ValueStringList -> DeleteVpcEndpointServiceConfigurationsRequest
newDeleteVpcEndpointServiceConfigurationsRequest _ServiceIds = DeleteVpcEndpointServiceConfigurationsRequest { "ServiceIds": _ServiceIds, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpcEndpointServiceConfigurationsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpcEndpointServiceConfigurationsRequest' :: ValueStringList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceIds" :: (ValueStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceIds" :: (ValueStringList) } ) -> DeleteVpcEndpointServiceConfigurationsRequest
newDeleteVpcEndpointServiceConfigurationsRequest' _ServiceIds customize = (DeleteVpcEndpointServiceConfigurationsRequest <<< customize) { "ServiceIds": _ServiceIds, "DryRun": (NullOrUndefined Nothing) }



newtype DeleteVpcEndpointServiceConfigurationsResult = DeleteVpcEndpointServiceConfigurationsResult 
  { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet)
  }
derive instance newtypeDeleteVpcEndpointServiceConfigurationsResult :: Newtype DeleteVpcEndpointServiceConfigurationsResult _
derive instance repGenericDeleteVpcEndpointServiceConfigurationsResult :: Generic DeleteVpcEndpointServiceConfigurationsResult _
instance showDeleteVpcEndpointServiceConfigurationsResult :: Show DeleteVpcEndpointServiceConfigurationsResult where
  show = genericShow
instance decodeDeleteVpcEndpointServiceConfigurationsResult :: Decode DeleteVpcEndpointServiceConfigurationsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpcEndpointServiceConfigurationsResult :: Encode DeleteVpcEndpointServiceConfigurationsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpcEndpointServiceConfigurationsResult from required parameters
newDeleteVpcEndpointServiceConfigurationsResult :: DeleteVpcEndpointServiceConfigurationsResult
newDeleteVpcEndpointServiceConfigurationsResult  = DeleteVpcEndpointServiceConfigurationsResult { "Unsuccessful": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpcEndpointServiceConfigurationsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpcEndpointServiceConfigurationsResult' :: ( { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } -> {"Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } ) -> DeleteVpcEndpointServiceConfigurationsResult
newDeleteVpcEndpointServiceConfigurationsResult'  customize = (DeleteVpcEndpointServiceConfigurationsResult <<< customize) { "Unsuccessful": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteVpcEndpoints.</p>
newtype DeleteVpcEndpointsRequest = DeleteVpcEndpointsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcEndpointIds" :: (ValueStringList)
  }
derive instance newtypeDeleteVpcEndpointsRequest :: Newtype DeleteVpcEndpointsRequest _
derive instance repGenericDeleteVpcEndpointsRequest :: Generic DeleteVpcEndpointsRequest _
instance showDeleteVpcEndpointsRequest :: Show DeleteVpcEndpointsRequest where
  show = genericShow
instance decodeDeleteVpcEndpointsRequest :: Decode DeleteVpcEndpointsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpcEndpointsRequest :: Encode DeleteVpcEndpointsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpcEndpointsRequest from required parameters
newDeleteVpcEndpointsRequest :: ValueStringList -> DeleteVpcEndpointsRequest
newDeleteVpcEndpointsRequest _VpcEndpointIds = DeleteVpcEndpointsRequest { "VpcEndpointIds": _VpcEndpointIds, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpcEndpointsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpcEndpointsRequest' :: ValueStringList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcEndpointIds" :: (ValueStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcEndpointIds" :: (ValueStringList) } ) -> DeleteVpcEndpointsRequest
newDeleteVpcEndpointsRequest' _VpcEndpointIds customize = (DeleteVpcEndpointsRequest <<< customize) { "VpcEndpointIds": _VpcEndpointIds, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DeleteVpcEndpoints.</p>
newtype DeleteVpcEndpointsResult = DeleteVpcEndpointsResult 
  { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet)
  }
derive instance newtypeDeleteVpcEndpointsResult :: Newtype DeleteVpcEndpointsResult _
derive instance repGenericDeleteVpcEndpointsResult :: Generic DeleteVpcEndpointsResult _
instance showDeleteVpcEndpointsResult :: Show DeleteVpcEndpointsResult where
  show = genericShow
instance decodeDeleteVpcEndpointsResult :: Decode DeleteVpcEndpointsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpcEndpointsResult :: Encode DeleteVpcEndpointsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpcEndpointsResult from required parameters
newDeleteVpcEndpointsResult :: DeleteVpcEndpointsResult
newDeleteVpcEndpointsResult  = DeleteVpcEndpointsResult { "Unsuccessful": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpcEndpointsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpcEndpointsResult' :: ( { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } -> {"Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } ) -> DeleteVpcEndpointsResult
newDeleteVpcEndpointsResult'  customize = (DeleteVpcEndpointsResult <<< customize) { "Unsuccessful": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteVpcPeeringConnection.</p>
newtype DeleteVpcPeeringConnectionRequest = DeleteVpcPeeringConnectionRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcPeeringConnectionId" :: (String)
  }
derive instance newtypeDeleteVpcPeeringConnectionRequest :: Newtype DeleteVpcPeeringConnectionRequest _
derive instance repGenericDeleteVpcPeeringConnectionRequest :: Generic DeleteVpcPeeringConnectionRequest _
instance showDeleteVpcPeeringConnectionRequest :: Show DeleteVpcPeeringConnectionRequest where
  show = genericShow
instance decodeDeleteVpcPeeringConnectionRequest :: Decode DeleteVpcPeeringConnectionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpcPeeringConnectionRequest :: Encode DeleteVpcPeeringConnectionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpcPeeringConnectionRequest from required parameters
newDeleteVpcPeeringConnectionRequest :: String -> DeleteVpcPeeringConnectionRequest
newDeleteVpcPeeringConnectionRequest _VpcPeeringConnectionId = DeleteVpcPeeringConnectionRequest { "VpcPeeringConnectionId": _VpcPeeringConnectionId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpcPeeringConnectionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpcPeeringConnectionRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcPeeringConnectionId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcPeeringConnectionId" :: (String) } ) -> DeleteVpcPeeringConnectionRequest
newDeleteVpcPeeringConnectionRequest' _VpcPeeringConnectionId customize = (DeleteVpcPeeringConnectionRequest <<< customize) { "VpcPeeringConnectionId": _VpcPeeringConnectionId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DeleteVpcPeeringConnection.</p>
newtype DeleteVpcPeeringConnectionResult = DeleteVpcPeeringConnectionResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteVpcPeeringConnectionResult :: Newtype DeleteVpcPeeringConnectionResult _
derive instance repGenericDeleteVpcPeeringConnectionResult :: Generic DeleteVpcPeeringConnectionResult _
instance showDeleteVpcPeeringConnectionResult :: Show DeleteVpcPeeringConnectionResult where
  show = genericShow
instance decodeDeleteVpcPeeringConnectionResult :: Decode DeleteVpcPeeringConnectionResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpcPeeringConnectionResult :: Encode DeleteVpcPeeringConnectionResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpcPeeringConnectionResult from required parameters
newDeleteVpcPeeringConnectionResult :: DeleteVpcPeeringConnectionResult
newDeleteVpcPeeringConnectionResult  = DeleteVpcPeeringConnectionResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpcPeeringConnectionResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpcPeeringConnectionResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteVpcPeeringConnectionResult
newDeleteVpcPeeringConnectionResult'  customize = (DeleteVpcPeeringConnectionResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteVpc.</p>
newtype DeleteVpcRequest = DeleteVpcRequest 
  { "VpcId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteVpcRequest :: Newtype DeleteVpcRequest _
derive instance repGenericDeleteVpcRequest :: Generic DeleteVpcRequest _
instance showDeleteVpcRequest :: Show DeleteVpcRequest where
  show = genericShow
instance decodeDeleteVpcRequest :: Decode DeleteVpcRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpcRequest :: Encode DeleteVpcRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpcRequest from required parameters
newDeleteVpcRequest :: String -> DeleteVpcRequest
newDeleteVpcRequest _VpcId = DeleteVpcRequest { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpcRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpcRequest' :: String -> ( { "VpcId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"VpcId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteVpcRequest
newDeleteVpcRequest' _VpcId customize = (DeleteVpcRequest <<< customize) { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteVpnConnection.</p>
newtype DeleteVpnConnectionRequest = DeleteVpnConnectionRequest 
  { "VpnConnectionId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteVpnConnectionRequest :: Newtype DeleteVpnConnectionRequest _
derive instance repGenericDeleteVpnConnectionRequest :: Generic DeleteVpnConnectionRequest _
instance showDeleteVpnConnectionRequest :: Show DeleteVpnConnectionRequest where
  show = genericShow
instance decodeDeleteVpnConnectionRequest :: Decode DeleteVpnConnectionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpnConnectionRequest :: Encode DeleteVpnConnectionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpnConnectionRequest from required parameters
newDeleteVpnConnectionRequest :: String -> DeleteVpnConnectionRequest
newDeleteVpnConnectionRequest _VpnConnectionId = DeleteVpnConnectionRequest { "VpnConnectionId": _VpnConnectionId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpnConnectionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpnConnectionRequest' :: String -> ( { "VpnConnectionId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"VpnConnectionId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteVpnConnectionRequest
newDeleteVpnConnectionRequest' _VpnConnectionId customize = (DeleteVpnConnectionRequest <<< customize) { "VpnConnectionId": _VpnConnectionId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeleteVpnConnectionRoute.</p>
newtype DeleteVpnConnectionRouteRequest = DeleteVpnConnectionRouteRequest 
  { "DestinationCidrBlock" :: (String)
  , "VpnConnectionId" :: (String)
  }
derive instance newtypeDeleteVpnConnectionRouteRequest :: Newtype DeleteVpnConnectionRouteRequest _
derive instance repGenericDeleteVpnConnectionRouteRequest :: Generic DeleteVpnConnectionRouteRequest _
instance showDeleteVpnConnectionRouteRequest :: Show DeleteVpnConnectionRouteRequest where
  show = genericShow
instance decodeDeleteVpnConnectionRouteRequest :: Decode DeleteVpnConnectionRouteRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpnConnectionRouteRequest :: Encode DeleteVpnConnectionRouteRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpnConnectionRouteRequest from required parameters
newDeleteVpnConnectionRouteRequest :: String -> String -> DeleteVpnConnectionRouteRequest
newDeleteVpnConnectionRouteRequest _DestinationCidrBlock _VpnConnectionId = DeleteVpnConnectionRouteRequest { "DestinationCidrBlock": _DestinationCidrBlock, "VpnConnectionId": _VpnConnectionId }

-- | Constructs DeleteVpnConnectionRouteRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpnConnectionRouteRequest' :: String -> String -> ( { "DestinationCidrBlock" :: (String) , "VpnConnectionId" :: (String) } -> {"DestinationCidrBlock" :: (String) , "VpnConnectionId" :: (String) } ) -> DeleteVpnConnectionRouteRequest
newDeleteVpnConnectionRouteRequest' _DestinationCidrBlock _VpnConnectionId customize = (DeleteVpnConnectionRouteRequest <<< customize) { "DestinationCidrBlock": _DestinationCidrBlock, "VpnConnectionId": _VpnConnectionId }



-- | <p>Contains the parameters for DeleteVpnGateway.</p>
newtype DeleteVpnGatewayRequest = DeleteVpnGatewayRequest 
  { "VpnGatewayId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeleteVpnGatewayRequest :: Newtype DeleteVpnGatewayRequest _
derive instance repGenericDeleteVpnGatewayRequest :: Generic DeleteVpnGatewayRequest _
instance showDeleteVpnGatewayRequest :: Show DeleteVpnGatewayRequest where
  show = genericShow
instance decodeDeleteVpnGatewayRequest :: Decode DeleteVpnGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeleteVpnGatewayRequest :: Encode DeleteVpnGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeleteVpnGatewayRequest from required parameters
newDeleteVpnGatewayRequest :: String -> DeleteVpnGatewayRequest
newDeleteVpnGatewayRequest _VpnGatewayId = DeleteVpnGatewayRequest { "VpnGatewayId": _VpnGatewayId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeleteVpnGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeleteVpnGatewayRequest' :: String -> ( { "VpnGatewayId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"VpnGatewayId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeleteVpnGatewayRequest
newDeleteVpnGatewayRequest' _VpnGatewayId customize = (DeleteVpnGatewayRequest <<< customize) { "VpnGatewayId": _VpnGatewayId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DeregisterImage.</p>
newtype DeregisterImageRequest = DeregisterImageRequest 
  { "ImageId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDeregisterImageRequest :: Newtype DeregisterImageRequest _
derive instance repGenericDeregisterImageRequest :: Generic DeregisterImageRequest _
instance showDeregisterImageRequest :: Show DeregisterImageRequest where
  show = genericShow
instance decodeDeregisterImageRequest :: Decode DeregisterImageRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeregisterImageRequest :: Encode DeregisterImageRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DeregisterImageRequest from required parameters
newDeregisterImageRequest :: String -> DeregisterImageRequest
newDeregisterImageRequest _ImageId = DeregisterImageRequest { "ImageId": _ImageId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DeregisterImageRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDeregisterImageRequest' :: String -> ( { "ImageId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"ImageId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DeregisterImageRequest
newDeregisterImageRequest' _ImageId customize = (DeregisterImageRequest <<< customize) { "ImageId": _ImageId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeAccountAttributes.</p>
newtype DescribeAccountAttributesRequest = DescribeAccountAttributesRequest 
  { "AttributeNames" :: NullOrUndefined.NullOrUndefined (AccountAttributeNameStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeAccountAttributesRequest :: Newtype DescribeAccountAttributesRequest _
derive instance repGenericDescribeAccountAttributesRequest :: Generic DescribeAccountAttributesRequest _
instance showDescribeAccountAttributesRequest :: Show DescribeAccountAttributesRequest where
  show = genericShow
instance decodeDescribeAccountAttributesRequest :: Decode DescribeAccountAttributesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeAccountAttributesRequest :: Encode DescribeAccountAttributesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeAccountAttributesRequest from required parameters
newDescribeAccountAttributesRequest :: DescribeAccountAttributesRequest
newDescribeAccountAttributesRequest  = DescribeAccountAttributesRequest { "AttributeNames": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeAccountAttributesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeAccountAttributesRequest' :: ( { "AttributeNames" :: NullOrUndefined.NullOrUndefined (AccountAttributeNameStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AttributeNames" :: NullOrUndefined.NullOrUndefined (AccountAttributeNameStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeAccountAttributesRequest
newDescribeAccountAttributesRequest'  customize = (DescribeAccountAttributesRequest <<< customize) { "AttributeNames": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeAccountAttributes.</p>
newtype DescribeAccountAttributesResult = DescribeAccountAttributesResult 
  { "AccountAttributes" :: NullOrUndefined.NullOrUndefined (AccountAttributeList)
  }
derive instance newtypeDescribeAccountAttributesResult :: Newtype DescribeAccountAttributesResult _
derive instance repGenericDescribeAccountAttributesResult :: Generic DescribeAccountAttributesResult _
instance showDescribeAccountAttributesResult :: Show DescribeAccountAttributesResult where
  show = genericShow
instance decodeDescribeAccountAttributesResult :: Decode DescribeAccountAttributesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeAccountAttributesResult :: Encode DescribeAccountAttributesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeAccountAttributesResult from required parameters
newDescribeAccountAttributesResult :: DescribeAccountAttributesResult
newDescribeAccountAttributesResult  = DescribeAccountAttributesResult { "AccountAttributes": (NullOrUndefined Nothing) }

-- | Constructs DescribeAccountAttributesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeAccountAttributesResult' :: ( { "AccountAttributes" :: NullOrUndefined.NullOrUndefined (AccountAttributeList) } -> {"AccountAttributes" :: NullOrUndefined.NullOrUndefined (AccountAttributeList) } ) -> DescribeAccountAttributesResult
newDescribeAccountAttributesResult'  customize = (DescribeAccountAttributesResult <<< customize) { "AccountAttributes": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeAddresses.</p>
newtype DescribeAddressesRequest = DescribeAddressesRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "PublicIps" :: NullOrUndefined.NullOrUndefined (PublicIpStringList)
  , "AllocationIds" :: NullOrUndefined.NullOrUndefined (AllocationIdList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeAddressesRequest :: Newtype DescribeAddressesRequest _
derive instance repGenericDescribeAddressesRequest :: Generic DescribeAddressesRequest _
instance showDescribeAddressesRequest :: Show DescribeAddressesRequest where
  show = genericShow
instance decodeDescribeAddressesRequest :: Decode DescribeAddressesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeAddressesRequest :: Encode DescribeAddressesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeAddressesRequest from required parameters
newDescribeAddressesRequest :: DescribeAddressesRequest
newDescribeAddressesRequest  = DescribeAddressesRequest { "AllocationIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "PublicIps": (NullOrUndefined Nothing) }

-- | Constructs DescribeAddressesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeAddressesRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "PublicIps" :: NullOrUndefined.NullOrUndefined (PublicIpStringList) , "AllocationIds" :: NullOrUndefined.NullOrUndefined (AllocationIdList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "PublicIps" :: NullOrUndefined.NullOrUndefined (PublicIpStringList) , "AllocationIds" :: NullOrUndefined.NullOrUndefined (AllocationIdList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeAddressesRequest
newDescribeAddressesRequest'  customize = (DescribeAddressesRequest <<< customize) { "AllocationIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "PublicIps": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeAddresses.</p>
newtype DescribeAddressesResult = DescribeAddressesResult 
  { "Addresses" :: NullOrUndefined.NullOrUndefined (AddressList)
  }
derive instance newtypeDescribeAddressesResult :: Newtype DescribeAddressesResult _
derive instance repGenericDescribeAddressesResult :: Generic DescribeAddressesResult _
instance showDescribeAddressesResult :: Show DescribeAddressesResult where
  show = genericShow
instance decodeDescribeAddressesResult :: Decode DescribeAddressesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeAddressesResult :: Encode DescribeAddressesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeAddressesResult from required parameters
newDescribeAddressesResult :: DescribeAddressesResult
newDescribeAddressesResult  = DescribeAddressesResult { "Addresses": (NullOrUndefined Nothing) }

-- | Constructs DescribeAddressesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeAddressesResult' :: ( { "Addresses" :: NullOrUndefined.NullOrUndefined (AddressList) } -> {"Addresses" :: NullOrUndefined.NullOrUndefined (AddressList) } ) -> DescribeAddressesResult
newDescribeAddressesResult'  customize = (DescribeAddressesResult <<< customize) { "Addresses": (NullOrUndefined Nothing) }



newtype DescribeAggregateIdFormatRequest = DescribeAggregateIdFormatRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeAggregateIdFormatRequest :: Newtype DescribeAggregateIdFormatRequest _
derive instance repGenericDescribeAggregateIdFormatRequest :: Generic DescribeAggregateIdFormatRequest _
instance showDescribeAggregateIdFormatRequest :: Show DescribeAggregateIdFormatRequest where
  show = genericShow
instance decodeDescribeAggregateIdFormatRequest :: Decode DescribeAggregateIdFormatRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeAggregateIdFormatRequest :: Encode DescribeAggregateIdFormatRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeAggregateIdFormatRequest from required parameters
newDescribeAggregateIdFormatRequest :: DescribeAggregateIdFormatRequest
newDescribeAggregateIdFormatRequest  = DescribeAggregateIdFormatRequest { "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeAggregateIdFormatRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeAggregateIdFormatRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeAggregateIdFormatRequest
newDescribeAggregateIdFormatRequest'  customize = (DescribeAggregateIdFormatRequest <<< customize) { "DryRun": (NullOrUndefined Nothing) }



newtype DescribeAggregateIdFormatResult = DescribeAggregateIdFormatResult 
  { "UseLongIdsAggregated" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList)
  }
derive instance newtypeDescribeAggregateIdFormatResult :: Newtype DescribeAggregateIdFormatResult _
derive instance repGenericDescribeAggregateIdFormatResult :: Generic DescribeAggregateIdFormatResult _
instance showDescribeAggregateIdFormatResult :: Show DescribeAggregateIdFormatResult where
  show = genericShow
instance decodeDescribeAggregateIdFormatResult :: Decode DescribeAggregateIdFormatResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeAggregateIdFormatResult :: Encode DescribeAggregateIdFormatResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeAggregateIdFormatResult from required parameters
newDescribeAggregateIdFormatResult :: DescribeAggregateIdFormatResult
newDescribeAggregateIdFormatResult  = DescribeAggregateIdFormatResult { "Statuses": (NullOrUndefined Nothing), "UseLongIdsAggregated": (NullOrUndefined Nothing) }

-- | Constructs DescribeAggregateIdFormatResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeAggregateIdFormatResult' :: ( { "UseLongIdsAggregated" :: NullOrUndefined.NullOrUndefined (Boolean) , "Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList) } -> {"UseLongIdsAggregated" :: NullOrUndefined.NullOrUndefined (Boolean) , "Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList) } ) -> DescribeAggregateIdFormatResult
newDescribeAggregateIdFormatResult'  customize = (DescribeAggregateIdFormatResult <<< customize) { "Statuses": (NullOrUndefined Nothing), "UseLongIdsAggregated": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeAvailabilityZones.</p>
newtype DescribeAvailabilityZonesRequest = DescribeAvailabilityZonesRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "ZoneNames" :: NullOrUndefined.NullOrUndefined (ZoneNameStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeAvailabilityZonesRequest :: Newtype DescribeAvailabilityZonesRequest _
derive instance repGenericDescribeAvailabilityZonesRequest :: Generic DescribeAvailabilityZonesRequest _
instance showDescribeAvailabilityZonesRequest :: Show DescribeAvailabilityZonesRequest where
  show = genericShow
instance decodeDescribeAvailabilityZonesRequest :: Decode DescribeAvailabilityZonesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeAvailabilityZonesRequest :: Encode DescribeAvailabilityZonesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeAvailabilityZonesRequest from required parameters
newDescribeAvailabilityZonesRequest :: DescribeAvailabilityZonesRequest
newDescribeAvailabilityZonesRequest  = DescribeAvailabilityZonesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "ZoneNames": (NullOrUndefined Nothing) }

-- | Constructs DescribeAvailabilityZonesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeAvailabilityZonesRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ZoneNames" :: NullOrUndefined.NullOrUndefined (ZoneNameStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ZoneNames" :: NullOrUndefined.NullOrUndefined (ZoneNameStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeAvailabilityZonesRequest
newDescribeAvailabilityZonesRequest'  customize = (DescribeAvailabilityZonesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "ZoneNames": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeAvailabiltyZones.</p>
newtype DescribeAvailabilityZonesResult = DescribeAvailabilityZonesResult 
  { "AvailabilityZones" :: NullOrUndefined.NullOrUndefined (AvailabilityZoneList)
  }
derive instance newtypeDescribeAvailabilityZonesResult :: Newtype DescribeAvailabilityZonesResult _
derive instance repGenericDescribeAvailabilityZonesResult :: Generic DescribeAvailabilityZonesResult _
instance showDescribeAvailabilityZonesResult :: Show DescribeAvailabilityZonesResult where
  show = genericShow
instance decodeDescribeAvailabilityZonesResult :: Decode DescribeAvailabilityZonesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeAvailabilityZonesResult :: Encode DescribeAvailabilityZonesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeAvailabilityZonesResult from required parameters
newDescribeAvailabilityZonesResult :: DescribeAvailabilityZonesResult
newDescribeAvailabilityZonesResult  = DescribeAvailabilityZonesResult { "AvailabilityZones": (NullOrUndefined Nothing) }

-- | Constructs DescribeAvailabilityZonesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeAvailabilityZonesResult' :: ( { "AvailabilityZones" :: NullOrUndefined.NullOrUndefined (AvailabilityZoneList) } -> {"AvailabilityZones" :: NullOrUndefined.NullOrUndefined (AvailabilityZoneList) } ) -> DescribeAvailabilityZonesResult
newDescribeAvailabilityZonesResult'  customize = (DescribeAvailabilityZonesResult <<< customize) { "AvailabilityZones": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeBundleTasks.</p>
newtype DescribeBundleTasksRequest = DescribeBundleTasksRequest 
  { "BundleIds" :: NullOrUndefined.NullOrUndefined (BundleIdStringList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeBundleTasksRequest :: Newtype DescribeBundleTasksRequest _
derive instance repGenericDescribeBundleTasksRequest :: Generic DescribeBundleTasksRequest _
instance showDescribeBundleTasksRequest :: Show DescribeBundleTasksRequest where
  show = genericShow
instance decodeDescribeBundleTasksRequest :: Decode DescribeBundleTasksRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeBundleTasksRequest :: Encode DescribeBundleTasksRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeBundleTasksRequest from required parameters
newDescribeBundleTasksRequest :: DescribeBundleTasksRequest
newDescribeBundleTasksRequest  = DescribeBundleTasksRequest { "BundleIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing) }

-- | Constructs DescribeBundleTasksRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeBundleTasksRequest' :: ( { "BundleIds" :: NullOrUndefined.NullOrUndefined (BundleIdStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"BundleIds" :: NullOrUndefined.NullOrUndefined (BundleIdStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeBundleTasksRequest
newDescribeBundleTasksRequest'  customize = (DescribeBundleTasksRequest <<< customize) { "BundleIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeBundleTasks.</p>
newtype DescribeBundleTasksResult = DescribeBundleTasksResult 
  { "BundleTasks" :: NullOrUndefined.NullOrUndefined (BundleTaskList)
  }
derive instance newtypeDescribeBundleTasksResult :: Newtype DescribeBundleTasksResult _
derive instance repGenericDescribeBundleTasksResult :: Generic DescribeBundleTasksResult _
instance showDescribeBundleTasksResult :: Show DescribeBundleTasksResult where
  show = genericShow
instance decodeDescribeBundleTasksResult :: Decode DescribeBundleTasksResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeBundleTasksResult :: Encode DescribeBundleTasksResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeBundleTasksResult from required parameters
newDescribeBundleTasksResult :: DescribeBundleTasksResult
newDescribeBundleTasksResult  = DescribeBundleTasksResult { "BundleTasks": (NullOrUndefined Nothing) }

-- | Constructs DescribeBundleTasksResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeBundleTasksResult' :: ( { "BundleTasks" :: NullOrUndefined.NullOrUndefined (BundleTaskList) } -> {"BundleTasks" :: NullOrUndefined.NullOrUndefined (BundleTaskList) } ) -> DescribeBundleTasksResult
newDescribeBundleTasksResult'  customize = (DescribeBundleTasksResult <<< customize) { "BundleTasks": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeClassicLinkInstances.</p>
newtype DescribeClassicLinkInstancesRequest = DescribeClassicLinkInstancesRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeClassicLinkInstancesRequest :: Newtype DescribeClassicLinkInstancesRequest _
derive instance repGenericDescribeClassicLinkInstancesRequest :: Generic DescribeClassicLinkInstancesRequest _
instance showDescribeClassicLinkInstancesRequest :: Show DescribeClassicLinkInstancesRequest where
  show = genericShow
instance decodeDescribeClassicLinkInstancesRequest :: Decode DescribeClassicLinkInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeClassicLinkInstancesRequest :: Encode DescribeClassicLinkInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeClassicLinkInstancesRequest from required parameters
newDescribeClassicLinkInstancesRequest :: DescribeClassicLinkInstancesRequest
newDescribeClassicLinkInstancesRequest  = DescribeClassicLinkInstancesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "InstanceIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeClassicLinkInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeClassicLinkInstancesRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeClassicLinkInstancesRequest
newDescribeClassicLinkInstancesRequest'  customize = (DescribeClassicLinkInstancesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "InstanceIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeClassicLinkInstances.</p>
newtype DescribeClassicLinkInstancesResult = DescribeClassicLinkInstancesResult 
  { "Instances" :: NullOrUndefined.NullOrUndefined (ClassicLinkInstanceList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeClassicLinkInstancesResult :: Newtype DescribeClassicLinkInstancesResult _
derive instance repGenericDescribeClassicLinkInstancesResult :: Generic DescribeClassicLinkInstancesResult _
instance showDescribeClassicLinkInstancesResult :: Show DescribeClassicLinkInstancesResult where
  show = genericShow
instance decodeDescribeClassicLinkInstancesResult :: Decode DescribeClassicLinkInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeClassicLinkInstancesResult :: Encode DescribeClassicLinkInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeClassicLinkInstancesResult from required parameters
newDescribeClassicLinkInstancesResult :: DescribeClassicLinkInstancesResult
newDescribeClassicLinkInstancesResult  = DescribeClassicLinkInstancesResult { "Instances": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeClassicLinkInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeClassicLinkInstancesResult' :: ( { "Instances" :: NullOrUndefined.NullOrUndefined (ClassicLinkInstanceList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Instances" :: NullOrUndefined.NullOrUndefined (ClassicLinkInstanceList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeClassicLinkInstancesResult
newDescribeClassicLinkInstancesResult'  customize = (DescribeClassicLinkInstancesResult <<< customize) { "Instances": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeConversionTaskList = DescribeConversionTaskList (Array ConversionTask)
derive instance newtypeDescribeConversionTaskList :: Newtype DescribeConversionTaskList _
derive instance repGenericDescribeConversionTaskList :: Generic DescribeConversionTaskList _
instance showDescribeConversionTaskList :: Show DescribeConversionTaskList where
  show = genericShow
instance decodeDescribeConversionTaskList :: Decode DescribeConversionTaskList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeConversionTaskList :: Encode DescribeConversionTaskList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for DescribeConversionTasks.</p>
newtype DescribeConversionTasksRequest = DescribeConversionTasksRequest 
  { "ConversionTaskIds" :: NullOrUndefined.NullOrUndefined (ConversionIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeConversionTasksRequest :: Newtype DescribeConversionTasksRequest _
derive instance repGenericDescribeConversionTasksRequest :: Generic DescribeConversionTasksRequest _
instance showDescribeConversionTasksRequest :: Show DescribeConversionTasksRequest where
  show = genericShow
instance decodeDescribeConversionTasksRequest :: Decode DescribeConversionTasksRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeConversionTasksRequest :: Encode DescribeConversionTasksRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeConversionTasksRequest from required parameters
newDescribeConversionTasksRequest :: DescribeConversionTasksRequest
newDescribeConversionTasksRequest  = DescribeConversionTasksRequest { "ConversionTaskIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeConversionTasksRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeConversionTasksRequest' :: ( { "ConversionTaskIds" :: NullOrUndefined.NullOrUndefined (ConversionIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"ConversionTaskIds" :: NullOrUndefined.NullOrUndefined (ConversionIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeConversionTasksRequest
newDescribeConversionTasksRequest'  customize = (DescribeConversionTasksRequest <<< customize) { "ConversionTaskIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output for DescribeConversionTasks.</p>
newtype DescribeConversionTasksResult = DescribeConversionTasksResult 
  { "ConversionTasks" :: NullOrUndefined.NullOrUndefined (DescribeConversionTaskList)
  }
derive instance newtypeDescribeConversionTasksResult :: Newtype DescribeConversionTasksResult _
derive instance repGenericDescribeConversionTasksResult :: Generic DescribeConversionTasksResult _
instance showDescribeConversionTasksResult :: Show DescribeConversionTasksResult where
  show = genericShow
instance decodeDescribeConversionTasksResult :: Decode DescribeConversionTasksResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeConversionTasksResult :: Encode DescribeConversionTasksResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeConversionTasksResult from required parameters
newDescribeConversionTasksResult :: DescribeConversionTasksResult
newDescribeConversionTasksResult  = DescribeConversionTasksResult { "ConversionTasks": (NullOrUndefined Nothing) }

-- | Constructs DescribeConversionTasksResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeConversionTasksResult' :: ( { "ConversionTasks" :: NullOrUndefined.NullOrUndefined (DescribeConversionTaskList) } -> {"ConversionTasks" :: NullOrUndefined.NullOrUndefined (DescribeConversionTaskList) } ) -> DescribeConversionTasksResult
newDescribeConversionTasksResult'  customize = (DescribeConversionTasksResult <<< customize) { "ConversionTasks": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeCustomerGateways.</p>
newtype DescribeCustomerGatewaysRequest = DescribeCustomerGatewaysRequest 
  { "CustomerGatewayIds" :: NullOrUndefined.NullOrUndefined (CustomerGatewayIdStringList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeCustomerGatewaysRequest :: Newtype DescribeCustomerGatewaysRequest _
derive instance repGenericDescribeCustomerGatewaysRequest :: Generic DescribeCustomerGatewaysRequest _
instance showDescribeCustomerGatewaysRequest :: Show DescribeCustomerGatewaysRequest where
  show = genericShow
instance decodeDescribeCustomerGatewaysRequest :: Decode DescribeCustomerGatewaysRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeCustomerGatewaysRequest :: Encode DescribeCustomerGatewaysRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeCustomerGatewaysRequest from required parameters
newDescribeCustomerGatewaysRequest :: DescribeCustomerGatewaysRequest
newDescribeCustomerGatewaysRequest  = DescribeCustomerGatewaysRequest { "CustomerGatewayIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing) }

-- | Constructs DescribeCustomerGatewaysRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeCustomerGatewaysRequest' :: ( { "CustomerGatewayIds" :: NullOrUndefined.NullOrUndefined (CustomerGatewayIdStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"CustomerGatewayIds" :: NullOrUndefined.NullOrUndefined (CustomerGatewayIdStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeCustomerGatewaysRequest
newDescribeCustomerGatewaysRequest'  customize = (DescribeCustomerGatewaysRequest <<< customize) { "CustomerGatewayIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeCustomerGateways.</p>
newtype DescribeCustomerGatewaysResult = DescribeCustomerGatewaysResult 
  { "CustomerGateways" :: NullOrUndefined.NullOrUndefined (CustomerGatewayList)
  }
derive instance newtypeDescribeCustomerGatewaysResult :: Newtype DescribeCustomerGatewaysResult _
derive instance repGenericDescribeCustomerGatewaysResult :: Generic DescribeCustomerGatewaysResult _
instance showDescribeCustomerGatewaysResult :: Show DescribeCustomerGatewaysResult where
  show = genericShow
instance decodeDescribeCustomerGatewaysResult :: Decode DescribeCustomerGatewaysResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeCustomerGatewaysResult :: Encode DescribeCustomerGatewaysResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeCustomerGatewaysResult from required parameters
newDescribeCustomerGatewaysResult :: DescribeCustomerGatewaysResult
newDescribeCustomerGatewaysResult  = DescribeCustomerGatewaysResult { "CustomerGateways": (NullOrUndefined Nothing) }

-- | Constructs DescribeCustomerGatewaysResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeCustomerGatewaysResult' :: ( { "CustomerGateways" :: NullOrUndefined.NullOrUndefined (CustomerGatewayList) } -> {"CustomerGateways" :: NullOrUndefined.NullOrUndefined (CustomerGatewayList) } ) -> DescribeCustomerGatewaysResult
newDescribeCustomerGatewaysResult'  customize = (DescribeCustomerGatewaysResult <<< customize) { "CustomerGateways": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeDhcpOptions.</p>
newtype DescribeDhcpOptionsRequest = DescribeDhcpOptionsRequest 
  { "DhcpOptionsIds" :: NullOrUndefined.NullOrUndefined (DhcpOptionsIdStringList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeDhcpOptionsRequest :: Newtype DescribeDhcpOptionsRequest _
derive instance repGenericDescribeDhcpOptionsRequest :: Generic DescribeDhcpOptionsRequest _
instance showDescribeDhcpOptionsRequest :: Show DescribeDhcpOptionsRequest where
  show = genericShow
instance decodeDescribeDhcpOptionsRequest :: Decode DescribeDhcpOptionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeDhcpOptionsRequest :: Encode DescribeDhcpOptionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeDhcpOptionsRequest from required parameters
newDescribeDhcpOptionsRequest :: DescribeDhcpOptionsRequest
newDescribeDhcpOptionsRequest  = DescribeDhcpOptionsRequest { "DhcpOptionsIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing) }

-- | Constructs DescribeDhcpOptionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeDhcpOptionsRequest' :: ( { "DhcpOptionsIds" :: NullOrUndefined.NullOrUndefined (DhcpOptionsIdStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DhcpOptionsIds" :: NullOrUndefined.NullOrUndefined (DhcpOptionsIdStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeDhcpOptionsRequest
newDescribeDhcpOptionsRequest'  customize = (DescribeDhcpOptionsRequest <<< customize) { "DhcpOptionsIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeDhcpOptions.</p>
newtype DescribeDhcpOptionsResult = DescribeDhcpOptionsResult 
  { "DhcpOptions" :: NullOrUndefined.NullOrUndefined (DhcpOptionsList)
  }
derive instance newtypeDescribeDhcpOptionsResult :: Newtype DescribeDhcpOptionsResult _
derive instance repGenericDescribeDhcpOptionsResult :: Generic DescribeDhcpOptionsResult _
instance showDescribeDhcpOptionsResult :: Show DescribeDhcpOptionsResult where
  show = genericShow
instance decodeDescribeDhcpOptionsResult :: Decode DescribeDhcpOptionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeDhcpOptionsResult :: Encode DescribeDhcpOptionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeDhcpOptionsResult from required parameters
newDescribeDhcpOptionsResult :: DescribeDhcpOptionsResult
newDescribeDhcpOptionsResult  = DescribeDhcpOptionsResult { "DhcpOptions": (NullOrUndefined Nothing) }

-- | Constructs DescribeDhcpOptionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeDhcpOptionsResult' :: ( { "DhcpOptions" :: NullOrUndefined.NullOrUndefined (DhcpOptionsList) } -> {"DhcpOptions" :: NullOrUndefined.NullOrUndefined (DhcpOptionsList) } ) -> DescribeDhcpOptionsResult
newDescribeDhcpOptionsResult'  customize = (DescribeDhcpOptionsResult <<< customize) { "DhcpOptions": (NullOrUndefined Nothing) }



newtype DescribeEgressOnlyInternetGatewaysRequest = DescribeEgressOnlyInternetGatewaysRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EgressOnlyInternetGatewayIds" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGatewayIdList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeEgressOnlyInternetGatewaysRequest :: Newtype DescribeEgressOnlyInternetGatewaysRequest _
derive instance repGenericDescribeEgressOnlyInternetGatewaysRequest :: Generic DescribeEgressOnlyInternetGatewaysRequest _
instance showDescribeEgressOnlyInternetGatewaysRequest :: Show DescribeEgressOnlyInternetGatewaysRequest where
  show = genericShow
instance decodeDescribeEgressOnlyInternetGatewaysRequest :: Decode DescribeEgressOnlyInternetGatewaysRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeEgressOnlyInternetGatewaysRequest :: Encode DescribeEgressOnlyInternetGatewaysRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeEgressOnlyInternetGatewaysRequest from required parameters
newDescribeEgressOnlyInternetGatewaysRequest :: DescribeEgressOnlyInternetGatewaysRequest
newDescribeEgressOnlyInternetGatewaysRequest  = DescribeEgressOnlyInternetGatewaysRequest { "DryRun": (NullOrUndefined Nothing), "EgressOnlyInternetGatewayIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeEgressOnlyInternetGatewaysRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeEgressOnlyInternetGatewaysRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EgressOnlyInternetGatewayIds" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGatewayIdList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EgressOnlyInternetGatewayIds" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGatewayIdList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeEgressOnlyInternetGatewaysRequest
newDescribeEgressOnlyInternetGatewaysRequest'  customize = (DescribeEgressOnlyInternetGatewaysRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "EgressOnlyInternetGatewayIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeEgressOnlyInternetGatewaysResult = DescribeEgressOnlyInternetGatewaysResult 
  { "EgressOnlyInternetGateways" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGatewayList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeEgressOnlyInternetGatewaysResult :: Newtype DescribeEgressOnlyInternetGatewaysResult _
derive instance repGenericDescribeEgressOnlyInternetGatewaysResult :: Generic DescribeEgressOnlyInternetGatewaysResult _
instance showDescribeEgressOnlyInternetGatewaysResult :: Show DescribeEgressOnlyInternetGatewaysResult where
  show = genericShow
instance decodeDescribeEgressOnlyInternetGatewaysResult :: Decode DescribeEgressOnlyInternetGatewaysResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeEgressOnlyInternetGatewaysResult :: Encode DescribeEgressOnlyInternetGatewaysResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeEgressOnlyInternetGatewaysResult from required parameters
newDescribeEgressOnlyInternetGatewaysResult :: DescribeEgressOnlyInternetGatewaysResult
newDescribeEgressOnlyInternetGatewaysResult  = DescribeEgressOnlyInternetGatewaysResult { "EgressOnlyInternetGateways": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeEgressOnlyInternetGatewaysResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeEgressOnlyInternetGatewaysResult' :: ( { "EgressOnlyInternetGateways" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGatewayList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"EgressOnlyInternetGateways" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGatewayList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeEgressOnlyInternetGatewaysResult
newDescribeEgressOnlyInternetGatewaysResult'  customize = (DescribeEgressOnlyInternetGatewaysResult <<< customize) { "EgressOnlyInternetGateways": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeElasticGpusRequest = DescribeElasticGpusRequest 
  { "ElasticGpuIds" :: NullOrUndefined.NullOrUndefined (ElasticGpuIdSet)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeElasticGpusRequest :: Newtype DescribeElasticGpusRequest _
derive instance repGenericDescribeElasticGpusRequest :: Generic DescribeElasticGpusRequest _
instance showDescribeElasticGpusRequest :: Show DescribeElasticGpusRequest where
  show = genericShow
instance decodeDescribeElasticGpusRequest :: Decode DescribeElasticGpusRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeElasticGpusRequest :: Encode DescribeElasticGpusRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeElasticGpusRequest from required parameters
newDescribeElasticGpusRequest :: DescribeElasticGpusRequest
newDescribeElasticGpusRequest  = DescribeElasticGpusRequest { "DryRun": (NullOrUndefined Nothing), "ElasticGpuIds": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeElasticGpusRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeElasticGpusRequest' :: ( { "ElasticGpuIds" :: NullOrUndefined.NullOrUndefined (ElasticGpuIdSet) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"ElasticGpuIds" :: NullOrUndefined.NullOrUndefined (ElasticGpuIdSet) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeElasticGpusRequest
newDescribeElasticGpusRequest'  customize = (DescribeElasticGpusRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "ElasticGpuIds": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeElasticGpusResult = DescribeElasticGpusResult 
  { "ElasticGpuSet" :: NullOrUndefined.NullOrUndefined (ElasticGpuSet)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeElasticGpusResult :: Newtype DescribeElasticGpusResult _
derive instance repGenericDescribeElasticGpusResult :: Generic DescribeElasticGpusResult _
instance showDescribeElasticGpusResult :: Show DescribeElasticGpusResult where
  show = genericShow
instance decodeDescribeElasticGpusResult :: Decode DescribeElasticGpusResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeElasticGpusResult :: Encode DescribeElasticGpusResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeElasticGpusResult from required parameters
newDescribeElasticGpusResult :: DescribeElasticGpusResult
newDescribeElasticGpusResult  = DescribeElasticGpusResult { "ElasticGpuSet": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeElasticGpusResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeElasticGpusResult' :: ( { "ElasticGpuSet" :: NullOrUndefined.NullOrUndefined (ElasticGpuSet) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"ElasticGpuSet" :: NullOrUndefined.NullOrUndefined (ElasticGpuSet) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeElasticGpusResult
newDescribeElasticGpusResult'  customize = (DescribeElasticGpusResult <<< customize) { "ElasticGpuSet": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeExportTasks.</p>
newtype DescribeExportTasksRequest = DescribeExportTasksRequest 
  { "ExportTaskIds" :: NullOrUndefined.NullOrUndefined (ExportTaskIdStringList)
  }
derive instance newtypeDescribeExportTasksRequest :: Newtype DescribeExportTasksRequest _
derive instance repGenericDescribeExportTasksRequest :: Generic DescribeExportTasksRequest _
instance showDescribeExportTasksRequest :: Show DescribeExportTasksRequest where
  show = genericShow
instance decodeDescribeExportTasksRequest :: Decode DescribeExportTasksRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeExportTasksRequest :: Encode DescribeExportTasksRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeExportTasksRequest from required parameters
newDescribeExportTasksRequest :: DescribeExportTasksRequest
newDescribeExportTasksRequest  = DescribeExportTasksRequest { "ExportTaskIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeExportTasksRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeExportTasksRequest' :: ( { "ExportTaskIds" :: NullOrUndefined.NullOrUndefined (ExportTaskIdStringList) } -> {"ExportTaskIds" :: NullOrUndefined.NullOrUndefined (ExportTaskIdStringList) } ) -> DescribeExportTasksRequest
newDescribeExportTasksRequest'  customize = (DescribeExportTasksRequest <<< customize) { "ExportTaskIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output for DescribeExportTasks.</p>
newtype DescribeExportTasksResult = DescribeExportTasksResult 
  { "ExportTasks" :: NullOrUndefined.NullOrUndefined (ExportTaskList)
  }
derive instance newtypeDescribeExportTasksResult :: Newtype DescribeExportTasksResult _
derive instance repGenericDescribeExportTasksResult :: Generic DescribeExportTasksResult _
instance showDescribeExportTasksResult :: Show DescribeExportTasksResult where
  show = genericShow
instance decodeDescribeExportTasksResult :: Decode DescribeExportTasksResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeExportTasksResult :: Encode DescribeExportTasksResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeExportTasksResult from required parameters
newDescribeExportTasksResult :: DescribeExportTasksResult
newDescribeExportTasksResult  = DescribeExportTasksResult { "ExportTasks": (NullOrUndefined Nothing) }

-- | Constructs DescribeExportTasksResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeExportTasksResult' :: ( { "ExportTasks" :: NullOrUndefined.NullOrUndefined (ExportTaskList) } -> {"ExportTasks" :: NullOrUndefined.NullOrUndefined (ExportTaskList) } ) -> DescribeExportTasksResult
newDescribeExportTasksResult'  customize = (DescribeExportTasksResult <<< customize) { "ExportTasks": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeFlowLogs.</p>
newtype DescribeFlowLogsRequest = DescribeFlowLogsRequest 
  { "Filter" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "FlowLogIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeFlowLogsRequest :: Newtype DescribeFlowLogsRequest _
derive instance repGenericDescribeFlowLogsRequest :: Generic DescribeFlowLogsRequest _
instance showDescribeFlowLogsRequest :: Show DescribeFlowLogsRequest where
  show = genericShow
instance decodeDescribeFlowLogsRequest :: Decode DescribeFlowLogsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeFlowLogsRequest :: Encode DescribeFlowLogsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeFlowLogsRequest from required parameters
newDescribeFlowLogsRequest :: DescribeFlowLogsRequest
newDescribeFlowLogsRequest  = DescribeFlowLogsRequest { "Filter": (NullOrUndefined Nothing), "FlowLogIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeFlowLogsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeFlowLogsRequest' :: ( { "Filter" :: NullOrUndefined.NullOrUndefined (FilterList) , "FlowLogIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Filter" :: NullOrUndefined.NullOrUndefined (FilterList) , "FlowLogIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeFlowLogsRequest
newDescribeFlowLogsRequest'  customize = (DescribeFlowLogsRequest <<< customize) { "Filter": (NullOrUndefined Nothing), "FlowLogIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeFlowLogs.</p>
newtype DescribeFlowLogsResult = DescribeFlowLogsResult 
  { "FlowLogs" :: NullOrUndefined.NullOrUndefined (FlowLogSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeFlowLogsResult :: Newtype DescribeFlowLogsResult _
derive instance repGenericDescribeFlowLogsResult :: Generic DescribeFlowLogsResult _
instance showDescribeFlowLogsResult :: Show DescribeFlowLogsResult where
  show = genericShow
instance decodeDescribeFlowLogsResult :: Decode DescribeFlowLogsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeFlowLogsResult :: Encode DescribeFlowLogsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeFlowLogsResult from required parameters
newDescribeFlowLogsResult :: DescribeFlowLogsResult
newDescribeFlowLogsResult  = DescribeFlowLogsResult { "FlowLogs": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeFlowLogsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeFlowLogsResult' :: ( { "FlowLogs" :: NullOrUndefined.NullOrUndefined (FlowLogSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"FlowLogs" :: NullOrUndefined.NullOrUndefined (FlowLogSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeFlowLogsResult
newDescribeFlowLogsResult'  customize = (DescribeFlowLogsResult <<< customize) { "FlowLogs": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeFpgaImageAttributeRequest = DescribeFpgaImageAttributeRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "FpgaImageId" :: (String)
  , "Attribute" :: (FpgaImageAttributeName)
  }
derive instance newtypeDescribeFpgaImageAttributeRequest :: Newtype DescribeFpgaImageAttributeRequest _
derive instance repGenericDescribeFpgaImageAttributeRequest :: Generic DescribeFpgaImageAttributeRequest _
instance showDescribeFpgaImageAttributeRequest :: Show DescribeFpgaImageAttributeRequest where
  show = genericShow
instance decodeDescribeFpgaImageAttributeRequest :: Decode DescribeFpgaImageAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeFpgaImageAttributeRequest :: Encode DescribeFpgaImageAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeFpgaImageAttributeRequest from required parameters
newDescribeFpgaImageAttributeRequest :: FpgaImageAttributeName -> String -> DescribeFpgaImageAttributeRequest
newDescribeFpgaImageAttributeRequest _Attribute _FpgaImageId = DescribeFpgaImageAttributeRequest { "Attribute": _Attribute, "FpgaImageId": _FpgaImageId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeFpgaImageAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeFpgaImageAttributeRequest' :: FpgaImageAttributeName -> String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "FpgaImageId" :: (String) , "Attribute" :: (FpgaImageAttributeName) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "FpgaImageId" :: (String) , "Attribute" :: (FpgaImageAttributeName) } ) -> DescribeFpgaImageAttributeRequest
newDescribeFpgaImageAttributeRequest' _Attribute _FpgaImageId customize = (DescribeFpgaImageAttributeRequest <<< customize) { "Attribute": _Attribute, "FpgaImageId": _FpgaImageId, "DryRun": (NullOrUndefined Nothing) }



newtype DescribeFpgaImageAttributeResult = DescribeFpgaImageAttributeResult 
  { "FpgaImageAttribute" :: NullOrUndefined.NullOrUndefined (FpgaImageAttribute)
  }
derive instance newtypeDescribeFpgaImageAttributeResult :: Newtype DescribeFpgaImageAttributeResult _
derive instance repGenericDescribeFpgaImageAttributeResult :: Generic DescribeFpgaImageAttributeResult _
instance showDescribeFpgaImageAttributeResult :: Show DescribeFpgaImageAttributeResult where
  show = genericShow
instance decodeDescribeFpgaImageAttributeResult :: Decode DescribeFpgaImageAttributeResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeFpgaImageAttributeResult :: Encode DescribeFpgaImageAttributeResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeFpgaImageAttributeResult from required parameters
newDescribeFpgaImageAttributeResult :: DescribeFpgaImageAttributeResult
newDescribeFpgaImageAttributeResult  = DescribeFpgaImageAttributeResult { "FpgaImageAttribute": (NullOrUndefined Nothing) }

-- | Constructs DescribeFpgaImageAttributeResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeFpgaImageAttributeResult' :: ( { "FpgaImageAttribute" :: NullOrUndefined.NullOrUndefined (FpgaImageAttribute) } -> {"FpgaImageAttribute" :: NullOrUndefined.NullOrUndefined (FpgaImageAttribute) } ) -> DescribeFpgaImageAttributeResult
newDescribeFpgaImageAttributeResult'  customize = (DescribeFpgaImageAttributeResult <<< customize) { "FpgaImageAttribute": (NullOrUndefined Nothing) }



newtype DescribeFpgaImagesRequest = DescribeFpgaImagesRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "FpgaImageIds" :: NullOrUndefined.NullOrUndefined (FpgaImageIdList)
  , "Owners" :: NullOrUndefined.NullOrUndefined (OwnerStringList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults)
  }
derive instance newtypeDescribeFpgaImagesRequest :: Newtype DescribeFpgaImagesRequest _
derive instance repGenericDescribeFpgaImagesRequest :: Generic DescribeFpgaImagesRequest _
instance showDescribeFpgaImagesRequest :: Show DescribeFpgaImagesRequest where
  show = genericShow
instance decodeDescribeFpgaImagesRequest :: Decode DescribeFpgaImagesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeFpgaImagesRequest :: Encode DescribeFpgaImagesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeFpgaImagesRequest from required parameters
newDescribeFpgaImagesRequest :: DescribeFpgaImagesRequest
newDescribeFpgaImagesRequest  = DescribeFpgaImagesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "FpgaImageIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "Owners": (NullOrUndefined Nothing) }

-- | Constructs DescribeFpgaImagesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeFpgaImagesRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "FpgaImageIds" :: NullOrUndefined.NullOrUndefined (FpgaImageIdList) , "Owners" :: NullOrUndefined.NullOrUndefined (OwnerStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) , "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "FpgaImageIds" :: NullOrUndefined.NullOrUndefined (FpgaImageIdList) , "Owners" :: NullOrUndefined.NullOrUndefined (OwnerStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) , "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults) } ) -> DescribeFpgaImagesRequest
newDescribeFpgaImagesRequest'  customize = (DescribeFpgaImagesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "FpgaImageIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "Owners": (NullOrUndefined Nothing) }



newtype DescribeFpgaImagesResult = DescribeFpgaImagesResult 
  { "FpgaImages" :: NullOrUndefined.NullOrUndefined (FpgaImageList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken)
  }
derive instance newtypeDescribeFpgaImagesResult :: Newtype DescribeFpgaImagesResult _
derive instance repGenericDescribeFpgaImagesResult :: Generic DescribeFpgaImagesResult _
instance showDescribeFpgaImagesResult :: Show DescribeFpgaImagesResult where
  show = genericShow
instance decodeDescribeFpgaImagesResult :: Decode DescribeFpgaImagesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeFpgaImagesResult :: Encode DescribeFpgaImagesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeFpgaImagesResult from required parameters
newDescribeFpgaImagesResult :: DescribeFpgaImagesResult
newDescribeFpgaImagesResult  = DescribeFpgaImagesResult { "FpgaImages": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeFpgaImagesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeFpgaImagesResult' :: ( { "FpgaImages" :: NullOrUndefined.NullOrUndefined (FpgaImageList) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) } -> {"FpgaImages" :: NullOrUndefined.NullOrUndefined (FpgaImageList) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) } ) -> DescribeFpgaImagesResult
newDescribeFpgaImagesResult'  customize = (DescribeFpgaImagesResult <<< customize) { "FpgaImages": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeHostReservationOfferingsRequest = DescribeHostReservationOfferingsRequest 
  { "Filter" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxDuration" :: NullOrUndefined.NullOrUndefined (Int)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "MinDuration" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "OfferingId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeHostReservationOfferingsRequest :: Newtype DescribeHostReservationOfferingsRequest _
derive instance repGenericDescribeHostReservationOfferingsRequest :: Generic DescribeHostReservationOfferingsRequest _
instance showDescribeHostReservationOfferingsRequest :: Show DescribeHostReservationOfferingsRequest where
  show = genericShow
instance decodeDescribeHostReservationOfferingsRequest :: Decode DescribeHostReservationOfferingsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeHostReservationOfferingsRequest :: Encode DescribeHostReservationOfferingsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeHostReservationOfferingsRequest from required parameters
newDescribeHostReservationOfferingsRequest :: DescribeHostReservationOfferingsRequest
newDescribeHostReservationOfferingsRequest  = DescribeHostReservationOfferingsRequest { "Filter": (NullOrUndefined Nothing), "MaxDuration": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "MinDuration": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "OfferingId": (NullOrUndefined Nothing) }

-- | Constructs DescribeHostReservationOfferingsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeHostReservationOfferingsRequest' :: ( { "Filter" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxDuration" :: NullOrUndefined.NullOrUndefined (Int) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "MinDuration" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "OfferingId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Filter" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxDuration" :: NullOrUndefined.NullOrUndefined (Int) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "MinDuration" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "OfferingId" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeHostReservationOfferingsRequest
newDescribeHostReservationOfferingsRequest'  customize = (DescribeHostReservationOfferingsRequest <<< customize) { "Filter": (NullOrUndefined Nothing), "MaxDuration": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "MinDuration": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "OfferingId": (NullOrUndefined Nothing) }



newtype DescribeHostReservationOfferingsResult = DescribeHostReservationOfferingsResult 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "OfferingSet" :: NullOrUndefined.NullOrUndefined (HostOfferingSet)
  }
derive instance newtypeDescribeHostReservationOfferingsResult :: Newtype DescribeHostReservationOfferingsResult _
derive instance repGenericDescribeHostReservationOfferingsResult :: Generic DescribeHostReservationOfferingsResult _
instance showDescribeHostReservationOfferingsResult :: Show DescribeHostReservationOfferingsResult where
  show = genericShow
instance decodeDescribeHostReservationOfferingsResult :: Decode DescribeHostReservationOfferingsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeHostReservationOfferingsResult :: Encode DescribeHostReservationOfferingsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeHostReservationOfferingsResult from required parameters
newDescribeHostReservationOfferingsResult :: DescribeHostReservationOfferingsResult
newDescribeHostReservationOfferingsResult  = DescribeHostReservationOfferingsResult { "NextToken": (NullOrUndefined Nothing), "OfferingSet": (NullOrUndefined Nothing) }

-- | Constructs DescribeHostReservationOfferingsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeHostReservationOfferingsResult' :: ( { "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "OfferingSet" :: NullOrUndefined.NullOrUndefined (HostOfferingSet) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (String) , "OfferingSet" :: NullOrUndefined.NullOrUndefined (HostOfferingSet) } ) -> DescribeHostReservationOfferingsResult
newDescribeHostReservationOfferingsResult'  customize = (DescribeHostReservationOfferingsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "OfferingSet": (NullOrUndefined Nothing) }



newtype DescribeHostReservationsRequest = DescribeHostReservationsRequest 
  { "Filter" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "HostReservationIdSet" :: NullOrUndefined.NullOrUndefined (HostReservationIdSet)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeHostReservationsRequest :: Newtype DescribeHostReservationsRequest _
derive instance repGenericDescribeHostReservationsRequest :: Generic DescribeHostReservationsRequest _
instance showDescribeHostReservationsRequest :: Show DescribeHostReservationsRequest where
  show = genericShow
instance decodeDescribeHostReservationsRequest :: Decode DescribeHostReservationsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeHostReservationsRequest :: Encode DescribeHostReservationsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeHostReservationsRequest from required parameters
newDescribeHostReservationsRequest :: DescribeHostReservationsRequest
newDescribeHostReservationsRequest  = DescribeHostReservationsRequest { "Filter": (NullOrUndefined Nothing), "HostReservationIdSet": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeHostReservationsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeHostReservationsRequest' :: ( { "Filter" :: NullOrUndefined.NullOrUndefined (FilterList) , "HostReservationIdSet" :: NullOrUndefined.NullOrUndefined (HostReservationIdSet) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Filter" :: NullOrUndefined.NullOrUndefined (FilterList) , "HostReservationIdSet" :: NullOrUndefined.NullOrUndefined (HostReservationIdSet) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeHostReservationsRequest
newDescribeHostReservationsRequest'  customize = (DescribeHostReservationsRequest <<< customize) { "Filter": (NullOrUndefined Nothing), "HostReservationIdSet": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeHostReservationsResult = DescribeHostReservationsResult 
  { "HostReservationSet" :: NullOrUndefined.NullOrUndefined (HostReservationSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeHostReservationsResult :: Newtype DescribeHostReservationsResult _
derive instance repGenericDescribeHostReservationsResult :: Generic DescribeHostReservationsResult _
instance showDescribeHostReservationsResult :: Show DescribeHostReservationsResult where
  show = genericShow
instance decodeDescribeHostReservationsResult :: Decode DescribeHostReservationsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeHostReservationsResult :: Encode DescribeHostReservationsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeHostReservationsResult from required parameters
newDescribeHostReservationsResult :: DescribeHostReservationsResult
newDescribeHostReservationsResult  = DescribeHostReservationsResult { "HostReservationSet": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeHostReservationsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeHostReservationsResult' :: ( { "HostReservationSet" :: NullOrUndefined.NullOrUndefined (HostReservationSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"HostReservationSet" :: NullOrUndefined.NullOrUndefined (HostReservationSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeHostReservationsResult
newDescribeHostReservationsResult'  customize = (DescribeHostReservationsResult <<< customize) { "HostReservationSet": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeHosts.</p>
newtype DescribeHostsRequest = DescribeHostsRequest 
  { "Filter" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "HostIds" :: NullOrUndefined.NullOrUndefined (RequestHostIdList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeHostsRequest :: Newtype DescribeHostsRequest _
derive instance repGenericDescribeHostsRequest :: Generic DescribeHostsRequest _
instance showDescribeHostsRequest :: Show DescribeHostsRequest where
  show = genericShow
instance decodeDescribeHostsRequest :: Decode DescribeHostsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeHostsRequest :: Encode DescribeHostsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeHostsRequest from required parameters
newDescribeHostsRequest :: DescribeHostsRequest
newDescribeHostsRequest  = DescribeHostsRequest { "Filter": (NullOrUndefined Nothing), "HostIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeHostsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeHostsRequest' :: ( { "Filter" :: NullOrUndefined.NullOrUndefined (FilterList) , "HostIds" :: NullOrUndefined.NullOrUndefined (RequestHostIdList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Filter" :: NullOrUndefined.NullOrUndefined (FilterList) , "HostIds" :: NullOrUndefined.NullOrUndefined (RequestHostIdList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeHostsRequest
newDescribeHostsRequest'  customize = (DescribeHostsRequest <<< customize) { "Filter": (NullOrUndefined Nothing), "HostIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeHosts.</p>
newtype DescribeHostsResult = DescribeHostsResult 
  { "Hosts" :: NullOrUndefined.NullOrUndefined (HostList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeHostsResult :: Newtype DescribeHostsResult _
derive instance repGenericDescribeHostsResult :: Generic DescribeHostsResult _
instance showDescribeHostsResult :: Show DescribeHostsResult where
  show = genericShow
instance decodeDescribeHostsResult :: Decode DescribeHostsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeHostsResult :: Encode DescribeHostsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeHostsResult from required parameters
newDescribeHostsResult :: DescribeHostsResult
newDescribeHostsResult  = DescribeHostsResult { "Hosts": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeHostsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeHostsResult' :: ( { "Hosts" :: NullOrUndefined.NullOrUndefined (HostList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Hosts" :: NullOrUndefined.NullOrUndefined (HostList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeHostsResult
newDescribeHostsResult'  customize = (DescribeHostsResult <<< customize) { "Hosts": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeIamInstanceProfileAssociationsRequest = DescribeIamInstanceProfileAssociationsRequest 
  { "AssociationIds" :: NullOrUndefined.NullOrUndefined (AssociationIdList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken)
  }
derive instance newtypeDescribeIamInstanceProfileAssociationsRequest :: Newtype DescribeIamInstanceProfileAssociationsRequest _
derive instance repGenericDescribeIamInstanceProfileAssociationsRequest :: Generic DescribeIamInstanceProfileAssociationsRequest _
instance showDescribeIamInstanceProfileAssociationsRequest :: Show DescribeIamInstanceProfileAssociationsRequest where
  show = genericShow
instance decodeDescribeIamInstanceProfileAssociationsRequest :: Decode DescribeIamInstanceProfileAssociationsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeIamInstanceProfileAssociationsRequest :: Encode DescribeIamInstanceProfileAssociationsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeIamInstanceProfileAssociationsRequest from required parameters
newDescribeIamInstanceProfileAssociationsRequest :: DescribeIamInstanceProfileAssociationsRequest
newDescribeIamInstanceProfileAssociationsRequest  = DescribeIamInstanceProfileAssociationsRequest { "AssociationIds": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeIamInstanceProfileAssociationsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeIamInstanceProfileAssociationsRequest' :: ( { "AssociationIds" :: NullOrUndefined.NullOrUndefined (AssociationIdList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) } -> {"AssociationIds" :: NullOrUndefined.NullOrUndefined (AssociationIdList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) } ) -> DescribeIamInstanceProfileAssociationsRequest
newDescribeIamInstanceProfileAssociationsRequest'  customize = (DescribeIamInstanceProfileAssociationsRequest <<< customize) { "AssociationIds": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeIamInstanceProfileAssociationsResult = DescribeIamInstanceProfileAssociationsResult 
  { "IamInstanceProfileAssociations" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociationSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken)
  }
derive instance newtypeDescribeIamInstanceProfileAssociationsResult :: Newtype DescribeIamInstanceProfileAssociationsResult _
derive instance repGenericDescribeIamInstanceProfileAssociationsResult :: Generic DescribeIamInstanceProfileAssociationsResult _
instance showDescribeIamInstanceProfileAssociationsResult :: Show DescribeIamInstanceProfileAssociationsResult where
  show = genericShow
instance decodeDescribeIamInstanceProfileAssociationsResult :: Decode DescribeIamInstanceProfileAssociationsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeIamInstanceProfileAssociationsResult :: Encode DescribeIamInstanceProfileAssociationsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeIamInstanceProfileAssociationsResult from required parameters
newDescribeIamInstanceProfileAssociationsResult :: DescribeIamInstanceProfileAssociationsResult
newDescribeIamInstanceProfileAssociationsResult  = DescribeIamInstanceProfileAssociationsResult { "IamInstanceProfileAssociations": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeIamInstanceProfileAssociationsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeIamInstanceProfileAssociationsResult' :: ( { "IamInstanceProfileAssociations" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociationSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) } -> {"IamInstanceProfileAssociations" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociationSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) } ) -> DescribeIamInstanceProfileAssociationsResult
newDescribeIamInstanceProfileAssociationsResult'  customize = (DescribeIamInstanceProfileAssociationsResult <<< customize) { "IamInstanceProfileAssociations": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeIdFormat.</p>
newtype DescribeIdFormatRequest = DescribeIdFormatRequest 
  { "Resource" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeIdFormatRequest :: Newtype DescribeIdFormatRequest _
derive instance repGenericDescribeIdFormatRequest :: Generic DescribeIdFormatRequest _
instance showDescribeIdFormatRequest :: Show DescribeIdFormatRequest where
  show = genericShow
instance decodeDescribeIdFormatRequest :: Decode DescribeIdFormatRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeIdFormatRequest :: Encode DescribeIdFormatRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeIdFormatRequest from required parameters
newDescribeIdFormatRequest :: DescribeIdFormatRequest
newDescribeIdFormatRequest  = DescribeIdFormatRequest { "Resource": (NullOrUndefined Nothing) }

-- | Constructs DescribeIdFormatRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeIdFormatRequest' :: ( { "Resource" :: NullOrUndefined.NullOrUndefined (String) } -> {"Resource" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeIdFormatRequest
newDescribeIdFormatRequest'  customize = (DescribeIdFormatRequest <<< customize) { "Resource": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeIdFormat.</p>
newtype DescribeIdFormatResult = DescribeIdFormatResult 
  { "Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList)
  }
derive instance newtypeDescribeIdFormatResult :: Newtype DescribeIdFormatResult _
derive instance repGenericDescribeIdFormatResult :: Generic DescribeIdFormatResult _
instance showDescribeIdFormatResult :: Show DescribeIdFormatResult where
  show = genericShow
instance decodeDescribeIdFormatResult :: Decode DescribeIdFormatResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeIdFormatResult :: Encode DescribeIdFormatResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeIdFormatResult from required parameters
newDescribeIdFormatResult :: DescribeIdFormatResult
newDescribeIdFormatResult  = DescribeIdFormatResult { "Statuses": (NullOrUndefined Nothing) }

-- | Constructs DescribeIdFormatResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeIdFormatResult' :: ( { "Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList) } -> {"Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList) } ) -> DescribeIdFormatResult
newDescribeIdFormatResult'  customize = (DescribeIdFormatResult <<< customize) { "Statuses": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeIdentityIdFormat.</p>
newtype DescribeIdentityIdFormatRequest = DescribeIdentityIdFormatRequest 
  { "PrincipalArn" :: (String)
  , "Resource" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeIdentityIdFormatRequest :: Newtype DescribeIdentityIdFormatRequest _
derive instance repGenericDescribeIdentityIdFormatRequest :: Generic DescribeIdentityIdFormatRequest _
instance showDescribeIdentityIdFormatRequest :: Show DescribeIdentityIdFormatRequest where
  show = genericShow
instance decodeDescribeIdentityIdFormatRequest :: Decode DescribeIdentityIdFormatRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeIdentityIdFormatRequest :: Encode DescribeIdentityIdFormatRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeIdentityIdFormatRequest from required parameters
newDescribeIdentityIdFormatRequest :: String -> DescribeIdentityIdFormatRequest
newDescribeIdentityIdFormatRequest _PrincipalArn = DescribeIdentityIdFormatRequest { "PrincipalArn": _PrincipalArn, "Resource": (NullOrUndefined Nothing) }

-- | Constructs DescribeIdentityIdFormatRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeIdentityIdFormatRequest' :: String -> ( { "PrincipalArn" :: (String) , "Resource" :: NullOrUndefined.NullOrUndefined (String) } -> {"PrincipalArn" :: (String) , "Resource" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeIdentityIdFormatRequest
newDescribeIdentityIdFormatRequest' _PrincipalArn customize = (DescribeIdentityIdFormatRequest <<< customize) { "PrincipalArn": _PrincipalArn, "Resource": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeIdentityIdFormat.</p>
newtype DescribeIdentityIdFormatResult = DescribeIdentityIdFormatResult 
  { "Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList)
  }
derive instance newtypeDescribeIdentityIdFormatResult :: Newtype DescribeIdentityIdFormatResult _
derive instance repGenericDescribeIdentityIdFormatResult :: Generic DescribeIdentityIdFormatResult _
instance showDescribeIdentityIdFormatResult :: Show DescribeIdentityIdFormatResult where
  show = genericShow
instance decodeDescribeIdentityIdFormatResult :: Decode DescribeIdentityIdFormatResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeIdentityIdFormatResult :: Encode DescribeIdentityIdFormatResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeIdentityIdFormatResult from required parameters
newDescribeIdentityIdFormatResult :: DescribeIdentityIdFormatResult
newDescribeIdentityIdFormatResult  = DescribeIdentityIdFormatResult { "Statuses": (NullOrUndefined Nothing) }

-- | Constructs DescribeIdentityIdFormatResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeIdentityIdFormatResult' :: ( { "Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList) } -> {"Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList) } ) -> DescribeIdentityIdFormatResult
newDescribeIdentityIdFormatResult'  customize = (DescribeIdentityIdFormatResult <<< customize) { "Statuses": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeImageAttribute.</p>
newtype DescribeImageAttributeRequest = DescribeImageAttributeRequest 
  { "Attribute" :: (ImageAttributeName)
  , "ImageId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeImageAttributeRequest :: Newtype DescribeImageAttributeRequest _
derive instance repGenericDescribeImageAttributeRequest :: Generic DescribeImageAttributeRequest _
instance showDescribeImageAttributeRequest :: Show DescribeImageAttributeRequest where
  show = genericShow
instance decodeDescribeImageAttributeRequest :: Decode DescribeImageAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeImageAttributeRequest :: Encode DescribeImageAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeImageAttributeRequest from required parameters
newDescribeImageAttributeRequest :: ImageAttributeName -> String -> DescribeImageAttributeRequest
newDescribeImageAttributeRequest _Attribute _ImageId = DescribeImageAttributeRequest { "Attribute": _Attribute, "ImageId": _ImageId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeImageAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeImageAttributeRequest' :: ImageAttributeName -> String -> ( { "Attribute" :: (ImageAttributeName) , "ImageId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Attribute" :: (ImageAttributeName) , "ImageId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeImageAttributeRequest
newDescribeImageAttributeRequest' _Attribute _ImageId customize = (DescribeImageAttributeRequest <<< customize) { "Attribute": _Attribute, "ImageId": _ImageId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeImages.</p>
newtype DescribeImagesRequest = DescribeImagesRequest 
  { "ExecutableUsers" :: NullOrUndefined.NullOrUndefined (ExecutableByStringList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "ImageIds" :: NullOrUndefined.NullOrUndefined (ImageIdStringList)
  , "Owners" :: NullOrUndefined.NullOrUndefined (OwnerStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeImagesRequest :: Newtype DescribeImagesRequest _
derive instance repGenericDescribeImagesRequest :: Generic DescribeImagesRequest _
instance showDescribeImagesRequest :: Show DescribeImagesRequest where
  show = genericShow
instance decodeDescribeImagesRequest :: Decode DescribeImagesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeImagesRequest :: Encode DescribeImagesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeImagesRequest from required parameters
newDescribeImagesRequest :: DescribeImagesRequest
newDescribeImagesRequest  = DescribeImagesRequest { "DryRun": (NullOrUndefined Nothing), "ExecutableUsers": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "ImageIds": (NullOrUndefined Nothing), "Owners": (NullOrUndefined Nothing) }

-- | Constructs DescribeImagesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeImagesRequest' :: ( { "ExecutableUsers" :: NullOrUndefined.NullOrUndefined (ExecutableByStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ImageIds" :: NullOrUndefined.NullOrUndefined (ImageIdStringList) , "Owners" :: NullOrUndefined.NullOrUndefined (OwnerStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"ExecutableUsers" :: NullOrUndefined.NullOrUndefined (ExecutableByStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ImageIds" :: NullOrUndefined.NullOrUndefined (ImageIdStringList) , "Owners" :: NullOrUndefined.NullOrUndefined (OwnerStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeImagesRequest
newDescribeImagesRequest'  customize = (DescribeImagesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "ExecutableUsers": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "ImageIds": (NullOrUndefined Nothing), "Owners": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeImages.</p>
newtype DescribeImagesResult = DescribeImagesResult 
  { "Images" :: NullOrUndefined.NullOrUndefined (ImageList)
  }
derive instance newtypeDescribeImagesResult :: Newtype DescribeImagesResult _
derive instance repGenericDescribeImagesResult :: Generic DescribeImagesResult _
instance showDescribeImagesResult :: Show DescribeImagesResult where
  show = genericShow
instance decodeDescribeImagesResult :: Decode DescribeImagesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeImagesResult :: Encode DescribeImagesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeImagesResult from required parameters
newDescribeImagesResult :: DescribeImagesResult
newDescribeImagesResult  = DescribeImagesResult { "Images": (NullOrUndefined Nothing) }

-- | Constructs DescribeImagesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeImagesResult' :: ( { "Images" :: NullOrUndefined.NullOrUndefined (ImageList) } -> {"Images" :: NullOrUndefined.NullOrUndefined (ImageList) } ) -> DescribeImagesResult
newDescribeImagesResult'  customize = (DescribeImagesResult <<< customize) { "Images": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeImportImageTasks.</p>
newtype DescribeImportImageTasksRequest = DescribeImportImageTasksRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "ImportTaskIds" :: NullOrUndefined.NullOrUndefined (ImportTaskIdList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeImportImageTasksRequest :: Newtype DescribeImportImageTasksRequest _
derive instance repGenericDescribeImportImageTasksRequest :: Generic DescribeImportImageTasksRequest _
instance showDescribeImportImageTasksRequest :: Show DescribeImportImageTasksRequest where
  show = genericShow
instance decodeDescribeImportImageTasksRequest :: Decode DescribeImportImageTasksRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeImportImageTasksRequest :: Encode DescribeImportImageTasksRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeImportImageTasksRequest from required parameters
newDescribeImportImageTasksRequest :: DescribeImportImageTasksRequest
newDescribeImportImageTasksRequest  = DescribeImportImageTasksRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "ImportTaskIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeImportImageTasksRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeImportImageTasksRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ImportTaskIds" :: NullOrUndefined.NullOrUndefined (ImportTaskIdList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ImportTaskIds" :: NullOrUndefined.NullOrUndefined (ImportTaskIdList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeImportImageTasksRequest
newDescribeImportImageTasksRequest'  customize = (DescribeImportImageTasksRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "ImportTaskIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output for DescribeImportImageTasks.</p>
newtype DescribeImportImageTasksResult = DescribeImportImageTasksResult 
  { "ImportImageTasks" :: NullOrUndefined.NullOrUndefined (ImportImageTaskList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeImportImageTasksResult :: Newtype DescribeImportImageTasksResult _
derive instance repGenericDescribeImportImageTasksResult :: Generic DescribeImportImageTasksResult _
instance showDescribeImportImageTasksResult :: Show DescribeImportImageTasksResult where
  show = genericShow
instance decodeDescribeImportImageTasksResult :: Decode DescribeImportImageTasksResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeImportImageTasksResult :: Encode DescribeImportImageTasksResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeImportImageTasksResult from required parameters
newDescribeImportImageTasksResult :: DescribeImportImageTasksResult
newDescribeImportImageTasksResult  = DescribeImportImageTasksResult { "ImportImageTasks": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeImportImageTasksResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeImportImageTasksResult' :: ( { "ImportImageTasks" :: NullOrUndefined.NullOrUndefined (ImportImageTaskList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"ImportImageTasks" :: NullOrUndefined.NullOrUndefined (ImportImageTaskList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeImportImageTasksResult
newDescribeImportImageTasksResult'  customize = (DescribeImportImageTasksResult <<< customize) { "ImportImageTasks": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeImportSnapshotTasks.</p>
newtype DescribeImportSnapshotTasksRequest = DescribeImportSnapshotTasksRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "ImportTaskIds" :: NullOrUndefined.NullOrUndefined (ImportTaskIdList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeImportSnapshotTasksRequest :: Newtype DescribeImportSnapshotTasksRequest _
derive instance repGenericDescribeImportSnapshotTasksRequest :: Generic DescribeImportSnapshotTasksRequest _
instance showDescribeImportSnapshotTasksRequest :: Show DescribeImportSnapshotTasksRequest where
  show = genericShow
instance decodeDescribeImportSnapshotTasksRequest :: Decode DescribeImportSnapshotTasksRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeImportSnapshotTasksRequest :: Encode DescribeImportSnapshotTasksRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeImportSnapshotTasksRequest from required parameters
newDescribeImportSnapshotTasksRequest :: DescribeImportSnapshotTasksRequest
newDescribeImportSnapshotTasksRequest  = DescribeImportSnapshotTasksRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "ImportTaskIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeImportSnapshotTasksRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeImportSnapshotTasksRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ImportTaskIds" :: NullOrUndefined.NullOrUndefined (ImportTaskIdList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ImportTaskIds" :: NullOrUndefined.NullOrUndefined (ImportTaskIdList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeImportSnapshotTasksRequest
newDescribeImportSnapshotTasksRequest'  customize = (DescribeImportSnapshotTasksRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "ImportTaskIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output for DescribeImportSnapshotTasks.</p>
newtype DescribeImportSnapshotTasksResult = DescribeImportSnapshotTasksResult 
  { "ImportSnapshotTasks" :: NullOrUndefined.NullOrUndefined (ImportSnapshotTaskList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeImportSnapshotTasksResult :: Newtype DescribeImportSnapshotTasksResult _
derive instance repGenericDescribeImportSnapshotTasksResult :: Generic DescribeImportSnapshotTasksResult _
instance showDescribeImportSnapshotTasksResult :: Show DescribeImportSnapshotTasksResult where
  show = genericShow
instance decodeDescribeImportSnapshotTasksResult :: Decode DescribeImportSnapshotTasksResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeImportSnapshotTasksResult :: Encode DescribeImportSnapshotTasksResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeImportSnapshotTasksResult from required parameters
newDescribeImportSnapshotTasksResult :: DescribeImportSnapshotTasksResult
newDescribeImportSnapshotTasksResult  = DescribeImportSnapshotTasksResult { "ImportSnapshotTasks": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeImportSnapshotTasksResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeImportSnapshotTasksResult' :: ( { "ImportSnapshotTasks" :: NullOrUndefined.NullOrUndefined (ImportSnapshotTaskList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"ImportSnapshotTasks" :: NullOrUndefined.NullOrUndefined (ImportSnapshotTaskList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeImportSnapshotTasksResult
newDescribeImportSnapshotTasksResult'  customize = (DescribeImportSnapshotTasksResult <<< customize) { "ImportSnapshotTasks": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeInstanceAttribute.</p>
newtype DescribeInstanceAttributeRequest = DescribeInstanceAttributeRequest 
  { "Attribute" :: (InstanceAttributeName)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceId" :: (String)
  }
derive instance newtypeDescribeInstanceAttributeRequest :: Newtype DescribeInstanceAttributeRequest _
derive instance repGenericDescribeInstanceAttributeRequest :: Generic DescribeInstanceAttributeRequest _
instance showDescribeInstanceAttributeRequest :: Show DescribeInstanceAttributeRequest where
  show = genericShow
instance decodeDescribeInstanceAttributeRequest :: Decode DescribeInstanceAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeInstanceAttributeRequest :: Encode DescribeInstanceAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeInstanceAttributeRequest from required parameters
newDescribeInstanceAttributeRequest :: InstanceAttributeName -> String -> DescribeInstanceAttributeRequest
newDescribeInstanceAttributeRequest _Attribute _InstanceId = DescribeInstanceAttributeRequest { "Attribute": _Attribute, "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeInstanceAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeInstanceAttributeRequest' :: InstanceAttributeName -> String -> ( { "Attribute" :: (InstanceAttributeName) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) } -> {"Attribute" :: (InstanceAttributeName) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) } ) -> DescribeInstanceAttributeRequest
newDescribeInstanceAttributeRequest' _Attribute _InstanceId customize = (DescribeInstanceAttributeRequest <<< customize) { "Attribute": _Attribute, "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing) }



newtype DescribeInstanceCreditSpecificationsRequest = DescribeInstanceCreditSpecificationsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeInstanceCreditSpecificationsRequest :: Newtype DescribeInstanceCreditSpecificationsRequest _
derive instance repGenericDescribeInstanceCreditSpecificationsRequest :: Generic DescribeInstanceCreditSpecificationsRequest _
instance showDescribeInstanceCreditSpecificationsRequest :: Show DescribeInstanceCreditSpecificationsRequest where
  show = genericShow
instance decodeDescribeInstanceCreditSpecificationsRequest :: Decode DescribeInstanceCreditSpecificationsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeInstanceCreditSpecificationsRequest :: Encode DescribeInstanceCreditSpecificationsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeInstanceCreditSpecificationsRequest from required parameters
newDescribeInstanceCreditSpecificationsRequest :: DescribeInstanceCreditSpecificationsRequest
newDescribeInstanceCreditSpecificationsRequest  = DescribeInstanceCreditSpecificationsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "InstanceIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeInstanceCreditSpecificationsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeInstanceCreditSpecificationsRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeInstanceCreditSpecificationsRequest
newDescribeInstanceCreditSpecificationsRequest'  customize = (DescribeInstanceCreditSpecificationsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "InstanceIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeInstanceCreditSpecificationsResult = DescribeInstanceCreditSpecificationsResult 
  { "InstanceCreditSpecifications" :: NullOrUndefined.NullOrUndefined (InstanceCreditSpecificationList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeInstanceCreditSpecificationsResult :: Newtype DescribeInstanceCreditSpecificationsResult _
derive instance repGenericDescribeInstanceCreditSpecificationsResult :: Generic DescribeInstanceCreditSpecificationsResult _
instance showDescribeInstanceCreditSpecificationsResult :: Show DescribeInstanceCreditSpecificationsResult where
  show = genericShow
instance decodeDescribeInstanceCreditSpecificationsResult :: Decode DescribeInstanceCreditSpecificationsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeInstanceCreditSpecificationsResult :: Encode DescribeInstanceCreditSpecificationsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeInstanceCreditSpecificationsResult from required parameters
newDescribeInstanceCreditSpecificationsResult :: DescribeInstanceCreditSpecificationsResult
newDescribeInstanceCreditSpecificationsResult  = DescribeInstanceCreditSpecificationsResult { "InstanceCreditSpecifications": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeInstanceCreditSpecificationsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeInstanceCreditSpecificationsResult' :: ( { "InstanceCreditSpecifications" :: NullOrUndefined.NullOrUndefined (InstanceCreditSpecificationList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"InstanceCreditSpecifications" :: NullOrUndefined.NullOrUndefined (InstanceCreditSpecificationList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeInstanceCreditSpecificationsResult
newDescribeInstanceCreditSpecificationsResult'  customize = (DescribeInstanceCreditSpecificationsResult <<< customize) { "InstanceCreditSpecifications": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeInstanceStatus.</p>
newtype DescribeInstanceStatusRequest = DescribeInstanceStatusRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "IncludeAllInstances" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeInstanceStatusRequest :: Newtype DescribeInstanceStatusRequest _
derive instance repGenericDescribeInstanceStatusRequest :: Generic DescribeInstanceStatusRequest _
instance showDescribeInstanceStatusRequest :: Show DescribeInstanceStatusRequest where
  show = genericShow
instance decodeDescribeInstanceStatusRequest :: Decode DescribeInstanceStatusRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeInstanceStatusRequest :: Encode DescribeInstanceStatusRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeInstanceStatusRequest from required parameters
newDescribeInstanceStatusRequest :: DescribeInstanceStatusRequest
newDescribeInstanceStatusRequest  = DescribeInstanceStatusRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "IncludeAllInstances": (NullOrUndefined Nothing), "InstanceIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeInstanceStatusRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeInstanceStatusRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "IncludeAllInstances" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "IncludeAllInstances" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeInstanceStatusRequest
newDescribeInstanceStatusRequest'  customize = (DescribeInstanceStatusRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "IncludeAllInstances": (NullOrUndefined Nothing), "InstanceIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeInstanceStatus.</p>
newtype DescribeInstanceStatusResult = DescribeInstanceStatusResult 
  { "InstanceStatuses" :: NullOrUndefined.NullOrUndefined (InstanceStatusList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeInstanceStatusResult :: Newtype DescribeInstanceStatusResult _
derive instance repGenericDescribeInstanceStatusResult :: Generic DescribeInstanceStatusResult _
instance showDescribeInstanceStatusResult :: Show DescribeInstanceStatusResult where
  show = genericShow
instance decodeDescribeInstanceStatusResult :: Decode DescribeInstanceStatusResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeInstanceStatusResult :: Encode DescribeInstanceStatusResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeInstanceStatusResult from required parameters
newDescribeInstanceStatusResult :: DescribeInstanceStatusResult
newDescribeInstanceStatusResult  = DescribeInstanceStatusResult { "InstanceStatuses": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeInstanceStatusResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeInstanceStatusResult' :: ( { "InstanceStatuses" :: NullOrUndefined.NullOrUndefined (InstanceStatusList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"InstanceStatuses" :: NullOrUndefined.NullOrUndefined (InstanceStatusList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeInstanceStatusResult
newDescribeInstanceStatusResult'  customize = (DescribeInstanceStatusResult <<< customize) { "InstanceStatuses": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeInstances.</p>
newtype DescribeInstancesRequest = DescribeInstancesRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeInstancesRequest :: Newtype DescribeInstancesRequest _
derive instance repGenericDescribeInstancesRequest :: Generic DescribeInstancesRequest _
instance showDescribeInstancesRequest :: Show DescribeInstancesRequest where
  show = genericShow
instance decodeDescribeInstancesRequest :: Decode DescribeInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeInstancesRequest :: Encode DescribeInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeInstancesRequest from required parameters
newDescribeInstancesRequest :: DescribeInstancesRequest
newDescribeInstancesRequest  = DescribeInstancesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "InstanceIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeInstancesRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "InstanceIds" :: NullOrUndefined.NullOrUndefined (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeInstancesRequest
newDescribeInstancesRequest'  customize = (DescribeInstancesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "InstanceIds": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeInstances.</p>
newtype DescribeInstancesResult = DescribeInstancesResult 
  { "Reservations" :: NullOrUndefined.NullOrUndefined (ReservationList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeInstancesResult :: Newtype DescribeInstancesResult _
derive instance repGenericDescribeInstancesResult :: Generic DescribeInstancesResult _
instance showDescribeInstancesResult :: Show DescribeInstancesResult where
  show = genericShow
instance decodeDescribeInstancesResult :: Decode DescribeInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeInstancesResult :: Encode DescribeInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeInstancesResult from required parameters
newDescribeInstancesResult :: DescribeInstancesResult
newDescribeInstancesResult  = DescribeInstancesResult { "NextToken": (NullOrUndefined Nothing), "Reservations": (NullOrUndefined Nothing) }

-- | Constructs DescribeInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeInstancesResult' :: ( { "Reservations" :: NullOrUndefined.NullOrUndefined (ReservationList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Reservations" :: NullOrUndefined.NullOrUndefined (ReservationList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeInstancesResult
newDescribeInstancesResult'  customize = (DescribeInstancesResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "Reservations": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeInternetGateways.</p>
newtype DescribeInternetGatewaysRequest = DescribeInternetGatewaysRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InternetGatewayIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeDescribeInternetGatewaysRequest :: Newtype DescribeInternetGatewaysRequest _
derive instance repGenericDescribeInternetGatewaysRequest :: Generic DescribeInternetGatewaysRequest _
instance showDescribeInternetGatewaysRequest :: Show DescribeInternetGatewaysRequest where
  show = genericShow
instance decodeDescribeInternetGatewaysRequest :: Decode DescribeInternetGatewaysRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeInternetGatewaysRequest :: Encode DescribeInternetGatewaysRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeInternetGatewaysRequest from required parameters
newDescribeInternetGatewaysRequest :: DescribeInternetGatewaysRequest
newDescribeInternetGatewaysRequest  = DescribeInternetGatewaysRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "InternetGatewayIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeInternetGatewaysRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeInternetGatewaysRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InternetGatewayIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InternetGatewayIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> DescribeInternetGatewaysRequest
newDescribeInternetGatewaysRequest'  customize = (DescribeInternetGatewaysRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "InternetGatewayIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeInternetGateways.</p>
newtype DescribeInternetGatewaysResult = DescribeInternetGatewaysResult 
  { "InternetGateways" :: NullOrUndefined.NullOrUndefined (InternetGatewayList)
  }
derive instance newtypeDescribeInternetGatewaysResult :: Newtype DescribeInternetGatewaysResult _
derive instance repGenericDescribeInternetGatewaysResult :: Generic DescribeInternetGatewaysResult _
instance showDescribeInternetGatewaysResult :: Show DescribeInternetGatewaysResult where
  show = genericShow
instance decodeDescribeInternetGatewaysResult :: Decode DescribeInternetGatewaysResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeInternetGatewaysResult :: Encode DescribeInternetGatewaysResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeInternetGatewaysResult from required parameters
newDescribeInternetGatewaysResult :: DescribeInternetGatewaysResult
newDescribeInternetGatewaysResult  = DescribeInternetGatewaysResult { "InternetGateways": (NullOrUndefined Nothing) }

-- | Constructs DescribeInternetGatewaysResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeInternetGatewaysResult' :: ( { "InternetGateways" :: NullOrUndefined.NullOrUndefined (InternetGatewayList) } -> {"InternetGateways" :: NullOrUndefined.NullOrUndefined (InternetGatewayList) } ) -> DescribeInternetGatewaysResult
newDescribeInternetGatewaysResult'  customize = (DescribeInternetGatewaysResult <<< customize) { "InternetGateways": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeKeyPairs.</p>
newtype DescribeKeyPairsRequest = DescribeKeyPairsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "KeyNames" :: NullOrUndefined.NullOrUndefined (KeyNameStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeKeyPairsRequest :: Newtype DescribeKeyPairsRequest _
derive instance repGenericDescribeKeyPairsRequest :: Generic DescribeKeyPairsRequest _
instance showDescribeKeyPairsRequest :: Show DescribeKeyPairsRequest where
  show = genericShow
instance decodeDescribeKeyPairsRequest :: Decode DescribeKeyPairsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeKeyPairsRequest :: Encode DescribeKeyPairsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeKeyPairsRequest from required parameters
newDescribeKeyPairsRequest :: DescribeKeyPairsRequest
newDescribeKeyPairsRequest  = DescribeKeyPairsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "KeyNames": (NullOrUndefined Nothing) }

-- | Constructs DescribeKeyPairsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeKeyPairsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "KeyNames" :: NullOrUndefined.NullOrUndefined (KeyNameStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "KeyNames" :: NullOrUndefined.NullOrUndefined (KeyNameStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeKeyPairsRequest
newDescribeKeyPairsRequest'  customize = (DescribeKeyPairsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "KeyNames": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeKeyPairs.</p>
newtype DescribeKeyPairsResult = DescribeKeyPairsResult 
  { "KeyPairs" :: NullOrUndefined.NullOrUndefined (KeyPairList)
  }
derive instance newtypeDescribeKeyPairsResult :: Newtype DescribeKeyPairsResult _
derive instance repGenericDescribeKeyPairsResult :: Generic DescribeKeyPairsResult _
instance showDescribeKeyPairsResult :: Show DescribeKeyPairsResult where
  show = genericShow
instance decodeDescribeKeyPairsResult :: Decode DescribeKeyPairsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeKeyPairsResult :: Encode DescribeKeyPairsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeKeyPairsResult from required parameters
newDescribeKeyPairsResult :: DescribeKeyPairsResult
newDescribeKeyPairsResult  = DescribeKeyPairsResult { "KeyPairs": (NullOrUndefined Nothing) }

-- | Constructs DescribeKeyPairsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeKeyPairsResult' :: ( { "KeyPairs" :: NullOrUndefined.NullOrUndefined (KeyPairList) } -> {"KeyPairs" :: NullOrUndefined.NullOrUndefined (KeyPairList) } ) -> DescribeKeyPairsResult
newDescribeKeyPairsResult'  customize = (DescribeKeyPairsResult <<< customize) { "KeyPairs": (NullOrUndefined Nothing) }



newtype DescribeLaunchTemplateVersionsRequest = DescribeLaunchTemplateVersionsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName)
  , "Versions" :: NullOrUndefined.NullOrUndefined (VersionStringList)
  , "MinVersion" :: NullOrUndefined.NullOrUndefined (String)
  , "MaxVersion" :: NullOrUndefined.NullOrUndefined (String)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  }
derive instance newtypeDescribeLaunchTemplateVersionsRequest :: Newtype DescribeLaunchTemplateVersionsRequest _
derive instance repGenericDescribeLaunchTemplateVersionsRequest :: Generic DescribeLaunchTemplateVersionsRequest _
instance showDescribeLaunchTemplateVersionsRequest :: Show DescribeLaunchTemplateVersionsRequest where
  show = genericShow
instance decodeDescribeLaunchTemplateVersionsRequest :: Decode DescribeLaunchTemplateVersionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeLaunchTemplateVersionsRequest :: Encode DescribeLaunchTemplateVersionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeLaunchTemplateVersionsRequest from required parameters
newDescribeLaunchTemplateVersionsRequest :: DescribeLaunchTemplateVersionsRequest
newDescribeLaunchTemplateVersionsRequest  = DescribeLaunchTemplateVersionsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "MaxVersion": (NullOrUndefined Nothing), "MinVersion": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "Versions": (NullOrUndefined Nothing) }

-- | Constructs DescribeLaunchTemplateVersionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeLaunchTemplateVersionsRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "Versions" :: NullOrUndefined.NullOrUndefined (VersionStringList) , "MinVersion" :: NullOrUndefined.NullOrUndefined (String) , "MaxVersion" :: NullOrUndefined.NullOrUndefined (String) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "Versions" :: NullOrUndefined.NullOrUndefined (VersionStringList) , "MinVersion" :: NullOrUndefined.NullOrUndefined (String) , "MaxVersion" :: NullOrUndefined.NullOrUndefined (String) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) } ) -> DescribeLaunchTemplateVersionsRequest
newDescribeLaunchTemplateVersionsRequest'  customize = (DescribeLaunchTemplateVersionsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "MaxVersion": (NullOrUndefined Nothing), "MinVersion": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "Versions": (NullOrUndefined Nothing) }



newtype DescribeLaunchTemplateVersionsResult = DescribeLaunchTemplateVersionsResult 
  { "LaunchTemplateVersions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateVersionSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeLaunchTemplateVersionsResult :: Newtype DescribeLaunchTemplateVersionsResult _
derive instance repGenericDescribeLaunchTemplateVersionsResult :: Generic DescribeLaunchTemplateVersionsResult _
instance showDescribeLaunchTemplateVersionsResult :: Show DescribeLaunchTemplateVersionsResult where
  show = genericShow
instance decodeDescribeLaunchTemplateVersionsResult :: Decode DescribeLaunchTemplateVersionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeLaunchTemplateVersionsResult :: Encode DescribeLaunchTemplateVersionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeLaunchTemplateVersionsResult from required parameters
newDescribeLaunchTemplateVersionsResult :: DescribeLaunchTemplateVersionsResult
newDescribeLaunchTemplateVersionsResult  = DescribeLaunchTemplateVersionsResult { "LaunchTemplateVersions": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeLaunchTemplateVersionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeLaunchTemplateVersionsResult' :: ( { "LaunchTemplateVersions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateVersionSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"LaunchTemplateVersions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateVersionSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeLaunchTemplateVersionsResult
newDescribeLaunchTemplateVersionsResult'  customize = (DescribeLaunchTemplateVersionsResult <<< customize) { "LaunchTemplateVersions": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeLaunchTemplatesRequest = DescribeLaunchTemplatesRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "LaunchTemplateIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "LaunchTemplateNames" :: NullOrUndefined.NullOrUndefined (LaunchTemplateNameStringList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeDescribeLaunchTemplatesRequest :: Newtype DescribeLaunchTemplatesRequest _
derive instance repGenericDescribeLaunchTemplatesRequest :: Generic DescribeLaunchTemplatesRequest _
instance showDescribeLaunchTemplatesRequest :: Show DescribeLaunchTemplatesRequest where
  show = genericShow
instance decodeDescribeLaunchTemplatesRequest :: Decode DescribeLaunchTemplatesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeLaunchTemplatesRequest :: Encode DescribeLaunchTemplatesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeLaunchTemplatesRequest from required parameters
newDescribeLaunchTemplatesRequest :: DescribeLaunchTemplatesRequest
newDescribeLaunchTemplatesRequest  = DescribeLaunchTemplatesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "LaunchTemplateIds": (NullOrUndefined Nothing), "LaunchTemplateNames": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeLaunchTemplatesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeLaunchTemplatesRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchTemplateIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "LaunchTemplateNames" :: NullOrUndefined.NullOrUndefined (LaunchTemplateNameStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchTemplateIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "LaunchTemplateNames" :: NullOrUndefined.NullOrUndefined (LaunchTemplateNameStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) } ) -> DescribeLaunchTemplatesRequest
newDescribeLaunchTemplatesRequest'  customize = (DescribeLaunchTemplatesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "LaunchTemplateIds": (NullOrUndefined Nothing), "LaunchTemplateNames": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeLaunchTemplatesResult = DescribeLaunchTemplatesResult 
  { "LaunchTemplates" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeLaunchTemplatesResult :: Newtype DescribeLaunchTemplatesResult _
derive instance repGenericDescribeLaunchTemplatesResult :: Generic DescribeLaunchTemplatesResult _
instance showDescribeLaunchTemplatesResult :: Show DescribeLaunchTemplatesResult where
  show = genericShow
instance decodeDescribeLaunchTemplatesResult :: Decode DescribeLaunchTemplatesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeLaunchTemplatesResult :: Encode DescribeLaunchTemplatesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeLaunchTemplatesResult from required parameters
newDescribeLaunchTemplatesResult :: DescribeLaunchTemplatesResult
newDescribeLaunchTemplatesResult  = DescribeLaunchTemplatesResult { "LaunchTemplates": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeLaunchTemplatesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeLaunchTemplatesResult' :: ( { "LaunchTemplates" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"LaunchTemplates" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeLaunchTemplatesResult
newDescribeLaunchTemplatesResult'  customize = (DescribeLaunchTemplatesResult <<< customize) { "LaunchTemplates": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeMovingAddresses.</p>
newtype DescribeMovingAddressesRequest = DescribeMovingAddressesRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicIps" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeDescribeMovingAddressesRequest :: Newtype DescribeMovingAddressesRequest _
derive instance repGenericDescribeMovingAddressesRequest :: Generic DescribeMovingAddressesRequest _
instance showDescribeMovingAddressesRequest :: Show DescribeMovingAddressesRequest where
  show = genericShow
instance decodeDescribeMovingAddressesRequest :: Decode DescribeMovingAddressesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeMovingAddressesRequest :: Encode DescribeMovingAddressesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeMovingAddressesRequest from required parameters
newDescribeMovingAddressesRequest :: DescribeMovingAddressesRequest
newDescribeMovingAddressesRequest  = DescribeMovingAddressesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "PublicIps": (NullOrUndefined Nothing) }

-- | Constructs DescribeMovingAddressesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeMovingAddressesRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "PublicIps" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "PublicIps" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> DescribeMovingAddressesRequest
newDescribeMovingAddressesRequest'  customize = (DescribeMovingAddressesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "PublicIps": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeMovingAddresses.</p>
newtype DescribeMovingAddressesResult = DescribeMovingAddressesResult 
  { "MovingAddressStatuses" :: NullOrUndefined.NullOrUndefined (MovingAddressStatusSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeMovingAddressesResult :: Newtype DescribeMovingAddressesResult _
derive instance repGenericDescribeMovingAddressesResult :: Generic DescribeMovingAddressesResult _
instance showDescribeMovingAddressesResult :: Show DescribeMovingAddressesResult where
  show = genericShow
instance decodeDescribeMovingAddressesResult :: Decode DescribeMovingAddressesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeMovingAddressesResult :: Encode DescribeMovingAddressesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeMovingAddressesResult from required parameters
newDescribeMovingAddressesResult :: DescribeMovingAddressesResult
newDescribeMovingAddressesResult  = DescribeMovingAddressesResult { "MovingAddressStatuses": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeMovingAddressesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeMovingAddressesResult' :: ( { "MovingAddressStatuses" :: NullOrUndefined.NullOrUndefined (MovingAddressStatusSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"MovingAddressStatuses" :: NullOrUndefined.NullOrUndefined (MovingAddressStatusSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeMovingAddressesResult
newDescribeMovingAddressesResult'  customize = (DescribeMovingAddressesResult <<< customize) { "MovingAddressStatuses": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeNatGateways.</p>
newtype DescribeNatGatewaysRequest = DescribeNatGatewaysRequest 
  { "Filter" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NatGatewayIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeNatGatewaysRequest :: Newtype DescribeNatGatewaysRequest _
derive instance repGenericDescribeNatGatewaysRequest :: Generic DescribeNatGatewaysRequest _
instance showDescribeNatGatewaysRequest :: Show DescribeNatGatewaysRequest where
  show = genericShow
instance decodeDescribeNatGatewaysRequest :: Decode DescribeNatGatewaysRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeNatGatewaysRequest :: Encode DescribeNatGatewaysRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeNatGatewaysRequest from required parameters
newDescribeNatGatewaysRequest :: DescribeNatGatewaysRequest
newDescribeNatGatewaysRequest  = DescribeNatGatewaysRequest { "Filter": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NatGatewayIds": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeNatGatewaysRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeNatGatewaysRequest' :: ( { "Filter" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NatGatewayIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Filter" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NatGatewayIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeNatGatewaysRequest
newDescribeNatGatewaysRequest'  customize = (DescribeNatGatewaysRequest <<< customize) { "Filter": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NatGatewayIds": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeNatGateways.</p>
newtype DescribeNatGatewaysResult = DescribeNatGatewaysResult 
  { "NatGateways" :: NullOrUndefined.NullOrUndefined (NatGatewayList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeNatGatewaysResult :: Newtype DescribeNatGatewaysResult _
derive instance repGenericDescribeNatGatewaysResult :: Generic DescribeNatGatewaysResult _
instance showDescribeNatGatewaysResult :: Show DescribeNatGatewaysResult where
  show = genericShow
instance decodeDescribeNatGatewaysResult :: Decode DescribeNatGatewaysResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeNatGatewaysResult :: Encode DescribeNatGatewaysResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeNatGatewaysResult from required parameters
newDescribeNatGatewaysResult :: DescribeNatGatewaysResult
newDescribeNatGatewaysResult  = DescribeNatGatewaysResult { "NatGateways": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeNatGatewaysResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeNatGatewaysResult' :: ( { "NatGateways" :: NullOrUndefined.NullOrUndefined (NatGatewayList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"NatGateways" :: NullOrUndefined.NullOrUndefined (NatGatewayList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeNatGatewaysResult
newDescribeNatGatewaysResult'  customize = (DescribeNatGatewaysResult <<< customize) { "NatGateways": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeNetworkAcls.</p>
newtype DescribeNetworkAclsRequest = DescribeNetworkAclsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkAclIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeDescribeNetworkAclsRequest :: Newtype DescribeNetworkAclsRequest _
derive instance repGenericDescribeNetworkAclsRequest :: Generic DescribeNetworkAclsRequest _
instance showDescribeNetworkAclsRequest :: Show DescribeNetworkAclsRequest where
  show = genericShow
instance decodeDescribeNetworkAclsRequest :: Decode DescribeNetworkAclsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeNetworkAclsRequest :: Encode DescribeNetworkAclsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeNetworkAclsRequest from required parameters
newDescribeNetworkAclsRequest :: DescribeNetworkAclsRequest
newDescribeNetworkAclsRequest  = DescribeNetworkAclsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "NetworkAclIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeNetworkAclsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeNetworkAclsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkAclIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkAclIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> DescribeNetworkAclsRequest
newDescribeNetworkAclsRequest'  customize = (DescribeNetworkAclsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "NetworkAclIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeNetworkAcls.</p>
newtype DescribeNetworkAclsResult = DescribeNetworkAclsResult 
  { "NetworkAcls" :: NullOrUndefined.NullOrUndefined (NetworkAclList)
  }
derive instance newtypeDescribeNetworkAclsResult :: Newtype DescribeNetworkAclsResult _
derive instance repGenericDescribeNetworkAclsResult :: Generic DescribeNetworkAclsResult _
instance showDescribeNetworkAclsResult :: Show DescribeNetworkAclsResult where
  show = genericShow
instance decodeDescribeNetworkAclsResult :: Decode DescribeNetworkAclsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeNetworkAclsResult :: Encode DescribeNetworkAclsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeNetworkAclsResult from required parameters
newDescribeNetworkAclsResult :: DescribeNetworkAclsResult
newDescribeNetworkAclsResult  = DescribeNetworkAclsResult { "NetworkAcls": (NullOrUndefined Nothing) }

-- | Constructs DescribeNetworkAclsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeNetworkAclsResult' :: ( { "NetworkAcls" :: NullOrUndefined.NullOrUndefined (NetworkAclList) } -> {"NetworkAcls" :: NullOrUndefined.NullOrUndefined (NetworkAclList) } ) -> DescribeNetworkAclsResult
newDescribeNetworkAclsResult'  customize = (DescribeNetworkAclsResult <<< customize) { "NetworkAcls": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeNetworkInterfaceAttribute.</p>
newtype DescribeNetworkInterfaceAttributeRequest = DescribeNetworkInterfaceAttributeRequest 
  { "Attribute" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttribute)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkInterfaceId" :: (String)
  }
derive instance newtypeDescribeNetworkInterfaceAttributeRequest :: Newtype DescribeNetworkInterfaceAttributeRequest _
derive instance repGenericDescribeNetworkInterfaceAttributeRequest :: Generic DescribeNetworkInterfaceAttributeRequest _
instance showDescribeNetworkInterfaceAttributeRequest :: Show DescribeNetworkInterfaceAttributeRequest where
  show = genericShow
instance decodeDescribeNetworkInterfaceAttributeRequest :: Decode DescribeNetworkInterfaceAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeNetworkInterfaceAttributeRequest :: Encode DescribeNetworkInterfaceAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeNetworkInterfaceAttributeRequest from required parameters
newDescribeNetworkInterfaceAttributeRequest :: String -> DescribeNetworkInterfaceAttributeRequest
newDescribeNetworkInterfaceAttributeRequest _NetworkInterfaceId = DescribeNetworkInterfaceAttributeRequest { "NetworkInterfaceId": _NetworkInterfaceId, "Attribute": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeNetworkInterfaceAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeNetworkInterfaceAttributeRequest' :: String -> ( { "Attribute" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttribute) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceId" :: (String) } -> {"Attribute" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttribute) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceId" :: (String) } ) -> DescribeNetworkInterfaceAttributeRequest
newDescribeNetworkInterfaceAttributeRequest' _NetworkInterfaceId customize = (DescribeNetworkInterfaceAttributeRequest <<< customize) { "NetworkInterfaceId": _NetworkInterfaceId, "Attribute": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeNetworkInterfaceAttribute.</p>
newtype DescribeNetworkInterfaceAttributeResult = DescribeNetworkInterfaceAttributeResult 
  { "Attachment" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttachment)
  , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  }
derive instance newtypeDescribeNetworkInterfaceAttributeResult :: Newtype DescribeNetworkInterfaceAttributeResult _
derive instance repGenericDescribeNetworkInterfaceAttributeResult :: Generic DescribeNetworkInterfaceAttributeResult _
instance showDescribeNetworkInterfaceAttributeResult :: Show DescribeNetworkInterfaceAttributeResult where
  show = genericShow
instance decodeDescribeNetworkInterfaceAttributeResult :: Decode DescribeNetworkInterfaceAttributeResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeNetworkInterfaceAttributeResult :: Encode DescribeNetworkInterfaceAttributeResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeNetworkInterfaceAttributeResult from required parameters
newDescribeNetworkInterfaceAttributeResult :: DescribeNetworkInterfaceAttributeResult
newDescribeNetworkInterfaceAttributeResult  = DescribeNetworkInterfaceAttributeResult { "Attachment": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing) }

-- | Constructs DescribeNetworkInterfaceAttributeResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeNetworkInterfaceAttributeResult' :: ( { "Attachment" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttachment) , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) } -> {"Attachment" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttachment) , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) } ) -> DescribeNetworkInterfaceAttributeResult
newDescribeNetworkInterfaceAttributeResult'  customize = (DescribeNetworkInterfaceAttributeResult <<< customize) { "Attachment": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeNetworkInterfacePermissions.</p>
newtype DescribeNetworkInterfacePermissionsRequest = DescribeNetworkInterfacePermissionsRequest 
  { "NetworkInterfacePermissionIds" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionIdList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeDescribeNetworkInterfacePermissionsRequest :: Newtype DescribeNetworkInterfacePermissionsRequest _
derive instance repGenericDescribeNetworkInterfacePermissionsRequest :: Generic DescribeNetworkInterfacePermissionsRequest _
instance showDescribeNetworkInterfacePermissionsRequest :: Show DescribeNetworkInterfacePermissionsRequest where
  show = genericShow
instance decodeDescribeNetworkInterfacePermissionsRequest :: Decode DescribeNetworkInterfacePermissionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeNetworkInterfacePermissionsRequest :: Encode DescribeNetworkInterfacePermissionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeNetworkInterfacePermissionsRequest from required parameters
newDescribeNetworkInterfacePermissionsRequest :: DescribeNetworkInterfacePermissionsRequest
newDescribeNetworkInterfacePermissionsRequest  = DescribeNetworkInterfacePermissionsRequest { "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NetworkInterfacePermissionIds": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeNetworkInterfacePermissionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeNetworkInterfacePermissionsRequest' :: ( { "NetworkInterfacePermissionIds" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionIdList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) } -> {"NetworkInterfacePermissionIds" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionIdList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) } ) -> DescribeNetworkInterfacePermissionsRequest
newDescribeNetworkInterfacePermissionsRequest'  customize = (DescribeNetworkInterfacePermissionsRequest <<< customize) { "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NetworkInterfacePermissionIds": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output for DescribeNetworkInterfacePermissions.</p>
newtype DescribeNetworkInterfacePermissionsResult = DescribeNetworkInterfacePermissionsResult 
  { "NetworkInterfacePermissions" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeNetworkInterfacePermissionsResult :: Newtype DescribeNetworkInterfacePermissionsResult _
derive instance repGenericDescribeNetworkInterfacePermissionsResult :: Generic DescribeNetworkInterfacePermissionsResult _
instance showDescribeNetworkInterfacePermissionsResult :: Show DescribeNetworkInterfacePermissionsResult where
  show = genericShow
instance decodeDescribeNetworkInterfacePermissionsResult :: Decode DescribeNetworkInterfacePermissionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeNetworkInterfacePermissionsResult :: Encode DescribeNetworkInterfacePermissionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeNetworkInterfacePermissionsResult from required parameters
newDescribeNetworkInterfacePermissionsResult :: DescribeNetworkInterfacePermissionsResult
newDescribeNetworkInterfacePermissionsResult  = DescribeNetworkInterfacePermissionsResult { "NetworkInterfacePermissions": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeNetworkInterfacePermissionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeNetworkInterfacePermissionsResult' :: ( { "NetworkInterfacePermissions" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"NetworkInterfacePermissions" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeNetworkInterfacePermissionsResult
newDescribeNetworkInterfacePermissionsResult'  customize = (DescribeNetworkInterfacePermissionsResult <<< customize) { "NetworkInterfacePermissions": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeNetworkInterfaces.</p>
newtype DescribeNetworkInterfacesRequest = DescribeNetworkInterfacesRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkInterfaceIds" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceIdList)
  }
derive instance newtypeDescribeNetworkInterfacesRequest :: Newtype DescribeNetworkInterfacesRequest _
derive instance repGenericDescribeNetworkInterfacesRequest :: Generic DescribeNetworkInterfacesRequest _
instance showDescribeNetworkInterfacesRequest :: Show DescribeNetworkInterfacesRequest where
  show = genericShow
instance decodeDescribeNetworkInterfacesRequest :: Decode DescribeNetworkInterfacesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeNetworkInterfacesRequest :: Encode DescribeNetworkInterfacesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeNetworkInterfacesRequest from required parameters
newDescribeNetworkInterfacesRequest :: DescribeNetworkInterfacesRequest
newDescribeNetworkInterfacesRequest  = DescribeNetworkInterfacesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "NetworkInterfaceIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeNetworkInterfacesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeNetworkInterfacesRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceIds" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceIdList) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceIds" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceIdList) } ) -> DescribeNetworkInterfacesRequest
newDescribeNetworkInterfacesRequest'  customize = (DescribeNetworkInterfacesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "NetworkInterfaceIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeNetworkInterfaces.</p>
newtype DescribeNetworkInterfacesResult = DescribeNetworkInterfacesResult 
  { "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceList)
  }
derive instance newtypeDescribeNetworkInterfacesResult :: Newtype DescribeNetworkInterfacesResult _
derive instance repGenericDescribeNetworkInterfacesResult :: Generic DescribeNetworkInterfacesResult _
instance showDescribeNetworkInterfacesResult :: Show DescribeNetworkInterfacesResult where
  show = genericShow
instance decodeDescribeNetworkInterfacesResult :: Decode DescribeNetworkInterfacesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeNetworkInterfacesResult :: Encode DescribeNetworkInterfacesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeNetworkInterfacesResult from required parameters
newDescribeNetworkInterfacesResult :: DescribeNetworkInterfacesResult
newDescribeNetworkInterfacesResult  = DescribeNetworkInterfacesResult { "NetworkInterfaces": (NullOrUndefined Nothing) }

-- | Constructs DescribeNetworkInterfacesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeNetworkInterfacesResult' :: ( { "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceList) } -> {"NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceList) } ) -> DescribeNetworkInterfacesResult
newDescribeNetworkInterfacesResult'  customize = (DescribeNetworkInterfacesResult <<< customize) { "NetworkInterfaces": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribePlacementGroups.</p>
newtype DescribePlacementGroupsRequest = DescribePlacementGroupsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "GroupNames" :: NullOrUndefined.NullOrUndefined (PlacementGroupStringList)
  }
derive instance newtypeDescribePlacementGroupsRequest :: Newtype DescribePlacementGroupsRequest _
derive instance repGenericDescribePlacementGroupsRequest :: Generic DescribePlacementGroupsRequest _
instance showDescribePlacementGroupsRequest :: Show DescribePlacementGroupsRequest where
  show = genericShow
instance decodeDescribePlacementGroupsRequest :: Decode DescribePlacementGroupsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribePlacementGroupsRequest :: Encode DescribePlacementGroupsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribePlacementGroupsRequest from required parameters
newDescribePlacementGroupsRequest :: DescribePlacementGroupsRequest
newDescribePlacementGroupsRequest  = DescribePlacementGroupsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "GroupNames": (NullOrUndefined Nothing) }

-- | Constructs DescribePlacementGroupsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribePlacementGroupsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupNames" :: NullOrUndefined.NullOrUndefined (PlacementGroupStringList) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupNames" :: NullOrUndefined.NullOrUndefined (PlacementGroupStringList) } ) -> DescribePlacementGroupsRequest
newDescribePlacementGroupsRequest'  customize = (DescribePlacementGroupsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "GroupNames": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribePlacementGroups.</p>
newtype DescribePlacementGroupsResult = DescribePlacementGroupsResult 
  { "PlacementGroups" :: NullOrUndefined.NullOrUndefined (PlacementGroupList)
  }
derive instance newtypeDescribePlacementGroupsResult :: Newtype DescribePlacementGroupsResult _
derive instance repGenericDescribePlacementGroupsResult :: Generic DescribePlacementGroupsResult _
instance showDescribePlacementGroupsResult :: Show DescribePlacementGroupsResult where
  show = genericShow
instance decodeDescribePlacementGroupsResult :: Decode DescribePlacementGroupsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribePlacementGroupsResult :: Encode DescribePlacementGroupsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribePlacementGroupsResult from required parameters
newDescribePlacementGroupsResult :: DescribePlacementGroupsResult
newDescribePlacementGroupsResult  = DescribePlacementGroupsResult { "PlacementGroups": (NullOrUndefined Nothing) }

-- | Constructs DescribePlacementGroupsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribePlacementGroupsResult' :: ( { "PlacementGroups" :: NullOrUndefined.NullOrUndefined (PlacementGroupList) } -> {"PlacementGroups" :: NullOrUndefined.NullOrUndefined (PlacementGroupList) } ) -> DescribePlacementGroupsResult
newDescribePlacementGroupsResult'  customize = (DescribePlacementGroupsResult <<< customize) { "PlacementGroups": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribePrefixLists.</p>
newtype DescribePrefixListsRequest = DescribePrefixListsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "PrefixListIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeDescribePrefixListsRequest :: Newtype DescribePrefixListsRequest _
derive instance repGenericDescribePrefixListsRequest :: Generic DescribePrefixListsRequest _
instance showDescribePrefixListsRequest :: Show DescribePrefixListsRequest where
  show = genericShow
instance decodeDescribePrefixListsRequest :: Decode DescribePrefixListsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribePrefixListsRequest :: Encode DescribePrefixListsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribePrefixListsRequest from required parameters
newDescribePrefixListsRequest :: DescribePrefixListsRequest
newDescribePrefixListsRequest  = DescribePrefixListsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "PrefixListIds": (NullOrUndefined Nothing) }

-- | Constructs DescribePrefixListsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribePrefixListsRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "PrefixListIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "PrefixListIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> DescribePrefixListsRequest
newDescribePrefixListsRequest'  customize = (DescribePrefixListsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "PrefixListIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribePrefixLists.</p>
newtype DescribePrefixListsResult = DescribePrefixListsResult 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "PrefixLists" :: NullOrUndefined.NullOrUndefined (PrefixListSet)
  }
derive instance newtypeDescribePrefixListsResult :: Newtype DescribePrefixListsResult _
derive instance repGenericDescribePrefixListsResult :: Generic DescribePrefixListsResult _
instance showDescribePrefixListsResult :: Show DescribePrefixListsResult where
  show = genericShow
instance decodeDescribePrefixListsResult :: Decode DescribePrefixListsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribePrefixListsResult :: Encode DescribePrefixListsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribePrefixListsResult from required parameters
newDescribePrefixListsResult :: DescribePrefixListsResult
newDescribePrefixListsResult  = DescribePrefixListsResult { "NextToken": (NullOrUndefined Nothing), "PrefixLists": (NullOrUndefined Nothing) }

-- | Constructs DescribePrefixListsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribePrefixListsResult' :: ( { "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "PrefixLists" :: NullOrUndefined.NullOrUndefined (PrefixListSet) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (String) , "PrefixLists" :: NullOrUndefined.NullOrUndefined (PrefixListSet) } ) -> DescribePrefixListsResult
newDescribePrefixListsResult'  customize = (DescribePrefixListsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "PrefixLists": (NullOrUndefined Nothing) }



newtype DescribePrincipalIdFormatRequest = DescribePrincipalIdFormatRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Resources" :: NullOrUndefined.NullOrUndefined (ResourceList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribePrincipalIdFormatRequest :: Newtype DescribePrincipalIdFormatRequest _
derive instance repGenericDescribePrincipalIdFormatRequest :: Generic DescribePrincipalIdFormatRequest _
instance showDescribePrincipalIdFormatRequest :: Show DescribePrincipalIdFormatRequest where
  show = genericShow
instance decodeDescribePrincipalIdFormatRequest :: Decode DescribePrincipalIdFormatRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribePrincipalIdFormatRequest :: Encode DescribePrincipalIdFormatRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribePrincipalIdFormatRequest from required parameters
newDescribePrincipalIdFormatRequest :: DescribePrincipalIdFormatRequest
newDescribePrincipalIdFormatRequest  = DescribePrincipalIdFormatRequest { "DryRun": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "Resources": (NullOrUndefined Nothing) }

-- | Constructs DescribePrincipalIdFormatRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribePrincipalIdFormatRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Resources" :: NullOrUndefined.NullOrUndefined (ResourceList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Resources" :: NullOrUndefined.NullOrUndefined (ResourceList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribePrincipalIdFormatRequest
newDescribePrincipalIdFormatRequest'  customize = (DescribePrincipalIdFormatRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "Resources": (NullOrUndefined Nothing) }



newtype DescribePrincipalIdFormatResult = DescribePrincipalIdFormatResult 
  { "Principals" :: NullOrUndefined.NullOrUndefined (PrincipalIdFormatList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribePrincipalIdFormatResult :: Newtype DescribePrincipalIdFormatResult _
derive instance repGenericDescribePrincipalIdFormatResult :: Generic DescribePrincipalIdFormatResult _
instance showDescribePrincipalIdFormatResult :: Show DescribePrincipalIdFormatResult where
  show = genericShow
instance decodeDescribePrincipalIdFormatResult :: Decode DescribePrincipalIdFormatResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribePrincipalIdFormatResult :: Encode DescribePrincipalIdFormatResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribePrincipalIdFormatResult from required parameters
newDescribePrincipalIdFormatResult :: DescribePrincipalIdFormatResult
newDescribePrincipalIdFormatResult  = DescribePrincipalIdFormatResult { "NextToken": (NullOrUndefined Nothing), "Principals": (NullOrUndefined Nothing) }

-- | Constructs DescribePrincipalIdFormatResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribePrincipalIdFormatResult' :: ( { "Principals" :: NullOrUndefined.NullOrUndefined (PrincipalIdFormatList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Principals" :: NullOrUndefined.NullOrUndefined (PrincipalIdFormatList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribePrincipalIdFormatResult
newDescribePrincipalIdFormatResult'  customize = (DescribePrincipalIdFormatResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "Principals": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeRegions.</p>
newtype DescribeRegionsRequest = DescribeRegionsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "RegionNames" :: NullOrUndefined.NullOrUndefined (RegionNameStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeRegionsRequest :: Newtype DescribeRegionsRequest _
derive instance repGenericDescribeRegionsRequest :: Generic DescribeRegionsRequest _
instance showDescribeRegionsRequest :: Show DescribeRegionsRequest where
  show = genericShow
instance decodeDescribeRegionsRequest :: Decode DescribeRegionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeRegionsRequest :: Encode DescribeRegionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeRegionsRequest from required parameters
newDescribeRegionsRequest :: DescribeRegionsRequest
newDescribeRegionsRequest  = DescribeRegionsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "RegionNames": (NullOrUndefined Nothing) }

-- | Constructs DescribeRegionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeRegionsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "RegionNames" :: NullOrUndefined.NullOrUndefined (RegionNameStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "RegionNames" :: NullOrUndefined.NullOrUndefined (RegionNameStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeRegionsRequest
newDescribeRegionsRequest'  customize = (DescribeRegionsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "RegionNames": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeRegions.</p>
newtype DescribeRegionsResult = DescribeRegionsResult 
  { "Regions" :: NullOrUndefined.NullOrUndefined (RegionList)
  }
derive instance newtypeDescribeRegionsResult :: Newtype DescribeRegionsResult _
derive instance repGenericDescribeRegionsResult :: Generic DescribeRegionsResult _
instance showDescribeRegionsResult :: Show DescribeRegionsResult where
  show = genericShow
instance decodeDescribeRegionsResult :: Decode DescribeRegionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeRegionsResult :: Encode DescribeRegionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeRegionsResult from required parameters
newDescribeRegionsResult :: DescribeRegionsResult
newDescribeRegionsResult  = DescribeRegionsResult { "Regions": (NullOrUndefined Nothing) }

-- | Constructs DescribeRegionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeRegionsResult' :: ( { "Regions" :: NullOrUndefined.NullOrUndefined (RegionList) } -> {"Regions" :: NullOrUndefined.NullOrUndefined (RegionList) } ) -> DescribeRegionsResult
newDescribeRegionsResult'  customize = (DescribeRegionsResult <<< customize) { "Regions": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeReservedInstancesListings.</p>
newtype DescribeReservedInstancesListingsRequest = DescribeReservedInstancesListingsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String)
  , "ReservedInstancesListingId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeReservedInstancesListingsRequest :: Newtype DescribeReservedInstancesListingsRequest _
derive instance repGenericDescribeReservedInstancesListingsRequest :: Generic DescribeReservedInstancesListingsRequest _
instance showDescribeReservedInstancesListingsRequest :: Show DescribeReservedInstancesListingsRequest where
  show = genericShow
instance decodeDescribeReservedInstancesListingsRequest :: Decode DescribeReservedInstancesListingsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeReservedInstancesListingsRequest :: Encode DescribeReservedInstancesListingsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeReservedInstancesListingsRequest from required parameters
newDescribeReservedInstancesListingsRequest :: DescribeReservedInstancesListingsRequest
newDescribeReservedInstancesListingsRequest  = DescribeReservedInstancesListingsRequest { "Filters": (NullOrUndefined Nothing), "ReservedInstancesId": (NullOrUndefined Nothing), "ReservedInstancesListingId": (NullOrUndefined Nothing) }

-- | Constructs DescribeReservedInstancesListingsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeReservedInstancesListingsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) , "ReservedInstancesListingId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) , "ReservedInstancesListingId" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeReservedInstancesListingsRequest
newDescribeReservedInstancesListingsRequest'  customize = (DescribeReservedInstancesListingsRequest <<< customize) { "Filters": (NullOrUndefined Nothing), "ReservedInstancesId": (NullOrUndefined Nothing), "ReservedInstancesListingId": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeReservedInstancesListings.</p>
newtype DescribeReservedInstancesListingsResult = DescribeReservedInstancesListingsResult 
  { "ReservedInstancesListings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesListingList)
  }
derive instance newtypeDescribeReservedInstancesListingsResult :: Newtype DescribeReservedInstancesListingsResult _
derive instance repGenericDescribeReservedInstancesListingsResult :: Generic DescribeReservedInstancesListingsResult _
instance showDescribeReservedInstancesListingsResult :: Show DescribeReservedInstancesListingsResult where
  show = genericShow
instance decodeDescribeReservedInstancesListingsResult :: Decode DescribeReservedInstancesListingsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeReservedInstancesListingsResult :: Encode DescribeReservedInstancesListingsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeReservedInstancesListingsResult from required parameters
newDescribeReservedInstancesListingsResult :: DescribeReservedInstancesListingsResult
newDescribeReservedInstancesListingsResult  = DescribeReservedInstancesListingsResult { "ReservedInstancesListings": (NullOrUndefined Nothing) }

-- | Constructs DescribeReservedInstancesListingsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeReservedInstancesListingsResult' :: ( { "ReservedInstancesListings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesListingList) } -> {"ReservedInstancesListings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesListingList) } ) -> DescribeReservedInstancesListingsResult
newDescribeReservedInstancesListingsResult'  customize = (DescribeReservedInstancesListingsResult <<< customize) { "ReservedInstancesListings": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeReservedInstancesModifications.</p>
newtype DescribeReservedInstancesModificationsRequest = DescribeReservedInstancesModificationsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "ReservedInstancesModificationIds" :: NullOrUndefined.NullOrUndefined (ReservedInstancesModificationIdStringList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeReservedInstancesModificationsRequest :: Newtype DescribeReservedInstancesModificationsRequest _
derive instance repGenericDescribeReservedInstancesModificationsRequest :: Generic DescribeReservedInstancesModificationsRequest _
instance showDescribeReservedInstancesModificationsRequest :: Show DescribeReservedInstancesModificationsRequest where
  show = genericShow
instance decodeDescribeReservedInstancesModificationsRequest :: Decode DescribeReservedInstancesModificationsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeReservedInstancesModificationsRequest :: Encode DescribeReservedInstancesModificationsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeReservedInstancesModificationsRequest from required parameters
newDescribeReservedInstancesModificationsRequest :: DescribeReservedInstancesModificationsRequest
newDescribeReservedInstancesModificationsRequest  = DescribeReservedInstancesModificationsRequest { "Filters": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "ReservedInstancesModificationIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeReservedInstancesModificationsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeReservedInstancesModificationsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ReservedInstancesModificationIds" :: NullOrUndefined.NullOrUndefined (ReservedInstancesModificationIdStringList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "ReservedInstancesModificationIds" :: NullOrUndefined.NullOrUndefined (ReservedInstancesModificationIdStringList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeReservedInstancesModificationsRequest
newDescribeReservedInstancesModificationsRequest'  customize = (DescribeReservedInstancesModificationsRequest <<< customize) { "Filters": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "ReservedInstancesModificationIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeReservedInstancesModifications.</p>
newtype DescribeReservedInstancesModificationsResult = DescribeReservedInstancesModificationsResult 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "ReservedInstancesModifications" :: NullOrUndefined.NullOrUndefined (ReservedInstancesModificationList)
  }
derive instance newtypeDescribeReservedInstancesModificationsResult :: Newtype DescribeReservedInstancesModificationsResult _
derive instance repGenericDescribeReservedInstancesModificationsResult :: Generic DescribeReservedInstancesModificationsResult _
instance showDescribeReservedInstancesModificationsResult :: Show DescribeReservedInstancesModificationsResult where
  show = genericShow
instance decodeDescribeReservedInstancesModificationsResult :: Decode DescribeReservedInstancesModificationsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeReservedInstancesModificationsResult :: Encode DescribeReservedInstancesModificationsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeReservedInstancesModificationsResult from required parameters
newDescribeReservedInstancesModificationsResult :: DescribeReservedInstancesModificationsResult
newDescribeReservedInstancesModificationsResult  = DescribeReservedInstancesModificationsResult { "NextToken": (NullOrUndefined Nothing), "ReservedInstancesModifications": (NullOrUndefined Nothing) }

-- | Constructs DescribeReservedInstancesModificationsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeReservedInstancesModificationsResult' :: ( { "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "ReservedInstancesModifications" :: NullOrUndefined.NullOrUndefined (ReservedInstancesModificationList) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (String) , "ReservedInstancesModifications" :: NullOrUndefined.NullOrUndefined (ReservedInstancesModificationList) } ) -> DescribeReservedInstancesModificationsResult
newDescribeReservedInstancesModificationsResult'  customize = (DescribeReservedInstancesModificationsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "ReservedInstancesModifications": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeReservedInstancesOfferings.</p>
newtype DescribeReservedInstancesOfferingsRequest = DescribeReservedInstancesOfferingsRequest 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "IncludeMarketplace" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "MaxDuration" :: NullOrUndefined.NullOrUndefined (Number)
  , "MaxInstanceCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "MinDuration" :: NullOrUndefined.NullOrUndefined (Number)
  , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType)
  , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription)
  , "ReservedInstancesOfferingIds" :: NullOrUndefined.NullOrUndefined (ReservedInstancesOfferingIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues)
  }
derive instance newtypeDescribeReservedInstancesOfferingsRequest :: Newtype DescribeReservedInstancesOfferingsRequest _
derive instance repGenericDescribeReservedInstancesOfferingsRequest :: Generic DescribeReservedInstancesOfferingsRequest _
instance showDescribeReservedInstancesOfferingsRequest :: Show DescribeReservedInstancesOfferingsRequest where
  show = genericShow
instance decodeDescribeReservedInstancesOfferingsRequest :: Decode DescribeReservedInstancesOfferingsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeReservedInstancesOfferingsRequest :: Encode DescribeReservedInstancesOfferingsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeReservedInstancesOfferingsRequest from required parameters
newDescribeReservedInstancesOfferingsRequest :: DescribeReservedInstancesOfferingsRequest
newDescribeReservedInstancesOfferingsRequest  = DescribeReservedInstancesOfferingsRequest { "AvailabilityZone": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "IncludeMarketplace": (NullOrUndefined Nothing), "InstanceTenancy": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "MaxDuration": (NullOrUndefined Nothing), "MaxInstanceCount": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "MinDuration": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "OfferingClass": (NullOrUndefined Nothing), "OfferingType": (NullOrUndefined Nothing), "ProductDescription": (NullOrUndefined Nothing), "ReservedInstancesOfferingIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeReservedInstancesOfferingsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeReservedInstancesOfferingsRequest' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "IncludeMarketplace" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "MaxDuration" :: NullOrUndefined.NullOrUndefined (Number) , "MaxInstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "MinDuration" :: NullOrUndefined.NullOrUndefined (Number) , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType) , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription) , "ReservedInstancesOfferingIds" :: NullOrUndefined.NullOrUndefined (ReservedInstancesOfferingIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "IncludeMarketplace" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "MaxDuration" :: NullOrUndefined.NullOrUndefined (Number) , "MaxInstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "MinDuration" :: NullOrUndefined.NullOrUndefined (Number) , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType) , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription) , "ReservedInstancesOfferingIds" :: NullOrUndefined.NullOrUndefined (ReservedInstancesOfferingIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues) } ) -> DescribeReservedInstancesOfferingsRequest
newDescribeReservedInstancesOfferingsRequest'  customize = (DescribeReservedInstancesOfferingsRequest <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "IncludeMarketplace": (NullOrUndefined Nothing), "InstanceTenancy": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "MaxDuration": (NullOrUndefined Nothing), "MaxInstanceCount": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "MinDuration": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "OfferingClass": (NullOrUndefined Nothing), "OfferingType": (NullOrUndefined Nothing), "ProductDescription": (NullOrUndefined Nothing), "ReservedInstancesOfferingIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeReservedInstancesOfferings.</p>
newtype DescribeReservedInstancesOfferingsResult = DescribeReservedInstancesOfferingsResult 
  { "ReservedInstancesOfferings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesOfferingList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeReservedInstancesOfferingsResult :: Newtype DescribeReservedInstancesOfferingsResult _
derive instance repGenericDescribeReservedInstancesOfferingsResult :: Generic DescribeReservedInstancesOfferingsResult _
instance showDescribeReservedInstancesOfferingsResult :: Show DescribeReservedInstancesOfferingsResult where
  show = genericShow
instance decodeDescribeReservedInstancesOfferingsResult :: Decode DescribeReservedInstancesOfferingsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeReservedInstancesOfferingsResult :: Encode DescribeReservedInstancesOfferingsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeReservedInstancesOfferingsResult from required parameters
newDescribeReservedInstancesOfferingsResult :: DescribeReservedInstancesOfferingsResult
newDescribeReservedInstancesOfferingsResult  = DescribeReservedInstancesOfferingsResult { "NextToken": (NullOrUndefined Nothing), "ReservedInstancesOfferings": (NullOrUndefined Nothing) }

-- | Constructs DescribeReservedInstancesOfferingsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeReservedInstancesOfferingsResult' :: ( { "ReservedInstancesOfferings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesOfferingList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"ReservedInstancesOfferings" :: NullOrUndefined.NullOrUndefined (ReservedInstancesOfferingList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeReservedInstancesOfferingsResult
newDescribeReservedInstancesOfferingsResult'  customize = (DescribeReservedInstancesOfferingsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "ReservedInstancesOfferings": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeReservedInstances.</p>
newtype DescribeReservedInstancesRequest = DescribeReservedInstancesRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType)
  , "ReservedInstancesIds" :: NullOrUndefined.NullOrUndefined (ReservedInstancesIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues)
  }
derive instance newtypeDescribeReservedInstancesRequest :: Newtype DescribeReservedInstancesRequest _
derive instance repGenericDescribeReservedInstancesRequest :: Generic DescribeReservedInstancesRequest _
instance showDescribeReservedInstancesRequest :: Show DescribeReservedInstancesRequest where
  show = genericShow
instance decodeDescribeReservedInstancesRequest :: Decode DescribeReservedInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeReservedInstancesRequest :: Encode DescribeReservedInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeReservedInstancesRequest from required parameters
newDescribeReservedInstancesRequest :: DescribeReservedInstancesRequest
newDescribeReservedInstancesRequest  = DescribeReservedInstancesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "OfferingClass": (NullOrUndefined Nothing), "OfferingType": (NullOrUndefined Nothing), "ReservedInstancesIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeReservedInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeReservedInstancesRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType) , "ReservedInstancesIds" :: NullOrUndefined.NullOrUndefined (ReservedInstancesIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType) , "ReservedInstancesIds" :: NullOrUndefined.NullOrUndefined (ReservedInstancesIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues) } ) -> DescribeReservedInstancesRequest
newDescribeReservedInstancesRequest'  customize = (DescribeReservedInstancesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "OfferingClass": (NullOrUndefined Nothing), "OfferingType": (NullOrUndefined Nothing), "ReservedInstancesIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output for DescribeReservedInstances.</p>
newtype DescribeReservedInstancesResult = DescribeReservedInstancesResult 
  { "ReservedInstances" :: NullOrUndefined.NullOrUndefined (ReservedInstancesList)
  }
derive instance newtypeDescribeReservedInstancesResult :: Newtype DescribeReservedInstancesResult _
derive instance repGenericDescribeReservedInstancesResult :: Generic DescribeReservedInstancesResult _
instance showDescribeReservedInstancesResult :: Show DescribeReservedInstancesResult where
  show = genericShow
instance decodeDescribeReservedInstancesResult :: Decode DescribeReservedInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeReservedInstancesResult :: Encode DescribeReservedInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeReservedInstancesResult from required parameters
newDescribeReservedInstancesResult :: DescribeReservedInstancesResult
newDescribeReservedInstancesResult  = DescribeReservedInstancesResult { "ReservedInstances": (NullOrUndefined Nothing) }

-- | Constructs DescribeReservedInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeReservedInstancesResult' :: ( { "ReservedInstances" :: NullOrUndefined.NullOrUndefined (ReservedInstancesList) } -> {"ReservedInstances" :: NullOrUndefined.NullOrUndefined (ReservedInstancesList) } ) -> DescribeReservedInstancesResult
newDescribeReservedInstancesResult'  customize = (DescribeReservedInstancesResult <<< customize) { "ReservedInstances": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeRouteTables.</p>
newtype DescribeRouteTablesRequest = DescribeRouteTablesRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "RouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeDescribeRouteTablesRequest :: Newtype DescribeRouteTablesRequest _
derive instance repGenericDescribeRouteTablesRequest :: Generic DescribeRouteTablesRequest _
instance showDescribeRouteTablesRequest :: Show DescribeRouteTablesRequest where
  show = genericShow
instance decodeDescribeRouteTablesRequest :: Decode DescribeRouteTablesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeRouteTablesRequest :: Encode DescribeRouteTablesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeRouteTablesRequest from required parameters
newDescribeRouteTablesRequest :: DescribeRouteTablesRequest
newDescribeRouteTablesRequest  = DescribeRouteTablesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "RouteTableIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeRouteTablesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeRouteTablesRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> DescribeRouteTablesRequest
newDescribeRouteTablesRequest'  customize = (DescribeRouteTablesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "RouteTableIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeRouteTables.</p>
newtype DescribeRouteTablesResult = DescribeRouteTablesResult 
  { "RouteTables" :: NullOrUndefined.NullOrUndefined (RouteTableList)
  }
derive instance newtypeDescribeRouteTablesResult :: Newtype DescribeRouteTablesResult _
derive instance repGenericDescribeRouteTablesResult :: Generic DescribeRouteTablesResult _
instance showDescribeRouteTablesResult :: Show DescribeRouteTablesResult where
  show = genericShow
instance decodeDescribeRouteTablesResult :: Decode DescribeRouteTablesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeRouteTablesResult :: Encode DescribeRouteTablesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeRouteTablesResult from required parameters
newDescribeRouteTablesResult :: DescribeRouteTablesResult
newDescribeRouteTablesResult  = DescribeRouteTablesResult { "RouteTables": (NullOrUndefined Nothing) }

-- | Constructs DescribeRouteTablesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeRouteTablesResult' :: ( { "RouteTables" :: NullOrUndefined.NullOrUndefined (RouteTableList) } -> {"RouteTables" :: NullOrUndefined.NullOrUndefined (RouteTableList) } ) -> DescribeRouteTablesResult
newDescribeRouteTablesResult'  customize = (DescribeRouteTablesResult <<< customize) { "RouteTables": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeScheduledInstanceAvailability.</p>
newtype DescribeScheduledInstanceAvailabilityRequest = DescribeScheduledInstanceAvailabilityRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "FirstSlotStartTimeRange" :: (SlotDateTimeRangeRequest)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "MaxSlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int)
  , "MinSlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "Recurrence" :: (ScheduledInstanceRecurrenceRequest)
  }
derive instance newtypeDescribeScheduledInstanceAvailabilityRequest :: Newtype DescribeScheduledInstanceAvailabilityRequest _
derive instance repGenericDescribeScheduledInstanceAvailabilityRequest :: Generic DescribeScheduledInstanceAvailabilityRequest _
instance showDescribeScheduledInstanceAvailabilityRequest :: Show DescribeScheduledInstanceAvailabilityRequest where
  show = genericShow
instance decodeDescribeScheduledInstanceAvailabilityRequest :: Decode DescribeScheduledInstanceAvailabilityRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeScheduledInstanceAvailabilityRequest :: Encode DescribeScheduledInstanceAvailabilityRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeScheduledInstanceAvailabilityRequest from required parameters
newDescribeScheduledInstanceAvailabilityRequest :: SlotDateTimeRangeRequest -> ScheduledInstanceRecurrenceRequest -> DescribeScheduledInstanceAvailabilityRequest
newDescribeScheduledInstanceAvailabilityRequest _FirstSlotStartTimeRange _Recurrence = DescribeScheduledInstanceAvailabilityRequest { "FirstSlotStartTimeRange": _FirstSlotStartTimeRange, "Recurrence": _Recurrence, "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "MaxSlotDurationInHours": (NullOrUndefined Nothing), "MinSlotDurationInHours": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeScheduledInstanceAvailabilityRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeScheduledInstanceAvailabilityRequest' :: SlotDateTimeRangeRequest -> ScheduledInstanceRecurrenceRequest -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "FirstSlotStartTimeRange" :: (SlotDateTimeRangeRequest) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "MaxSlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int) , "MinSlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "Recurrence" :: (ScheduledInstanceRecurrenceRequest) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "FirstSlotStartTimeRange" :: (SlotDateTimeRangeRequest) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "MaxSlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int) , "MinSlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "Recurrence" :: (ScheduledInstanceRecurrenceRequest) } ) -> DescribeScheduledInstanceAvailabilityRequest
newDescribeScheduledInstanceAvailabilityRequest' _FirstSlotStartTimeRange _Recurrence customize = (DescribeScheduledInstanceAvailabilityRequest <<< customize) { "FirstSlotStartTimeRange": _FirstSlotStartTimeRange, "Recurrence": _Recurrence, "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "MaxSlotDurationInHours": (NullOrUndefined Nothing), "MinSlotDurationInHours": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeScheduledInstanceAvailability.</p>
newtype DescribeScheduledInstanceAvailabilityResult = DescribeScheduledInstanceAvailabilityResult 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "ScheduledInstanceAvailabilitySet" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceAvailabilitySet)
  }
derive instance newtypeDescribeScheduledInstanceAvailabilityResult :: Newtype DescribeScheduledInstanceAvailabilityResult _
derive instance repGenericDescribeScheduledInstanceAvailabilityResult :: Generic DescribeScheduledInstanceAvailabilityResult _
instance showDescribeScheduledInstanceAvailabilityResult :: Show DescribeScheduledInstanceAvailabilityResult where
  show = genericShow
instance decodeDescribeScheduledInstanceAvailabilityResult :: Decode DescribeScheduledInstanceAvailabilityResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeScheduledInstanceAvailabilityResult :: Encode DescribeScheduledInstanceAvailabilityResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeScheduledInstanceAvailabilityResult from required parameters
newDescribeScheduledInstanceAvailabilityResult :: DescribeScheduledInstanceAvailabilityResult
newDescribeScheduledInstanceAvailabilityResult  = DescribeScheduledInstanceAvailabilityResult { "NextToken": (NullOrUndefined Nothing), "ScheduledInstanceAvailabilitySet": (NullOrUndefined Nothing) }

-- | Constructs DescribeScheduledInstanceAvailabilityResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeScheduledInstanceAvailabilityResult' :: ( { "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "ScheduledInstanceAvailabilitySet" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceAvailabilitySet) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (String) , "ScheduledInstanceAvailabilitySet" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceAvailabilitySet) } ) -> DescribeScheduledInstanceAvailabilityResult
newDescribeScheduledInstanceAvailabilityResult'  customize = (DescribeScheduledInstanceAvailabilityResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "ScheduledInstanceAvailabilitySet": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeScheduledInstances.</p>
newtype DescribeScheduledInstancesRequest = DescribeScheduledInstancesRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "ScheduledInstanceIds" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceIdRequestSet)
  , "SlotStartTimeRange" :: NullOrUndefined.NullOrUndefined (SlotStartTimeRangeRequest)
  }
derive instance newtypeDescribeScheduledInstancesRequest :: Newtype DescribeScheduledInstancesRequest _
derive instance repGenericDescribeScheduledInstancesRequest :: Generic DescribeScheduledInstancesRequest _
instance showDescribeScheduledInstancesRequest :: Show DescribeScheduledInstancesRequest where
  show = genericShow
instance decodeDescribeScheduledInstancesRequest :: Decode DescribeScheduledInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeScheduledInstancesRequest :: Encode DescribeScheduledInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeScheduledInstancesRequest from required parameters
newDescribeScheduledInstancesRequest :: DescribeScheduledInstancesRequest
newDescribeScheduledInstancesRequest  = DescribeScheduledInstancesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "ScheduledInstanceIds": (NullOrUndefined Nothing), "SlotStartTimeRange": (NullOrUndefined Nothing) }

-- | Constructs DescribeScheduledInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeScheduledInstancesRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "ScheduledInstanceIds" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceIdRequestSet) , "SlotStartTimeRange" :: NullOrUndefined.NullOrUndefined (SlotStartTimeRangeRequest) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "ScheduledInstanceIds" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceIdRequestSet) , "SlotStartTimeRange" :: NullOrUndefined.NullOrUndefined (SlotStartTimeRangeRequest) } ) -> DescribeScheduledInstancesRequest
newDescribeScheduledInstancesRequest'  customize = (DescribeScheduledInstancesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "ScheduledInstanceIds": (NullOrUndefined Nothing), "SlotStartTimeRange": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeScheduledInstances.</p>
newtype DescribeScheduledInstancesResult = DescribeScheduledInstancesResult 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "ScheduledInstanceSet" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceSet)
  }
derive instance newtypeDescribeScheduledInstancesResult :: Newtype DescribeScheduledInstancesResult _
derive instance repGenericDescribeScheduledInstancesResult :: Generic DescribeScheduledInstancesResult _
instance showDescribeScheduledInstancesResult :: Show DescribeScheduledInstancesResult where
  show = genericShow
instance decodeDescribeScheduledInstancesResult :: Decode DescribeScheduledInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeScheduledInstancesResult :: Encode DescribeScheduledInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeScheduledInstancesResult from required parameters
newDescribeScheduledInstancesResult :: DescribeScheduledInstancesResult
newDescribeScheduledInstancesResult  = DescribeScheduledInstancesResult { "NextToken": (NullOrUndefined Nothing), "ScheduledInstanceSet": (NullOrUndefined Nothing) }

-- | Constructs DescribeScheduledInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeScheduledInstancesResult' :: ( { "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "ScheduledInstanceSet" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceSet) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (String) , "ScheduledInstanceSet" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceSet) } ) -> DescribeScheduledInstancesResult
newDescribeScheduledInstancesResult'  customize = (DescribeScheduledInstancesResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "ScheduledInstanceSet": (NullOrUndefined Nothing) }



newtype DescribeSecurityGroupReferencesRequest = DescribeSecurityGroupReferencesRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "GroupId" :: (GroupIds)
  }
derive instance newtypeDescribeSecurityGroupReferencesRequest :: Newtype DescribeSecurityGroupReferencesRequest _
derive instance repGenericDescribeSecurityGroupReferencesRequest :: Generic DescribeSecurityGroupReferencesRequest _
instance showDescribeSecurityGroupReferencesRequest :: Show DescribeSecurityGroupReferencesRequest where
  show = genericShow
instance decodeDescribeSecurityGroupReferencesRequest :: Decode DescribeSecurityGroupReferencesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSecurityGroupReferencesRequest :: Encode DescribeSecurityGroupReferencesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSecurityGroupReferencesRequest from required parameters
newDescribeSecurityGroupReferencesRequest :: GroupIds -> DescribeSecurityGroupReferencesRequest
newDescribeSecurityGroupReferencesRequest _GroupId = DescribeSecurityGroupReferencesRequest { "GroupId": _GroupId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeSecurityGroupReferencesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSecurityGroupReferencesRequest' :: GroupIds -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupId" :: (GroupIds) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupId" :: (GroupIds) } ) -> DescribeSecurityGroupReferencesRequest
newDescribeSecurityGroupReferencesRequest' _GroupId customize = (DescribeSecurityGroupReferencesRequest <<< customize) { "GroupId": _GroupId, "DryRun": (NullOrUndefined Nothing) }



newtype DescribeSecurityGroupReferencesResult = DescribeSecurityGroupReferencesResult 
  { "SecurityGroupReferenceSet" :: NullOrUndefined.NullOrUndefined (SecurityGroupReferences)
  }
derive instance newtypeDescribeSecurityGroupReferencesResult :: Newtype DescribeSecurityGroupReferencesResult _
derive instance repGenericDescribeSecurityGroupReferencesResult :: Generic DescribeSecurityGroupReferencesResult _
instance showDescribeSecurityGroupReferencesResult :: Show DescribeSecurityGroupReferencesResult where
  show = genericShow
instance decodeDescribeSecurityGroupReferencesResult :: Decode DescribeSecurityGroupReferencesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSecurityGroupReferencesResult :: Encode DescribeSecurityGroupReferencesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSecurityGroupReferencesResult from required parameters
newDescribeSecurityGroupReferencesResult :: DescribeSecurityGroupReferencesResult
newDescribeSecurityGroupReferencesResult  = DescribeSecurityGroupReferencesResult { "SecurityGroupReferenceSet": (NullOrUndefined Nothing) }

-- | Constructs DescribeSecurityGroupReferencesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSecurityGroupReferencesResult' :: ( { "SecurityGroupReferenceSet" :: NullOrUndefined.NullOrUndefined (SecurityGroupReferences) } -> {"SecurityGroupReferenceSet" :: NullOrUndefined.NullOrUndefined (SecurityGroupReferences) } ) -> DescribeSecurityGroupReferencesResult
newDescribeSecurityGroupReferencesResult'  customize = (DescribeSecurityGroupReferencesResult <<< customize) { "SecurityGroupReferenceSet": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeSecurityGroups.</p>
newtype DescribeSecurityGroupsRequest = DescribeSecurityGroupsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "GroupIds" :: NullOrUndefined.NullOrUndefined (GroupIdStringList)
  , "GroupNames" :: NullOrUndefined.NullOrUndefined (GroupNameStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeDescribeSecurityGroupsRequest :: Newtype DescribeSecurityGroupsRequest _
derive instance repGenericDescribeSecurityGroupsRequest :: Generic DescribeSecurityGroupsRequest _
instance showDescribeSecurityGroupsRequest :: Show DescribeSecurityGroupsRequest where
  show = genericShow
instance decodeDescribeSecurityGroupsRequest :: Decode DescribeSecurityGroupsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSecurityGroupsRequest :: Encode DescribeSecurityGroupsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSecurityGroupsRequest from required parameters
newDescribeSecurityGroupsRequest :: DescribeSecurityGroupsRequest
newDescribeSecurityGroupsRequest  = DescribeSecurityGroupsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "GroupIds": (NullOrUndefined Nothing), "GroupNames": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeSecurityGroupsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSecurityGroupsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "GroupIds" :: NullOrUndefined.NullOrUndefined (GroupIdStringList) , "GroupNames" :: NullOrUndefined.NullOrUndefined (GroupNameStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "GroupIds" :: NullOrUndefined.NullOrUndefined (GroupIdStringList) , "GroupNames" :: NullOrUndefined.NullOrUndefined (GroupNameStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) } ) -> DescribeSecurityGroupsRequest
newDescribeSecurityGroupsRequest'  customize = (DescribeSecurityGroupsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "GroupIds": (NullOrUndefined Nothing), "GroupNames": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeSecurityGroups.</p>
newtype DescribeSecurityGroupsResult = DescribeSecurityGroupsResult 
  { "SecurityGroups" :: NullOrUndefined.NullOrUndefined (SecurityGroupList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeSecurityGroupsResult :: Newtype DescribeSecurityGroupsResult _
derive instance repGenericDescribeSecurityGroupsResult :: Generic DescribeSecurityGroupsResult _
instance showDescribeSecurityGroupsResult :: Show DescribeSecurityGroupsResult where
  show = genericShow
instance decodeDescribeSecurityGroupsResult :: Decode DescribeSecurityGroupsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSecurityGroupsResult :: Encode DescribeSecurityGroupsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSecurityGroupsResult from required parameters
newDescribeSecurityGroupsResult :: DescribeSecurityGroupsResult
newDescribeSecurityGroupsResult  = DescribeSecurityGroupsResult { "NextToken": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing) }

-- | Constructs DescribeSecurityGroupsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSecurityGroupsResult' :: ( { "SecurityGroups" :: NullOrUndefined.NullOrUndefined (SecurityGroupList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"SecurityGroups" :: NullOrUndefined.NullOrUndefined (SecurityGroupList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeSecurityGroupsResult
newDescribeSecurityGroupsResult'  customize = (DescribeSecurityGroupsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeSnapshotAttribute.</p>
newtype DescribeSnapshotAttributeRequest = DescribeSnapshotAttributeRequest 
  { "Attribute" :: (SnapshotAttributeName)
  , "SnapshotId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeSnapshotAttributeRequest :: Newtype DescribeSnapshotAttributeRequest _
derive instance repGenericDescribeSnapshotAttributeRequest :: Generic DescribeSnapshotAttributeRequest _
instance showDescribeSnapshotAttributeRequest :: Show DescribeSnapshotAttributeRequest where
  show = genericShow
instance decodeDescribeSnapshotAttributeRequest :: Decode DescribeSnapshotAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSnapshotAttributeRequest :: Encode DescribeSnapshotAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSnapshotAttributeRequest from required parameters
newDescribeSnapshotAttributeRequest :: SnapshotAttributeName -> String -> DescribeSnapshotAttributeRequest
newDescribeSnapshotAttributeRequest _Attribute _SnapshotId = DescribeSnapshotAttributeRequest { "Attribute": _Attribute, "SnapshotId": _SnapshotId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeSnapshotAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSnapshotAttributeRequest' :: SnapshotAttributeName -> String -> ( { "Attribute" :: (SnapshotAttributeName) , "SnapshotId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Attribute" :: (SnapshotAttributeName) , "SnapshotId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeSnapshotAttributeRequest
newDescribeSnapshotAttributeRequest' _Attribute _SnapshotId customize = (DescribeSnapshotAttributeRequest <<< customize) { "Attribute": _Attribute, "SnapshotId": _SnapshotId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeSnapshotAttribute.</p>
newtype DescribeSnapshotAttributeResult = DescribeSnapshotAttributeResult 
  { "CreateVolumePermissions" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionList)
  , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeSnapshotAttributeResult :: Newtype DescribeSnapshotAttributeResult _
derive instance repGenericDescribeSnapshotAttributeResult :: Generic DescribeSnapshotAttributeResult _
instance showDescribeSnapshotAttributeResult :: Show DescribeSnapshotAttributeResult where
  show = genericShow
instance decodeDescribeSnapshotAttributeResult :: Decode DescribeSnapshotAttributeResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSnapshotAttributeResult :: Encode DescribeSnapshotAttributeResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSnapshotAttributeResult from required parameters
newDescribeSnapshotAttributeResult :: DescribeSnapshotAttributeResult
newDescribeSnapshotAttributeResult  = DescribeSnapshotAttributeResult { "CreateVolumePermissions": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing) }

-- | Constructs DescribeSnapshotAttributeResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSnapshotAttributeResult' :: ( { "CreateVolumePermissions" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionList) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) } -> {"CreateVolumePermissions" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionList) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeSnapshotAttributeResult
newDescribeSnapshotAttributeResult'  customize = (DescribeSnapshotAttributeResult <<< customize) { "CreateVolumePermissions": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeSnapshots.</p>
newtype DescribeSnapshotsRequest = DescribeSnapshotsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "OwnerIds" :: NullOrUndefined.NullOrUndefined (OwnerStringList)
  , "RestorableByUserIds" :: NullOrUndefined.NullOrUndefined (RestorableByStringList)
  , "SnapshotIds" :: NullOrUndefined.NullOrUndefined (SnapshotIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeSnapshotsRequest :: Newtype DescribeSnapshotsRequest _
derive instance repGenericDescribeSnapshotsRequest :: Generic DescribeSnapshotsRequest _
instance showDescribeSnapshotsRequest :: Show DescribeSnapshotsRequest where
  show = genericShow
instance decodeDescribeSnapshotsRequest :: Decode DescribeSnapshotsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSnapshotsRequest :: Encode DescribeSnapshotsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSnapshotsRequest from required parameters
newDescribeSnapshotsRequest :: DescribeSnapshotsRequest
newDescribeSnapshotsRequest  = DescribeSnapshotsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "OwnerIds": (NullOrUndefined Nothing), "RestorableByUserIds": (NullOrUndefined Nothing), "SnapshotIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeSnapshotsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSnapshotsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "OwnerIds" :: NullOrUndefined.NullOrUndefined (OwnerStringList) , "RestorableByUserIds" :: NullOrUndefined.NullOrUndefined (RestorableByStringList) , "SnapshotIds" :: NullOrUndefined.NullOrUndefined (SnapshotIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "OwnerIds" :: NullOrUndefined.NullOrUndefined (OwnerStringList) , "RestorableByUserIds" :: NullOrUndefined.NullOrUndefined (RestorableByStringList) , "SnapshotIds" :: NullOrUndefined.NullOrUndefined (SnapshotIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeSnapshotsRequest
newDescribeSnapshotsRequest'  customize = (DescribeSnapshotsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "OwnerIds": (NullOrUndefined Nothing), "RestorableByUserIds": (NullOrUndefined Nothing), "SnapshotIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeSnapshots.</p>
newtype DescribeSnapshotsResult = DescribeSnapshotsResult 
  { "Snapshots" :: NullOrUndefined.NullOrUndefined (SnapshotList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeSnapshotsResult :: Newtype DescribeSnapshotsResult _
derive instance repGenericDescribeSnapshotsResult :: Generic DescribeSnapshotsResult _
instance showDescribeSnapshotsResult :: Show DescribeSnapshotsResult where
  show = genericShow
instance decodeDescribeSnapshotsResult :: Decode DescribeSnapshotsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSnapshotsResult :: Encode DescribeSnapshotsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSnapshotsResult from required parameters
newDescribeSnapshotsResult :: DescribeSnapshotsResult
newDescribeSnapshotsResult  = DescribeSnapshotsResult { "NextToken": (NullOrUndefined Nothing), "Snapshots": (NullOrUndefined Nothing) }

-- | Constructs DescribeSnapshotsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSnapshotsResult' :: ( { "Snapshots" :: NullOrUndefined.NullOrUndefined (SnapshotList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Snapshots" :: NullOrUndefined.NullOrUndefined (SnapshotList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeSnapshotsResult
newDescribeSnapshotsResult'  customize = (DescribeSnapshotsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "Snapshots": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeSpotDatafeedSubscription.</p>
newtype DescribeSpotDatafeedSubscriptionRequest = DescribeSpotDatafeedSubscriptionRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeSpotDatafeedSubscriptionRequest :: Newtype DescribeSpotDatafeedSubscriptionRequest _
derive instance repGenericDescribeSpotDatafeedSubscriptionRequest :: Generic DescribeSpotDatafeedSubscriptionRequest _
instance showDescribeSpotDatafeedSubscriptionRequest :: Show DescribeSpotDatafeedSubscriptionRequest where
  show = genericShow
instance decodeDescribeSpotDatafeedSubscriptionRequest :: Decode DescribeSpotDatafeedSubscriptionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotDatafeedSubscriptionRequest :: Encode DescribeSpotDatafeedSubscriptionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotDatafeedSubscriptionRequest from required parameters
newDescribeSpotDatafeedSubscriptionRequest :: DescribeSpotDatafeedSubscriptionRequest
newDescribeSpotDatafeedSubscriptionRequest  = DescribeSpotDatafeedSubscriptionRequest { "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotDatafeedSubscriptionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotDatafeedSubscriptionRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeSpotDatafeedSubscriptionRequest
newDescribeSpotDatafeedSubscriptionRequest'  customize = (DescribeSpotDatafeedSubscriptionRequest <<< customize) { "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeSpotDatafeedSubscription.</p>
newtype DescribeSpotDatafeedSubscriptionResult = DescribeSpotDatafeedSubscriptionResult 
  { "SpotDatafeedSubscription" :: NullOrUndefined.NullOrUndefined (SpotDatafeedSubscription)
  }
derive instance newtypeDescribeSpotDatafeedSubscriptionResult :: Newtype DescribeSpotDatafeedSubscriptionResult _
derive instance repGenericDescribeSpotDatafeedSubscriptionResult :: Generic DescribeSpotDatafeedSubscriptionResult _
instance showDescribeSpotDatafeedSubscriptionResult :: Show DescribeSpotDatafeedSubscriptionResult where
  show = genericShow
instance decodeDescribeSpotDatafeedSubscriptionResult :: Decode DescribeSpotDatafeedSubscriptionResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotDatafeedSubscriptionResult :: Encode DescribeSpotDatafeedSubscriptionResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotDatafeedSubscriptionResult from required parameters
newDescribeSpotDatafeedSubscriptionResult :: DescribeSpotDatafeedSubscriptionResult
newDescribeSpotDatafeedSubscriptionResult  = DescribeSpotDatafeedSubscriptionResult { "SpotDatafeedSubscription": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotDatafeedSubscriptionResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotDatafeedSubscriptionResult' :: ( { "SpotDatafeedSubscription" :: NullOrUndefined.NullOrUndefined (SpotDatafeedSubscription) } -> {"SpotDatafeedSubscription" :: NullOrUndefined.NullOrUndefined (SpotDatafeedSubscription) } ) -> DescribeSpotDatafeedSubscriptionResult
newDescribeSpotDatafeedSubscriptionResult'  customize = (DescribeSpotDatafeedSubscriptionResult <<< customize) { "SpotDatafeedSubscription": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeSpotFleetInstances.</p>
newtype DescribeSpotFleetInstancesRequest = DescribeSpotFleetInstancesRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotFleetRequestId" :: (String)
  }
derive instance newtypeDescribeSpotFleetInstancesRequest :: Newtype DescribeSpotFleetInstancesRequest _
derive instance repGenericDescribeSpotFleetInstancesRequest :: Generic DescribeSpotFleetInstancesRequest _
instance showDescribeSpotFleetInstancesRequest :: Show DescribeSpotFleetInstancesRequest where
  show = genericShow
instance decodeDescribeSpotFleetInstancesRequest :: Decode DescribeSpotFleetInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotFleetInstancesRequest :: Encode DescribeSpotFleetInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotFleetInstancesRequest from required parameters
newDescribeSpotFleetInstancesRequest :: String -> DescribeSpotFleetInstancesRequest
newDescribeSpotFleetInstancesRequest _SpotFleetRequestId = DescribeSpotFleetInstancesRequest { "SpotFleetRequestId": _SpotFleetRequestId, "DryRun": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotFleetInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotFleetInstancesRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestId" :: (String) } ) -> DescribeSpotFleetInstancesRequest
newDescribeSpotFleetInstancesRequest' _SpotFleetRequestId customize = (DescribeSpotFleetInstancesRequest <<< customize) { "SpotFleetRequestId": _SpotFleetRequestId, "DryRun": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeSpotFleetInstances.</p>
newtype DescribeSpotFleetInstancesResponse = DescribeSpotFleetInstancesResponse 
  { "ActiveInstances" :: (ActiveInstanceSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotFleetRequestId" :: (String)
  }
derive instance newtypeDescribeSpotFleetInstancesResponse :: Newtype DescribeSpotFleetInstancesResponse _
derive instance repGenericDescribeSpotFleetInstancesResponse :: Generic DescribeSpotFleetInstancesResponse _
instance showDescribeSpotFleetInstancesResponse :: Show DescribeSpotFleetInstancesResponse where
  show = genericShow
instance decodeDescribeSpotFleetInstancesResponse :: Decode DescribeSpotFleetInstancesResponse where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotFleetInstancesResponse :: Encode DescribeSpotFleetInstancesResponse where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotFleetInstancesResponse from required parameters
newDescribeSpotFleetInstancesResponse :: ActiveInstanceSet -> String -> DescribeSpotFleetInstancesResponse
newDescribeSpotFleetInstancesResponse _ActiveInstances _SpotFleetRequestId = DescribeSpotFleetInstancesResponse { "ActiveInstances": _ActiveInstances, "SpotFleetRequestId": _SpotFleetRequestId, "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotFleetInstancesResponse's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotFleetInstancesResponse' :: ActiveInstanceSet -> String -> ( { "ActiveInstances" :: (ActiveInstanceSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestId" :: (String) } -> {"ActiveInstances" :: (ActiveInstanceSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestId" :: (String) } ) -> DescribeSpotFleetInstancesResponse
newDescribeSpotFleetInstancesResponse' _ActiveInstances _SpotFleetRequestId customize = (DescribeSpotFleetInstancesResponse <<< customize) { "ActiveInstances": _ActiveInstances, "SpotFleetRequestId": _SpotFleetRequestId, "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeSpotFleetRequestHistory.</p>
newtype DescribeSpotFleetRequestHistoryRequest = DescribeSpotFleetRequestHistoryRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EventType" :: NullOrUndefined.NullOrUndefined (EventType)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotFleetRequestId" :: (String)
  , "StartTime" :: (DateTime)
  }
derive instance newtypeDescribeSpotFleetRequestHistoryRequest :: Newtype DescribeSpotFleetRequestHistoryRequest _
derive instance repGenericDescribeSpotFleetRequestHistoryRequest :: Generic DescribeSpotFleetRequestHistoryRequest _
instance showDescribeSpotFleetRequestHistoryRequest :: Show DescribeSpotFleetRequestHistoryRequest where
  show = genericShow
instance decodeDescribeSpotFleetRequestHistoryRequest :: Decode DescribeSpotFleetRequestHistoryRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotFleetRequestHistoryRequest :: Encode DescribeSpotFleetRequestHistoryRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotFleetRequestHistoryRequest from required parameters
newDescribeSpotFleetRequestHistoryRequest :: String -> DateTime -> DescribeSpotFleetRequestHistoryRequest
newDescribeSpotFleetRequestHistoryRequest _SpotFleetRequestId _StartTime = DescribeSpotFleetRequestHistoryRequest { "SpotFleetRequestId": _SpotFleetRequestId, "StartTime": _StartTime, "DryRun": (NullOrUndefined Nothing), "EventType": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotFleetRequestHistoryRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotFleetRequestHistoryRequest' :: String -> DateTime -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EventType" :: NullOrUndefined.NullOrUndefined (EventType) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestId" :: (String) , "StartTime" :: (DateTime) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EventType" :: NullOrUndefined.NullOrUndefined (EventType) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestId" :: (String) , "StartTime" :: (DateTime) } ) -> DescribeSpotFleetRequestHistoryRequest
newDescribeSpotFleetRequestHistoryRequest' _SpotFleetRequestId _StartTime customize = (DescribeSpotFleetRequestHistoryRequest <<< customize) { "SpotFleetRequestId": _SpotFleetRequestId, "StartTime": _StartTime, "DryRun": (NullOrUndefined Nothing), "EventType": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeSpotFleetRequestHistory.</p>
newtype DescribeSpotFleetRequestHistoryResponse = DescribeSpotFleetRequestHistoryResponse 
  { "HistoryRecords" :: (HistoryRecords)
  , "LastEvaluatedTime" :: (DateTime)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotFleetRequestId" :: (String)
  , "StartTime" :: (DateTime)
  }
derive instance newtypeDescribeSpotFleetRequestHistoryResponse :: Newtype DescribeSpotFleetRequestHistoryResponse _
derive instance repGenericDescribeSpotFleetRequestHistoryResponse :: Generic DescribeSpotFleetRequestHistoryResponse _
instance showDescribeSpotFleetRequestHistoryResponse :: Show DescribeSpotFleetRequestHistoryResponse where
  show = genericShow
instance decodeDescribeSpotFleetRequestHistoryResponse :: Decode DescribeSpotFleetRequestHistoryResponse where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotFleetRequestHistoryResponse :: Encode DescribeSpotFleetRequestHistoryResponse where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotFleetRequestHistoryResponse from required parameters
newDescribeSpotFleetRequestHistoryResponse :: HistoryRecords -> DateTime -> String -> DateTime -> DescribeSpotFleetRequestHistoryResponse
newDescribeSpotFleetRequestHistoryResponse _HistoryRecords _LastEvaluatedTime _SpotFleetRequestId _StartTime = DescribeSpotFleetRequestHistoryResponse { "HistoryRecords": _HistoryRecords, "LastEvaluatedTime": _LastEvaluatedTime, "SpotFleetRequestId": _SpotFleetRequestId, "StartTime": _StartTime, "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotFleetRequestHistoryResponse's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotFleetRequestHistoryResponse' :: HistoryRecords -> DateTime -> String -> DateTime -> ( { "HistoryRecords" :: (HistoryRecords) , "LastEvaluatedTime" :: (DateTime) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestId" :: (String) , "StartTime" :: (DateTime) } -> {"HistoryRecords" :: (HistoryRecords) , "LastEvaluatedTime" :: (DateTime) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestId" :: (String) , "StartTime" :: (DateTime) } ) -> DescribeSpotFleetRequestHistoryResponse
newDescribeSpotFleetRequestHistoryResponse' _HistoryRecords _LastEvaluatedTime _SpotFleetRequestId _StartTime customize = (DescribeSpotFleetRequestHistoryResponse <<< customize) { "HistoryRecords": _HistoryRecords, "LastEvaluatedTime": _LastEvaluatedTime, "SpotFleetRequestId": _SpotFleetRequestId, "StartTime": _StartTime, "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeSpotFleetRequests.</p>
newtype DescribeSpotFleetRequestsRequest = DescribeSpotFleetRequestsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotFleetRequestIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeDescribeSpotFleetRequestsRequest :: Newtype DescribeSpotFleetRequestsRequest _
derive instance repGenericDescribeSpotFleetRequestsRequest :: Generic DescribeSpotFleetRequestsRequest _
instance showDescribeSpotFleetRequestsRequest :: Show DescribeSpotFleetRequestsRequest where
  show = genericShow
instance decodeDescribeSpotFleetRequestsRequest :: Decode DescribeSpotFleetRequestsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotFleetRequestsRequest :: Encode DescribeSpotFleetRequestsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotFleetRequestsRequest from required parameters
newDescribeSpotFleetRequestsRequest :: DescribeSpotFleetRequestsRequest
newDescribeSpotFleetRequestsRequest  = DescribeSpotFleetRequestsRequest { "DryRun": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "SpotFleetRequestIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotFleetRequestsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotFleetRequestsRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> DescribeSpotFleetRequestsRequest
newDescribeSpotFleetRequestsRequest'  customize = (DescribeSpotFleetRequestsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "SpotFleetRequestIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeSpotFleetRequests.</p>
newtype DescribeSpotFleetRequestsResponse = DescribeSpotFleetRequestsResponse 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotFleetRequestConfigs" :: (SpotFleetRequestConfigSet)
  }
derive instance newtypeDescribeSpotFleetRequestsResponse :: Newtype DescribeSpotFleetRequestsResponse _
derive instance repGenericDescribeSpotFleetRequestsResponse :: Generic DescribeSpotFleetRequestsResponse _
instance showDescribeSpotFleetRequestsResponse :: Show DescribeSpotFleetRequestsResponse where
  show = genericShow
instance decodeDescribeSpotFleetRequestsResponse :: Decode DescribeSpotFleetRequestsResponse where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotFleetRequestsResponse :: Encode DescribeSpotFleetRequestsResponse where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotFleetRequestsResponse from required parameters
newDescribeSpotFleetRequestsResponse :: SpotFleetRequestConfigSet -> DescribeSpotFleetRequestsResponse
newDescribeSpotFleetRequestsResponse _SpotFleetRequestConfigs = DescribeSpotFleetRequestsResponse { "SpotFleetRequestConfigs": _SpotFleetRequestConfigs, "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotFleetRequestsResponse's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotFleetRequestsResponse' :: SpotFleetRequestConfigSet -> ( { "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestConfigs" :: (SpotFleetRequestConfigSet) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotFleetRequestConfigs" :: (SpotFleetRequestConfigSet) } ) -> DescribeSpotFleetRequestsResponse
newDescribeSpotFleetRequestsResponse' _SpotFleetRequestConfigs customize = (DescribeSpotFleetRequestsResponse <<< customize) { "SpotFleetRequestConfigs": _SpotFleetRequestConfigs, "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeSpotInstanceRequests.</p>
newtype DescribeSpotInstanceRequestsRequest = DescribeSpotInstanceRequestsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "SpotInstanceRequestIds" :: NullOrUndefined.NullOrUndefined (SpotInstanceRequestIdList)
  }
derive instance newtypeDescribeSpotInstanceRequestsRequest :: Newtype DescribeSpotInstanceRequestsRequest _
derive instance repGenericDescribeSpotInstanceRequestsRequest :: Generic DescribeSpotInstanceRequestsRequest _
instance showDescribeSpotInstanceRequestsRequest :: Show DescribeSpotInstanceRequestsRequest where
  show = genericShow
instance decodeDescribeSpotInstanceRequestsRequest :: Decode DescribeSpotInstanceRequestsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotInstanceRequestsRequest :: Encode DescribeSpotInstanceRequestsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotInstanceRequestsRequest from required parameters
newDescribeSpotInstanceRequestsRequest :: DescribeSpotInstanceRequestsRequest
newDescribeSpotInstanceRequestsRequest  = DescribeSpotInstanceRequestsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "SpotInstanceRequestIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotInstanceRequestsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotInstanceRequestsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "SpotInstanceRequestIds" :: NullOrUndefined.NullOrUndefined (SpotInstanceRequestIdList) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "SpotInstanceRequestIds" :: NullOrUndefined.NullOrUndefined (SpotInstanceRequestIdList) } ) -> DescribeSpotInstanceRequestsRequest
newDescribeSpotInstanceRequestsRequest'  customize = (DescribeSpotInstanceRequestsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "SpotInstanceRequestIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeSpotInstanceRequests.</p>
newtype DescribeSpotInstanceRequestsResult = DescribeSpotInstanceRequestsResult 
  { "SpotInstanceRequests" :: NullOrUndefined.NullOrUndefined (SpotInstanceRequestList)
  }
derive instance newtypeDescribeSpotInstanceRequestsResult :: Newtype DescribeSpotInstanceRequestsResult _
derive instance repGenericDescribeSpotInstanceRequestsResult :: Generic DescribeSpotInstanceRequestsResult _
instance showDescribeSpotInstanceRequestsResult :: Show DescribeSpotInstanceRequestsResult where
  show = genericShow
instance decodeDescribeSpotInstanceRequestsResult :: Decode DescribeSpotInstanceRequestsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotInstanceRequestsResult :: Encode DescribeSpotInstanceRequestsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotInstanceRequestsResult from required parameters
newDescribeSpotInstanceRequestsResult :: DescribeSpotInstanceRequestsResult
newDescribeSpotInstanceRequestsResult  = DescribeSpotInstanceRequestsResult { "SpotInstanceRequests": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotInstanceRequestsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotInstanceRequestsResult' :: ( { "SpotInstanceRequests" :: NullOrUndefined.NullOrUndefined (SpotInstanceRequestList) } -> {"SpotInstanceRequests" :: NullOrUndefined.NullOrUndefined (SpotInstanceRequestList) } ) -> DescribeSpotInstanceRequestsResult
newDescribeSpotInstanceRequestsResult'  customize = (DescribeSpotInstanceRequestsResult <<< customize) { "SpotInstanceRequests": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeSpotPriceHistory.</p>
newtype DescribeSpotPriceHistoryRequest = DescribeSpotPriceHistoryRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EndTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "InstanceTypes" :: NullOrUndefined.NullOrUndefined (InstanceTypeList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "ProductDescriptions" :: NullOrUndefined.NullOrUndefined (ProductDescriptionList)
  , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeDescribeSpotPriceHistoryRequest :: Newtype DescribeSpotPriceHistoryRequest _
derive instance repGenericDescribeSpotPriceHistoryRequest :: Generic DescribeSpotPriceHistoryRequest _
instance showDescribeSpotPriceHistoryRequest :: Show DescribeSpotPriceHistoryRequest where
  show = genericShow
instance decodeDescribeSpotPriceHistoryRequest :: Decode DescribeSpotPriceHistoryRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotPriceHistoryRequest :: Encode DescribeSpotPriceHistoryRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotPriceHistoryRequest from required parameters
newDescribeSpotPriceHistoryRequest :: DescribeSpotPriceHistoryRequest
newDescribeSpotPriceHistoryRequest  = DescribeSpotPriceHistoryRequest { "AvailabilityZone": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EndTime": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "InstanceTypes": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "ProductDescriptions": (NullOrUndefined Nothing), "StartTime": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotPriceHistoryRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotPriceHistoryRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EndTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceTypes" :: NullOrUndefined.NullOrUndefined (InstanceTypeList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "ProductDescriptions" :: NullOrUndefined.NullOrUndefined (ProductDescriptionList) , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EndTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceTypes" :: NullOrUndefined.NullOrUndefined (InstanceTypeList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "ProductDescriptions" :: NullOrUndefined.NullOrUndefined (ProductDescriptionList) , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> DescribeSpotPriceHistoryRequest
newDescribeSpotPriceHistoryRequest'  customize = (DescribeSpotPriceHistoryRequest <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EndTime": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "InstanceTypes": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "ProductDescriptions": (NullOrUndefined Nothing), "StartTime": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeSpotPriceHistory.</p>
newtype DescribeSpotPriceHistoryResult = DescribeSpotPriceHistoryResult 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotPriceHistory" :: NullOrUndefined.NullOrUndefined (SpotPriceHistoryList)
  }
derive instance newtypeDescribeSpotPriceHistoryResult :: Newtype DescribeSpotPriceHistoryResult _
derive instance repGenericDescribeSpotPriceHistoryResult :: Generic DescribeSpotPriceHistoryResult _
instance showDescribeSpotPriceHistoryResult :: Show DescribeSpotPriceHistoryResult where
  show = genericShow
instance decodeDescribeSpotPriceHistoryResult :: Decode DescribeSpotPriceHistoryResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSpotPriceHistoryResult :: Encode DescribeSpotPriceHistoryResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSpotPriceHistoryResult from required parameters
newDescribeSpotPriceHistoryResult :: DescribeSpotPriceHistoryResult
newDescribeSpotPriceHistoryResult  = DescribeSpotPriceHistoryResult { "NextToken": (NullOrUndefined Nothing), "SpotPriceHistory": (NullOrUndefined Nothing) }

-- | Constructs DescribeSpotPriceHistoryResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSpotPriceHistoryResult' :: ( { "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotPriceHistory" :: NullOrUndefined.NullOrUndefined (SpotPriceHistoryList) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (String) , "SpotPriceHistory" :: NullOrUndefined.NullOrUndefined (SpotPriceHistoryList) } ) -> DescribeSpotPriceHistoryResult
newDescribeSpotPriceHistoryResult'  customize = (DescribeSpotPriceHistoryResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "SpotPriceHistory": (NullOrUndefined Nothing) }



newtype DescribeStaleSecurityGroupsRequest = DescribeStaleSecurityGroupsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken)
  , "VpcId" :: (String)
  }
derive instance newtypeDescribeStaleSecurityGroupsRequest :: Newtype DescribeStaleSecurityGroupsRequest _
derive instance repGenericDescribeStaleSecurityGroupsRequest :: Generic DescribeStaleSecurityGroupsRequest _
instance showDescribeStaleSecurityGroupsRequest :: Show DescribeStaleSecurityGroupsRequest where
  show = genericShow
instance decodeDescribeStaleSecurityGroupsRequest :: Decode DescribeStaleSecurityGroupsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeStaleSecurityGroupsRequest :: Encode DescribeStaleSecurityGroupsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeStaleSecurityGroupsRequest from required parameters
newDescribeStaleSecurityGroupsRequest :: String -> DescribeStaleSecurityGroupsRequest
newDescribeStaleSecurityGroupsRequest _VpcId = DescribeStaleSecurityGroupsRequest { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeStaleSecurityGroupsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeStaleSecurityGroupsRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) , "VpcId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) , "VpcId" :: (String) } ) -> DescribeStaleSecurityGroupsRequest
newDescribeStaleSecurityGroupsRequest' _VpcId customize = (DescribeStaleSecurityGroupsRequest <<< customize) { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeStaleSecurityGroupsResult = DescribeStaleSecurityGroupsResult 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "StaleSecurityGroupSet" :: NullOrUndefined.NullOrUndefined (StaleSecurityGroupSet)
  }
derive instance newtypeDescribeStaleSecurityGroupsResult :: Newtype DescribeStaleSecurityGroupsResult _
derive instance repGenericDescribeStaleSecurityGroupsResult :: Generic DescribeStaleSecurityGroupsResult _
instance showDescribeStaleSecurityGroupsResult :: Show DescribeStaleSecurityGroupsResult where
  show = genericShow
instance decodeDescribeStaleSecurityGroupsResult :: Decode DescribeStaleSecurityGroupsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeStaleSecurityGroupsResult :: Encode DescribeStaleSecurityGroupsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeStaleSecurityGroupsResult from required parameters
newDescribeStaleSecurityGroupsResult :: DescribeStaleSecurityGroupsResult
newDescribeStaleSecurityGroupsResult  = DescribeStaleSecurityGroupsResult { "NextToken": (NullOrUndefined Nothing), "StaleSecurityGroupSet": (NullOrUndefined Nothing) }

-- | Constructs DescribeStaleSecurityGroupsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeStaleSecurityGroupsResult' :: ( { "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "StaleSecurityGroupSet" :: NullOrUndefined.NullOrUndefined (StaleSecurityGroupSet) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (String) , "StaleSecurityGroupSet" :: NullOrUndefined.NullOrUndefined (StaleSecurityGroupSet) } ) -> DescribeStaleSecurityGroupsResult
newDescribeStaleSecurityGroupsResult'  customize = (DescribeStaleSecurityGroupsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "StaleSecurityGroupSet": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeSubnets.</p>
newtype DescribeSubnetsRequest = DescribeSubnetsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "SubnetIds" :: NullOrUndefined.NullOrUndefined (SubnetIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeSubnetsRequest :: Newtype DescribeSubnetsRequest _
derive instance repGenericDescribeSubnetsRequest :: Generic DescribeSubnetsRequest _
instance showDescribeSubnetsRequest :: Show DescribeSubnetsRequest where
  show = genericShow
instance decodeDescribeSubnetsRequest :: Decode DescribeSubnetsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSubnetsRequest :: Encode DescribeSubnetsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSubnetsRequest from required parameters
newDescribeSubnetsRequest :: DescribeSubnetsRequest
newDescribeSubnetsRequest  = DescribeSubnetsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "SubnetIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeSubnetsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSubnetsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "SubnetIds" :: NullOrUndefined.NullOrUndefined (SubnetIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "SubnetIds" :: NullOrUndefined.NullOrUndefined (SubnetIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeSubnetsRequest
newDescribeSubnetsRequest'  customize = (DescribeSubnetsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "SubnetIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeSubnets.</p>
newtype DescribeSubnetsResult = DescribeSubnetsResult 
  { "Subnets" :: NullOrUndefined.NullOrUndefined (SubnetList)
  }
derive instance newtypeDescribeSubnetsResult :: Newtype DescribeSubnetsResult _
derive instance repGenericDescribeSubnetsResult :: Generic DescribeSubnetsResult _
instance showDescribeSubnetsResult :: Show DescribeSubnetsResult where
  show = genericShow
instance decodeDescribeSubnetsResult :: Decode DescribeSubnetsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeSubnetsResult :: Encode DescribeSubnetsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeSubnetsResult from required parameters
newDescribeSubnetsResult :: DescribeSubnetsResult
newDescribeSubnetsResult  = DescribeSubnetsResult { "Subnets": (NullOrUndefined Nothing) }

-- | Constructs DescribeSubnetsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeSubnetsResult' :: ( { "Subnets" :: NullOrUndefined.NullOrUndefined (SubnetList) } -> {"Subnets" :: NullOrUndefined.NullOrUndefined (SubnetList) } ) -> DescribeSubnetsResult
newDescribeSubnetsResult'  customize = (DescribeSubnetsResult <<< customize) { "Subnets": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeTags.</p>
newtype DescribeTagsRequest = DescribeTagsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeTagsRequest :: Newtype DescribeTagsRequest _
derive instance repGenericDescribeTagsRequest :: Generic DescribeTagsRequest _
instance showDescribeTagsRequest :: Show DescribeTagsRequest where
  show = genericShow
instance decodeDescribeTagsRequest :: Decode DescribeTagsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeTagsRequest :: Encode DescribeTagsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeTagsRequest from required parameters
newDescribeTagsRequest :: DescribeTagsRequest
newDescribeTagsRequest  = DescribeTagsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeTagsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeTagsRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeTagsRequest
newDescribeTagsRequest'  customize = (DescribeTagsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeTags.</p>
newtype DescribeTagsResult = DescribeTagsResult 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagDescriptionList)
  }
derive instance newtypeDescribeTagsResult :: Newtype DescribeTagsResult _
derive instance repGenericDescribeTagsResult :: Generic DescribeTagsResult _
instance showDescribeTagsResult :: Show DescribeTagsResult where
  show = genericShow
instance decodeDescribeTagsResult :: Decode DescribeTagsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeTagsResult :: Encode DescribeTagsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeTagsResult from required parameters
newDescribeTagsResult :: DescribeTagsResult
newDescribeTagsResult  = DescribeTagsResult { "NextToken": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs DescribeTagsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeTagsResult' :: ( { "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagDescriptionList) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagDescriptionList) } ) -> DescribeTagsResult
newDescribeTagsResult'  customize = (DescribeTagsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVolumeAttribute.</p>
newtype DescribeVolumeAttributeRequest = DescribeVolumeAttributeRequest 
  { "Attribute" :: NullOrUndefined.NullOrUndefined (VolumeAttributeName)
  , "VolumeId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeVolumeAttributeRequest :: Newtype DescribeVolumeAttributeRequest _
derive instance repGenericDescribeVolumeAttributeRequest :: Generic DescribeVolumeAttributeRequest _
instance showDescribeVolumeAttributeRequest :: Show DescribeVolumeAttributeRequest where
  show = genericShow
instance decodeDescribeVolumeAttributeRequest :: Decode DescribeVolumeAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVolumeAttributeRequest :: Encode DescribeVolumeAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVolumeAttributeRequest from required parameters
newDescribeVolumeAttributeRequest :: String -> DescribeVolumeAttributeRequest
newDescribeVolumeAttributeRequest _VolumeId = DescribeVolumeAttributeRequest { "VolumeId": _VolumeId, "Attribute": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeVolumeAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVolumeAttributeRequest' :: String -> ( { "Attribute" :: NullOrUndefined.NullOrUndefined (VolumeAttributeName) , "VolumeId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Attribute" :: NullOrUndefined.NullOrUndefined (VolumeAttributeName) , "VolumeId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeVolumeAttributeRequest
newDescribeVolumeAttributeRequest' _VolumeId customize = (DescribeVolumeAttributeRequest <<< customize) { "VolumeId": _VolumeId, "Attribute": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVolumeAttribute.</p>
newtype DescribeVolumeAttributeResult = DescribeVolumeAttributeResult 
  { "AutoEnableIO" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList)
  , "VolumeId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVolumeAttributeResult :: Newtype DescribeVolumeAttributeResult _
derive instance repGenericDescribeVolumeAttributeResult :: Generic DescribeVolumeAttributeResult _
instance showDescribeVolumeAttributeResult :: Show DescribeVolumeAttributeResult where
  show = genericShow
instance decodeDescribeVolumeAttributeResult :: Decode DescribeVolumeAttributeResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVolumeAttributeResult :: Encode DescribeVolumeAttributeResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVolumeAttributeResult from required parameters
newDescribeVolumeAttributeResult :: DescribeVolumeAttributeResult
newDescribeVolumeAttributeResult  = DescribeVolumeAttributeResult { "AutoEnableIO": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing) }

-- | Constructs DescribeVolumeAttributeResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVolumeAttributeResult' :: ( { "AutoEnableIO" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AutoEnableIO" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVolumeAttributeResult
newDescribeVolumeAttributeResult'  customize = (DescribeVolumeAttributeResult <<< customize) { "AutoEnableIO": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVolumeStatus.</p>
newtype DescribeVolumeStatusRequest = DescribeVolumeStatusRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeIds" :: NullOrUndefined.NullOrUndefined (VolumeIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeVolumeStatusRequest :: Newtype DescribeVolumeStatusRequest _
derive instance repGenericDescribeVolumeStatusRequest :: Generic DescribeVolumeStatusRequest _
instance showDescribeVolumeStatusRequest :: Show DescribeVolumeStatusRequest where
  show = genericShow
instance decodeDescribeVolumeStatusRequest :: Decode DescribeVolumeStatusRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVolumeStatusRequest :: Encode DescribeVolumeStatusRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVolumeStatusRequest from required parameters
newDescribeVolumeStatusRequest :: DescribeVolumeStatusRequest
newDescribeVolumeStatusRequest  = DescribeVolumeStatusRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "VolumeIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVolumeStatusRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVolumeStatusRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "VolumeIds" :: NullOrUndefined.NullOrUndefined (VolumeIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "VolumeIds" :: NullOrUndefined.NullOrUndefined (VolumeIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeVolumeStatusRequest
newDescribeVolumeStatusRequest'  customize = (DescribeVolumeStatusRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "VolumeIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVolumeStatus.</p>
newtype DescribeVolumeStatusResult = DescribeVolumeStatusResult 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeStatuses" :: NullOrUndefined.NullOrUndefined (VolumeStatusList)
  }
derive instance newtypeDescribeVolumeStatusResult :: Newtype DescribeVolumeStatusResult _
derive instance repGenericDescribeVolumeStatusResult :: Generic DescribeVolumeStatusResult _
instance showDescribeVolumeStatusResult :: Show DescribeVolumeStatusResult where
  show = genericShow
instance decodeDescribeVolumeStatusResult :: Decode DescribeVolumeStatusResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVolumeStatusResult :: Encode DescribeVolumeStatusResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVolumeStatusResult from required parameters
newDescribeVolumeStatusResult :: DescribeVolumeStatusResult
newDescribeVolumeStatusResult  = DescribeVolumeStatusResult { "NextToken": (NullOrUndefined Nothing), "VolumeStatuses": (NullOrUndefined Nothing) }

-- | Constructs DescribeVolumeStatusResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVolumeStatusResult' :: ( { "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "VolumeStatuses" :: NullOrUndefined.NullOrUndefined (VolumeStatusList) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (String) , "VolumeStatuses" :: NullOrUndefined.NullOrUndefined (VolumeStatusList) } ) -> DescribeVolumeStatusResult
newDescribeVolumeStatusResult'  customize = (DescribeVolumeStatusResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "VolumeStatuses": (NullOrUndefined Nothing) }



newtype DescribeVolumesModificationsRequest = DescribeVolumesModificationsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VolumeIds" :: NullOrUndefined.NullOrUndefined (VolumeIdStringList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeDescribeVolumesModificationsRequest :: Newtype DescribeVolumesModificationsRequest _
derive instance repGenericDescribeVolumesModificationsRequest :: Generic DescribeVolumesModificationsRequest _
instance showDescribeVolumesModificationsRequest :: Show DescribeVolumesModificationsRequest where
  show = genericShow
instance decodeDescribeVolumesModificationsRequest :: Decode DescribeVolumesModificationsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVolumesModificationsRequest :: Encode DescribeVolumesModificationsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVolumesModificationsRequest from required parameters
newDescribeVolumesModificationsRequest :: DescribeVolumesModificationsRequest
newDescribeVolumesModificationsRequest  = DescribeVolumesModificationsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "VolumeIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVolumesModificationsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVolumesModificationsRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VolumeIds" :: NullOrUndefined.NullOrUndefined (VolumeIdStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VolumeIds" :: NullOrUndefined.NullOrUndefined (VolumeIdStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) } ) -> DescribeVolumesModificationsRequest
newDescribeVolumesModificationsRequest'  customize = (DescribeVolumesModificationsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "VolumeIds": (NullOrUndefined Nothing) }



newtype DescribeVolumesModificationsResult = DescribeVolumesModificationsResult 
  { "VolumesModifications" :: NullOrUndefined.NullOrUndefined (VolumeModificationList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVolumesModificationsResult :: Newtype DescribeVolumesModificationsResult _
derive instance repGenericDescribeVolumesModificationsResult :: Generic DescribeVolumesModificationsResult _
instance showDescribeVolumesModificationsResult :: Show DescribeVolumesModificationsResult where
  show = genericShow
instance decodeDescribeVolumesModificationsResult :: Decode DescribeVolumesModificationsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVolumesModificationsResult :: Encode DescribeVolumesModificationsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVolumesModificationsResult from required parameters
newDescribeVolumesModificationsResult :: DescribeVolumesModificationsResult
newDescribeVolumesModificationsResult  = DescribeVolumesModificationsResult { "NextToken": (NullOrUndefined Nothing), "VolumesModifications": (NullOrUndefined Nothing) }

-- | Constructs DescribeVolumesModificationsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVolumesModificationsResult' :: ( { "VolumesModifications" :: NullOrUndefined.NullOrUndefined (VolumeModificationList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"VolumesModifications" :: NullOrUndefined.NullOrUndefined (VolumeModificationList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVolumesModificationsResult
newDescribeVolumesModificationsResult'  customize = (DescribeVolumesModificationsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "VolumesModifications": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVolumes.</p>
newtype DescribeVolumesRequest = DescribeVolumesRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "VolumeIds" :: NullOrUndefined.NullOrUndefined (VolumeIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVolumesRequest :: Newtype DescribeVolumesRequest _
derive instance repGenericDescribeVolumesRequest :: Generic DescribeVolumesRequest _
instance showDescribeVolumesRequest :: Show DescribeVolumesRequest where
  show = genericShow
instance decodeDescribeVolumesRequest :: Decode DescribeVolumesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVolumesRequest :: Encode DescribeVolumesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVolumesRequest from required parameters
newDescribeVolumesRequest :: DescribeVolumesRequest
newDescribeVolumesRequest  = DescribeVolumesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "VolumeIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVolumesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVolumesRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "VolumeIds" :: NullOrUndefined.NullOrUndefined (VolumeIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "VolumeIds" :: NullOrUndefined.NullOrUndefined (VolumeIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVolumesRequest
newDescribeVolumesRequest'  customize = (DescribeVolumesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "VolumeIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVolumes.</p>
newtype DescribeVolumesResult = DescribeVolumesResult 
  { "Volumes" :: NullOrUndefined.NullOrUndefined (VolumeList)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVolumesResult :: Newtype DescribeVolumesResult _
derive instance repGenericDescribeVolumesResult :: Generic DescribeVolumesResult _
instance showDescribeVolumesResult :: Show DescribeVolumesResult where
  show = genericShow
instance decodeDescribeVolumesResult :: Decode DescribeVolumesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVolumesResult :: Encode DescribeVolumesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVolumesResult from required parameters
newDescribeVolumesResult :: DescribeVolumesResult
newDescribeVolumesResult  = DescribeVolumesResult { "NextToken": (NullOrUndefined Nothing), "Volumes": (NullOrUndefined Nothing) }

-- | Constructs DescribeVolumesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVolumesResult' :: ( { "Volumes" :: NullOrUndefined.NullOrUndefined (VolumeList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"Volumes" :: NullOrUndefined.NullOrUndefined (VolumeList) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVolumesResult
newDescribeVolumesResult'  customize = (DescribeVolumesResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "Volumes": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVpcAttribute.</p>
newtype DescribeVpcAttributeRequest = DescribeVpcAttributeRequest 
  { "Attribute" :: (VpcAttributeName)
  , "VpcId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeVpcAttributeRequest :: Newtype DescribeVpcAttributeRequest _
derive instance repGenericDescribeVpcAttributeRequest :: Generic DescribeVpcAttributeRequest _
instance showDescribeVpcAttributeRequest :: Show DescribeVpcAttributeRequest where
  show = genericShow
instance decodeDescribeVpcAttributeRequest :: Decode DescribeVpcAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcAttributeRequest :: Encode DescribeVpcAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcAttributeRequest from required parameters
newDescribeVpcAttributeRequest :: VpcAttributeName -> String -> DescribeVpcAttributeRequest
newDescribeVpcAttributeRequest _Attribute _VpcId = DescribeVpcAttributeRequest { "Attribute": _Attribute, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcAttributeRequest' :: VpcAttributeName -> String -> ( { "Attribute" :: (VpcAttributeName) , "VpcId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Attribute" :: (VpcAttributeName) , "VpcId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeVpcAttributeRequest
newDescribeVpcAttributeRequest' _Attribute _VpcId customize = (DescribeVpcAttributeRequest <<< customize) { "Attribute": _Attribute, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVpcAttribute.</p>
newtype DescribeVpcAttributeResult = DescribeVpcAttributeResult 
  { "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "EnableDnsHostnames" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "EnableDnsSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  }
derive instance newtypeDescribeVpcAttributeResult :: Newtype DescribeVpcAttributeResult _
derive instance repGenericDescribeVpcAttributeResult :: Generic DescribeVpcAttributeResult _
instance showDescribeVpcAttributeResult :: Show DescribeVpcAttributeResult where
  show = genericShow
instance decodeDescribeVpcAttributeResult :: Decode DescribeVpcAttributeResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcAttributeResult :: Encode DescribeVpcAttributeResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcAttributeResult from required parameters
newDescribeVpcAttributeResult :: DescribeVpcAttributeResult
newDescribeVpcAttributeResult  = DescribeVpcAttributeResult { "EnableDnsHostnames": (NullOrUndefined Nothing), "EnableDnsSupport": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcAttributeResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcAttributeResult' :: ( { "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "EnableDnsHostnames" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "EnableDnsSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) } -> {"VpcId" :: NullOrUndefined.NullOrUndefined (String) , "EnableDnsHostnames" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "EnableDnsSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) } ) -> DescribeVpcAttributeResult
newDescribeVpcAttributeResult'  customize = (DescribeVpcAttributeResult <<< customize) { "EnableDnsHostnames": (NullOrUndefined Nothing), "EnableDnsSupport": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVpcClassicLinkDnsSupport.</p>
newtype DescribeVpcClassicLinkDnsSupportRequest = DescribeVpcClassicLinkDnsSupportRequest 
  { "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken)
  , "VpcIds" :: NullOrUndefined.NullOrUndefined (VpcClassicLinkIdList)
  }
derive instance newtypeDescribeVpcClassicLinkDnsSupportRequest :: Newtype DescribeVpcClassicLinkDnsSupportRequest _
derive instance repGenericDescribeVpcClassicLinkDnsSupportRequest :: Generic DescribeVpcClassicLinkDnsSupportRequest _
instance showDescribeVpcClassicLinkDnsSupportRequest :: Show DescribeVpcClassicLinkDnsSupportRequest where
  show = genericShow
instance decodeDescribeVpcClassicLinkDnsSupportRequest :: Decode DescribeVpcClassicLinkDnsSupportRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcClassicLinkDnsSupportRequest :: Encode DescribeVpcClassicLinkDnsSupportRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcClassicLinkDnsSupportRequest from required parameters
newDescribeVpcClassicLinkDnsSupportRequest :: DescribeVpcClassicLinkDnsSupportRequest
newDescribeVpcClassicLinkDnsSupportRequest  = DescribeVpcClassicLinkDnsSupportRequest { "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "VpcIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcClassicLinkDnsSupportRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcClassicLinkDnsSupportRequest' :: ( { "MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) , "VpcIds" :: NullOrUndefined.NullOrUndefined (VpcClassicLinkIdList) } -> {"MaxResults" :: NullOrUndefined.NullOrUndefined (MaxResults) , "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) , "VpcIds" :: NullOrUndefined.NullOrUndefined (VpcClassicLinkIdList) } ) -> DescribeVpcClassicLinkDnsSupportRequest
newDescribeVpcClassicLinkDnsSupportRequest'  customize = (DescribeVpcClassicLinkDnsSupportRequest <<< customize) { "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "VpcIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVpcClassicLinkDnsSupport.</p>
newtype DescribeVpcClassicLinkDnsSupportResult = DescribeVpcClassicLinkDnsSupportResult 
  { "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken)
  , "Vpcs" :: NullOrUndefined.NullOrUndefined (ClassicLinkDnsSupportList)
  }
derive instance newtypeDescribeVpcClassicLinkDnsSupportResult :: Newtype DescribeVpcClassicLinkDnsSupportResult _
derive instance repGenericDescribeVpcClassicLinkDnsSupportResult :: Generic DescribeVpcClassicLinkDnsSupportResult _
instance showDescribeVpcClassicLinkDnsSupportResult :: Show DescribeVpcClassicLinkDnsSupportResult where
  show = genericShow
instance decodeDescribeVpcClassicLinkDnsSupportResult :: Decode DescribeVpcClassicLinkDnsSupportResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcClassicLinkDnsSupportResult :: Encode DescribeVpcClassicLinkDnsSupportResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcClassicLinkDnsSupportResult from required parameters
newDescribeVpcClassicLinkDnsSupportResult :: DescribeVpcClassicLinkDnsSupportResult
newDescribeVpcClassicLinkDnsSupportResult  = DescribeVpcClassicLinkDnsSupportResult { "NextToken": (NullOrUndefined Nothing), "Vpcs": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcClassicLinkDnsSupportResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcClassicLinkDnsSupportResult' :: ( { "NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) , "Vpcs" :: NullOrUndefined.NullOrUndefined (ClassicLinkDnsSupportList) } -> {"NextToken" :: NullOrUndefined.NullOrUndefined (NextToken) , "Vpcs" :: NullOrUndefined.NullOrUndefined (ClassicLinkDnsSupportList) } ) -> DescribeVpcClassicLinkDnsSupportResult
newDescribeVpcClassicLinkDnsSupportResult'  customize = (DescribeVpcClassicLinkDnsSupportResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "Vpcs": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVpcClassicLink.</p>
newtype DescribeVpcClassicLinkRequest = DescribeVpcClassicLinkRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcIds" :: NullOrUndefined.NullOrUndefined (VpcClassicLinkIdList)
  }
derive instance newtypeDescribeVpcClassicLinkRequest :: Newtype DescribeVpcClassicLinkRequest _
derive instance repGenericDescribeVpcClassicLinkRequest :: Generic DescribeVpcClassicLinkRequest _
instance showDescribeVpcClassicLinkRequest :: Show DescribeVpcClassicLinkRequest where
  show = genericShow
instance decodeDescribeVpcClassicLinkRequest :: Decode DescribeVpcClassicLinkRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcClassicLinkRequest :: Encode DescribeVpcClassicLinkRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcClassicLinkRequest from required parameters
newDescribeVpcClassicLinkRequest :: DescribeVpcClassicLinkRequest
newDescribeVpcClassicLinkRequest  = DescribeVpcClassicLinkRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "VpcIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcClassicLinkRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcClassicLinkRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcIds" :: NullOrUndefined.NullOrUndefined (VpcClassicLinkIdList) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcIds" :: NullOrUndefined.NullOrUndefined (VpcClassicLinkIdList) } ) -> DescribeVpcClassicLinkRequest
newDescribeVpcClassicLinkRequest'  customize = (DescribeVpcClassicLinkRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "VpcIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVpcClassicLink.</p>
newtype DescribeVpcClassicLinkResult = DescribeVpcClassicLinkResult 
  { "Vpcs" :: NullOrUndefined.NullOrUndefined (VpcClassicLinkList)
  }
derive instance newtypeDescribeVpcClassicLinkResult :: Newtype DescribeVpcClassicLinkResult _
derive instance repGenericDescribeVpcClassicLinkResult :: Generic DescribeVpcClassicLinkResult _
instance showDescribeVpcClassicLinkResult :: Show DescribeVpcClassicLinkResult where
  show = genericShow
instance decodeDescribeVpcClassicLinkResult :: Decode DescribeVpcClassicLinkResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcClassicLinkResult :: Encode DescribeVpcClassicLinkResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcClassicLinkResult from required parameters
newDescribeVpcClassicLinkResult :: DescribeVpcClassicLinkResult
newDescribeVpcClassicLinkResult  = DescribeVpcClassicLinkResult { "Vpcs": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcClassicLinkResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcClassicLinkResult' :: ( { "Vpcs" :: NullOrUndefined.NullOrUndefined (VpcClassicLinkList) } -> {"Vpcs" :: NullOrUndefined.NullOrUndefined (VpcClassicLinkList) } ) -> DescribeVpcClassicLinkResult
newDescribeVpcClassicLinkResult'  customize = (DescribeVpcClassicLinkResult <<< customize) { "Vpcs": (NullOrUndefined Nothing) }



newtype DescribeVpcEndpointConnectionNotificationsRequest = DescribeVpcEndpointConnectionNotificationsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ConnectionNotificationId" :: NullOrUndefined.NullOrUndefined (String)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointConnectionNotificationsRequest :: Newtype DescribeVpcEndpointConnectionNotificationsRequest _
derive instance repGenericDescribeVpcEndpointConnectionNotificationsRequest :: Generic DescribeVpcEndpointConnectionNotificationsRequest _
instance showDescribeVpcEndpointConnectionNotificationsRequest :: Show DescribeVpcEndpointConnectionNotificationsRequest where
  show = genericShow
instance decodeDescribeVpcEndpointConnectionNotificationsRequest :: Decode DescribeVpcEndpointConnectionNotificationsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointConnectionNotificationsRequest :: Encode DescribeVpcEndpointConnectionNotificationsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointConnectionNotificationsRequest from required parameters
newDescribeVpcEndpointConnectionNotificationsRequest :: DescribeVpcEndpointConnectionNotificationsRequest
newDescribeVpcEndpointConnectionNotificationsRequest  = DescribeVpcEndpointConnectionNotificationsRequest { "ConnectionNotificationId": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointConnectionNotificationsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointConnectionNotificationsRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ConnectionNotificationId" :: NullOrUndefined.NullOrUndefined (String) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ConnectionNotificationId" :: NullOrUndefined.NullOrUndefined (String) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointConnectionNotificationsRequest
newDescribeVpcEndpointConnectionNotificationsRequest'  customize = (DescribeVpcEndpointConnectionNotificationsRequest <<< customize) { "ConnectionNotificationId": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeVpcEndpointConnectionNotificationsResult = DescribeVpcEndpointConnectionNotificationsResult 
  { "ConnectionNotificationSet" :: NullOrUndefined.NullOrUndefined (ConnectionNotificationSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointConnectionNotificationsResult :: Newtype DescribeVpcEndpointConnectionNotificationsResult _
derive instance repGenericDescribeVpcEndpointConnectionNotificationsResult :: Generic DescribeVpcEndpointConnectionNotificationsResult _
instance showDescribeVpcEndpointConnectionNotificationsResult :: Show DescribeVpcEndpointConnectionNotificationsResult where
  show = genericShow
instance decodeDescribeVpcEndpointConnectionNotificationsResult :: Decode DescribeVpcEndpointConnectionNotificationsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointConnectionNotificationsResult :: Encode DescribeVpcEndpointConnectionNotificationsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointConnectionNotificationsResult from required parameters
newDescribeVpcEndpointConnectionNotificationsResult :: DescribeVpcEndpointConnectionNotificationsResult
newDescribeVpcEndpointConnectionNotificationsResult  = DescribeVpcEndpointConnectionNotificationsResult { "ConnectionNotificationSet": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointConnectionNotificationsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointConnectionNotificationsResult' :: ( { "ConnectionNotificationSet" :: NullOrUndefined.NullOrUndefined (ConnectionNotificationSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"ConnectionNotificationSet" :: NullOrUndefined.NullOrUndefined (ConnectionNotificationSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointConnectionNotificationsResult
newDescribeVpcEndpointConnectionNotificationsResult'  customize = (DescribeVpcEndpointConnectionNotificationsResult <<< customize) { "ConnectionNotificationSet": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeVpcEndpointConnectionsRequest = DescribeVpcEndpointConnectionsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointConnectionsRequest :: Newtype DescribeVpcEndpointConnectionsRequest _
derive instance repGenericDescribeVpcEndpointConnectionsRequest :: Generic DescribeVpcEndpointConnectionsRequest _
instance showDescribeVpcEndpointConnectionsRequest :: Show DescribeVpcEndpointConnectionsRequest where
  show = genericShow
instance decodeDescribeVpcEndpointConnectionsRequest :: Decode DescribeVpcEndpointConnectionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointConnectionsRequest :: Encode DescribeVpcEndpointConnectionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointConnectionsRequest from required parameters
newDescribeVpcEndpointConnectionsRequest :: DescribeVpcEndpointConnectionsRequest
newDescribeVpcEndpointConnectionsRequest  = DescribeVpcEndpointConnectionsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointConnectionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointConnectionsRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointConnectionsRequest
newDescribeVpcEndpointConnectionsRequest'  customize = (DescribeVpcEndpointConnectionsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeVpcEndpointConnectionsResult = DescribeVpcEndpointConnectionsResult 
  { "VpcEndpointConnections" :: NullOrUndefined.NullOrUndefined (VpcEndpointConnectionSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointConnectionsResult :: Newtype DescribeVpcEndpointConnectionsResult _
derive instance repGenericDescribeVpcEndpointConnectionsResult :: Generic DescribeVpcEndpointConnectionsResult _
instance showDescribeVpcEndpointConnectionsResult :: Show DescribeVpcEndpointConnectionsResult where
  show = genericShow
instance decodeDescribeVpcEndpointConnectionsResult :: Decode DescribeVpcEndpointConnectionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointConnectionsResult :: Encode DescribeVpcEndpointConnectionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointConnectionsResult from required parameters
newDescribeVpcEndpointConnectionsResult :: DescribeVpcEndpointConnectionsResult
newDescribeVpcEndpointConnectionsResult  = DescribeVpcEndpointConnectionsResult { "NextToken": (NullOrUndefined Nothing), "VpcEndpointConnections": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointConnectionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointConnectionsResult' :: ( { "VpcEndpointConnections" :: NullOrUndefined.NullOrUndefined (VpcEndpointConnectionSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"VpcEndpointConnections" :: NullOrUndefined.NullOrUndefined (VpcEndpointConnectionSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointConnectionsResult
newDescribeVpcEndpointConnectionsResult'  customize = (DescribeVpcEndpointConnectionsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "VpcEndpointConnections": (NullOrUndefined Nothing) }



newtype DescribeVpcEndpointServiceConfigurationsRequest = DescribeVpcEndpointServiceConfigurationsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ServiceIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointServiceConfigurationsRequest :: Newtype DescribeVpcEndpointServiceConfigurationsRequest _
derive instance repGenericDescribeVpcEndpointServiceConfigurationsRequest :: Generic DescribeVpcEndpointServiceConfigurationsRequest _
instance showDescribeVpcEndpointServiceConfigurationsRequest :: Show DescribeVpcEndpointServiceConfigurationsRequest where
  show = genericShow
instance decodeDescribeVpcEndpointServiceConfigurationsRequest :: Decode DescribeVpcEndpointServiceConfigurationsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointServiceConfigurationsRequest :: Encode DescribeVpcEndpointServiceConfigurationsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointServiceConfigurationsRequest from required parameters
newDescribeVpcEndpointServiceConfigurationsRequest :: DescribeVpcEndpointServiceConfigurationsRequest
newDescribeVpcEndpointServiceConfigurationsRequest  = DescribeVpcEndpointServiceConfigurationsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "ServiceIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointServiceConfigurationsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointServiceConfigurationsRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointServiceConfigurationsRequest
newDescribeVpcEndpointServiceConfigurationsRequest'  customize = (DescribeVpcEndpointServiceConfigurationsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "ServiceIds": (NullOrUndefined Nothing) }



newtype DescribeVpcEndpointServiceConfigurationsResult = DescribeVpcEndpointServiceConfigurationsResult 
  { "ServiceConfigurations" :: NullOrUndefined.NullOrUndefined (ServiceConfigurationSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointServiceConfigurationsResult :: Newtype DescribeVpcEndpointServiceConfigurationsResult _
derive instance repGenericDescribeVpcEndpointServiceConfigurationsResult :: Generic DescribeVpcEndpointServiceConfigurationsResult _
instance showDescribeVpcEndpointServiceConfigurationsResult :: Show DescribeVpcEndpointServiceConfigurationsResult where
  show = genericShow
instance decodeDescribeVpcEndpointServiceConfigurationsResult :: Decode DescribeVpcEndpointServiceConfigurationsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointServiceConfigurationsResult :: Encode DescribeVpcEndpointServiceConfigurationsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointServiceConfigurationsResult from required parameters
newDescribeVpcEndpointServiceConfigurationsResult :: DescribeVpcEndpointServiceConfigurationsResult
newDescribeVpcEndpointServiceConfigurationsResult  = DescribeVpcEndpointServiceConfigurationsResult { "NextToken": (NullOrUndefined Nothing), "ServiceConfigurations": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointServiceConfigurationsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointServiceConfigurationsResult' :: ( { "ServiceConfigurations" :: NullOrUndefined.NullOrUndefined (ServiceConfigurationSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"ServiceConfigurations" :: NullOrUndefined.NullOrUndefined (ServiceConfigurationSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointServiceConfigurationsResult
newDescribeVpcEndpointServiceConfigurationsResult'  customize = (DescribeVpcEndpointServiceConfigurationsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "ServiceConfigurations": (NullOrUndefined Nothing) }



newtype DescribeVpcEndpointServicePermissionsRequest = DescribeVpcEndpointServicePermissionsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ServiceId" :: (String)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointServicePermissionsRequest :: Newtype DescribeVpcEndpointServicePermissionsRequest _
derive instance repGenericDescribeVpcEndpointServicePermissionsRequest :: Generic DescribeVpcEndpointServicePermissionsRequest _
instance showDescribeVpcEndpointServicePermissionsRequest :: Show DescribeVpcEndpointServicePermissionsRequest where
  show = genericShow
instance decodeDescribeVpcEndpointServicePermissionsRequest :: Decode DescribeVpcEndpointServicePermissionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointServicePermissionsRequest :: Encode DescribeVpcEndpointServicePermissionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointServicePermissionsRequest from required parameters
newDescribeVpcEndpointServicePermissionsRequest :: String -> DescribeVpcEndpointServicePermissionsRequest
newDescribeVpcEndpointServicePermissionsRequest _ServiceId = DescribeVpcEndpointServicePermissionsRequest { "ServiceId": _ServiceId, "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointServicePermissionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointServicePermissionsRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: (String) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: (String) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointServicePermissionsRequest
newDescribeVpcEndpointServicePermissionsRequest' _ServiceId customize = (DescribeVpcEndpointServicePermissionsRequest <<< customize) { "ServiceId": _ServiceId, "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



newtype DescribeVpcEndpointServicePermissionsResult = DescribeVpcEndpointServicePermissionsResult 
  { "AllowedPrincipals" :: NullOrUndefined.NullOrUndefined (AllowedPrincipalSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointServicePermissionsResult :: Newtype DescribeVpcEndpointServicePermissionsResult _
derive instance repGenericDescribeVpcEndpointServicePermissionsResult :: Generic DescribeVpcEndpointServicePermissionsResult _
instance showDescribeVpcEndpointServicePermissionsResult :: Show DescribeVpcEndpointServicePermissionsResult where
  show = genericShow
instance decodeDescribeVpcEndpointServicePermissionsResult :: Decode DescribeVpcEndpointServicePermissionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointServicePermissionsResult :: Encode DescribeVpcEndpointServicePermissionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointServicePermissionsResult from required parameters
newDescribeVpcEndpointServicePermissionsResult :: DescribeVpcEndpointServicePermissionsResult
newDescribeVpcEndpointServicePermissionsResult  = DescribeVpcEndpointServicePermissionsResult { "AllowedPrincipals": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointServicePermissionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointServicePermissionsResult' :: ( { "AllowedPrincipals" :: NullOrUndefined.NullOrUndefined (AllowedPrincipalSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"AllowedPrincipals" :: NullOrUndefined.NullOrUndefined (AllowedPrincipalSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointServicePermissionsResult
newDescribeVpcEndpointServicePermissionsResult'  customize = (DescribeVpcEndpointServicePermissionsResult <<< customize) { "AllowedPrincipals": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVpcEndpointServices.</p>
newtype DescribeVpcEndpointServicesRequest = DescribeVpcEndpointServicesRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ServiceNames" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointServicesRequest :: Newtype DescribeVpcEndpointServicesRequest _
derive instance repGenericDescribeVpcEndpointServicesRequest :: Generic DescribeVpcEndpointServicesRequest _
instance showDescribeVpcEndpointServicesRequest :: Show DescribeVpcEndpointServicesRequest where
  show = genericShow
instance decodeDescribeVpcEndpointServicesRequest :: Decode DescribeVpcEndpointServicesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointServicesRequest :: Encode DescribeVpcEndpointServicesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointServicesRequest from required parameters
newDescribeVpcEndpointServicesRequest :: DescribeVpcEndpointServicesRequest
newDescribeVpcEndpointServicesRequest  = DescribeVpcEndpointServicesRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "ServiceNames": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointServicesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointServicesRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceNames" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceNames" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointServicesRequest
newDescribeVpcEndpointServicesRequest'  customize = (DescribeVpcEndpointServicesRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "ServiceNames": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVpcEndpointServices.</p>
newtype DescribeVpcEndpointServicesResult = DescribeVpcEndpointServicesResult 
  { "ServiceNames" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "ServiceDetails" :: NullOrUndefined.NullOrUndefined (ServiceDetailSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointServicesResult :: Newtype DescribeVpcEndpointServicesResult _
derive instance repGenericDescribeVpcEndpointServicesResult :: Generic DescribeVpcEndpointServicesResult _
instance showDescribeVpcEndpointServicesResult :: Show DescribeVpcEndpointServicesResult where
  show = genericShow
instance decodeDescribeVpcEndpointServicesResult :: Decode DescribeVpcEndpointServicesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointServicesResult :: Encode DescribeVpcEndpointServicesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointServicesResult from required parameters
newDescribeVpcEndpointServicesResult :: DescribeVpcEndpointServicesResult
newDescribeVpcEndpointServicesResult  = DescribeVpcEndpointServicesResult { "NextToken": (NullOrUndefined Nothing), "ServiceDetails": (NullOrUndefined Nothing), "ServiceNames": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointServicesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointServicesResult' :: ( { "ServiceNames" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "ServiceDetails" :: NullOrUndefined.NullOrUndefined (ServiceDetailSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"ServiceNames" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "ServiceDetails" :: NullOrUndefined.NullOrUndefined (ServiceDetailSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointServicesResult
newDescribeVpcEndpointServicesResult'  customize = (DescribeVpcEndpointServicesResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "ServiceDetails": (NullOrUndefined Nothing), "ServiceNames": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVpcEndpoints.</p>
newtype DescribeVpcEndpointsRequest = DescribeVpcEndpointsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcEndpointIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointsRequest :: Newtype DescribeVpcEndpointsRequest _
derive instance repGenericDescribeVpcEndpointsRequest :: Generic DescribeVpcEndpointsRequest _
instance showDescribeVpcEndpointsRequest :: Show DescribeVpcEndpointsRequest where
  show = genericShow
instance decodeDescribeVpcEndpointsRequest :: Decode DescribeVpcEndpointsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointsRequest :: Encode DescribeVpcEndpointsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointsRequest from required parameters
newDescribeVpcEndpointsRequest :: DescribeVpcEndpointsRequest
newDescribeVpcEndpointsRequest  = DescribeVpcEndpointsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "VpcEndpointIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointsRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcEndpointIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcEndpointIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "MaxResults" :: NullOrUndefined.NullOrUndefined (Int) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointsRequest
newDescribeVpcEndpointsRequest'  customize = (DescribeVpcEndpointsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "MaxResults": (NullOrUndefined Nothing), "NextToken": (NullOrUndefined Nothing), "VpcEndpointIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVpcEndpoints.</p>
newtype DescribeVpcEndpointsResult = DescribeVpcEndpointsResult 
  { "VpcEndpoints" :: NullOrUndefined.NullOrUndefined (VpcEndpointSet)
  , "NextToken" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDescribeVpcEndpointsResult :: Newtype DescribeVpcEndpointsResult _
derive instance repGenericDescribeVpcEndpointsResult :: Generic DescribeVpcEndpointsResult _
instance showDescribeVpcEndpointsResult :: Show DescribeVpcEndpointsResult where
  show = genericShow
instance decodeDescribeVpcEndpointsResult :: Decode DescribeVpcEndpointsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcEndpointsResult :: Encode DescribeVpcEndpointsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcEndpointsResult from required parameters
newDescribeVpcEndpointsResult :: DescribeVpcEndpointsResult
newDescribeVpcEndpointsResult  = DescribeVpcEndpointsResult { "NextToken": (NullOrUndefined Nothing), "VpcEndpoints": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcEndpointsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcEndpointsResult' :: ( { "VpcEndpoints" :: NullOrUndefined.NullOrUndefined (VpcEndpointSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } -> {"VpcEndpoints" :: NullOrUndefined.NullOrUndefined (VpcEndpointSet) , "NextToken" :: NullOrUndefined.NullOrUndefined (String) } ) -> DescribeVpcEndpointsResult
newDescribeVpcEndpointsResult'  customize = (DescribeVpcEndpointsResult <<< customize) { "NextToken": (NullOrUndefined Nothing), "VpcEndpoints": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVpcPeeringConnections.</p>
newtype DescribeVpcPeeringConnectionsRequest = DescribeVpcPeeringConnectionsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcPeeringConnectionIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeDescribeVpcPeeringConnectionsRequest :: Newtype DescribeVpcPeeringConnectionsRequest _
derive instance repGenericDescribeVpcPeeringConnectionsRequest :: Generic DescribeVpcPeeringConnectionsRequest _
instance showDescribeVpcPeeringConnectionsRequest :: Show DescribeVpcPeeringConnectionsRequest where
  show = genericShow
instance decodeDescribeVpcPeeringConnectionsRequest :: Decode DescribeVpcPeeringConnectionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcPeeringConnectionsRequest :: Encode DescribeVpcPeeringConnectionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcPeeringConnectionsRequest from required parameters
newDescribeVpcPeeringConnectionsRequest :: DescribeVpcPeeringConnectionsRequest
newDescribeVpcPeeringConnectionsRequest  = DescribeVpcPeeringConnectionsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "VpcPeeringConnectionIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcPeeringConnectionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcPeeringConnectionsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcPeeringConnectionIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcPeeringConnectionIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> DescribeVpcPeeringConnectionsRequest
newDescribeVpcPeeringConnectionsRequest'  customize = (DescribeVpcPeeringConnectionsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "VpcPeeringConnectionIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVpcPeeringConnections.</p>
newtype DescribeVpcPeeringConnectionsResult = DescribeVpcPeeringConnectionsResult 
  { "VpcPeeringConnections" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionList)
  }
derive instance newtypeDescribeVpcPeeringConnectionsResult :: Newtype DescribeVpcPeeringConnectionsResult _
derive instance repGenericDescribeVpcPeeringConnectionsResult :: Generic DescribeVpcPeeringConnectionsResult _
instance showDescribeVpcPeeringConnectionsResult :: Show DescribeVpcPeeringConnectionsResult where
  show = genericShow
instance decodeDescribeVpcPeeringConnectionsResult :: Decode DescribeVpcPeeringConnectionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcPeeringConnectionsResult :: Encode DescribeVpcPeeringConnectionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcPeeringConnectionsResult from required parameters
newDescribeVpcPeeringConnectionsResult :: DescribeVpcPeeringConnectionsResult
newDescribeVpcPeeringConnectionsResult  = DescribeVpcPeeringConnectionsResult { "VpcPeeringConnections": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcPeeringConnectionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcPeeringConnectionsResult' :: ( { "VpcPeeringConnections" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionList) } -> {"VpcPeeringConnections" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionList) } ) -> DescribeVpcPeeringConnectionsResult
newDescribeVpcPeeringConnectionsResult'  customize = (DescribeVpcPeeringConnectionsResult <<< customize) { "VpcPeeringConnections": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVpcs.</p>
newtype DescribeVpcsRequest = DescribeVpcsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "VpcIds" :: NullOrUndefined.NullOrUndefined (VpcIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeVpcsRequest :: Newtype DescribeVpcsRequest _
derive instance repGenericDescribeVpcsRequest :: Generic DescribeVpcsRequest _
instance showDescribeVpcsRequest :: Show DescribeVpcsRequest where
  show = genericShow
instance decodeDescribeVpcsRequest :: Decode DescribeVpcsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcsRequest :: Encode DescribeVpcsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcsRequest from required parameters
newDescribeVpcsRequest :: DescribeVpcsRequest
newDescribeVpcsRequest  = DescribeVpcsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "VpcIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "VpcIds" :: NullOrUndefined.NullOrUndefined (VpcIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "VpcIds" :: NullOrUndefined.NullOrUndefined (VpcIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeVpcsRequest
newDescribeVpcsRequest'  customize = (DescribeVpcsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "VpcIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVpcs.</p>
newtype DescribeVpcsResult = DescribeVpcsResult 
  { "Vpcs" :: NullOrUndefined.NullOrUndefined (VpcList)
  }
derive instance newtypeDescribeVpcsResult :: Newtype DescribeVpcsResult _
derive instance repGenericDescribeVpcsResult :: Generic DescribeVpcsResult _
instance showDescribeVpcsResult :: Show DescribeVpcsResult where
  show = genericShow
instance decodeDescribeVpcsResult :: Decode DescribeVpcsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpcsResult :: Encode DescribeVpcsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpcsResult from required parameters
newDescribeVpcsResult :: DescribeVpcsResult
newDescribeVpcsResult  = DescribeVpcsResult { "Vpcs": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpcsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpcsResult' :: ( { "Vpcs" :: NullOrUndefined.NullOrUndefined (VpcList) } -> {"Vpcs" :: NullOrUndefined.NullOrUndefined (VpcList) } ) -> DescribeVpcsResult
newDescribeVpcsResult'  customize = (DescribeVpcsResult <<< customize) { "Vpcs": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVpnConnections.</p>
newtype DescribeVpnConnectionsRequest = DescribeVpnConnectionsRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "VpnConnectionIds" :: NullOrUndefined.NullOrUndefined (VpnConnectionIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeVpnConnectionsRequest :: Newtype DescribeVpnConnectionsRequest _
derive instance repGenericDescribeVpnConnectionsRequest :: Generic DescribeVpnConnectionsRequest _
instance showDescribeVpnConnectionsRequest :: Show DescribeVpnConnectionsRequest where
  show = genericShow
instance decodeDescribeVpnConnectionsRequest :: Decode DescribeVpnConnectionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpnConnectionsRequest :: Encode DescribeVpnConnectionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpnConnectionsRequest from required parameters
newDescribeVpnConnectionsRequest :: DescribeVpnConnectionsRequest
newDescribeVpnConnectionsRequest  = DescribeVpnConnectionsRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "VpnConnectionIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpnConnectionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpnConnectionsRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "VpnConnectionIds" :: NullOrUndefined.NullOrUndefined (VpnConnectionIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "VpnConnectionIds" :: NullOrUndefined.NullOrUndefined (VpnConnectionIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeVpnConnectionsRequest
newDescribeVpnConnectionsRequest'  customize = (DescribeVpnConnectionsRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "VpnConnectionIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVpnConnections.</p>
newtype DescribeVpnConnectionsResult = DescribeVpnConnectionsResult 
  { "VpnConnections" :: NullOrUndefined.NullOrUndefined (VpnConnectionList)
  }
derive instance newtypeDescribeVpnConnectionsResult :: Newtype DescribeVpnConnectionsResult _
derive instance repGenericDescribeVpnConnectionsResult :: Generic DescribeVpnConnectionsResult _
instance showDescribeVpnConnectionsResult :: Show DescribeVpnConnectionsResult where
  show = genericShow
instance decodeDescribeVpnConnectionsResult :: Decode DescribeVpnConnectionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpnConnectionsResult :: Encode DescribeVpnConnectionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpnConnectionsResult from required parameters
newDescribeVpnConnectionsResult :: DescribeVpnConnectionsResult
newDescribeVpnConnectionsResult  = DescribeVpnConnectionsResult { "VpnConnections": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpnConnectionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpnConnectionsResult' :: ( { "VpnConnections" :: NullOrUndefined.NullOrUndefined (VpnConnectionList) } -> {"VpnConnections" :: NullOrUndefined.NullOrUndefined (VpnConnectionList) } ) -> DescribeVpnConnectionsResult
newDescribeVpnConnectionsResult'  customize = (DescribeVpnConnectionsResult <<< customize) { "VpnConnections": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DescribeVpnGateways.</p>
newtype DescribeVpnGatewaysRequest = DescribeVpnGatewaysRequest 
  { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList)
  , "VpnGatewayIds" :: NullOrUndefined.NullOrUndefined (VpnGatewayIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDescribeVpnGatewaysRequest :: Newtype DescribeVpnGatewaysRequest _
derive instance repGenericDescribeVpnGatewaysRequest :: Generic DescribeVpnGatewaysRequest _
instance showDescribeVpnGatewaysRequest :: Show DescribeVpnGatewaysRequest where
  show = genericShow
instance decodeDescribeVpnGatewaysRequest :: Decode DescribeVpnGatewaysRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpnGatewaysRequest :: Encode DescribeVpnGatewaysRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpnGatewaysRequest from required parameters
newDescribeVpnGatewaysRequest :: DescribeVpnGatewaysRequest
newDescribeVpnGatewaysRequest  = DescribeVpnGatewaysRequest { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "VpnGatewayIds": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpnGatewaysRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpnGatewaysRequest' :: ( { "Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "VpnGatewayIds" :: NullOrUndefined.NullOrUndefined (VpnGatewayIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Filters" :: NullOrUndefined.NullOrUndefined (FilterList) , "VpnGatewayIds" :: NullOrUndefined.NullOrUndefined (VpnGatewayIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DescribeVpnGatewaysRequest
newDescribeVpnGatewaysRequest'  customize = (DescribeVpnGatewaysRequest <<< customize) { "DryRun": (NullOrUndefined Nothing), "Filters": (NullOrUndefined Nothing), "VpnGatewayIds": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DescribeVpnGateways.</p>
newtype DescribeVpnGatewaysResult = DescribeVpnGatewaysResult 
  { "VpnGateways" :: NullOrUndefined.NullOrUndefined (VpnGatewayList)
  }
derive instance newtypeDescribeVpnGatewaysResult :: Newtype DescribeVpnGatewaysResult _
derive instance repGenericDescribeVpnGatewaysResult :: Generic DescribeVpnGatewaysResult _
instance showDescribeVpnGatewaysResult :: Show DescribeVpnGatewaysResult where
  show = genericShow
instance decodeDescribeVpnGatewaysResult :: Decode DescribeVpnGatewaysResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDescribeVpnGatewaysResult :: Encode DescribeVpnGatewaysResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DescribeVpnGatewaysResult from required parameters
newDescribeVpnGatewaysResult :: DescribeVpnGatewaysResult
newDescribeVpnGatewaysResult  = DescribeVpnGatewaysResult { "VpnGateways": (NullOrUndefined Nothing) }

-- | Constructs DescribeVpnGatewaysResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDescribeVpnGatewaysResult' :: ( { "VpnGateways" :: NullOrUndefined.NullOrUndefined (VpnGatewayList) } -> {"VpnGateways" :: NullOrUndefined.NullOrUndefined (VpnGatewayList) } ) -> DescribeVpnGatewaysResult
newDescribeVpnGatewaysResult'  customize = (DescribeVpnGatewaysResult <<< customize) { "VpnGateways": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DetachClassicLinkVpc.</p>
newtype DetachClassicLinkVpcRequest = DetachClassicLinkVpcRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceId" :: (String)
  , "VpcId" :: (String)
  }
derive instance newtypeDetachClassicLinkVpcRequest :: Newtype DetachClassicLinkVpcRequest _
derive instance repGenericDetachClassicLinkVpcRequest :: Generic DetachClassicLinkVpcRequest _
instance showDetachClassicLinkVpcRequest :: Show DetachClassicLinkVpcRequest where
  show = genericShow
instance decodeDetachClassicLinkVpcRequest :: Decode DetachClassicLinkVpcRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDetachClassicLinkVpcRequest :: Encode DetachClassicLinkVpcRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DetachClassicLinkVpcRequest from required parameters
newDetachClassicLinkVpcRequest :: String -> String -> DetachClassicLinkVpcRequest
newDetachClassicLinkVpcRequest _InstanceId _VpcId = DetachClassicLinkVpcRequest { "InstanceId": _InstanceId, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DetachClassicLinkVpcRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDetachClassicLinkVpcRequest' :: String -> String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) , "VpcId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) , "VpcId" :: (String) } ) -> DetachClassicLinkVpcRequest
newDetachClassicLinkVpcRequest' _InstanceId _VpcId customize = (DetachClassicLinkVpcRequest <<< customize) { "InstanceId": _InstanceId, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DetachClassicLinkVpc.</p>
newtype DetachClassicLinkVpcResult = DetachClassicLinkVpcResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDetachClassicLinkVpcResult :: Newtype DetachClassicLinkVpcResult _
derive instance repGenericDetachClassicLinkVpcResult :: Generic DetachClassicLinkVpcResult _
instance showDetachClassicLinkVpcResult :: Show DetachClassicLinkVpcResult where
  show = genericShow
instance decodeDetachClassicLinkVpcResult :: Decode DetachClassicLinkVpcResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDetachClassicLinkVpcResult :: Encode DetachClassicLinkVpcResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DetachClassicLinkVpcResult from required parameters
newDetachClassicLinkVpcResult :: DetachClassicLinkVpcResult
newDetachClassicLinkVpcResult  = DetachClassicLinkVpcResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs DetachClassicLinkVpcResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDetachClassicLinkVpcResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DetachClassicLinkVpcResult
newDetachClassicLinkVpcResult'  customize = (DetachClassicLinkVpcResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DetachInternetGateway.</p>
newtype DetachInternetGatewayRequest = DetachInternetGatewayRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InternetGatewayId" :: (String)
  , "VpcId" :: (String)
  }
derive instance newtypeDetachInternetGatewayRequest :: Newtype DetachInternetGatewayRequest _
derive instance repGenericDetachInternetGatewayRequest :: Generic DetachInternetGatewayRequest _
instance showDetachInternetGatewayRequest :: Show DetachInternetGatewayRequest where
  show = genericShow
instance decodeDetachInternetGatewayRequest :: Decode DetachInternetGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDetachInternetGatewayRequest :: Encode DetachInternetGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DetachInternetGatewayRequest from required parameters
newDetachInternetGatewayRequest :: String -> String -> DetachInternetGatewayRequest
newDetachInternetGatewayRequest _InternetGatewayId _VpcId = DetachInternetGatewayRequest { "InternetGatewayId": _InternetGatewayId, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DetachInternetGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDetachInternetGatewayRequest' :: String -> String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InternetGatewayId" :: (String) , "VpcId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InternetGatewayId" :: (String) , "VpcId" :: (String) } ) -> DetachInternetGatewayRequest
newDetachInternetGatewayRequest' _InternetGatewayId _VpcId customize = (DetachInternetGatewayRequest <<< customize) { "InternetGatewayId": _InternetGatewayId, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DetachNetworkInterface.</p>
newtype DetachNetworkInterfaceRequest = DetachNetworkInterfaceRequest 
  { "AttachmentId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Force" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDetachNetworkInterfaceRequest :: Newtype DetachNetworkInterfaceRequest _
derive instance repGenericDetachNetworkInterfaceRequest :: Generic DetachNetworkInterfaceRequest _
instance showDetachNetworkInterfaceRequest :: Show DetachNetworkInterfaceRequest where
  show = genericShow
instance decodeDetachNetworkInterfaceRequest :: Decode DetachNetworkInterfaceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDetachNetworkInterfaceRequest :: Encode DetachNetworkInterfaceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DetachNetworkInterfaceRequest from required parameters
newDetachNetworkInterfaceRequest :: String -> DetachNetworkInterfaceRequest
newDetachNetworkInterfaceRequest _AttachmentId = DetachNetworkInterfaceRequest { "AttachmentId": _AttachmentId, "DryRun": (NullOrUndefined Nothing), "Force": (NullOrUndefined Nothing) }

-- | Constructs DetachNetworkInterfaceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDetachNetworkInterfaceRequest' :: String -> ( { "AttachmentId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Force" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AttachmentId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Force" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DetachNetworkInterfaceRequest
newDetachNetworkInterfaceRequest' _AttachmentId customize = (DetachNetworkInterfaceRequest <<< customize) { "AttachmentId": _AttachmentId, "DryRun": (NullOrUndefined Nothing), "Force": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DetachVolume.</p>
newtype DetachVolumeRequest = DetachVolumeRequest 
  { "Device" :: NullOrUndefined.NullOrUndefined (String)
  , "Force" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDetachVolumeRequest :: Newtype DetachVolumeRequest _
derive instance repGenericDetachVolumeRequest :: Generic DetachVolumeRequest _
instance showDetachVolumeRequest :: Show DetachVolumeRequest where
  show = genericShow
instance decodeDetachVolumeRequest :: Decode DetachVolumeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDetachVolumeRequest :: Encode DetachVolumeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DetachVolumeRequest from required parameters
newDetachVolumeRequest :: String -> DetachVolumeRequest
newDetachVolumeRequest _VolumeId = DetachVolumeRequest { "VolumeId": _VolumeId, "Device": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Force": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }

-- | Constructs DetachVolumeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDetachVolumeRequest' :: String -> ( { "Device" :: NullOrUndefined.NullOrUndefined (String) , "Force" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Device" :: NullOrUndefined.NullOrUndefined (String) , "Force" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DetachVolumeRequest
newDetachVolumeRequest' _VolumeId customize = (DetachVolumeRequest <<< customize) { "VolumeId": _VolumeId, "Device": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Force": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DetachVpnGateway.</p>
newtype DetachVpnGatewayRequest = DetachVpnGatewayRequest 
  { "VpcId" :: (String)
  , "VpnGatewayId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDetachVpnGatewayRequest :: Newtype DetachVpnGatewayRequest _
derive instance repGenericDetachVpnGatewayRequest :: Generic DetachVpnGatewayRequest _
instance showDetachVpnGatewayRequest :: Show DetachVpnGatewayRequest where
  show = genericShow
instance decodeDetachVpnGatewayRequest :: Decode DetachVpnGatewayRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDetachVpnGatewayRequest :: Encode DetachVpnGatewayRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DetachVpnGatewayRequest from required parameters
newDetachVpnGatewayRequest :: String -> String -> DetachVpnGatewayRequest
newDetachVpnGatewayRequest _VpcId _VpnGatewayId = DetachVpnGatewayRequest { "VpcId": _VpcId, "VpnGatewayId": _VpnGatewayId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DetachVpnGatewayRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDetachVpnGatewayRequest' :: String -> String -> ( { "VpcId" :: (String) , "VpnGatewayId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"VpcId" :: (String) , "VpnGatewayId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DetachVpnGatewayRequest
newDetachVpnGatewayRequest' _VpcId _VpnGatewayId customize = (DetachVpnGatewayRequest <<< customize) { "VpcId": _VpcId, "VpnGatewayId": _VpnGatewayId, "DryRun": (NullOrUndefined Nothing) }



newtype DeviceType = DeviceType String
derive instance newtypeDeviceType :: Newtype DeviceType _
derive instance repGenericDeviceType :: Generic DeviceType _
instance showDeviceType :: Show DeviceType where
  show = genericShow
instance decodeDeviceType :: Decode DeviceType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDeviceType :: Encode DeviceType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a DHCP configuration option.</p>
newtype DhcpConfiguration = DhcpConfiguration 
  { "Key" :: NullOrUndefined.NullOrUndefined (String)
  , "Values" :: NullOrUndefined.NullOrUndefined (DhcpConfigurationValueList)
  }
derive instance newtypeDhcpConfiguration :: Newtype DhcpConfiguration _
derive instance repGenericDhcpConfiguration :: Generic DhcpConfiguration _
instance showDhcpConfiguration :: Show DhcpConfiguration where
  show = genericShow
instance decodeDhcpConfiguration :: Decode DhcpConfiguration where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDhcpConfiguration :: Encode DhcpConfiguration where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DhcpConfiguration from required parameters
newDhcpConfiguration :: DhcpConfiguration
newDhcpConfiguration  = DhcpConfiguration { "Key": (NullOrUndefined Nothing), "Values": (NullOrUndefined Nothing) }

-- | Constructs DhcpConfiguration's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDhcpConfiguration' :: ( { "Key" :: NullOrUndefined.NullOrUndefined (String) , "Values" :: NullOrUndefined.NullOrUndefined (DhcpConfigurationValueList) } -> {"Key" :: NullOrUndefined.NullOrUndefined (String) , "Values" :: NullOrUndefined.NullOrUndefined (DhcpConfigurationValueList) } ) -> DhcpConfiguration
newDhcpConfiguration'  customize = (DhcpConfiguration <<< customize) { "Key": (NullOrUndefined Nothing), "Values": (NullOrUndefined Nothing) }



newtype DhcpConfigurationList = DhcpConfigurationList (Array DhcpConfiguration)
derive instance newtypeDhcpConfigurationList :: Newtype DhcpConfigurationList _
derive instance repGenericDhcpConfigurationList :: Generic DhcpConfigurationList _
instance showDhcpConfigurationList :: Show DhcpConfigurationList where
  show = genericShow
instance decodeDhcpConfigurationList :: Decode DhcpConfigurationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDhcpConfigurationList :: Encode DhcpConfigurationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype DhcpConfigurationValueList = DhcpConfigurationValueList (Array AttributeValue)
derive instance newtypeDhcpConfigurationValueList :: Newtype DhcpConfigurationValueList _
derive instance repGenericDhcpConfigurationValueList :: Generic DhcpConfigurationValueList _
instance showDhcpConfigurationValueList :: Show DhcpConfigurationValueList where
  show = genericShow
instance decodeDhcpConfigurationValueList :: Decode DhcpConfigurationValueList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDhcpConfigurationValueList :: Encode DhcpConfigurationValueList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a set of DHCP options.</p>
newtype DhcpOptions = DhcpOptions 
  { "DhcpConfigurations" :: NullOrUndefined.NullOrUndefined (DhcpConfigurationList)
  , "DhcpOptionsId" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeDhcpOptions :: Newtype DhcpOptions _
derive instance repGenericDhcpOptions :: Generic DhcpOptions _
instance showDhcpOptions :: Show DhcpOptions where
  show = genericShow
instance decodeDhcpOptions :: Decode DhcpOptions where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDhcpOptions :: Encode DhcpOptions where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DhcpOptions from required parameters
newDhcpOptions :: DhcpOptions
newDhcpOptions  = DhcpOptions { "DhcpConfigurations": (NullOrUndefined Nothing), "DhcpOptionsId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs DhcpOptions's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDhcpOptions' :: ( { "DhcpConfigurations" :: NullOrUndefined.NullOrUndefined (DhcpConfigurationList) , "DhcpOptionsId" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"DhcpConfigurations" :: NullOrUndefined.NullOrUndefined (DhcpConfigurationList) , "DhcpOptionsId" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> DhcpOptions
newDhcpOptions'  customize = (DhcpOptions <<< customize) { "DhcpConfigurations": (NullOrUndefined Nothing), "DhcpOptionsId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



newtype DhcpOptionsIdStringList = DhcpOptionsIdStringList (Array String)
derive instance newtypeDhcpOptionsIdStringList :: Newtype DhcpOptionsIdStringList _
derive instance repGenericDhcpOptionsIdStringList :: Generic DhcpOptionsIdStringList _
instance showDhcpOptionsIdStringList :: Show DhcpOptionsIdStringList where
  show = genericShow
instance decodeDhcpOptionsIdStringList :: Decode DhcpOptionsIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDhcpOptionsIdStringList :: Encode DhcpOptionsIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype DhcpOptionsList = DhcpOptionsList (Array DhcpOptions)
derive instance newtypeDhcpOptionsList :: Newtype DhcpOptionsList _
derive instance repGenericDhcpOptionsList :: Generic DhcpOptionsList _
instance showDhcpOptionsList :: Show DhcpOptionsList where
  show = genericShow
instance decodeDhcpOptionsList :: Decode DhcpOptionsList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDhcpOptionsList :: Encode DhcpOptionsList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for DisableVgwRoutePropagation.</p>
newtype DisableVgwRoutePropagationRequest = DisableVgwRoutePropagationRequest 
  { "GatewayId" :: (String)
  , "RouteTableId" :: (String)
  }
derive instance newtypeDisableVgwRoutePropagationRequest :: Newtype DisableVgwRoutePropagationRequest _
derive instance repGenericDisableVgwRoutePropagationRequest :: Generic DisableVgwRoutePropagationRequest _
instance showDisableVgwRoutePropagationRequest :: Show DisableVgwRoutePropagationRequest where
  show = genericShow
instance decodeDisableVgwRoutePropagationRequest :: Decode DisableVgwRoutePropagationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisableVgwRoutePropagationRequest :: Encode DisableVgwRoutePropagationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisableVgwRoutePropagationRequest from required parameters
newDisableVgwRoutePropagationRequest :: String -> String -> DisableVgwRoutePropagationRequest
newDisableVgwRoutePropagationRequest _GatewayId _RouteTableId = DisableVgwRoutePropagationRequest { "GatewayId": _GatewayId, "RouteTableId": _RouteTableId }

-- | Constructs DisableVgwRoutePropagationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisableVgwRoutePropagationRequest' :: String -> String -> ( { "GatewayId" :: (String) , "RouteTableId" :: (String) } -> {"GatewayId" :: (String) , "RouteTableId" :: (String) } ) -> DisableVgwRoutePropagationRequest
newDisableVgwRoutePropagationRequest' _GatewayId _RouteTableId customize = (DisableVgwRoutePropagationRequest <<< customize) { "GatewayId": _GatewayId, "RouteTableId": _RouteTableId }



-- | <p>Contains the parameters for DisableVpcClassicLinkDnsSupport.</p>
newtype DisableVpcClassicLinkDnsSupportRequest = DisableVpcClassicLinkDnsSupportRequest 
  { "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDisableVpcClassicLinkDnsSupportRequest :: Newtype DisableVpcClassicLinkDnsSupportRequest _
derive instance repGenericDisableVpcClassicLinkDnsSupportRequest :: Generic DisableVpcClassicLinkDnsSupportRequest _
instance showDisableVpcClassicLinkDnsSupportRequest :: Show DisableVpcClassicLinkDnsSupportRequest where
  show = genericShow
instance decodeDisableVpcClassicLinkDnsSupportRequest :: Decode DisableVpcClassicLinkDnsSupportRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisableVpcClassicLinkDnsSupportRequest :: Encode DisableVpcClassicLinkDnsSupportRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisableVpcClassicLinkDnsSupportRequest from required parameters
newDisableVpcClassicLinkDnsSupportRequest :: DisableVpcClassicLinkDnsSupportRequest
newDisableVpcClassicLinkDnsSupportRequest  = DisableVpcClassicLinkDnsSupportRequest { "VpcId": (NullOrUndefined Nothing) }

-- | Constructs DisableVpcClassicLinkDnsSupportRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisableVpcClassicLinkDnsSupportRequest' :: ( { "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> DisableVpcClassicLinkDnsSupportRequest
newDisableVpcClassicLinkDnsSupportRequest'  customize = (DisableVpcClassicLinkDnsSupportRequest <<< customize) { "VpcId": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DisableVpcClassicLinkDnsSupport.</p>
newtype DisableVpcClassicLinkDnsSupportResult = DisableVpcClassicLinkDnsSupportResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDisableVpcClassicLinkDnsSupportResult :: Newtype DisableVpcClassicLinkDnsSupportResult _
derive instance repGenericDisableVpcClassicLinkDnsSupportResult :: Generic DisableVpcClassicLinkDnsSupportResult _
instance showDisableVpcClassicLinkDnsSupportResult :: Show DisableVpcClassicLinkDnsSupportResult where
  show = genericShow
instance decodeDisableVpcClassicLinkDnsSupportResult :: Decode DisableVpcClassicLinkDnsSupportResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisableVpcClassicLinkDnsSupportResult :: Encode DisableVpcClassicLinkDnsSupportResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisableVpcClassicLinkDnsSupportResult from required parameters
newDisableVpcClassicLinkDnsSupportResult :: DisableVpcClassicLinkDnsSupportResult
newDisableVpcClassicLinkDnsSupportResult  = DisableVpcClassicLinkDnsSupportResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs DisableVpcClassicLinkDnsSupportResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisableVpcClassicLinkDnsSupportResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DisableVpcClassicLinkDnsSupportResult
newDisableVpcClassicLinkDnsSupportResult'  customize = (DisableVpcClassicLinkDnsSupportResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DisableVpcClassicLink.</p>
newtype DisableVpcClassicLinkRequest = DisableVpcClassicLinkRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcId" :: (String)
  }
derive instance newtypeDisableVpcClassicLinkRequest :: Newtype DisableVpcClassicLinkRequest _
derive instance repGenericDisableVpcClassicLinkRequest :: Generic DisableVpcClassicLinkRequest _
instance showDisableVpcClassicLinkRequest :: Show DisableVpcClassicLinkRequest where
  show = genericShow
instance decodeDisableVpcClassicLinkRequest :: Decode DisableVpcClassicLinkRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisableVpcClassicLinkRequest :: Encode DisableVpcClassicLinkRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisableVpcClassicLinkRequest from required parameters
newDisableVpcClassicLinkRequest :: String -> DisableVpcClassicLinkRequest
newDisableVpcClassicLinkRequest _VpcId = DisableVpcClassicLinkRequest { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DisableVpcClassicLinkRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisableVpcClassicLinkRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: (String) } ) -> DisableVpcClassicLinkRequest
newDisableVpcClassicLinkRequest' _VpcId customize = (DisableVpcClassicLinkRequest <<< customize) { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of DisableVpcClassicLink.</p>
newtype DisableVpcClassicLinkResult = DisableVpcClassicLinkResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDisableVpcClassicLinkResult :: Newtype DisableVpcClassicLinkResult _
derive instance repGenericDisableVpcClassicLinkResult :: Generic DisableVpcClassicLinkResult _
instance showDisableVpcClassicLinkResult :: Show DisableVpcClassicLinkResult where
  show = genericShow
instance decodeDisableVpcClassicLinkResult :: Decode DisableVpcClassicLinkResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisableVpcClassicLinkResult :: Encode DisableVpcClassicLinkResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisableVpcClassicLinkResult from required parameters
newDisableVpcClassicLinkResult :: DisableVpcClassicLinkResult
newDisableVpcClassicLinkResult  = DisableVpcClassicLinkResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs DisableVpcClassicLinkResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisableVpcClassicLinkResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DisableVpcClassicLinkResult
newDisableVpcClassicLinkResult'  customize = (DisableVpcClassicLinkResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DisassociateAddress.</p>
newtype DisassociateAddressRequest = DisassociateAddressRequest 
  { "AssociationId" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicIp" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDisassociateAddressRequest :: Newtype DisassociateAddressRequest _
derive instance repGenericDisassociateAddressRequest :: Generic DisassociateAddressRequest _
instance showDisassociateAddressRequest :: Show DisassociateAddressRequest where
  show = genericShow
instance decodeDisassociateAddressRequest :: Decode DisassociateAddressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisassociateAddressRequest :: Encode DisassociateAddressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisassociateAddressRequest from required parameters
newDisassociateAddressRequest :: DisassociateAddressRequest
newDisassociateAddressRequest  = DisassociateAddressRequest { "AssociationId": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }

-- | Constructs DisassociateAddressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisassociateAddressRequest' :: ( { "AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DisassociateAddressRequest
newDisassociateAddressRequest'  customize = (DisassociateAddressRequest <<< customize) { "AssociationId": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }



newtype DisassociateIamInstanceProfileRequest = DisassociateIamInstanceProfileRequest 
  { "AssociationId" :: (String)
  }
derive instance newtypeDisassociateIamInstanceProfileRequest :: Newtype DisassociateIamInstanceProfileRequest _
derive instance repGenericDisassociateIamInstanceProfileRequest :: Generic DisassociateIamInstanceProfileRequest _
instance showDisassociateIamInstanceProfileRequest :: Show DisassociateIamInstanceProfileRequest where
  show = genericShow
instance decodeDisassociateIamInstanceProfileRequest :: Decode DisassociateIamInstanceProfileRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisassociateIamInstanceProfileRequest :: Encode DisassociateIamInstanceProfileRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisassociateIamInstanceProfileRequest from required parameters
newDisassociateIamInstanceProfileRequest :: String -> DisassociateIamInstanceProfileRequest
newDisassociateIamInstanceProfileRequest _AssociationId = DisassociateIamInstanceProfileRequest { "AssociationId": _AssociationId }

-- | Constructs DisassociateIamInstanceProfileRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisassociateIamInstanceProfileRequest' :: String -> ( { "AssociationId" :: (String) } -> {"AssociationId" :: (String) } ) -> DisassociateIamInstanceProfileRequest
newDisassociateIamInstanceProfileRequest' _AssociationId customize = (DisassociateIamInstanceProfileRequest <<< customize) { "AssociationId": _AssociationId }



newtype DisassociateIamInstanceProfileResult = DisassociateIamInstanceProfileResult 
  { "IamInstanceProfileAssociation" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociation)
  }
derive instance newtypeDisassociateIamInstanceProfileResult :: Newtype DisassociateIamInstanceProfileResult _
derive instance repGenericDisassociateIamInstanceProfileResult :: Generic DisassociateIamInstanceProfileResult _
instance showDisassociateIamInstanceProfileResult :: Show DisassociateIamInstanceProfileResult where
  show = genericShow
instance decodeDisassociateIamInstanceProfileResult :: Decode DisassociateIamInstanceProfileResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisassociateIamInstanceProfileResult :: Encode DisassociateIamInstanceProfileResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisassociateIamInstanceProfileResult from required parameters
newDisassociateIamInstanceProfileResult :: DisassociateIamInstanceProfileResult
newDisassociateIamInstanceProfileResult  = DisassociateIamInstanceProfileResult { "IamInstanceProfileAssociation": (NullOrUndefined Nothing) }

-- | Constructs DisassociateIamInstanceProfileResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisassociateIamInstanceProfileResult' :: ( { "IamInstanceProfileAssociation" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociation) } -> {"IamInstanceProfileAssociation" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociation) } ) -> DisassociateIamInstanceProfileResult
newDisassociateIamInstanceProfileResult'  customize = (DisassociateIamInstanceProfileResult <<< customize) { "IamInstanceProfileAssociation": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for DisassociateRouteTable.</p>
newtype DisassociateRouteTableRequest = DisassociateRouteTableRequest 
  { "AssociationId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeDisassociateRouteTableRequest :: Newtype DisassociateRouteTableRequest _
derive instance repGenericDisassociateRouteTableRequest :: Generic DisassociateRouteTableRequest _
instance showDisassociateRouteTableRequest :: Show DisassociateRouteTableRequest where
  show = genericShow
instance decodeDisassociateRouteTableRequest :: Decode DisassociateRouteTableRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisassociateRouteTableRequest :: Encode DisassociateRouteTableRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisassociateRouteTableRequest from required parameters
newDisassociateRouteTableRequest :: String -> DisassociateRouteTableRequest
newDisassociateRouteTableRequest _AssociationId = DisassociateRouteTableRequest { "AssociationId": _AssociationId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs DisassociateRouteTableRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisassociateRouteTableRequest' :: String -> ( { "AssociationId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AssociationId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> DisassociateRouteTableRequest
newDisassociateRouteTableRequest' _AssociationId customize = (DisassociateRouteTableRequest <<< customize) { "AssociationId": _AssociationId, "DryRun": (NullOrUndefined Nothing) }



newtype DisassociateSubnetCidrBlockRequest = DisassociateSubnetCidrBlockRequest 
  { "AssociationId" :: (String)
  }
derive instance newtypeDisassociateSubnetCidrBlockRequest :: Newtype DisassociateSubnetCidrBlockRequest _
derive instance repGenericDisassociateSubnetCidrBlockRequest :: Generic DisassociateSubnetCidrBlockRequest _
instance showDisassociateSubnetCidrBlockRequest :: Show DisassociateSubnetCidrBlockRequest where
  show = genericShow
instance decodeDisassociateSubnetCidrBlockRequest :: Decode DisassociateSubnetCidrBlockRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisassociateSubnetCidrBlockRequest :: Encode DisassociateSubnetCidrBlockRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisassociateSubnetCidrBlockRequest from required parameters
newDisassociateSubnetCidrBlockRequest :: String -> DisassociateSubnetCidrBlockRequest
newDisassociateSubnetCidrBlockRequest _AssociationId = DisassociateSubnetCidrBlockRequest { "AssociationId": _AssociationId }

-- | Constructs DisassociateSubnetCidrBlockRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisassociateSubnetCidrBlockRequest' :: String -> ( { "AssociationId" :: (String) } -> {"AssociationId" :: (String) } ) -> DisassociateSubnetCidrBlockRequest
newDisassociateSubnetCidrBlockRequest' _AssociationId customize = (DisassociateSubnetCidrBlockRequest <<< customize) { "AssociationId": _AssociationId }



newtype DisassociateSubnetCidrBlockResult = DisassociateSubnetCidrBlockResult 
  { "Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (SubnetIpv6CidrBlockAssociation)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDisassociateSubnetCidrBlockResult :: Newtype DisassociateSubnetCidrBlockResult _
derive instance repGenericDisassociateSubnetCidrBlockResult :: Generic DisassociateSubnetCidrBlockResult _
instance showDisassociateSubnetCidrBlockResult :: Show DisassociateSubnetCidrBlockResult where
  show = genericShow
instance decodeDisassociateSubnetCidrBlockResult :: Decode DisassociateSubnetCidrBlockResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisassociateSubnetCidrBlockResult :: Encode DisassociateSubnetCidrBlockResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisassociateSubnetCidrBlockResult from required parameters
newDisassociateSubnetCidrBlockResult :: DisassociateSubnetCidrBlockResult
newDisassociateSubnetCidrBlockResult  = DisassociateSubnetCidrBlockResult { "Ipv6CidrBlockAssociation": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }

-- | Constructs DisassociateSubnetCidrBlockResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisassociateSubnetCidrBlockResult' :: ( { "Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (SubnetIpv6CidrBlockAssociation) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (SubnetIpv6CidrBlockAssociation) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } ) -> DisassociateSubnetCidrBlockResult
newDisassociateSubnetCidrBlockResult'  customize = (DisassociateSubnetCidrBlockResult <<< customize) { "Ipv6CidrBlockAssociation": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }



newtype DisassociateVpcCidrBlockRequest = DisassociateVpcCidrBlockRequest 
  { "AssociationId" :: (String)
  }
derive instance newtypeDisassociateVpcCidrBlockRequest :: Newtype DisassociateVpcCidrBlockRequest _
derive instance repGenericDisassociateVpcCidrBlockRequest :: Generic DisassociateVpcCidrBlockRequest _
instance showDisassociateVpcCidrBlockRequest :: Show DisassociateVpcCidrBlockRequest where
  show = genericShow
instance decodeDisassociateVpcCidrBlockRequest :: Decode DisassociateVpcCidrBlockRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisassociateVpcCidrBlockRequest :: Encode DisassociateVpcCidrBlockRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisassociateVpcCidrBlockRequest from required parameters
newDisassociateVpcCidrBlockRequest :: String -> DisassociateVpcCidrBlockRequest
newDisassociateVpcCidrBlockRequest _AssociationId = DisassociateVpcCidrBlockRequest { "AssociationId": _AssociationId }

-- | Constructs DisassociateVpcCidrBlockRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisassociateVpcCidrBlockRequest' :: String -> ( { "AssociationId" :: (String) } -> {"AssociationId" :: (String) } ) -> DisassociateVpcCidrBlockRequest
newDisassociateVpcCidrBlockRequest' _AssociationId customize = (DisassociateVpcCidrBlockRequest <<< customize) { "AssociationId": _AssociationId }



newtype DisassociateVpcCidrBlockResult = DisassociateVpcCidrBlockResult 
  { "Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcIpv6CidrBlockAssociation)
  , "CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockAssociation)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDisassociateVpcCidrBlockResult :: Newtype DisassociateVpcCidrBlockResult _
derive instance repGenericDisassociateVpcCidrBlockResult :: Generic DisassociateVpcCidrBlockResult _
instance showDisassociateVpcCidrBlockResult :: Show DisassociateVpcCidrBlockResult where
  show = genericShow
instance decodeDisassociateVpcCidrBlockResult :: Decode DisassociateVpcCidrBlockResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDisassociateVpcCidrBlockResult :: Encode DisassociateVpcCidrBlockResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DisassociateVpcCidrBlockResult from required parameters
newDisassociateVpcCidrBlockResult :: DisassociateVpcCidrBlockResult
newDisassociateVpcCidrBlockResult  = DisassociateVpcCidrBlockResult { "CidrBlockAssociation": (NullOrUndefined Nothing), "Ipv6CidrBlockAssociation": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs DisassociateVpcCidrBlockResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDisassociateVpcCidrBlockResult' :: ( { "Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcIpv6CidrBlockAssociation) , "CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockAssociation) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Ipv6CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcIpv6CidrBlockAssociation) , "CidrBlockAssociation" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockAssociation) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> DisassociateVpcCidrBlockResult
newDisassociateVpcCidrBlockResult'  customize = (DisassociateVpcCidrBlockResult <<< customize) { "CidrBlockAssociation": (NullOrUndefined Nothing), "Ipv6CidrBlockAssociation": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Describes a disk image.</p>
newtype DiskImage = DiskImage 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Image" :: NullOrUndefined.NullOrUndefined (DiskImageDetail)
  , "Volume" :: NullOrUndefined.NullOrUndefined (VolumeDetail)
  }
derive instance newtypeDiskImage :: Newtype DiskImage _
derive instance repGenericDiskImage :: Generic DiskImage _
instance showDiskImage :: Show DiskImage where
  show = genericShow
instance decodeDiskImage :: Decode DiskImage where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDiskImage :: Encode DiskImage where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DiskImage from required parameters
newDiskImage :: DiskImage
newDiskImage  = DiskImage { "Description": (NullOrUndefined Nothing), "Image": (NullOrUndefined Nothing), "Volume": (NullOrUndefined Nothing) }

-- | Constructs DiskImage's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDiskImage' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "Image" :: NullOrUndefined.NullOrUndefined (DiskImageDetail) , "Volume" :: NullOrUndefined.NullOrUndefined (VolumeDetail) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "Image" :: NullOrUndefined.NullOrUndefined (DiskImageDetail) , "Volume" :: NullOrUndefined.NullOrUndefined (VolumeDetail) } ) -> DiskImage
newDiskImage'  customize = (DiskImage <<< customize) { "Description": (NullOrUndefined Nothing), "Image": (NullOrUndefined Nothing), "Volume": (NullOrUndefined Nothing) }



-- | <p>Describes a disk image.</p>
newtype DiskImageDescription = DiskImageDescription 
  { "Checksum" :: NullOrUndefined.NullOrUndefined (String)
  , "Format" :: (DiskImageFormat)
  , "ImportManifestUrl" :: (String)
  , "Size" :: (Number)
  }
derive instance newtypeDiskImageDescription :: Newtype DiskImageDescription _
derive instance repGenericDiskImageDescription :: Generic DiskImageDescription _
instance showDiskImageDescription :: Show DiskImageDescription where
  show = genericShow
instance decodeDiskImageDescription :: Decode DiskImageDescription where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDiskImageDescription :: Encode DiskImageDescription where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DiskImageDescription from required parameters
newDiskImageDescription :: DiskImageFormat -> String -> Number -> DiskImageDescription
newDiskImageDescription _Format _ImportManifestUrl _Size = DiskImageDescription { "Format": _Format, "ImportManifestUrl": _ImportManifestUrl, "Size": _Size, "Checksum": (NullOrUndefined Nothing) }

-- | Constructs DiskImageDescription's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDiskImageDescription' :: DiskImageFormat -> String -> Number -> ( { "Checksum" :: NullOrUndefined.NullOrUndefined (String) , "Format" :: (DiskImageFormat) , "ImportManifestUrl" :: (String) , "Size" :: (Number) } -> {"Checksum" :: NullOrUndefined.NullOrUndefined (String) , "Format" :: (DiskImageFormat) , "ImportManifestUrl" :: (String) , "Size" :: (Number) } ) -> DiskImageDescription
newDiskImageDescription' _Format _ImportManifestUrl _Size customize = (DiskImageDescription <<< customize) { "Format": _Format, "ImportManifestUrl": _ImportManifestUrl, "Size": _Size, "Checksum": (NullOrUndefined Nothing) }



-- | <p>Describes a disk image.</p>
newtype DiskImageDetail = DiskImageDetail 
  { "Bytes" :: (Number)
  , "Format" :: (DiskImageFormat)
  , "ImportManifestUrl" :: (String)
  }
derive instance newtypeDiskImageDetail :: Newtype DiskImageDetail _
derive instance repGenericDiskImageDetail :: Generic DiskImageDetail _
instance showDiskImageDetail :: Show DiskImageDetail where
  show = genericShow
instance decodeDiskImageDetail :: Decode DiskImageDetail where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDiskImageDetail :: Encode DiskImageDetail where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DiskImageDetail from required parameters
newDiskImageDetail :: Number -> DiskImageFormat -> String -> DiskImageDetail
newDiskImageDetail _Bytes _Format _ImportManifestUrl = DiskImageDetail { "Bytes": _Bytes, "Format": _Format, "ImportManifestUrl": _ImportManifestUrl }

-- | Constructs DiskImageDetail's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDiskImageDetail' :: Number -> DiskImageFormat -> String -> ( { "Bytes" :: (Number) , "Format" :: (DiskImageFormat) , "ImportManifestUrl" :: (String) } -> {"Bytes" :: (Number) , "Format" :: (DiskImageFormat) , "ImportManifestUrl" :: (String) } ) -> DiskImageDetail
newDiskImageDetail' _Bytes _Format _ImportManifestUrl customize = (DiskImageDetail <<< customize) { "Bytes": _Bytes, "Format": _Format, "ImportManifestUrl": _ImportManifestUrl }



newtype DiskImageFormat = DiskImageFormat String
derive instance newtypeDiskImageFormat :: Newtype DiskImageFormat _
derive instance repGenericDiskImageFormat :: Generic DiskImageFormat _
instance showDiskImageFormat :: Show DiskImageFormat where
  show = genericShow
instance decodeDiskImageFormat :: Decode DiskImageFormat where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDiskImageFormat :: Encode DiskImageFormat where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype DiskImageList = DiskImageList (Array DiskImage)
derive instance newtypeDiskImageList :: Newtype DiskImageList _
derive instance repGenericDiskImageList :: Generic DiskImageList _
instance showDiskImageList :: Show DiskImageList where
  show = genericShow
instance decodeDiskImageList :: Decode DiskImageList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDiskImageList :: Encode DiskImageList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a disk image volume.</p>
newtype DiskImageVolumeDescription = DiskImageVolumeDescription 
  { "Id" :: (String)
  , "Size" :: NullOrUndefined.NullOrUndefined (Number)
  }
derive instance newtypeDiskImageVolumeDescription :: Newtype DiskImageVolumeDescription _
derive instance repGenericDiskImageVolumeDescription :: Generic DiskImageVolumeDescription _
instance showDiskImageVolumeDescription :: Show DiskImageVolumeDescription where
  show = genericShow
instance decodeDiskImageVolumeDescription :: Decode DiskImageVolumeDescription where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDiskImageVolumeDescription :: Encode DiskImageVolumeDescription where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DiskImageVolumeDescription from required parameters
newDiskImageVolumeDescription :: String -> DiskImageVolumeDescription
newDiskImageVolumeDescription _Id = DiskImageVolumeDescription { "Id": _Id, "Size": (NullOrUndefined Nothing) }

-- | Constructs DiskImageVolumeDescription's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDiskImageVolumeDescription' :: String -> ( { "Id" :: (String) , "Size" :: NullOrUndefined.NullOrUndefined (Number) } -> {"Id" :: (String) , "Size" :: NullOrUndefined.NullOrUndefined (Number) } ) -> DiskImageVolumeDescription
newDiskImageVolumeDescription' _Id customize = (DiskImageVolumeDescription <<< customize) { "Id": _Id, "Size": (NullOrUndefined Nothing) }



-- | <p>Describes a DNS entry.</p>
newtype DnsEntry = DnsEntry 
  { "DnsName" :: NullOrUndefined.NullOrUndefined (String)
  , "HostedZoneId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeDnsEntry :: Newtype DnsEntry _
derive instance repGenericDnsEntry :: Generic DnsEntry _
instance showDnsEntry :: Show DnsEntry where
  show = genericShow
instance decodeDnsEntry :: Decode DnsEntry where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDnsEntry :: Encode DnsEntry where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs DnsEntry from required parameters
newDnsEntry :: DnsEntry
newDnsEntry  = DnsEntry { "DnsName": (NullOrUndefined Nothing), "HostedZoneId": (NullOrUndefined Nothing) }

-- | Constructs DnsEntry's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newDnsEntry' :: ( { "DnsName" :: NullOrUndefined.NullOrUndefined (String) , "HostedZoneId" :: NullOrUndefined.NullOrUndefined (String) } -> {"DnsName" :: NullOrUndefined.NullOrUndefined (String) , "HostedZoneId" :: NullOrUndefined.NullOrUndefined (String) } ) -> DnsEntry
newDnsEntry'  customize = (DnsEntry <<< customize) { "DnsName": (NullOrUndefined Nothing), "HostedZoneId": (NullOrUndefined Nothing) }



newtype DnsEntrySet = DnsEntrySet (Array DnsEntry)
derive instance newtypeDnsEntrySet :: Newtype DnsEntrySet _
derive instance repGenericDnsEntrySet :: Generic DnsEntrySet _
instance showDnsEntrySet :: Show DnsEntrySet where
  show = genericShow
instance decodeDnsEntrySet :: Decode DnsEntrySet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDnsEntrySet :: Encode DnsEntrySet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype DomainType = DomainType String
derive instance newtypeDomainType :: Newtype DomainType _
derive instance repGenericDomainType :: Generic DomainType _
instance showDomainType :: Show DomainType where
  show = genericShow
instance decodeDomainType :: Decode DomainType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeDomainType :: Encode DomainType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a block device for an EBS volume.</p>
newtype EbsBlockDevice = EbsBlockDevice 
  { "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Iops" :: NullOrUndefined.NullOrUndefined (Int)
  , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int)
  , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType)
  }
derive instance newtypeEbsBlockDevice :: Newtype EbsBlockDevice _
derive instance repGenericEbsBlockDevice :: Generic EbsBlockDevice _
instance showEbsBlockDevice :: Show EbsBlockDevice where
  show = genericShow
instance decodeEbsBlockDevice :: Decode EbsBlockDevice where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEbsBlockDevice :: Encode EbsBlockDevice where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EbsBlockDevice from required parameters
newEbsBlockDevice :: EbsBlockDevice
newEbsBlockDevice  = EbsBlockDevice { "DeleteOnTermination": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "VolumeSize": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }

-- | Constructs EbsBlockDevice's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEbsBlockDevice' :: ( { "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) } -> {"Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) } ) -> EbsBlockDevice
newEbsBlockDevice'  customize = (EbsBlockDevice <<< customize) { "DeleteOnTermination": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "VolumeSize": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }



-- | <p>Describes a parameter used to set up an EBS volume in a block device mapping.</p>
newtype EbsInstanceBlockDevice = EbsInstanceBlockDevice 
  { "AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Status" :: NullOrUndefined.NullOrUndefined (AttachmentStatus)
  , "VolumeId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeEbsInstanceBlockDevice :: Newtype EbsInstanceBlockDevice _
derive instance repGenericEbsInstanceBlockDevice :: Generic EbsInstanceBlockDevice _
instance showEbsInstanceBlockDevice :: Show EbsInstanceBlockDevice where
  show = genericShow
instance decodeEbsInstanceBlockDevice :: Decode EbsInstanceBlockDevice where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEbsInstanceBlockDevice :: Encode EbsInstanceBlockDevice where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EbsInstanceBlockDevice from required parameters
newEbsInstanceBlockDevice :: EbsInstanceBlockDevice
newEbsInstanceBlockDevice  = EbsInstanceBlockDevice { "AttachTime": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing) }

-- | Constructs EbsInstanceBlockDevice's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEbsInstanceBlockDevice' :: ( { "AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Status" :: NullOrUndefined.NullOrUndefined (AttachmentStatus) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Status" :: NullOrUndefined.NullOrUndefined (AttachmentStatus) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) } ) -> EbsInstanceBlockDevice
newEbsInstanceBlockDevice'  customize = (EbsInstanceBlockDevice <<< customize) { "AttachTime": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing) }



-- | <p>Describes information used to set up an EBS volume specified in a block device mapping.</p>
newtype EbsInstanceBlockDeviceSpecification = EbsInstanceBlockDeviceSpecification 
  { "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VolumeId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeEbsInstanceBlockDeviceSpecification :: Newtype EbsInstanceBlockDeviceSpecification _
derive instance repGenericEbsInstanceBlockDeviceSpecification :: Generic EbsInstanceBlockDeviceSpecification _
instance showEbsInstanceBlockDeviceSpecification :: Show EbsInstanceBlockDeviceSpecification where
  show = genericShow
instance decodeEbsInstanceBlockDeviceSpecification :: Decode EbsInstanceBlockDeviceSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEbsInstanceBlockDeviceSpecification :: Encode EbsInstanceBlockDeviceSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EbsInstanceBlockDeviceSpecification from required parameters
newEbsInstanceBlockDeviceSpecification :: EbsInstanceBlockDeviceSpecification
newEbsInstanceBlockDeviceSpecification  = EbsInstanceBlockDeviceSpecification { "DeleteOnTermination": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing) }

-- | Constructs EbsInstanceBlockDeviceSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEbsInstanceBlockDeviceSpecification' :: ( { "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) } -> {"DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) } ) -> EbsInstanceBlockDeviceSpecification
newEbsInstanceBlockDeviceSpecification'  customize = (EbsInstanceBlockDeviceSpecification <<< customize) { "DeleteOnTermination": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing) }



-- | <p>Describes an egress-only Internet gateway.</p>
newtype EgressOnlyInternetGateway = EgressOnlyInternetGateway 
  { "Attachments" :: NullOrUndefined.NullOrUndefined (InternetGatewayAttachmentList)
  , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGatewayId)
  }
derive instance newtypeEgressOnlyInternetGateway :: Newtype EgressOnlyInternetGateway _
derive instance repGenericEgressOnlyInternetGateway :: Generic EgressOnlyInternetGateway _
instance showEgressOnlyInternetGateway :: Show EgressOnlyInternetGateway where
  show = genericShow
instance decodeEgressOnlyInternetGateway :: Decode EgressOnlyInternetGateway where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEgressOnlyInternetGateway :: Encode EgressOnlyInternetGateway where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EgressOnlyInternetGateway from required parameters
newEgressOnlyInternetGateway :: EgressOnlyInternetGateway
newEgressOnlyInternetGateway  = EgressOnlyInternetGateway { "Attachments": (NullOrUndefined Nothing), "EgressOnlyInternetGatewayId": (NullOrUndefined Nothing) }

-- | Constructs EgressOnlyInternetGateway's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEgressOnlyInternetGateway' :: ( { "Attachments" :: NullOrUndefined.NullOrUndefined (InternetGatewayAttachmentList) , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGatewayId) } -> {"Attachments" :: NullOrUndefined.NullOrUndefined (InternetGatewayAttachmentList) , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (EgressOnlyInternetGatewayId) } ) -> EgressOnlyInternetGateway
newEgressOnlyInternetGateway'  customize = (EgressOnlyInternetGateway <<< customize) { "Attachments": (NullOrUndefined Nothing), "EgressOnlyInternetGatewayId": (NullOrUndefined Nothing) }



newtype EgressOnlyInternetGatewayId = EgressOnlyInternetGatewayId String
derive instance newtypeEgressOnlyInternetGatewayId :: Newtype EgressOnlyInternetGatewayId _
derive instance repGenericEgressOnlyInternetGatewayId :: Generic EgressOnlyInternetGatewayId _
instance showEgressOnlyInternetGatewayId :: Show EgressOnlyInternetGatewayId where
  show = genericShow
instance decodeEgressOnlyInternetGatewayId :: Decode EgressOnlyInternetGatewayId where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEgressOnlyInternetGatewayId :: Encode EgressOnlyInternetGatewayId where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype EgressOnlyInternetGatewayIdList = EgressOnlyInternetGatewayIdList (Array EgressOnlyInternetGatewayId)
derive instance newtypeEgressOnlyInternetGatewayIdList :: Newtype EgressOnlyInternetGatewayIdList _
derive instance repGenericEgressOnlyInternetGatewayIdList :: Generic EgressOnlyInternetGatewayIdList _
instance showEgressOnlyInternetGatewayIdList :: Show EgressOnlyInternetGatewayIdList where
  show = genericShow
instance decodeEgressOnlyInternetGatewayIdList :: Decode EgressOnlyInternetGatewayIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEgressOnlyInternetGatewayIdList :: Encode EgressOnlyInternetGatewayIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype EgressOnlyInternetGatewayList = EgressOnlyInternetGatewayList (Array EgressOnlyInternetGateway)
derive instance newtypeEgressOnlyInternetGatewayList :: Newtype EgressOnlyInternetGatewayList _
derive instance repGenericEgressOnlyInternetGatewayList :: Generic EgressOnlyInternetGatewayList _
instance showEgressOnlyInternetGatewayList :: Show EgressOnlyInternetGatewayList where
  show = genericShow
instance decodeEgressOnlyInternetGatewayList :: Decode EgressOnlyInternetGatewayList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEgressOnlyInternetGatewayList :: Encode EgressOnlyInternetGatewayList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the association between an instance and an Elastic GPU.</p>
newtype ElasticGpuAssociation = ElasticGpuAssociation 
  { "ElasticGpuId" :: NullOrUndefined.NullOrUndefined (String)
  , "ElasticGpuAssociationId" :: NullOrUndefined.NullOrUndefined (String)
  , "ElasticGpuAssociationState" :: NullOrUndefined.NullOrUndefined (String)
  , "ElasticGpuAssociationTime" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeElasticGpuAssociation :: Newtype ElasticGpuAssociation _
derive instance repGenericElasticGpuAssociation :: Generic ElasticGpuAssociation _
instance showElasticGpuAssociation :: Show ElasticGpuAssociation where
  show = genericShow
instance decodeElasticGpuAssociation :: Decode ElasticGpuAssociation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuAssociation :: Encode ElasticGpuAssociation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ElasticGpuAssociation from required parameters
newElasticGpuAssociation :: ElasticGpuAssociation
newElasticGpuAssociation  = ElasticGpuAssociation { "ElasticGpuAssociationId": (NullOrUndefined Nothing), "ElasticGpuAssociationState": (NullOrUndefined Nothing), "ElasticGpuAssociationTime": (NullOrUndefined Nothing), "ElasticGpuId": (NullOrUndefined Nothing) }

-- | Constructs ElasticGpuAssociation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newElasticGpuAssociation' :: ( { "ElasticGpuId" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuAssociationId" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuAssociationState" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuAssociationTime" :: NullOrUndefined.NullOrUndefined (String) } -> {"ElasticGpuId" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuAssociationId" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuAssociationState" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuAssociationTime" :: NullOrUndefined.NullOrUndefined (String) } ) -> ElasticGpuAssociation
newElasticGpuAssociation'  customize = (ElasticGpuAssociation <<< customize) { "ElasticGpuAssociationId": (NullOrUndefined Nothing), "ElasticGpuAssociationState": (NullOrUndefined Nothing), "ElasticGpuAssociationTime": (NullOrUndefined Nothing), "ElasticGpuId": (NullOrUndefined Nothing) }



newtype ElasticGpuAssociationList = ElasticGpuAssociationList (Array ElasticGpuAssociation)
derive instance newtypeElasticGpuAssociationList :: Newtype ElasticGpuAssociationList _
derive instance repGenericElasticGpuAssociationList :: Generic ElasticGpuAssociationList _
instance showElasticGpuAssociationList :: Show ElasticGpuAssociationList where
  show = genericShow
instance decodeElasticGpuAssociationList :: Decode ElasticGpuAssociationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuAssociationList :: Encode ElasticGpuAssociationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the status of an Elastic GPU.</p>
newtype ElasticGpuHealth = ElasticGpuHealth 
  { "Status" :: NullOrUndefined.NullOrUndefined (ElasticGpuStatus)
  }
derive instance newtypeElasticGpuHealth :: Newtype ElasticGpuHealth _
derive instance repGenericElasticGpuHealth :: Generic ElasticGpuHealth _
instance showElasticGpuHealth :: Show ElasticGpuHealth where
  show = genericShow
instance decodeElasticGpuHealth :: Decode ElasticGpuHealth where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuHealth :: Encode ElasticGpuHealth where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ElasticGpuHealth from required parameters
newElasticGpuHealth :: ElasticGpuHealth
newElasticGpuHealth  = ElasticGpuHealth { "Status": (NullOrUndefined Nothing) }

-- | Constructs ElasticGpuHealth's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newElasticGpuHealth' :: ( { "Status" :: NullOrUndefined.NullOrUndefined (ElasticGpuStatus) } -> {"Status" :: NullOrUndefined.NullOrUndefined (ElasticGpuStatus) } ) -> ElasticGpuHealth
newElasticGpuHealth'  customize = (ElasticGpuHealth <<< customize) { "Status": (NullOrUndefined Nothing) }



newtype ElasticGpuIdSet = ElasticGpuIdSet (Array String)
derive instance newtypeElasticGpuIdSet :: Newtype ElasticGpuIdSet _
derive instance repGenericElasticGpuIdSet :: Generic ElasticGpuIdSet _
instance showElasticGpuIdSet :: Show ElasticGpuIdSet where
  show = genericShow
instance decodeElasticGpuIdSet :: Decode ElasticGpuIdSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuIdSet :: Encode ElasticGpuIdSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ElasticGpuSet = ElasticGpuSet (Array ElasticGpus)
derive instance newtypeElasticGpuSet :: Newtype ElasticGpuSet _
derive instance repGenericElasticGpuSet :: Generic ElasticGpuSet _
instance showElasticGpuSet :: Show ElasticGpuSet where
  show = genericShow
instance decodeElasticGpuSet :: Decode ElasticGpuSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuSet :: Encode ElasticGpuSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>A specification for an Elastic GPU.</p>
newtype ElasticGpuSpecification = ElasticGpuSpecification 
  { "Type" :: (String)
  }
derive instance newtypeElasticGpuSpecification :: Newtype ElasticGpuSpecification _
derive instance repGenericElasticGpuSpecification :: Generic ElasticGpuSpecification _
instance showElasticGpuSpecification :: Show ElasticGpuSpecification where
  show = genericShow
instance decodeElasticGpuSpecification :: Decode ElasticGpuSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuSpecification :: Encode ElasticGpuSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ElasticGpuSpecification from required parameters
newElasticGpuSpecification :: String -> ElasticGpuSpecification
newElasticGpuSpecification _Type = ElasticGpuSpecification { "Type": _Type }

-- | Constructs ElasticGpuSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newElasticGpuSpecification' :: String -> ( { "Type" :: (String) } -> {"Type" :: (String) } ) -> ElasticGpuSpecification
newElasticGpuSpecification' _Type customize = (ElasticGpuSpecification <<< customize) { "Type": _Type }



newtype ElasticGpuSpecificationList = ElasticGpuSpecificationList (Array ElasticGpuSpecification)
derive instance newtypeElasticGpuSpecificationList :: Newtype ElasticGpuSpecificationList _
derive instance repGenericElasticGpuSpecificationList :: Generic ElasticGpuSpecificationList _
instance showElasticGpuSpecificationList :: Show ElasticGpuSpecificationList where
  show = genericShow
instance decodeElasticGpuSpecificationList :: Decode ElasticGpuSpecificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuSpecificationList :: Encode ElasticGpuSpecificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an elastic GPU.</p>
newtype ElasticGpuSpecificationResponse = ElasticGpuSpecificationResponse 
  { "Type" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeElasticGpuSpecificationResponse :: Newtype ElasticGpuSpecificationResponse _
derive instance repGenericElasticGpuSpecificationResponse :: Generic ElasticGpuSpecificationResponse _
instance showElasticGpuSpecificationResponse :: Show ElasticGpuSpecificationResponse where
  show = genericShow
instance decodeElasticGpuSpecificationResponse :: Decode ElasticGpuSpecificationResponse where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuSpecificationResponse :: Encode ElasticGpuSpecificationResponse where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ElasticGpuSpecificationResponse from required parameters
newElasticGpuSpecificationResponse :: ElasticGpuSpecificationResponse
newElasticGpuSpecificationResponse  = ElasticGpuSpecificationResponse { "Type": (NullOrUndefined Nothing) }

-- | Constructs ElasticGpuSpecificationResponse's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newElasticGpuSpecificationResponse' :: ( { "Type" :: NullOrUndefined.NullOrUndefined (String) } -> {"Type" :: NullOrUndefined.NullOrUndefined (String) } ) -> ElasticGpuSpecificationResponse
newElasticGpuSpecificationResponse'  customize = (ElasticGpuSpecificationResponse <<< customize) { "Type": (NullOrUndefined Nothing) }



newtype ElasticGpuSpecificationResponseList = ElasticGpuSpecificationResponseList (Array ElasticGpuSpecificationResponse)
derive instance newtypeElasticGpuSpecificationResponseList :: Newtype ElasticGpuSpecificationResponseList _
derive instance repGenericElasticGpuSpecificationResponseList :: Generic ElasticGpuSpecificationResponseList _
instance showElasticGpuSpecificationResponseList :: Show ElasticGpuSpecificationResponseList where
  show = genericShow
instance decodeElasticGpuSpecificationResponseList :: Decode ElasticGpuSpecificationResponseList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuSpecificationResponseList :: Encode ElasticGpuSpecificationResponseList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ElasticGpuSpecifications = ElasticGpuSpecifications (Array ElasticGpuSpecification)
derive instance newtypeElasticGpuSpecifications :: Newtype ElasticGpuSpecifications _
derive instance repGenericElasticGpuSpecifications :: Generic ElasticGpuSpecifications _
instance showElasticGpuSpecifications :: Show ElasticGpuSpecifications where
  show = genericShow
instance decodeElasticGpuSpecifications :: Decode ElasticGpuSpecifications where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuSpecifications :: Encode ElasticGpuSpecifications where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ElasticGpuState = ElasticGpuState String
derive instance newtypeElasticGpuState :: Newtype ElasticGpuState _
derive instance repGenericElasticGpuState :: Generic ElasticGpuState _
instance showElasticGpuState :: Show ElasticGpuState where
  show = genericShow
instance decodeElasticGpuState :: Decode ElasticGpuState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuState :: Encode ElasticGpuState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ElasticGpuStatus = ElasticGpuStatus String
derive instance newtypeElasticGpuStatus :: Newtype ElasticGpuStatus _
derive instance repGenericElasticGpuStatus :: Generic ElasticGpuStatus _
instance showElasticGpuStatus :: Show ElasticGpuStatus where
  show = genericShow
instance decodeElasticGpuStatus :: Decode ElasticGpuStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpuStatus :: Encode ElasticGpuStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an Elastic GPU.</p>
newtype ElasticGpus = ElasticGpus 
  { "ElasticGpuId" :: NullOrUndefined.NullOrUndefined (String)
  , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "ElasticGpuType" :: NullOrUndefined.NullOrUndefined (String)
  , "ElasticGpuHealth" :: NullOrUndefined.NullOrUndefined (ElasticGpuHealth)
  , "ElasticGpuState" :: NullOrUndefined.NullOrUndefined (ElasticGpuState)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeElasticGpus :: Newtype ElasticGpus _
derive instance repGenericElasticGpus :: Generic ElasticGpus _
instance showElasticGpus :: Show ElasticGpus where
  show = genericShow
instance decodeElasticGpus :: Decode ElasticGpus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeElasticGpus :: Encode ElasticGpus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ElasticGpus from required parameters
newElasticGpus :: ElasticGpus
newElasticGpus  = ElasticGpus { "AvailabilityZone": (NullOrUndefined Nothing), "ElasticGpuHealth": (NullOrUndefined Nothing), "ElasticGpuId": (NullOrUndefined Nothing), "ElasticGpuState": (NullOrUndefined Nothing), "ElasticGpuType": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }

-- | Constructs ElasticGpus's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newElasticGpus' :: ( { "ElasticGpuId" :: NullOrUndefined.NullOrUndefined (String) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuType" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuHealth" :: NullOrUndefined.NullOrUndefined (ElasticGpuHealth) , "ElasticGpuState" :: NullOrUndefined.NullOrUndefined (ElasticGpuState) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ElasticGpuId" :: NullOrUndefined.NullOrUndefined (String) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuType" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuHealth" :: NullOrUndefined.NullOrUndefined (ElasticGpuHealth) , "ElasticGpuState" :: NullOrUndefined.NullOrUndefined (ElasticGpuState) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) } ) -> ElasticGpus
newElasticGpus'  customize = (ElasticGpus <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "ElasticGpuHealth": (NullOrUndefined Nothing), "ElasticGpuId": (NullOrUndefined Nothing), "ElasticGpuState": (NullOrUndefined Nothing), "ElasticGpuType": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for EnableVgwRoutePropagation.</p>
newtype EnableVgwRoutePropagationRequest = EnableVgwRoutePropagationRequest 
  { "GatewayId" :: (String)
  , "RouteTableId" :: (String)
  }
derive instance newtypeEnableVgwRoutePropagationRequest :: Newtype EnableVgwRoutePropagationRequest _
derive instance repGenericEnableVgwRoutePropagationRequest :: Generic EnableVgwRoutePropagationRequest _
instance showEnableVgwRoutePropagationRequest :: Show EnableVgwRoutePropagationRequest where
  show = genericShow
instance decodeEnableVgwRoutePropagationRequest :: Decode EnableVgwRoutePropagationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEnableVgwRoutePropagationRequest :: Encode EnableVgwRoutePropagationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EnableVgwRoutePropagationRequest from required parameters
newEnableVgwRoutePropagationRequest :: String -> String -> EnableVgwRoutePropagationRequest
newEnableVgwRoutePropagationRequest _GatewayId _RouteTableId = EnableVgwRoutePropagationRequest { "GatewayId": _GatewayId, "RouteTableId": _RouteTableId }

-- | Constructs EnableVgwRoutePropagationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEnableVgwRoutePropagationRequest' :: String -> String -> ( { "GatewayId" :: (String) , "RouteTableId" :: (String) } -> {"GatewayId" :: (String) , "RouteTableId" :: (String) } ) -> EnableVgwRoutePropagationRequest
newEnableVgwRoutePropagationRequest' _GatewayId _RouteTableId customize = (EnableVgwRoutePropagationRequest <<< customize) { "GatewayId": _GatewayId, "RouteTableId": _RouteTableId }



-- | <p>Contains the parameters for EnableVolumeIO.</p>
newtype EnableVolumeIORequest = EnableVolumeIORequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VolumeId" :: (String)
  }
derive instance newtypeEnableVolumeIORequest :: Newtype EnableVolumeIORequest _
derive instance repGenericEnableVolumeIORequest :: Generic EnableVolumeIORequest _
instance showEnableVolumeIORequest :: Show EnableVolumeIORequest where
  show = genericShow
instance decodeEnableVolumeIORequest :: Decode EnableVolumeIORequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEnableVolumeIORequest :: Encode EnableVolumeIORequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EnableVolumeIORequest from required parameters
newEnableVolumeIORequest :: String -> EnableVolumeIORequest
newEnableVolumeIORequest _VolumeId = EnableVolumeIORequest { "VolumeId": _VolumeId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs EnableVolumeIORequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEnableVolumeIORequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VolumeId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VolumeId" :: (String) } ) -> EnableVolumeIORequest
newEnableVolumeIORequest' _VolumeId customize = (EnableVolumeIORequest <<< customize) { "VolumeId": _VolumeId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for EnableVpcClassicLinkDnsSupport.</p>
newtype EnableVpcClassicLinkDnsSupportRequest = EnableVpcClassicLinkDnsSupportRequest 
  { "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeEnableVpcClassicLinkDnsSupportRequest :: Newtype EnableVpcClassicLinkDnsSupportRequest _
derive instance repGenericEnableVpcClassicLinkDnsSupportRequest :: Generic EnableVpcClassicLinkDnsSupportRequest _
instance showEnableVpcClassicLinkDnsSupportRequest :: Show EnableVpcClassicLinkDnsSupportRequest where
  show = genericShow
instance decodeEnableVpcClassicLinkDnsSupportRequest :: Decode EnableVpcClassicLinkDnsSupportRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEnableVpcClassicLinkDnsSupportRequest :: Encode EnableVpcClassicLinkDnsSupportRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EnableVpcClassicLinkDnsSupportRequest from required parameters
newEnableVpcClassicLinkDnsSupportRequest :: EnableVpcClassicLinkDnsSupportRequest
newEnableVpcClassicLinkDnsSupportRequest  = EnableVpcClassicLinkDnsSupportRequest { "VpcId": (NullOrUndefined Nothing) }

-- | Constructs EnableVpcClassicLinkDnsSupportRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEnableVpcClassicLinkDnsSupportRequest' :: ( { "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> EnableVpcClassicLinkDnsSupportRequest
newEnableVpcClassicLinkDnsSupportRequest'  customize = (EnableVpcClassicLinkDnsSupportRequest <<< customize) { "VpcId": (NullOrUndefined Nothing) }



-- | <p>Contains the output of EnableVpcClassicLinkDnsSupport.</p>
newtype EnableVpcClassicLinkDnsSupportResult = EnableVpcClassicLinkDnsSupportResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeEnableVpcClassicLinkDnsSupportResult :: Newtype EnableVpcClassicLinkDnsSupportResult _
derive instance repGenericEnableVpcClassicLinkDnsSupportResult :: Generic EnableVpcClassicLinkDnsSupportResult _
instance showEnableVpcClassicLinkDnsSupportResult :: Show EnableVpcClassicLinkDnsSupportResult where
  show = genericShow
instance decodeEnableVpcClassicLinkDnsSupportResult :: Decode EnableVpcClassicLinkDnsSupportResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEnableVpcClassicLinkDnsSupportResult :: Encode EnableVpcClassicLinkDnsSupportResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EnableVpcClassicLinkDnsSupportResult from required parameters
newEnableVpcClassicLinkDnsSupportResult :: EnableVpcClassicLinkDnsSupportResult
newEnableVpcClassicLinkDnsSupportResult  = EnableVpcClassicLinkDnsSupportResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs EnableVpcClassicLinkDnsSupportResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEnableVpcClassicLinkDnsSupportResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> EnableVpcClassicLinkDnsSupportResult
newEnableVpcClassicLinkDnsSupportResult'  customize = (EnableVpcClassicLinkDnsSupportResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for EnableVpcClassicLink.</p>
newtype EnableVpcClassicLinkRequest = EnableVpcClassicLinkRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcId" :: (String)
  }
derive instance newtypeEnableVpcClassicLinkRequest :: Newtype EnableVpcClassicLinkRequest _
derive instance repGenericEnableVpcClassicLinkRequest :: Generic EnableVpcClassicLinkRequest _
instance showEnableVpcClassicLinkRequest :: Show EnableVpcClassicLinkRequest where
  show = genericShow
instance decodeEnableVpcClassicLinkRequest :: Decode EnableVpcClassicLinkRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEnableVpcClassicLinkRequest :: Encode EnableVpcClassicLinkRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EnableVpcClassicLinkRequest from required parameters
newEnableVpcClassicLinkRequest :: String -> EnableVpcClassicLinkRequest
newEnableVpcClassicLinkRequest _VpcId = EnableVpcClassicLinkRequest { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs EnableVpcClassicLinkRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEnableVpcClassicLinkRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcId" :: (String) } ) -> EnableVpcClassicLinkRequest
newEnableVpcClassicLinkRequest' _VpcId customize = (EnableVpcClassicLinkRequest <<< customize) { "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of EnableVpcClassicLink.</p>
newtype EnableVpcClassicLinkResult = EnableVpcClassicLinkResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeEnableVpcClassicLinkResult :: Newtype EnableVpcClassicLinkResult _
derive instance repGenericEnableVpcClassicLinkResult :: Generic EnableVpcClassicLinkResult _
instance showEnableVpcClassicLinkResult :: Show EnableVpcClassicLinkResult where
  show = genericShow
instance decodeEnableVpcClassicLinkResult :: Decode EnableVpcClassicLinkResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEnableVpcClassicLinkResult :: Encode EnableVpcClassicLinkResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EnableVpcClassicLinkResult from required parameters
newEnableVpcClassicLinkResult :: EnableVpcClassicLinkResult
newEnableVpcClassicLinkResult  = EnableVpcClassicLinkResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs EnableVpcClassicLinkResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEnableVpcClassicLinkResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> EnableVpcClassicLinkResult
newEnableVpcClassicLinkResult'  customize = (EnableVpcClassicLinkResult <<< customize) { "Return": (NullOrUndefined Nothing) }



newtype EventCode = EventCode String
derive instance newtypeEventCode :: Newtype EventCode _
derive instance repGenericEventCode :: Generic EventCode _
instance showEventCode :: Show EventCode where
  show = genericShow
instance decodeEventCode :: Decode EventCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEventCode :: Encode EventCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a Spot Fleet event.</p>
newtype EventInformation = EventInformation 
  { "EventDescription" :: NullOrUndefined.NullOrUndefined (String)
  , "EventSubType" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeEventInformation :: Newtype EventInformation _
derive instance repGenericEventInformation :: Generic EventInformation _
instance showEventInformation :: Show EventInformation where
  show = genericShow
instance decodeEventInformation :: Decode EventInformation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEventInformation :: Encode EventInformation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs EventInformation from required parameters
newEventInformation :: EventInformation
newEventInformation  = EventInformation { "EventDescription": (NullOrUndefined Nothing), "EventSubType": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }

-- | Constructs EventInformation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newEventInformation' :: ( { "EventDescription" :: NullOrUndefined.NullOrUndefined (String) , "EventSubType" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) } -> {"EventDescription" :: NullOrUndefined.NullOrUndefined (String) , "EventSubType" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) } ) -> EventInformation
newEventInformation'  customize = (EventInformation <<< customize) { "EventDescription": (NullOrUndefined Nothing), "EventSubType": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }



newtype EventType = EventType String
derive instance newtypeEventType :: Newtype EventType _
derive instance repGenericEventType :: Generic EventType _
instance showEventType :: Show EventType where
  show = genericShow
instance decodeEventType :: Decode EventType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeEventType :: Encode EventType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ExcessCapacityTerminationPolicy = ExcessCapacityTerminationPolicy String
derive instance newtypeExcessCapacityTerminationPolicy :: Newtype ExcessCapacityTerminationPolicy _
derive instance repGenericExcessCapacityTerminationPolicy :: Generic ExcessCapacityTerminationPolicy _
instance showExcessCapacityTerminationPolicy :: Show ExcessCapacityTerminationPolicy where
  show = genericShow
instance decodeExcessCapacityTerminationPolicy :: Decode ExcessCapacityTerminationPolicy where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeExcessCapacityTerminationPolicy :: Encode ExcessCapacityTerminationPolicy where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ExecutableByStringList = ExecutableByStringList (Array String)
derive instance newtypeExecutableByStringList :: Newtype ExecutableByStringList _
derive instance repGenericExecutableByStringList :: Generic ExecutableByStringList _
instance showExecutableByStringList :: Show ExecutableByStringList where
  show = genericShow
instance decodeExecutableByStringList :: Decode ExecutableByStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeExecutableByStringList :: Encode ExecutableByStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ExportEnvironment = ExportEnvironment String
derive instance newtypeExportEnvironment :: Newtype ExportEnvironment _
derive instance repGenericExportEnvironment :: Generic ExportEnvironment _
instance showExportEnvironment :: Show ExportEnvironment where
  show = genericShow
instance decodeExportEnvironment :: Decode ExportEnvironment where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeExportEnvironment :: Encode ExportEnvironment where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an instance export task.</p>
newtype ExportTask = ExportTask 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "ExportTaskId" :: NullOrUndefined.NullOrUndefined (String)
  , "ExportToS3Task" :: NullOrUndefined.NullOrUndefined (ExportToS3Task)
  , "InstanceExportDetails" :: NullOrUndefined.NullOrUndefined (InstanceExportDetails)
  , "State" :: NullOrUndefined.NullOrUndefined (ExportTaskState)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeExportTask :: Newtype ExportTask _
derive instance repGenericExportTask :: Generic ExportTask _
instance showExportTask :: Show ExportTask where
  show = genericShow
instance decodeExportTask :: Decode ExportTask where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeExportTask :: Encode ExportTask where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ExportTask from required parameters
newExportTask :: ExportTask
newExportTask  = ExportTask { "Description": (NullOrUndefined Nothing), "ExportTaskId": (NullOrUndefined Nothing), "ExportToS3Task": (NullOrUndefined Nothing), "InstanceExportDetails": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }

-- | Constructs ExportTask's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newExportTask' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "ExportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "ExportToS3Task" :: NullOrUndefined.NullOrUndefined (ExportToS3Task) , "InstanceExportDetails" :: NullOrUndefined.NullOrUndefined (InstanceExportDetails) , "State" :: NullOrUndefined.NullOrUndefined (ExportTaskState) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "ExportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "ExportToS3Task" :: NullOrUndefined.NullOrUndefined (ExportToS3Task) , "InstanceExportDetails" :: NullOrUndefined.NullOrUndefined (InstanceExportDetails) , "State" :: NullOrUndefined.NullOrUndefined (ExportTaskState) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } ) -> ExportTask
newExportTask'  customize = (ExportTask <<< customize) { "Description": (NullOrUndefined Nothing), "ExportTaskId": (NullOrUndefined Nothing), "ExportToS3Task": (NullOrUndefined Nothing), "InstanceExportDetails": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }



newtype ExportTaskIdStringList = ExportTaskIdStringList (Array String)
derive instance newtypeExportTaskIdStringList :: Newtype ExportTaskIdStringList _
derive instance repGenericExportTaskIdStringList :: Generic ExportTaskIdStringList _
instance showExportTaskIdStringList :: Show ExportTaskIdStringList where
  show = genericShow
instance decodeExportTaskIdStringList :: Decode ExportTaskIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeExportTaskIdStringList :: Encode ExportTaskIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ExportTaskList = ExportTaskList (Array ExportTask)
derive instance newtypeExportTaskList :: Newtype ExportTaskList _
derive instance repGenericExportTaskList :: Generic ExportTaskList _
instance showExportTaskList :: Show ExportTaskList where
  show = genericShow
instance decodeExportTaskList :: Decode ExportTaskList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeExportTaskList :: Encode ExportTaskList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ExportTaskState = ExportTaskState String
derive instance newtypeExportTaskState :: Newtype ExportTaskState _
derive instance repGenericExportTaskState :: Generic ExportTaskState _
instance showExportTaskState :: Show ExportTaskState where
  show = genericShow
instance decodeExportTaskState :: Decode ExportTaskState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeExportTaskState :: Encode ExportTaskState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the format and location for an instance export task.</p>
newtype ExportToS3Task = ExportToS3Task 
  { "ContainerFormat" :: NullOrUndefined.NullOrUndefined (ContainerFormat)
  , "DiskImageFormat" :: NullOrUndefined.NullOrUndefined (DiskImageFormat)
  , "S3Bucket" :: NullOrUndefined.NullOrUndefined (String)
  , "S3Key" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeExportToS3Task :: Newtype ExportToS3Task _
derive instance repGenericExportToS3Task :: Generic ExportToS3Task _
instance showExportToS3Task :: Show ExportToS3Task where
  show = genericShow
instance decodeExportToS3Task :: Decode ExportToS3Task where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeExportToS3Task :: Encode ExportToS3Task where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ExportToS3Task from required parameters
newExportToS3Task :: ExportToS3Task
newExportToS3Task  = ExportToS3Task { "ContainerFormat": (NullOrUndefined Nothing), "DiskImageFormat": (NullOrUndefined Nothing), "S3Bucket": (NullOrUndefined Nothing), "S3Key": (NullOrUndefined Nothing) }

-- | Constructs ExportToS3Task's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newExportToS3Task' :: ( { "ContainerFormat" :: NullOrUndefined.NullOrUndefined (ContainerFormat) , "DiskImageFormat" :: NullOrUndefined.NullOrUndefined (DiskImageFormat) , "S3Bucket" :: NullOrUndefined.NullOrUndefined (String) , "S3Key" :: NullOrUndefined.NullOrUndefined (String) } -> {"ContainerFormat" :: NullOrUndefined.NullOrUndefined (ContainerFormat) , "DiskImageFormat" :: NullOrUndefined.NullOrUndefined (DiskImageFormat) , "S3Bucket" :: NullOrUndefined.NullOrUndefined (String) , "S3Key" :: NullOrUndefined.NullOrUndefined (String) } ) -> ExportToS3Task
newExportToS3Task'  customize = (ExportToS3Task <<< customize) { "ContainerFormat": (NullOrUndefined Nothing), "DiskImageFormat": (NullOrUndefined Nothing), "S3Bucket": (NullOrUndefined Nothing), "S3Key": (NullOrUndefined Nothing) }



-- | <p>Describes an instance export task.</p>
newtype ExportToS3TaskSpecification = ExportToS3TaskSpecification 
  { "ContainerFormat" :: NullOrUndefined.NullOrUndefined (ContainerFormat)
  , "DiskImageFormat" :: NullOrUndefined.NullOrUndefined (DiskImageFormat)
  , "S3Bucket" :: NullOrUndefined.NullOrUndefined (String)
  , "S3Prefix" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeExportToS3TaskSpecification :: Newtype ExportToS3TaskSpecification _
derive instance repGenericExportToS3TaskSpecification :: Generic ExportToS3TaskSpecification _
instance showExportToS3TaskSpecification :: Show ExportToS3TaskSpecification where
  show = genericShow
instance decodeExportToS3TaskSpecification :: Decode ExportToS3TaskSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeExportToS3TaskSpecification :: Encode ExportToS3TaskSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ExportToS3TaskSpecification from required parameters
newExportToS3TaskSpecification :: ExportToS3TaskSpecification
newExportToS3TaskSpecification  = ExportToS3TaskSpecification { "ContainerFormat": (NullOrUndefined Nothing), "DiskImageFormat": (NullOrUndefined Nothing), "S3Bucket": (NullOrUndefined Nothing), "S3Prefix": (NullOrUndefined Nothing) }

-- | Constructs ExportToS3TaskSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newExportToS3TaskSpecification' :: ( { "ContainerFormat" :: NullOrUndefined.NullOrUndefined (ContainerFormat) , "DiskImageFormat" :: NullOrUndefined.NullOrUndefined (DiskImageFormat) , "S3Bucket" :: NullOrUndefined.NullOrUndefined (String) , "S3Prefix" :: NullOrUndefined.NullOrUndefined (String) } -> {"ContainerFormat" :: NullOrUndefined.NullOrUndefined (ContainerFormat) , "DiskImageFormat" :: NullOrUndefined.NullOrUndefined (DiskImageFormat) , "S3Bucket" :: NullOrUndefined.NullOrUndefined (String) , "S3Prefix" :: NullOrUndefined.NullOrUndefined (String) } ) -> ExportToS3TaskSpecification
newExportToS3TaskSpecification'  customize = (ExportToS3TaskSpecification <<< customize) { "ContainerFormat": (NullOrUndefined Nothing), "DiskImageFormat": (NullOrUndefined Nothing), "S3Bucket": (NullOrUndefined Nothing), "S3Prefix": (NullOrUndefined Nothing) }



-- | <p>A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria, such as tags, attributes, or IDs.</p>
newtype Filter = Filter 
  { "Name" :: NullOrUndefined.NullOrUndefined (String)
  , "Values" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeFilter :: Newtype Filter _
derive instance repGenericFilter :: Generic Filter _
instance showFilter :: Show Filter where
  show = genericShow
instance decodeFilter :: Decode Filter where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFilter :: Encode Filter where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Filter from required parameters
newFilter :: Filter
newFilter  = Filter { "Name": (NullOrUndefined Nothing), "Values": (NullOrUndefined Nothing) }

-- | Constructs Filter's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newFilter' :: ( { "Name" :: NullOrUndefined.NullOrUndefined (String) , "Values" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"Name" :: NullOrUndefined.NullOrUndefined (String) , "Values" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> Filter
newFilter'  customize = (Filter <<< customize) { "Name": (NullOrUndefined Nothing), "Values": (NullOrUndefined Nothing) }



newtype FilterList = FilterList (Array Filter)
derive instance newtypeFilterList :: Newtype FilterList _
derive instance repGenericFilterList :: Generic FilterList _
instance showFilterList :: Show FilterList where
  show = genericShow
instance decodeFilterList :: Decode FilterList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFilterList :: Encode FilterList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a launch template.</p>
newtype FleetLaunchTemplateSpecification = FleetLaunchTemplateSpecification 
  { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName)
  , "Version" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeFleetLaunchTemplateSpecification :: Newtype FleetLaunchTemplateSpecification _
derive instance repGenericFleetLaunchTemplateSpecification :: Generic FleetLaunchTemplateSpecification _
instance showFleetLaunchTemplateSpecification :: Show FleetLaunchTemplateSpecification where
  show = genericShow
instance decodeFleetLaunchTemplateSpecification :: Decode FleetLaunchTemplateSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFleetLaunchTemplateSpecification :: Encode FleetLaunchTemplateSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs FleetLaunchTemplateSpecification from required parameters
newFleetLaunchTemplateSpecification :: FleetLaunchTemplateSpecification
newFleetLaunchTemplateSpecification  = FleetLaunchTemplateSpecification { "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "Version": (NullOrUndefined Nothing) }

-- | Constructs FleetLaunchTemplateSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newFleetLaunchTemplateSpecification' :: ( { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "Version" :: NullOrUndefined.NullOrUndefined (String) } -> {"LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "Version" :: NullOrUndefined.NullOrUndefined (String) } ) -> FleetLaunchTemplateSpecification
newFleetLaunchTemplateSpecification'  customize = (FleetLaunchTemplateSpecification <<< customize) { "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "Version": (NullOrUndefined Nothing) }



newtype FleetType = FleetType String
derive instance newtypeFleetType :: Newtype FleetType _
derive instance repGenericFleetType :: Generic FleetType _
instance showFleetType :: Show FleetType where
  show = genericShow
instance decodeFleetType :: Decode FleetType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFleetType :: Encode FleetType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a flow log.</p>
newtype FlowLog = FlowLog 
  { "CreationTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "DeliverLogsErrorMessage" :: NullOrUndefined.NullOrUndefined (String)
  , "DeliverLogsPermissionArn" :: NullOrUndefined.NullOrUndefined (String)
  , "DeliverLogsStatus" :: NullOrUndefined.NullOrUndefined (String)
  , "FlowLogId" :: NullOrUndefined.NullOrUndefined (String)
  , "FlowLogStatus" :: NullOrUndefined.NullOrUndefined (String)
  , "LogGroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "ResourceId" :: NullOrUndefined.NullOrUndefined (String)
  , "TrafficType" :: NullOrUndefined.NullOrUndefined (TrafficType)
  }
derive instance newtypeFlowLog :: Newtype FlowLog _
derive instance repGenericFlowLog :: Generic FlowLog _
instance showFlowLog :: Show FlowLog where
  show = genericShow
instance decodeFlowLog :: Decode FlowLog where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFlowLog :: Encode FlowLog where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs FlowLog from required parameters
newFlowLog :: FlowLog
newFlowLog  = FlowLog { "CreationTime": (NullOrUndefined Nothing), "DeliverLogsErrorMessage": (NullOrUndefined Nothing), "DeliverLogsPermissionArn": (NullOrUndefined Nothing), "DeliverLogsStatus": (NullOrUndefined Nothing), "FlowLogId": (NullOrUndefined Nothing), "FlowLogStatus": (NullOrUndefined Nothing), "LogGroupName": (NullOrUndefined Nothing), "ResourceId": (NullOrUndefined Nothing), "TrafficType": (NullOrUndefined Nothing) }

-- | Constructs FlowLog's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newFlowLog' :: ( { "CreationTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "DeliverLogsErrorMessage" :: NullOrUndefined.NullOrUndefined (String) , "DeliverLogsPermissionArn" :: NullOrUndefined.NullOrUndefined (String) , "DeliverLogsStatus" :: NullOrUndefined.NullOrUndefined (String) , "FlowLogId" :: NullOrUndefined.NullOrUndefined (String) , "FlowLogStatus" :: NullOrUndefined.NullOrUndefined (String) , "LogGroupName" :: NullOrUndefined.NullOrUndefined (String) , "ResourceId" :: NullOrUndefined.NullOrUndefined (String) , "TrafficType" :: NullOrUndefined.NullOrUndefined (TrafficType) } -> {"CreationTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "DeliverLogsErrorMessage" :: NullOrUndefined.NullOrUndefined (String) , "DeliverLogsPermissionArn" :: NullOrUndefined.NullOrUndefined (String) , "DeliverLogsStatus" :: NullOrUndefined.NullOrUndefined (String) , "FlowLogId" :: NullOrUndefined.NullOrUndefined (String) , "FlowLogStatus" :: NullOrUndefined.NullOrUndefined (String) , "LogGroupName" :: NullOrUndefined.NullOrUndefined (String) , "ResourceId" :: NullOrUndefined.NullOrUndefined (String) , "TrafficType" :: NullOrUndefined.NullOrUndefined (TrafficType) } ) -> FlowLog
newFlowLog'  customize = (FlowLog <<< customize) { "CreationTime": (NullOrUndefined Nothing), "DeliverLogsErrorMessage": (NullOrUndefined Nothing), "DeliverLogsPermissionArn": (NullOrUndefined Nothing), "DeliverLogsStatus": (NullOrUndefined Nothing), "FlowLogId": (NullOrUndefined Nothing), "FlowLogStatus": (NullOrUndefined Nothing), "LogGroupName": (NullOrUndefined Nothing), "ResourceId": (NullOrUndefined Nothing), "TrafficType": (NullOrUndefined Nothing) }



newtype FlowLogSet = FlowLogSet (Array FlowLog)
derive instance newtypeFlowLogSet :: Newtype FlowLogSet _
derive instance repGenericFlowLogSet :: Generic FlowLogSet _
instance showFlowLogSet :: Show FlowLogSet where
  show = genericShow
instance decodeFlowLogSet :: Decode FlowLogSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFlowLogSet :: Encode FlowLogSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype FlowLogsResourceType = FlowLogsResourceType String
derive instance newtypeFlowLogsResourceType :: Newtype FlowLogsResourceType _
derive instance repGenericFlowLogsResourceType :: Generic FlowLogsResourceType _
instance showFlowLogsResourceType :: Show FlowLogsResourceType where
  show = genericShow
instance decodeFlowLogsResourceType :: Decode FlowLogsResourceType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFlowLogsResourceType :: Encode FlowLogsResourceType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an Amazon FPGA image (AFI).</p>
newtype FpgaImage = FpgaImage 
  { "FpgaImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "FpgaImageGlobalId" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "ShellVersion" :: NullOrUndefined.NullOrUndefined (String)
  , "PciId" :: NullOrUndefined.NullOrUndefined (PciId)
  , "State" :: NullOrUndefined.NullOrUndefined (FpgaImageState)
  , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "UpdateTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "OwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "OwnerAlias" :: NullOrUndefined.NullOrUndefined (String)
  , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "Public" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeFpgaImage :: Newtype FpgaImage _
derive instance repGenericFpgaImage :: Generic FpgaImage _
instance showFpgaImage :: Show FpgaImage where
  show = genericShow
instance decodeFpgaImage :: Decode FpgaImage where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFpgaImage :: Encode FpgaImage where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs FpgaImage from required parameters
newFpgaImage :: FpgaImage
newFpgaImage  = FpgaImage { "CreateTime": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "FpgaImageGlobalId": (NullOrUndefined Nothing), "FpgaImageId": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing), "OwnerAlias": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "PciId": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "Public": (NullOrUndefined Nothing), "ShellVersion": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "UpdateTime": (NullOrUndefined Nothing) }

-- | Constructs FpgaImage's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newFpgaImage' :: ( { "FpgaImageId" :: NullOrUndefined.NullOrUndefined (String) , "FpgaImageGlobalId" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "ShellVersion" :: NullOrUndefined.NullOrUndefined (String) , "PciId" :: NullOrUndefined.NullOrUndefined (PciId) , "State" :: NullOrUndefined.NullOrUndefined (FpgaImageState) , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "UpdateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "OwnerAlias" :: NullOrUndefined.NullOrUndefined (String) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "Public" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"FpgaImageId" :: NullOrUndefined.NullOrUndefined (String) , "FpgaImageGlobalId" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "ShellVersion" :: NullOrUndefined.NullOrUndefined (String) , "PciId" :: NullOrUndefined.NullOrUndefined (PciId) , "State" :: NullOrUndefined.NullOrUndefined (FpgaImageState) , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "UpdateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "OwnerAlias" :: NullOrUndefined.NullOrUndefined (String) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "Public" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> FpgaImage
newFpgaImage'  customize = (FpgaImage <<< customize) { "CreateTime": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "FpgaImageGlobalId": (NullOrUndefined Nothing), "FpgaImageId": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing), "OwnerAlias": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "PciId": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "Public": (NullOrUndefined Nothing), "ShellVersion": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "UpdateTime": (NullOrUndefined Nothing) }



-- | <p>Describes an Amazon FPGA image (AFI) attribute.</p>
newtype FpgaImageAttribute = FpgaImageAttribute 
  { "FpgaImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "LoadPermissions" :: NullOrUndefined.NullOrUndefined (LoadPermissionList)
  , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList)
  }
derive instance newtypeFpgaImageAttribute :: Newtype FpgaImageAttribute _
derive instance repGenericFpgaImageAttribute :: Generic FpgaImageAttribute _
instance showFpgaImageAttribute :: Show FpgaImageAttribute where
  show = genericShow
instance decodeFpgaImageAttribute :: Decode FpgaImageAttribute where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFpgaImageAttribute :: Encode FpgaImageAttribute where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs FpgaImageAttribute from required parameters
newFpgaImageAttribute :: FpgaImageAttribute
newFpgaImageAttribute  = FpgaImageAttribute { "Description": (NullOrUndefined Nothing), "FpgaImageId": (NullOrUndefined Nothing), "LoadPermissions": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing) }

-- | Constructs FpgaImageAttribute's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newFpgaImageAttribute' :: ( { "FpgaImageId" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "LoadPermissions" :: NullOrUndefined.NullOrUndefined (LoadPermissionList) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) } -> {"FpgaImageId" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "LoadPermissions" :: NullOrUndefined.NullOrUndefined (LoadPermissionList) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) } ) -> FpgaImageAttribute
newFpgaImageAttribute'  customize = (FpgaImageAttribute <<< customize) { "Description": (NullOrUndefined Nothing), "FpgaImageId": (NullOrUndefined Nothing), "LoadPermissions": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing) }



newtype FpgaImageAttributeName = FpgaImageAttributeName String
derive instance newtypeFpgaImageAttributeName :: Newtype FpgaImageAttributeName _
derive instance repGenericFpgaImageAttributeName :: Generic FpgaImageAttributeName _
instance showFpgaImageAttributeName :: Show FpgaImageAttributeName where
  show = genericShow
instance decodeFpgaImageAttributeName :: Decode FpgaImageAttributeName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFpgaImageAttributeName :: Encode FpgaImageAttributeName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype FpgaImageIdList = FpgaImageIdList (Array String)
derive instance newtypeFpgaImageIdList :: Newtype FpgaImageIdList _
derive instance repGenericFpgaImageIdList :: Generic FpgaImageIdList _
instance showFpgaImageIdList :: Show FpgaImageIdList where
  show = genericShow
instance decodeFpgaImageIdList :: Decode FpgaImageIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFpgaImageIdList :: Encode FpgaImageIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype FpgaImageList = FpgaImageList (Array FpgaImage)
derive instance newtypeFpgaImageList :: Newtype FpgaImageList _
derive instance repGenericFpgaImageList :: Generic FpgaImageList _
instance showFpgaImageList :: Show FpgaImageList where
  show = genericShow
instance decodeFpgaImageList :: Decode FpgaImageList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFpgaImageList :: Encode FpgaImageList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the state of the bitstream generation process for an Amazon FPGA image (AFI).</p>
newtype FpgaImageState = FpgaImageState 
  { "Code" :: NullOrUndefined.NullOrUndefined (FpgaImageStateCode)
  , "Message" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeFpgaImageState :: Newtype FpgaImageState _
derive instance repGenericFpgaImageState :: Generic FpgaImageState _
instance showFpgaImageState :: Show FpgaImageState where
  show = genericShow
instance decodeFpgaImageState :: Decode FpgaImageState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFpgaImageState :: Encode FpgaImageState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs FpgaImageState from required parameters
newFpgaImageState :: FpgaImageState
newFpgaImageState  = FpgaImageState { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }

-- | Constructs FpgaImageState's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newFpgaImageState' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (FpgaImageStateCode) , "Message" :: NullOrUndefined.NullOrUndefined (String) } -> {"Code" :: NullOrUndefined.NullOrUndefined (FpgaImageStateCode) , "Message" :: NullOrUndefined.NullOrUndefined (String) } ) -> FpgaImageState
newFpgaImageState'  customize = (FpgaImageState <<< customize) { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }



newtype FpgaImageStateCode = FpgaImageStateCode String
derive instance newtypeFpgaImageStateCode :: Newtype FpgaImageStateCode _
derive instance repGenericFpgaImageStateCode :: Generic FpgaImageStateCode _
instance showFpgaImageStateCode :: Show FpgaImageStateCode where
  show = genericShow
instance decodeFpgaImageStateCode :: Decode FpgaImageStateCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeFpgaImageStateCode :: Encode FpgaImageStateCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype GatewayType = GatewayType String
derive instance newtypeGatewayType :: Newtype GatewayType _
derive instance repGenericGatewayType :: Generic GatewayType _
instance showGatewayType :: Show GatewayType where
  show = genericShow
instance decodeGatewayType :: Decode GatewayType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGatewayType :: Encode GatewayType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for GetConsoleOutput.</p>
newtype GetConsoleOutputRequest = GetConsoleOutputRequest 
  { "InstanceId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeGetConsoleOutputRequest :: Newtype GetConsoleOutputRequest _
derive instance repGenericGetConsoleOutputRequest :: Generic GetConsoleOutputRequest _
instance showGetConsoleOutputRequest :: Show GetConsoleOutputRequest where
  show = genericShow
instance decodeGetConsoleOutputRequest :: Decode GetConsoleOutputRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetConsoleOutputRequest :: Encode GetConsoleOutputRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetConsoleOutputRequest from required parameters
newGetConsoleOutputRequest :: String -> GetConsoleOutputRequest
newGetConsoleOutputRequest _InstanceId = GetConsoleOutputRequest { "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs GetConsoleOutputRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetConsoleOutputRequest' :: String -> ( { "InstanceId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"InstanceId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> GetConsoleOutputRequest
newGetConsoleOutputRequest' _InstanceId customize = (GetConsoleOutputRequest <<< customize) { "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of GetConsoleOutput.</p>
newtype GetConsoleOutputResult = GetConsoleOutputResult 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "Output" :: NullOrUndefined.NullOrUndefined (String)
  , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeGetConsoleOutputResult :: Newtype GetConsoleOutputResult _
derive instance repGenericGetConsoleOutputResult :: Generic GetConsoleOutputResult _
instance showGetConsoleOutputResult :: Show GetConsoleOutputResult where
  show = genericShow
instance decodeGetConsoleOutputResult :: Decode GetConsoleOutputResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetConsoleOutputResult :: Encode GetConsoleOutputResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetConsoleOutputResult from required parameters
newGetConsoleOutputResult :: GetConsoleOutputResult
newGetConsoleOutputResult  = GetConsoleOutputResult { "InstanceId": (NullOrUndefined Nothing), "Output": (NullOrUndefined Nothing), "Timestamp": (NullOrUndefined Nothing) }

-- | Constructs GetConsoleOutputResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetConsoleOutputResult' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Output" :: NullOrUndefined.NullOrUndefined (String) , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Output" :: NullOrUndefined.NullOrUndefined (String) , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> GetConsoleOutputResult
newGetConsoleOutputResult'  customize = (GetConsoleOutputResult <<< customize) { "InstanceId": (NullOrUndefined Nothing), "Output": (NullOrUndefined Nothing), "Timestamp": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for the request.</p>
newtype GetConsoleScreenshotRequest = GetConsoleScreenshotRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceId" :: (String)
  , "WakeUp" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeGetConsoleScreenshotRequest :: Newtype GetConsoleScreenshotRequest _
derive instance repGenericGetConsoleScreenshotRequest :: Generic GetConsoleScreenshotRequest _
instance showGetConsoleScreenshotRequest :: Show GetConsoleScreenshotRequest where
  show = genericShow
instance decodeGetConsoleScreenshotRequest :: Decode GetConsoleScreenshotRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetConsoleScreenshotRequest :: Encode GetConsoleScreenshotRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetConsoleScreenshotRequest from required parameters
newGetConsoleScreenshotRequest :: String -> GetConsoleScreenshotRequest
newGetConsoleScreenshotRequest _InstanceId = GetConsoleScreenshotRequest { "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing), "WakeUp": (NullOrUndefined Nothing) }

-- | Constructs GetConsoleScreenshotRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetConsoleScreenshotRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) , "WakeUp" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) , "WakeUp" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> GetConsoleScreenshotRequest
newGetConsoleScreenshotRequest' _InstanceId customize = (GetConsoleScreenshotRequest <<< customize) { "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing), "WakeUp": (NullOrUndefined Nothing) }



-- | <p>Contains the output of the request.</p>
newtype GetConsoleScreenshotResult = GetConsoleScreenshotResult 
  { "ImageData" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeGetConsoleScreenshotResult :: Newtype GetConsoleScreenshotResult _
derive instance repGenericGetConsoleScreenshotResult :: Generic GetConsoleScreenshotResult _
instance showGetConsoleScreenshotResult :: Show GetConsoleScreenshotResult where
  show = genericShow
instance decodeGetConsoleScreenshotResult :: Decode GetConsoleScreenshotResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetConsoleScreenshotResult :: Encode GetConsoleScreenshotResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetConsoleScreenshotResult from required parameters
newGetConsoleScreenshotResult :: GetConsoleScreenshotResult
newGetConsoleScreenshotResult  = GetConsoleScreenshotResult { "ImageData": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }

-- | Constructs GetConsoleScreenshotResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetConsoleScreenshotResult' :: ( { "ImageData" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ImageData" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) } ) -> GetConsoleScreenshotResult
newGetConsoleScreenshotResult'  customize = (GetConsoleScreenshotResult <<< customize) { "ImageData": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }



newtype GetHostReservationPurchasePreviewRequest = GetHostReservationPurchasePreviewRequest 
  { "HostIdSet" :: (RequestHostIdSet)
  , "OfferingId" :: (String)
  }
derive instance newtypeGetHostReservationPurchasePreviewRequest :: Newtype GetHostReservationPurchasePreviewRequest _
derive instance repGenericGetHostReservationPurchasePreviewRequest :: Generic GetHostReservationPurchasePreviewRequest _
instance showGetHostReservationPurchasePreviewRequest :: Show GetHostReservationPurchasePreviewRequest where
  show = genericShow
instance decodeGetHostReservationPurchasePreviewRequest :: Decode GetHostReservationPurchasePreviewRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetHostReservationPurchasePreviewRequest :: Encode GetHostReservationPurchasePreviewRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetHostReservationPurchasePreviewRequest from required parameters
newGetHostReservationPurchasePreviewRequest :: RequestHostIdSet -> String -> GetHostReservationPurchasePreviewRequest
newGetHostReservationPurchasePreviewRequest _HostIdSet _OfferingId = GetHostReservationPurchasePreviewRequest { "HostIdSet": _HostIdSet, "OfferingId": _OfferingId }

-- | Constructs GetHostReservationPurchasePreviewRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetHostReservationPurchasePreviewRequest' :: RequestHostIdSet -> String -> ( { "HostIdSet" :: (RequestHostIdSet) , "OfferingId" :: (String) } -> {"HostIdSet" :: (RequestHostIdSet) , "OfferingId" :: (String) } ) -> GetHostReservationPurchasePreviewRequest
newGetHostReservationPurchasePreviewRequest' _HostIdSet _OfferingId customize = (GetHostReservationPurchasePreviewRequest <<< customize) { "HostIdSet": _HostIdSet, "OfferingId": _OfferingId }



newtype GetHostReservationPurchasePreviewResult = GetHostReservationPurchasePreviewResult 
  { "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  , "Purchase" :: NullOrUndefined.NullOrUndefined (PurchaseSet)
  , "TotalHourlyPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "TotalUpfrontPrice" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeGetHostReservationPurchasePreviewResult :: Newtype GetHostReservationPurchasePreviewResult _
derive instance repGenericGetHostReservationPurchasePreviewResult :: Generic GetHostReservationPurchasePreviewResult _
instance showGetHostReservationPurchasePreviewResult :: Show GetHostReservationPurchasePreviewResult where
  show = genericShow
instance decodeGetHostReservationPurchasePreviewResult :: Decode GetHostReservationPurchasePreviewResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetHostReservationPurchasePreviewResult :: Encode GetHostReservationPurchasePreviewResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetHostReservationPurchasePreviewResult from required parameters
newGetHostReservationPurchasePreviewResult :: GetHostReservationPurchasePreviewResult
newGetHostReservationPurchasePreviewResult  = GetHostReservationPurchasePreviewResult { "CurrencyCode": (NullOrUndefined Nothing), "Purchase": (NullOrUndefined Nothing), "TotalHourlyPrice": (NullOrUndefined Nothing), "TotalUpfrontPrice": (NullOrUndefined Nothing) }

-- | Constructs GetHostReservationPurchasePreviewResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetHostReservationPurchasePreviewResult' :: ( { "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Purchase" :: NullOrUndefined.NullOrUndefined (PurchaseSet) , "TotalHourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "TotalUpfrontPrice" :: NullOrUndefined.NullOrUndefined (String) } -> {"CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Purchase" :: NullOrUndefined.NullOrUndefined (PurchaseSet) , "TotalHourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "TotalUpfrontPrice" :: NullOrUndefined.NullOrUndefined (String) } ) -> GetHostReservationPurchasePreviewResult
newGetHostReservationPurchasePreviewResult'  customize = (GetHostReservationPurchasePreviewResult <<< customize) { "CurrencyCode": (NullOrUndefined Nothing), "Purchase": (NullOrUndefined Nothing), "TotalHourlyPrice": (NullOrUndefined Nothing), "TotalUpfrontPrice": (NullOrUndefined Nothing) }



newtype GetLaunchTemplateDataRequest = GetLaunchTemplateDataRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceId" :: (String)
  }
derive instance newtypeGetLaunchTemplateDataRequest :: Newtype GetLaunchTemplateDataRequest _
derive instance repGenericGetLaunchTemplateDataRequest :: Generic GetLaunchTemplateDataRequest _
instance showGetLaunchTemplateDataRequest :: Show GetLaunchTemplateDataRequest where
  show = genericShow
instance decodeGetLaunchTemplateDataRequest :: Decode GetLaunchTemplateDataRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetLaunchTemplateDataRequest :: Encode GetLaunchTemplateDataRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetLaunchTemplateDataRequest from required parameters
newGetLaunchTemplateDataRequest :: String -> GetLaunchTemplateDataRequest
newGetLaunchTemplateDataRequest _InstanceId = GetLaunchTemplateDataRequest { "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs GetLaunchTemplateDataRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetLaunchTemplateDataRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) } ) -> GetLaunchTemplateDataRequest
newGetLaunchTemplateDataRequest' _InstanceId customize = (GetLaunchTemplateDataRequest <<< customize) { "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing) }



newtype GetLaunchTemplateDataResult = GetLaunchTemplateDataResult 
  { "LaunchTemplateData" :: NullOrUndefined.NullOrUndefined (ResponseLaunchTemplateData)
  }
derive instance newtypeGetLaunchTemplateDataResult :: Newtype GetLaunchTemplateDataResult _
derive instance repGenericGetLaunchTemplateDataResult :: Generic GetLaunchTemplateDataResult _
instance showGetLaunchTemplateDataResult :: Show GetLaunchTemplateDataResult where
  show = genericShow
instance decodeGetLaunchTemplateDataResult :: Decode GetLaunchTemplateDataResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetLaunchTemplateDataResult :: Encode GetLaunchTemplateDataResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetLaunchTemplateDataResult from required parameters
newGetLaunchTemplateDataResult :: GetLaunchTemplateDataResult
newGetLaunchTemplateDataResult  = GetLaunchTemplateDataResult { "LaunchTemplateData": (NullOrUndefined Nothing) }

-- | Constructs GetLaunchTemplateDataResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetLaunchTemplateDataResult' :: ( { "LaunchTemplateData" :: NullOrUndefined.NullOrUndefined (ResponseLaunchTemplateData) } -> {"LaunchTemplateData" :: NullOrUndefined.NullOrUndefined (ResponseLaunchTemplateData) } ) -> GetLaunchTemplateDataResult
newGetLaunchTemplateDataResult'  customize = (GetLaunchTemplateDataResult <<< customize) { "LaunchTemplateData": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for GetPasswordData.</p>
newtype GetPasswordDataRequest = GetPasswordDataRequest 
  { "InstanceId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeGetPasswordDataRequest :: Newtype GetPasswordDataRequest _
derive instance repGenericGetPasswordDataRequest :: Generic GetPasswordDataRequest _
instance showGetPasswordDataRequest :: Show GetPasswordDataRequest where
  show = genericShow
instance decodeGetPasswordDataRequest :: Decode GetPasswordDataRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetPasswordDataRequest :: Encode GetPasswordDataRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetPasswordDataRequest from required parameters
newGetPasswordDataRequest :: String -> GetPasswordDataRequest
newGetPasswordDataRequest _InstanceId = GetPasswordDataRequest { "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs GetPasswordDataRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetPasswordDataRequest' :: String -> ( { "InstanceId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"InstanceId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> GetPasswordDataRequest
newGetPasswordDataRequest' _InstanceId customize = (GetPasswordDataRequest <<< customize) { "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of GetPasswordData.</p>
newtype GetPasswordDataResult = GetPasswordDataResult 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "PasswordData" :: NullOrUndefined.NullOrUndefined (String)
  , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeGetPasswordDataResult :: Newtype GetPasswordDataResult _
derive instance repGenericGetPasswordDataResult :: Generic GetPasswordDataResult _
instance showGetPasswordDataResult :: Show GetPasswordDataResult where
  show = genericShow
instance decodeGetPasswordDataResult :: Decode GetPasswordDataResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetPasswordDataResult :: Encode GetPasswordDataResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetPasswordDataResult from required parameters
newGetPasswordDataResult :: GetPasswordDataResult
newGetPasswordDataResult  = GetPasswordDataResult { "InstanceId": (NullOrUndefined Nothing), "PasswordData": (NullOrUndefined Nothing), "Timestamp": (NullOrUndefined Nothing) }

-- | Constructs GetPasswordDataResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetPasswordDataResult' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "PasswordData" :: NullOrUndefined.NullOrUndefined (String) , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "PasswordData" :: NullOrUndefined.NullOrUndefined (String) , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> GetPasswordDataResult
newGetPasswordDataResult'  customize = (GetPasswordDataResult <<< customize) { "InstanceId": (NullOrUndefined Nothing), "PasswordData": (NullOrUndefined Nothing), "Timestamp": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for GetReservedInstanceExchangeQuote.</p>
newtype GetReservedInstancesExchangeQuoteRequest = GetReservedInstancesExchangeQuoteRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ReservedInstanceIds" :: (ReservedInstanceIdSet)
  , "TargetConfigurations" :: NullOrUndefined.NullOrUndefined (TargetConfigurationRequestSet)
  }
derive instance newtypeGetReservedInstancesExchangeQuoteRequest :: Newtype GetReservedInstancesExchangeQuoteRequest _
derive instance repGenericGetReservedInstancesExchangeQuoteRequest :: Generic GetReservedInstancesExchangeQuoteRequest _
instance showGetReservedInstancesExchangeQuoteRequest :: Show GetReservedInstancesExchangeQuoteRequest where
  show = genericShow
instance decodeGetReservedInstancesExchangeQuoteRequest :: Decode GetReservedInstancesExchangeQuoteRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetReservedInstancesExchangeQuoteRequest :: Encode GetReservedInstancesExchangeQuoteRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetReservedInstancesExchangeQuoteRequest from required parameters
newGetReservedInstancesExchangeQuoteRequest :: ReservedInstanceIdSet -> GetReservedInstancesExchangeQuoteRequest
newGetReservedInstancesExchangeQuoteRequest _ReservedInstanceIds = GetReservedInstancesExchangeQuoteRequest { "ReservedInstanceIds": _ReservedInstanceIds, "DryRun": (NullOrUndefined Nothing), "TargetConfigurations": (NullOrUndefined Nothing) }

-- | Constructs GetReservedInstancesExchangeQuoteRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetReservedInstancesExchangeQuoteRequest' :: ReservedInstanceIdSet -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ReservedInstanceIds" :: (ReservedInstanceIdSet) , "TargetConfigurations" :: NullOrUndefined.NullOrUndefined (TargetConfigurationRequestSet) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ReservedInstanceIds" :: (ReservedInstanceIdSet) , "TargetConfigurations" :: NullOrUndefined.NullOrUndefined (TargetConfigurationRequestSet) } ) -> GetReservedInstancesExchangeQuoteRequest
newGetReservedInstancesExchangeQuoteRequest' _ReservedInstanceIds customize = (GetReservedInstancesExchangeQuoteRequest <<< customize) { "ReservedInstanceIds": _ReservedInstanceIds, "DryRun": (NullOrUndefined Nothing), "TargetConfigurations": (NullOrUndefined Nothing) }



-- | <p>Contains the output of GetReservedInstancesExchangeQuote.</p>
newtype GetReservedInstancesExchangeQuoteResult = GetReservedInstancesExchangeQuoteResult 
  { "CurrencyCode" :: NullOrUndefined.NullOrUndefined (String)
  , "IsValidExchange" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "OutputReservedInstancesWillExpireAt" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "PaymentDue" :: NullOrUndefined.NullOrUndefined (String)
  , "ReservedInstanceValueRollup" :: NullOrUndefined.NullOrUndefined (ReservationValue)
  , "ReservedInstanceValueSet" :: NullOrUndefined.NullOrUndefined (ReservedInstanceReservationValueSet)
  , "TargetConfigurationValueRollup" :: NullOrUndefined.NullOrUndefined (ReservationValue)
  , "TargetConfigurationValueSet" :: NullOrUndefined.NullOrUndefined (TargetReservationValueSet)
  , "ValidationFailureReason" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeGetReservedInstancesExchangeQuoteResult :: Newtype GetReservedInstancesExchangeQuoteResult _
derive instance repGenericGetReservedInstancesExchangeQuoteResult :: Generic GetReservedInstancesExchangeQuoteResult _
instance showGetReservedInstancesExchangeQuoteResult :: Show GetReservedInstancesExchangeQuoteResult where
  show = genericShow
instance decodeGetReservedInstancesExchangeQuoteResult :: Decode GetReservedInstancesExchangeQuoteResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGetReservedInstancesExchangeQuoteResult :: Encode GetReservedInstancesExchangeQuoteResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GetReservedInstancesExchangeQuoteResult from required parameters
newGetReservedInstancesExchangeQuoteResult :: GetReservedInstancesExchangeQuoteResult
newGetReservedInstancesExchangeQuoteResult  = GetReservedInstancesExchangeQuoteResult { "CurrencyCode": (NullOrUndefined Nothing), "IsValidExchange": (NullOrUndefined Nothing), "OutputReservedInstancesWillExpireAt": (NullOrUndefined Nothing), "PaymentDue": (NullOrUndefined Nothing), "ReservedInstanceValueRollup": (NullOrUndefined Nothing), "ReservedInstanceValueSet": (NullOrUndefined Nothing), "TargetConfigurationValueRollup": (NullOrUndefined Nothing), "TargetConfigurationValueSet": (NullOrUndefined Nothing), "ValidationFailureReason": (NullOrUndefined Nothing) }

-- | Constructs GetReservedInstancesExchangeQuoteResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGetReservedInstancesExchangeQuoteResult' :: ( { "CurrencyCode" :: NullOrUndefined.NullOrUndefined (String) , "IsValidExchange" :: NullOrUndefined.NullOrUndefined (Boolean) , "OutputReservedInstancesWillExpireAt" :: NullOrUndefined.NullOrUndefined (DateTime) , "PaymentDue" :: NullOrUndefined.NullOrUndefined (String) , "ReservedInstanceValueRollup" :: NullOrUndefined.NullOrUndefined (ReservationValue) , "ReservedInstanceValueSet" :: NullOrUndefined.NullOrUndefined (ReservedInstanceReservationValueSet) , "TargetConfigurationValueRollup" :: NullOrUndefined.NullOrUndefined (ReservationValue) , "TargetConfigurationValueSet" :: NullOrUndefined.NullOrUndefined (TargetReservationValueSet) , "ValidationFailureReason" :: NullOrUndefined.NullOrUndefined (String) } -> {"CurrencyCode" :: NullOrUndefined.NullOrUndefined (String) , "IsValidExchange" :: NullOrUndefined.NullOrUndefined (Boolean) , "OutputReservedInstancesWillExpireAt" :: NullOrUndefined.NullOrUndefined (DateTime) , "PaymentDue" :: NullOrUndefined.NullOrUndefined (String) , "ReservedInstanceValueRollup" :: NullOrUndefined.NullOrUndefined (ReservationValue) , "ReservedInstanceValueSet" :: NullOrUndefined.NullOrUndefined (ReservedInstanceReservationValueSet) , "TargetConfigurationValueRollup" :: NullOrUndefined.NullOrUndefined (ReservationValue) , "TargetConfigurationValueSet" :: NullOrUndefined.NullOrUndefined (TargetReservationValueSet) , "ValidationFailureReason" :: NullOrUndefined.NullOrUndefined (String) } ) -> GetReservedInstancesExchangeQuoteResult
newGetReservedInstancesExchangeQuoteResult'  customize = (GetReservedInstancesExchangeQuoteResult <<< customize) { "CurrencyCode": (NullOrUndefined Nothing), "IsValidExchange": (NullOrUndefined Nothing), "OutputReservedInstancesWillExpireAt": (NullOrUndefined Nothing), "PaymentDue": (NullOrUndefined Nothing), "ReservedInstanceValueRollup": (NullOrUndefined Nothing), "ReservedInstanceValueSet": (NullOrUndefined Nothing), "TargetConfigurationValueRollup": (NullOrUndefined Nothing), "TargetConfigurationValueSet": (NullOrUndefined Nothing), "ValidationFailureReason": (NullOrUndefined Nothing) }



newtype GroupIdStringList = GroupIdStringList (Array String)
derive instance newtypeGroupIdStringList :: Newtype GroupIdStringList _
derive instance repGenericGroupIdStringList :: Generic GroupIdStringList _
instance showGroupIdStringList :: Show GroupIdStringList where
  show = genericShow
instance decodeGroupIdStringList :: Decode GroupIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGroupIdStringList :: Encode GroupIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a security group.</p>
newtype GroupIdentifier = GroupIdentifier 
  { "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeGroupIdentifier :: Newtype GroupIdentifier _
derive instance repGenericGroupIdentifier :: Generic GroupIdentifier _
instance showGroupIdentifier :: Show GroupIdentifier where
  show = genericShow
instance decodeGroupIdentifier :: Decode GroupIdentifier where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGroupIdentifier :: Encode GroupIdentifier where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs GroupIdentifier from required parameters
newGroupIdentifier :: GroupIdentifier
newGroupIdentifier  = GroupIdentifier { "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }

-- | Constructs GroupIdentifier's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newGroupIdentifier' :: ( { "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) } -> {"GroupName" :: NullOrUndefined.NullOrUndefined (String) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) } ) -> GroupIdentifier
newGroupIdentifier'  customize = (GroupIdentifier <<< customize) { "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }



newtype GroupIdentifierList = GroupIdentifierList (Array GroupIdentifier)
derive instance newtypeGroupIdentifierList :: Newtype GroupIdentifierList _
derive instance repGenericGroupIdentifierList :: Generic GroupIdentifierList _
instance showGroupIdentifierList :: Show GroupIdentifierList where
  show = genericShow
instance decodeGroupIdentifierList :: Decode GroupIdentifierList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGroupIdentifierList :: Encode GroupIdentifierList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype GroupIdentifierSet = GroupIdentifierSet (Array SecurityGroupIdentifier)
derive instance newtypeGroupIdentifierSet :: Newtype GroupIdentifierSet _
derive instance repGenericGroupIdentifierSet :: Generic GroupIdentifierSet _
instance showGroupIdentifierSet :: Show GroupIdentifierSet where
  show = genericShow
instance decodeGroupIdentifierSet :: Decode GroupIdentifierSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGroupIdentifierSet :: Encode GroupIdentifierSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype GroupIds = GroupIds (Array String)
derive instance newtypeGroupIds :: Newtype GroupIds _
derive instance repGenericGroupIds :: Generic GroupIds _
instance showGroupIds :: Show GroupIds where
  show = genericShow
instance decodeGroupIds :: Decode GroupIds where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGroupIds :: Encode GroupIds where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype GroupNameStringList = GroupNameStringList (Array String)
derive instance newtypeGroupNameStringList :: Newtype GroupNameStringList _
derive instance repGenericGroupNameStringList :: Generic GroupNameStringList _
instance showGroupNameStringList :: Show GroupNameStringList where
  show = genericShow
instance decodeGroupNameStringList :: Decode GroupNameStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeGroupNameStringList :: Encode GroupNameStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an event in the history of the Spot Fleet request.</p>
newtype HistoryRecord = HistoryRecord 
  { "EventInformation" :: (EventInformation)
  , "EventType" :: (EventType)
  , "Timestamp" :: (DateTime)
  }
derive instance newtypeHistoryRecord :: Newtype HistoryRecord _
derive instance repGenericHistoryRecord :: Generic HistoryRecord _
instance showHistoryRecord :: Show HistoryRecord where
  show = genericShow
instance decodeHistoryRecord :: Decode HistoryRecord where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHistoryRecord :: Encode HistoryRecord where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs HistoryRecord from required parameters
newHistoryRecord :: EventInformation -> EventType -> DateTime -> HistoryRecord
newHistoryRecord _EventInformation _EventType _Timestamp = HistoryRecord { "EventInformation": _EventInformation, "EventType": _EventType, "Timestamp": _Timestamp }

-- | Constructs HistoryRecord's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newHistoryRecord' :: EventInformation -> EventType -> DateTime -> ( { "EventInformation" :: (EventInformation) , "EventType" :: (EventType) , "Timestamp" :: (DateTime) } -> {"EventInformation" :: (EventInformation) , "EventType" :: (EventType) , "Timestamp" :: (DateTime) } ) -> HistoryRecord
newHistoryRecord' _EventInformation _EventType _Timestamp customize = (HistoryRecord <<< customize) { "EventInformation": _EventInformation, "EventType": _EventType, "Timestamp": _Timestamp }



newtype HistoryRecords = HistoryRecords (Array HistoryRecord)
derive instance newtypeHistoryRecords :: Newtype HistoryRecords _
derive instance repGenericHistoryRecords :: Generic HistoryRecords _
instance showHistoryRecords :: Show HistoryRecords where
  show = genericShow
instance decodeHistoryRecords :: Decode HistoryRecords where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHistoryRecords :: Encode HistoryRecords where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the properties of the Dedicated Host.</p>
newtype Host = Host 
  { "AutoPlacement" :: NullOrUndefined.NullOrUndefined (AutoPlacement)
  , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "AvailableCapacity" :: NullOrUndefined.NullOrUndefined (AvailableCapacity)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "HostId" :: NullOrUndefined.NullOrUndefined (String)
  , "HostProperties" :: NullOrUndefined.NullOrUndefined (HostProperties)
  , "HostReservationId" :: NullOrUndefined.NullOrUndefined (String)
  , "Instances" :: NullOrUndefined.NullOrUndefined (HostInstanceList)
  , "State" :: NullOrUndefined.NullOrUndefined (AllocationState)
  }
derive instance newtypeHost :: Newtype Host _
derive instance repGenericHost :: Generic Host _
instance showHost :: Show Host where
  show = genericShow
instance decodeHost :: Decode Host where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHost :: Encode Host where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Host from required parameters
newHost :: Host
newHost  = Host { "AutoPlacement": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "AvailableCapacity": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "HostId": (NullOrUndefined Nothing), "HostProperties": (NullOrUndefined Nothing), "HostReservationId": (NullOrUndefined Nothing), "Instances": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }

-- | Constructs Host's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newHost' :: ( { "AutoPlacement" :: NullOrUndefined.NullOrUndefined (AutoPlacement) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "AvailableCapacity" :: NullOrUndefined.NullOrUndefined (AvailableCapacity) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "HostId" :: NullOrUndefined.NullOrUndefined (String) , "HostProperties" :: NullOrUndefined.NullOrUndefined (HostProperties) , "HostReservationId" :: NullOrUndefined.NullOrUndefined (String) , "Instances" :: NullOrUndefined.NullOrUndefined (HostInstanceList) , "State" :: NullOrUndefined.NullOrUndefined (AllocationState) } -> {"AutoPlacement" :: NullOrUndefined.NullOrUndefined (AutoPlacement) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "AvailableCapacity" :: NullOrUndefined.NullOrUndefined (AvailableCapacity) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "HostId" :: NullOrUndefined.NullOrUndefined (String) , "HostProperties" :: NullOrUndefined.NullOrUndefined (HostProperties) , "HostReservationId" :: NullOrUndefined.NullOrUndefined (String) , "Instances" :: NullOrUndefined.NullOrUndefined (HostInstanceList) , "State" :: NullOrUndefined.NullOrUndefined (AllocationState) } ) -> Host
newHost'  customize = (Host <<< customize) { "AutoPlacement": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "AvailableCapacity": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "HostId": (NullOrUndefined Nothing), "HostProperties": (NullOrUndefined Nothing), "HostReservationId": (NullOrUndefined Nothing), "Instances": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }



-- | <p>Describes an instance running on a Dedicated Host.</p>
newtype HostInstance = HostInstance 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeHostInstance :: Newtype HostInstance _
derive instance repGenericHostInstance :: Generic HostInstance _
instance showHostInstance :: Show HostInstance where
  show = genericShow
instance decodeHostInstance :: Decode HostInstance where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHostInstance :: Encode HostInstance where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs HostInstance from required parameters
newHostInstance :: HostInstance
newHostInstance  = HostInstance { "InstanceId": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing) }

-- | Constructs HostInstance's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newHostInstance' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) } ) -> HostInstance
newHostInstance'  customize = (HostInstance <<< customize) { "InstanceId": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing) }



newtype HostInstanceList = HostInstanceList (Array HostInstance)
derive instance newtypeHostInstanceList :: Newtype HostInstanceList _
derive instance repGenericHostInstanceList :: Generic HostInstanceList _
instance showHostInstanceList :: Show HostInstanceList where
  show = genericShow
instance decodeHostInstanceList :: Decode HostInstanceList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHostInstanceList :: Encode HostInstanceList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype HostList = HostList (Array Host)
derive instance newtypeHostList :: Newtype HostList _
derive instance repGenericHostList :: Generic HostList _
instance showHostList :: Show HostList where
  show = genericShow
instance decodeHostList :: Decode HostList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHostList :: Encode HostList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Details about the Dedicated Host Reservation offering.</p>
newtype HostOffering = HostOffering 
  { "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  , "Duration" :: NullOrUndefined.NullOrUndefined (Int)
  , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceFamily" :: NullOrUndefined.NullOrUndefined (String)
  , "OfferingId" :: NullOrUndefined.NullOrUndefined (String)
  , "PaymentOption" :: NullOrUndefined.NullOrUndefined (PaymentOption)
  , "UpfrontPrice" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeHostOffering :: Newtype HostOffering _
derive instance repGenericHostOffering :: Generic HostOffering _
instance showHostOffering :: Show HostOffering where
  show = genericShow
instance decodeHostOffering :: Decode HostOffering where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHostOffering :: Encode HostOffering where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs HostOffering from required parameters
newHostOffering :: HostOffering
newHostOffering  = HostOffering { "CurrencyCode": (NullOrUndefined Nothing), "Duration": (NullOrUndefined Nothing), "HourlyPrice": (NullOrUndefined Nothing), "InstanceFamily": (NullOrUndefined Nothing), "OfferingId": (NullOrUndefined Nothing), "PaymentOption": (NullOrUndefined Nothing), "UpfrontPrice": (NullOrUndefined Nothing) }

-- | Constructs HostOffering's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newHostOffering' :: ( { "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Duration" :: NullOrUndefined.NullOrUndefined (Int) , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "InstanceFamily" :: NullOrUndefined.NullOrUndefined (String) , "OfferingId" :: NullOrUndefined.NullOrUndefined (String) , "PaymentOption" :: NullOrUndefined.NullOrUndefined (PaymentOption) , "UpfrontPrice" :: NullOrUndefined.NullOrUndefined (String) } -> {"CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Duration" :: NullOrUndefined.NullOrUndefined (Int) , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "InstanceFamily" :: NullOrUndefined.NullOrUndefined (String) , "OfferingId" :: NullOrUndefined.NullOrUndefined (String) , "PaymentOption" :: NullOrUndefined.NullOrUndefined (PaymentOption) , "UpfrontPrice" :: NullOrUndefined.NullOrUndefined (String) } ) -> HostOffering
newHostOffering'  customize = (HostOffering <<< customize) { "CurrencyCode": (NullOrUndefined Nothing), "Duration": (NullOrUndefined Nothing), "HourlyPrice": (NullOrUndefined Nothing), "InstanceFamily": (NullOrUndefined Nothing), "OfferingId": (NullOrUndefined Nothing), "PaymentOption": (NullOrUndefined Nothing), "UpfrontPrice": (NullOrUndefined Nothing) }



newtype HostOfferingSet = HostOfferingSet (Array HostOffering)
derive instance newtypeHostOfferingSet :: Newtype HostOfferingSet _
derive instance repGenericHostOfferingSet :: Generic HostOfferingSet _
instance showHostOfferingSet :: Show HostOfferingSet where
  show = genericShow
instance decodeHostOfferingSet :: Decode HostOfferingSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHostOfferingSet :: Encode HostOfferingSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes properties of a Dedicated Host.</p>
newtype HostProperties = HostProperties 
  { "Cores" :: NullOrUndefined.NullOrUndefined (Int)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (String)
  , "Sockets" :: NullOrUndefined.NullOrUndefined (Int)
  , "TotalVCpus" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeHostProperties :: Newtype HostProperties _
derive instance repGenericHostProperties :: Generic HostProperties _
instance showHostProperties :: Show HostProperties where
  show = genericShow
instance decodeHostProperties :: Decode HostProperties where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHostProperties :: Encode HostProperties where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs HostProperties from required parameters
newHostProperties :: HostProperties
newHostProperties  = HostProperties { "Cores": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Sockets": (NullOrUndefined Nothing), "TotalVCpus": (NullOrUndefined Nothing) }

-- | Constructs HostProperties's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newHostProperties' :: ( { "Cores" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "Sockets" :: NullOrUndefined.NullOrUndefined (Int) , "TotalVCpus" :: NullOrUndefined.NullOrUndefined (Int) } -> {"Cores" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "Sockets" :: NullOrUndefined.NullOrUndefined (Int) , "TotalVCpus" :: NullOrUndefined.NullOrUndefined (Int) } ) -> HostProperties
newHostProperties'  customize = (HostProperties <<< customize) { "Cores": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Sockets": (NullOrUndefined Nothing), "TotalVCpus": (NullOrUndefined Nothing) }



-- | <p>Details about the Dedicated Host Reservation and associated Dedicated Hosts.</p>
newtype HostReservation = HostReservation 
  { "Count" :: NullOrUndefined.NullOrUndefined (Int)
  , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  , "Duration" :: NullOrUndefined.NullOrUndefined (Int)
  , "End" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "HostIdSet" :: NullOrUndefined.NullOrUndefined (ResponseHostIdSet)
  , "HostReservationId" :: NullOrUndefined.NullOrUndefined (String)
  , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceFamily" :: NullOrUndefined.NullOrUndefined (String)
  , "OfferingId" :: NullOrUndefined.NullOrUndefined (String)
  , "PaymentOption" :: NullOrUndefined.NullOrUndefined (PaymentOption)
  , "Start" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "State" :: NullOrUndefined.NullOrUndefined (ReservationState)
  , "UpfrontPrice" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeHostReservation :: Newtype HostReservation _
derive instance repGenericHostReservation :: Generic HostReservation _
instance showHostReservation :: Show HostReservation where
  show = genericShow
instance decodeHostReservation :: Decode HostReservation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHostReservation :: Encode HostReservation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs HostReservation from required parameters
newHostReservation :: HostReservation
newHostReservation  = HostReservation { "Count": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "Duration": (NullOrUndefined Nothing), "End": (NullOrUndefined Nothing), "HostIdSet": (NullOrUndefined Nothing), "HostReservationId": (NullOrUndefined Nothing), "HourlyPrice": (NullOrUndefined Nothing), "InstanceFamily": (NullOrUndefined Nothing), "OfferingId": (NullOrUndefined Nothing), "PaymentOption": (NullOrUndefined Nothing), "Start": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "UpfrontPrice": (NullOrUndefined Nothing) }

-- | Constructs HostReservation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newHostReservation' :: ( { "Count" :: NullOrUndefined.NullOrUndefined (Int) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Duration" :: NullOrUndefined.NullOrUndefined (Int) , "End" :: NullOrUndefined.NullOrUndefined (DateTime) , "HostIdSet" :: NullOrUndefined.NullOrUndefined (ResponseHostIdSet) , "HostReservationId" :: NullOrUndefined.NullOrUndefined (String) , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "InstanceFamily" :: NullOrUndefined.NullOrUndefined (String) , "OfferingId" :: NullOrUndefined.NullOrUndefined (String) , "PaymentOption" :: NullOrUndefined.NullOrUndefined (PaymentOption) , "Start" :: NullOrUndefined.NullOrUndefined (DateTime) , "State" :: NullOrUndefined.NullOrUndefined (ReservationState) , "UpfrontPrice" :: NullOrUndefined.NullOrUndefined (String) } -> {"Count" :: NullOrUndefined.NullOrUndefined (Int) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Duration" :: NullOrUndefined.NullOrUndefined (Int) , "End" :: NullOrUndefined.NullOrUndefined (DateTime) , "HostIdSet" :: NullOrUndefined.NullOrUndefined (ResponseHostIdSet) , "HostReservationId" :: NullOrUndefined.NullOrUndefined (String) , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "InstanceFamily" :: NullOrUndefined.NullOrUndefined (String) , "OfferingId" :: NullOrUndefined.NullOrUndefined (String) , "PaymentOption" :: NullOrUndefined.NullOrUndefined (PaymentOption) , "Start" :: NullOrUndefined.NullOrUndefined (DateTime) , "State" :: NullOrUndefined.NullOrUndefined (ReservationState) , "UpfrontPrice" :: NullOrUndefined.NullOrUndefined (String) } ) -> HostReservation
newHostReservation'  customize = (HostReservation <<< customize) { "Count": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "Duration": (NullOrUndefined Nothing), "End": (NullOrUndefined Nothing), "HostIdSet": (NullOrUndefined Nothing), "HostReservationId": (NullOrUndefined Nothing), "HourlyPrice": (NullOrUndefined Nothing), "InstanceFamily": (NullOrUndefined Nothing), "OfferingId": (NullOrUndefined Nothing), "PaymentOption": (NullOrUndefined Nothing), "Start": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "UpfrontPrice": (NullOrUndefined Nothing) }



newtype HostReservationIdSet = HostReservationIdSet (Array String)
derive instance newtypeHostReservationIdSet :: Newtype HostReservationIdSet _
derive instance repGenericHostReservationIdSet :: Generic HostReservationIdSet _
instance showHostReservationIdSet :: Show HostReservationIdSet where
  show = genericShow
instance decodeHostReservationIdSet :: Decode HostReservationIdSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHostReservationIdSet :: Encode HostReservationIdSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype HostReservationSet = HostReservationSet (Array HostReservation)
derive instance newtypeHostReservationSet :: Newtype HostReservationSet _
derive instance repGenericHostReservationSet :: Generic HostReservationSet _
instance showHostReservationSet :: Show HostReservationSet where
  show = genericShow
instance decodeHostReservationSet :: Decode HostReservationSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHostReservationSet :: Encode HostReservationSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype HostTenancy = HostTenancy String
derive instance newtypeHostTenancy :: Newtype HostTenancy _
derive instance repGenericHostTenancy :: Generic HostTenancy _
instance showHostTenancy :: Show HostTenancy where
  show = genericShow
instance decodeHostTenancy :: Decode HostTenancy where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHostTenancy :: Encode HostTenancy where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype HypervisorType = HypervisorType String
derive instance newtypeHypervisorType :: Newtype HypervisorType _
derive instance repGenericHypervisorType :: Generic HypervisorType _
instance showHypervisorType :: Show HypervisorType where
  show = genericShow
instance decodeHypervisorType :: Decode HypervisorType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeHypervisorType :: Encode HypervisorType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IAM instance profile.</p>
newtype IamInstanceProfile = IamInstanceProfile 
  { "Arn" :: NullOrUndefined.NullOrUndefined (String)
  , "Id" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeIamInstanceProfile :: Newtype IamInstanceProfile _
derive instance repGenericIamInstanceProfile :: Generic IamInstanceProfile _
instance showIamInstanceProfile :: Show IamInstanceProfile where
  show = genericShow
instance decodeIamInstanceProfile :: Decode IamInstanceProfile where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIamInstanceProfile :: Encode IamInstanceProfile where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs IamInstanceProfile from required parameters
newIamInstanceProfile :: IamInstanceProfile
newIamInstanceProfile  = IamInstanceProfile { "Arn": (NullOrUndefined Nothing), "Id": (NullOrUndefined Nothing) }

-- | Constructs IamInstanceProfile's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newIamInstanceProfile' :: ( { "Arn" :: NullOrUndefined.NullOrUndefined (String) , "Id" :: NullOrUndefined.NullOrUndefined (String) } -> {"Arn" :: NullOrUndefined.NullOrUndefined (String) , "Id" :: NullOrUndefined.NullOrUndefined (String) } ) -> IamInstanceProfile
newIamInstanceProfile'  customize = (IamInstanceProfile <<< customize) { "Arn": (NullOrUndefined Nothing), "Id": (NullOrUndefined Nothing) }



-- | <p>Describes an association between an IAM instance profile and an instance.</p>
newtype IamInstanceProfileAssociation = IamInstanceProfileAssociation 
  { "AssociationId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfile)
  , "State" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociationState)
  , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeIamInstanceProfileAssociation :: Newtype IamInstanceProfileAssociation _
derive instance repGenericIamInstanceProfileAssociation :: Generic IamInstanceProfileAssociation _
instance showIamInstanceProfileAssociation :: Show IamInstanceProfileAssociation where
  show = genericShow
instance decodeIamInstanceProfileAssociation :: Decode IamInstanceProfileAssociation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIamInstanceProfileAssociation :: Encode IamInstanceProfileAssociation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs IamInstanceProfileAssociation from required parameters
newIamInstanceProfileAssociation :: IamInstanceProfileAssociation
newIamInstanceProfileAssociation  = IamInstanceProfileAssociation { "AssociationId": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Timestamp": (NullOrUndefined Nothing) }

-- | Constructs IamInstanceProfileAssociation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newIamInstanceProfileAssociation' :: ( { "AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfile) , "State" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociationState) , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfile) , "State" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociationState) , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> IamInstanceProfileAssociation
newIamInstanceProfileAssociation'  customize = (IamInstanceProfileAssociation <<< customize) { "AssociationId": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Timestamp": (NullOrUndefined Nothing) }



newtype IamInstanceProfileAssociationSet = IamInstanceProfileAssociationSet (Array IamInstanceProfileAssociation)
derive instance newtypeIamInstanceProfileAssociationSet :: Newtype IamInstanceProfileAssociationSet _
derive instance repGenericIamInstanceProfileAssociationSet :: Generic IamInstanceProfileAssociationSet _
instance showIamInstanceProfileAssociationSet :: Show IamInstanceProfileAssociationSet where
  show = genericShow
instance decodeIamInstanceProfileAssociationSet :: Decode IamInstanceProfileAssociationSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIamInstanceProfileAssociationSet :: Encode IamInstanceProfileAssociationSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype IamInstanceProfileAssociationState = IamInstanceProfileAssociationState String
derive instance newtypeIamInstanceProfileAssociationState :: Newtype IamInstanceProfileAssociationState _
derive instance repGenericIamInstanceProfileAssociationState :: Generic IamInstanceProfileAssociationState _
instance showIamInstanceProfileAssociationState :: Show IamInstanceProfileAssociationState where
  show = genericShow
instance decodeIamInstanceProfileAssociationState :: Decode IamInstanceProfileAssociationState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIamInstanceProfileAssociationState :: Encode IamInstanceProfileAssociationState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IAM instance profile.</p>
newtype IamInstanceProfileSpecification = IamInstanceProfileSpecification 
  { "Arn" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeIamInstanceProfileSpecification :: Newtype IamInstanceProfileSpecification _
derive instance repGenericIamInstanceProfileSpecification :: Generic IamInstanceProfileSpecification _
instance showIamInstanceProfileSpecification :: Show IamInstanceProfileSpecification where
  show = genericShow
instance decodeIamInstanceProfileSpecification :: Decode IamInstanceProfileSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIamInstanceProfileSpecification :: Encode IamInstanceProfileSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs IamInstanceProfileSpecification from required parameters
newIamInstanceProfileSpecification :: IamInstanceProfileSpecification
newIamInstanceProfileSpecification  = IamInstanceProfileSpecification { "Arn": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }

-- | Constructs IamInstanceProfileSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newIamInstanceProfileSpecification' :: ( { "Arn" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) } -> {"Arn" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) } ) -> IamInstanceProfileSpecification
newIamInstanceProfileSpecification'  customize = (IamInstanceProfileSpecification <<< customize) { "Arn": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }



-- | <p>Describes the ICMP type and code.</p>
newtype IcmpTypeCode = IcmpTypeCode 
  { "Code" :: NullOrUndefined.NullOrUndefined (Int)
  , "Type" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeIcmpTypeCode :: Newtype IcmpTypeCode _
derive instance repGenericIcmpTypeCode :: Generic IcmpTypeCode _
instance showIcmpTypeCode :: Show IcmpTypeCode where
  show = genericShow
instance decodeIcmpTypeCode :: Decode IcmpTypeCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIcmpTypeCode :: Encode IcmpTypeCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs IcmpTypeCode from required parameters
newIcmpTypeCode :: IcmpTypeCode
newIcmpTypeCode  = IcmpTypeCode { "Code": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing) }

-- | Constructs IcmpTypeCode's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newIcmpTypeCode' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (Int) , "Type" :: NullOrUndefined.NullOrUndefined (Int) } -> {"Code" :: NullOrUndefined.NullOrUndefined (Int) , "Type" :: NullOrUndefined.NullOrUndefined (Int) } ) -> IcmpTypeCode
newIcmpTypeCode'  customize = (IcmpTypeCode <<< customize) { "Code": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing) }



-- | <p>Describes the ID format for a resource.</p>
newtype IdFormat = IdFormat 
  { "Deadline" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Resource" :: NullOrUndefined.NullOrUndefined (String)
  , "UseLongIds" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeIdFormat :: Newtype IdFormat _
derive instance repGenericIdFormat :: Generic IdFormat _
instance showIdFormat :: Show IdFormat where
  show = genericShow
instance decodeIdFormat :: Decode IdFormat where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIdFormat :: Encode IdFormat where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs IdFormat from required parameters
newIdFormat :: IdFormat
newIdFormat  = IdFormat { "Deadline": (NullOrUndefined Nothing), "Resource": (NullOrUndefined Nothing), "UseLongIds": (NullOrUndefined Nothing) }

-- | Constructs IdFormat's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newIdFormat' :: ( { "Deadline" :: NullOrUndefined.NullOrUndefined (DateTime) , "Resource" :: NullOrUndefined.NullOrUndefined (String) , "UseLongIds" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Deadline" :: NullOrUndefined.NullOrUndefined (DateTime) , "Resource" :: NullOrUndefined.NullOrUndefined (String) , "UseLongIds" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> IdFormat
newIdFormat'  customize = (IdFormat <<< customize) { "Deadline": (NullOrUndefined Nothing), "Resource": (NullOrUndefined Nothing), "UseLongIds": (NullOrUndefined Nothing) }



newtype IdFormatList = IdFormatList (Array IdFormat)
derive instance newtypeIdFormatList :: Newtype IdFormatList _
derive instance repGenericIdFormatList :: Generic IdFormatList _
instance showIdFormatList :: Show IdFormatList where
  show = genericShow
instance decodeIdFormatList :: Decode IdFormatList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIdFormatList :: Encode IdFormatList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an image.</p>
newtype Image = Image 
  { "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues)
  , "CreationDate" :: NullOrUndefined.NullOrUndefined (String)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "ImageLocation" :: NullOrUndefined.NullOrUndefined (String)
  , "ImageType" :: NullOrUndefined.NullOrUndefined (ImageTypeValues)
  , "Public" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "KernelId" :: NullOrUndefined.NullOrUndefined (String)
  , "OwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "Platform" :: NullOrUndefined.NullOrUndefined (PlatformValues)
  , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList)
  , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (ImageState)
  , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "EnaSupport" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Hypervisor" :: NullOrUndefined.NullOrUndefined (HypervisorType)
  , "ImageOwnerAlias" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: NullOrUndefined.NullOrUndefined (String)
  , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "RootDeviceType" :: NullOrUndefined.NullOrUndefined (DeviceType)
  , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (String)
  , "StateReason" :: NullOrUndefined.NullOrUndefined (StateReason)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VirtualizationType" :: NullOrUndefined.NullOrUndefined (VirtualizationType)
  }
derive instance newtypeImage :: Newtype Image _
derive instance repGenericImage :: Generic Image _
instance showImage :: Show Image where
  show = genericShow
instance decodeImage :: Decode Image where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImage :: Encode Image where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Image from required parameters
newImage :: Image
newImage  = Image { "Architecture": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "CreationDate": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "EnaSupport": (NullOrUndefined Nothing), "Hypervisor": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "ImageLocation": (NullOrUndefined Nothing), "ImageOwnerAlias": (NullOrUndefined Nothing), "ImageType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "Public": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "RootDeviceName": (NullOrUndefined Nothing), "RootDeviceType": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "StateReason": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VirtualizationType": (NullOrUndefined Nothing) }

-- | Constructs Image's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImage' :: ( { "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues) , "CreationDate" :: NullOrUndefined.NullOrUndefined (String) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "ImageLocation" :: NullOrUndefined.NullOrUndefined (String) , "ImageType" :: NullOrUndefined.NullOrUndefined (ImageTypeValues) , "Public" :: NullOrUndefined.NullOrUndefined (Boolean) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (PlatformValues) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (ImageState) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "EnaSupport" :: NullOrUndefined.NullOrUndefined (Boolean) , "Hypervisor" :: NullOrUndefined.NullOrUndefined (HypervisorType) , "ImageOwnerAlias" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (String) , "RootDeviceType" :: NullOrUndefined.NullOrUndefined (DeviceType) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (String) , "StateReason" :: NullOrUndefined.NullOrUndefined (StateReason) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VirtualizationType" :: NullOrUndefined.NullOrUndefined (VirtualizationType) } -> {"Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues) , "CreationDate" :: NullOrUndefined.NullOrUndefined (String) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "ImageLocation" :: NullOrUndefined.NullOrUndefined (String) , "ImageType" :: NullOrUndefined.NullOrUndefined (ImageTypeValues) , "Public" :: NullOrUndefined.NullOrUndefined (Boolean) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (PlatformValues) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (ImageState) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "EnaSupport" :: NullOrUndefined.NullOrUndefined (Boolean) , "Hypervisor" :: NullOrUndefined.NullOrUndefined (HypervisorType) , "ImageOwnerAlias" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (String) , "RootDeviceType" :: NullOrUndefined.NullOrUndefined (DeviceType) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (String) , "StateReason" :: NullOrUndefined.NullOrUndefined (StateReason) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VirtualizationType" :: NullOrUndefined.NullOrUndefined (VirtualizationType) } ) -> Image
newImage'  customize = (Image <<< customize) { "Architecture": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "CreationDate": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "EnaSupport": (NullOrUndefined Nothing), "Hypervisor": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "ImageLocation": (NullOrUndefined Nothing), "ImageOwnerAlias": (NullOrUndefined Nothing), "ImageType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "Public": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "RootDeviceName": (NullOrUndefined Nothing), "RootDeviceType": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "StateReason": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VirtualizationType": (NullOrUndefined Nothing) }



-- | <p>Describes an image attribute.</p>
newtype ImageAttribute = ImageAttribute 
  { "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchPermissions" :: NullOrUndefined.NullOrUndefined (LaunchPermissionList)
  , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList)
  , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "KernelId" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "RamdiskId" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  }
derive instance newtypeImageAttribute :: Newtype ImageAttribute _
derive instance repGenericImageAttribute :: Generic ImageAttribute _
instance showImageAttribute :: Show ImageAttribute where
  show = genericShow
instance decodeImageAttribute :: Decode ImageAttribute where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImageAttribute :: Encode ImageAttribute where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImageAttribute from required parameters
newImageAttribute :: ImageAttribute
newImageAttribute  = ImageAttribute { "BlockDeviceMappings": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "LaunchPermissions": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing) }

-- | Constructs ImageAttribute's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImageAttribute' :: ( { "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchPermissions" :: NullOrUndefined.NullOrUndefined (LaunchPermissionList) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "KernelId" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (AttributeValue) } -> {"BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchPermissions" :: NullOrUndefined.NullOrUndefined (LaunchPermissionList) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "KernelId" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (AttributeValue) } ) -> ImageAttribute
newImageAttribute'  customize = (ImageAttribute <<< customize) { "BlockDeviceMappings": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "LaunchPermissions": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing) }



newtype ImageAttributeName = ImageAttributeName String
derive instance newtypeImageAttributeName :: Newtype ImageAttributeName _
derive instance repGenericImageAttributeName :: Generic ImageAttributeName _
instance showImageAttributeName :: Show ImageAttributeName where
  show = genericShow
instance decodeImageAttributeName :: Decode ImageAttributeName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImageAttributeName :: Encode ImageAttributeName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the disk container object for an import image task.</p>
newtype ImageDiskContainer = ImageDiskContainer 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "Format" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  , "Url" :: NullOrUndefined.NullOrUndefined (String)
  , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucket)
  }
derive instance newtypeImageDiskContainer :: Newtype ImageDiskContainer _
derive instance repGenericImageDiskContainer :: Generic ImageDiskContainer _
instance showImageDiskContainer :: Show ImageDiskContainer where
  show = genericShow
instance decodeImageDiskContainer :: Decode ImageDiskContainer where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImageDiskContainer :: Encode ImageDiskContainer where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImageDiskContainer from required parameters
newImageDiskContainer :: ImageDiskContainer
newImageDiskContainer  = ImageDiskContainer { "Description": (NullOrUndefined Nothing), "DeviceName": (NullOrUndefined Nothing), "Format": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "Url": (NullOrUndefined Nothing), "UserBucket": (NullOrUndefined Nothing) }

-- | Constructs ImageDiskContainer's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImageDiskContainer' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "Format" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "Url" :: NullOrUndefined.NullOrUndefined (String) , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucket) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "Format" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "Url" :: NullOrUndefined.NullOrUndefined (String) , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucket) } ) -> ImageDiskContainer
newImageDiskContainer'  customize = (ImageDiskContainer <<< customize) { "Description": (NullOrUndefined Nothing), "DeviceName": (NullOrUndefined Nothing), "Format": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "Url": (NullOrUndefined Nothing), "UserBucket": (NullOrUndefined Nothing) }



newtype ImageDiskContainerList = ImageDiskContainerList (Array ImageDiskContainer)
derive instance newtypeImageDiskContainerList :: Newtype ImageDiskContainerList _
derive instance repGenericImageDiskContainerList :: Generic ImageDiskContainerList _
instance showImageDiskContainerList :: Show ImageDiskContainerList where
  show = genericShow
instance decodeImageDiskContainerList :: Decode ImageDiskContainerList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImageDiskContainerList :: Encode ImageDiskContainerList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ImageIdStringList = ImageIdStringList (Array String)
derive instance newtypeImageIdStringList :: Newtype ImageIdStringList _
derive instance repGenericImageIdStringList :: Generic ImageIdStringList _
instance showImageIdStringList :: Show ImageIdStringList where
  show = genericShow
instance decodeImageIdStringList :: Decode ImageIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImageIdStringList :: Encode ImageIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ImageList = ImageList (Array Image)
derive instance newtypeImageList :: Newtype ImageList _
derive instance repGenericImageList :: Generic ImageList _
instance showImageList :: Show ImageList where
  show = genericShow
instance decodeImageList :: Decode ImageList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImageList :: Encode ImageList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ImageState = ImageState String
derive instance newtypeImageState :: Newtype ImageState _
derive instance repGenericImageState :: Generic ImageState _
instance showImageState :: Show ImageState where
  show = genericShow
instance decodeImageState :: Decode ImageState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImageState :: Encode ImageState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ImageTypeValues = ImageTypeValues String
derive instance newtypeImageTypeValues :: Newtype ImageTypeValues _
derive instance repGenericImageTypeValues :: Generic ImageTypeValues _
instance showImageTypeValues :: Show ImageTypeValues where
  show = genericShow
instance decodeImageTypeValues :: Decode ImageTypeValues where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImageTypeValues :: Encode ImageTypeValues where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for ImportImage.</p>
newtype ImportImageRequest = ImportImageRequest 
  { "Architecture" :: NullOrUndefined.NullOrUndefined (String)
  , "ClientData" :: NullOrUndefined.NullOrUndefined (ClientData)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DiskContainers" :: NullOrUndefined.NullOrUndefined (ImageDiskContainerList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Hypervisor" :: NullOrUndefined.NullOrUndefined (String)
  , "LicenseType" :: NullOrUndefined.NullOrUndefined (String)
  , "Platform" :: NullOrUndefined.NullOrUndefined (String)
  , "RoleName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeImportImageRequest :: Newtype ImportImageRequest _
derive instance repGenericImportImageRequest :: Generic ImportImageRequest _
instance showImportImageRequest :: Show ImportImageRequest where
  show = genericShow
instance decodeImportImageRequest :: Decode ImportImageRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportImageRequest :: Encode ImportImageRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportImageRequest from required parameters
newImportImageRequest :: ImportImageRequest
newImportImageRequest  = ImportImageRequest { "Architecture": (NullOrUndefined Nothing), "ClientData": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DiskContainers": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Hypervisor": (NullOrUndefined Nothing), "LicenseType": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "RoleName": (NullOrUndefined Nothing) }

-- | Constructs ImportImageRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportImageRequest' :: ( { "Architecture" :: NullOrUndefined.NullOrUndefined (String) , "ClientData" :: NullOrUndefined.NullOrUndefined (ClientData) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DiskContainers" :: NullOrUndefined.NullOrUndefined (ImageDiskContainerList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Hypervisor" :: NullOrUndefined.NullOrUndefined (String) , "LicenseType" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "RoleName" :: NullOrUndefined.NullOrUndefined (String) } -> {"Architecture" :: NullOrUndefined.NullOrUndefined (String) , "ClientData" :: NullOrUndefined.NullOrUndefined (ClientData) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DiskContainers" :: NullOrUndefined.NullOrUndefined (ImageDiskContainerList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Hypervisor" :: NullOrUndefined.NullOrUndefined (String) , "LicenseType" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "RoleName" :: NullOrUndefined.NullOrUndefined (String) } ) -> ImportImageRequest
newImportImageRequest'  customize = (ImportImageRequest <<< customize) { "Architecture": (NullOrUndefined Nothing), "ClientData": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DiskContainers": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Hypervisor": (NullOrUndefined Nothing), "LicenseType": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "RoleName": (NullOrUndefined Nothing) }



-- | <p>Contains the output for ImportImage.</p>
newtype ImportImageResult = ImportImageResult 
  { "Architecture" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Hypervisor" :: NullOrUndefined.NullOrUndefined (String)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String)
  , "LicenseType" :: NullOrUndefined.NullOrUndefined (String)
  , "Platform" :: NullOrUndefined.NullOrUndefined (String)
  , "Progress" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotDetails" :: NullOrUndefined.NullOrUndefined (SnapshotDetailList)
  , "Status" :: NullOrUndefined.NullOrUndefined (String)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeImportImageResult :: Newtype ImportImageResult _
derive instance repGenericImportImageResult :: Generic ImportImageResult _
instance showImportImageResult :: Show ImportImageResult where
  show = genericShow
instance decodeImportImageResult :: Decode ImportImageResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportImageResult :: Encode ImportImageResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportImageResult from required parameters
newImportImageResult :: ImportImageResult
newImportImageResult  = ImportImageResult { "Architecture": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Hypervisor": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "ImportTaskId": (NullOrUndefined Nothing), "LicenseType": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "SnapshotDetails": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }

-- | Constructs ImportImageResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportImageResult' :: ( { "Architecture" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Hypervisor" :: NullOrUndefined.NullOrUndefined (String) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "LicenseType" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotDetails" :: NullOrUndefined.NullOrUndefined (SnapshotDetailList) , "Status" :: NullOrUndefined.NullOrUndefined (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } -> {"Architecture" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Hypervisor" :: NullOrUndefined.NullOrUndefined (String) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "LicenseType" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotDetails" :: NullOrUndefined.NullOrUndefined (SnapshotDetailList) , "Status" :: NullOrUndefined.NullOrUndefined (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } ) -> ImportImageResult
newImportImageResult'  customize = (ImportImageResult <<< customize) { "Architecture": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Hypervisor": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "ImportTaskId": (NullOrUndefined Nothing), "LicenseType": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "SnapshotDetails": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }



-- | <p>Describes an import image task.</p>
newtype ImportImageTask = ImportImageTask 
  { "Architecture" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Hypervisor" :: NullOrUndefined.NullOrUndefined (String)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String)
  , "LicenseType" :: NullOrUndefined.NullOrUndefined (String)
  , "Platform" :: NullOrUndefined.NullOrUndefined (String)
  , "Progress" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotDetails" :: NullOrUndefined.NullOrUndefined (SnapshotDetailList)
  , "Status" :: NullOrUndefined.NullOrUndefined (String)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeImportImageTask :: Newtype ImportImageTask _
derive instance repGenericImportImageTask :: Generic ImportImageTask _
instance showImportImageTask :: Show ImportImageTask where
  show = genericShow
instance decodeImportImageTask :: Decode ImportImageTask where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportImageTask :: Encode ImportImageTask where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportImageTask from required parameters
newImportImageTask :: ImportImageTask
newImportImageTask  = ImportImageTask { "Architecture": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Hypervisor": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "ImportTaskId": (NullOrUndefined Nothing), "LicenseType": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "SnapshotDetails": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }

-- | Constructs ImportImageTask's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportImageTask' :: ( { "Architecture" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Hypervisor" :: NullOrUndefined.NullOrUndefined (String) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "LicenseType" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotDetails" :: NullOrUndefined.NullOrUndefined (SnapshotDetailList) , "Status" :: NullOrUndefined.NullOrUndefined (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } -> {"Architecture" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Hypervisor" :: NullOrUndefined.NullOrUndefined (String) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "LicenseType" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotDetails" :: NullOrUndefined.NullOrUndefined (SnapshotDetailList) , "Status" :: NullOrUndefined.NullOrUndefined (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } ) -> ImportImageTask
newImportImageTask'  customize = (ImportImageTask <<< customize) { "Architecture": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Hypervisor": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "ImportTaskId": (NullOrUndefined Nothing), "LicenseType": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "SnapshotDetails": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }



newtype ImportImageTaskList = ImportImageTaskList (Array ImportImageTask)
derive instance newtypeImportImageTaskList :: Newtype ImportImageTaskList _
derive instance repGenericImportImageTaskList :: Generic ImportImageTaskList _
instance showImportImageTaskList :: Show ImportImageTaskList where
  show = genericShow
instance decodeImportImageTaskList :: Decode ImportImageTaskList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportImageTaskList :: Encode ImportImageTaskList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the launch specification for VM import.</p>
newtype ImportInstanceLaunchSpecification = ImportInstanceLaunchSpecification 
  { "AdditionalInfo" :: NullOrUndefined.NullOrUndefined (String)
  , "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues)
  , "GroupIds" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList)
  , "GroupNames" :: NullOrUndefined.NullOrUndefined (SecurityGroupStringList)
  , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "Monitoring" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Placement" :: NullOrUndefined.NullOrUndefined (Placement)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "UserData" :: NullOrUndefined.NullOrUndefined (UserData)
  }
derive instance newtypeImportInstanceLaunchSpecification :: Newtype ImportInstanceLaunchSpecification _
derive instance repGenericImportInstanceLaunchSpecification :: Generic ImportInstanceLaunchSpecification _
instance showImportInstanceLaunchSpecification :: Show ImportInstanceLaunchSpecification where
  show = genericShow
instance decodeImportInstanceLaunchSpecification :: Decode ImportInstanceLaunchSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportInstanceLaunchSpecification :: Encode ImportInstanceLaunchSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportInstanceLaunchSpecification from required parameters
newImportInstanceLaunchSpecification :: ImportInstanceLaunchSpecification
newImportInstanceLaunchSpecification  = ImportInstanceLaunchSpecification { "AdditionalInfo": (NullOrUndefined Nothing), "Architecture": (NullOrUndefined Nothing), "GroupIds": (NullOrUndefined Nothing), "GroupNames": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }

-- | Constructs ImportInstanceLaunchSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportInstanceLaunchSpecification' :: ( { "AdditionalInfo" :: NullOrUndefined.NullOrUndefined (String) , "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues) , "GroupIds" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "GroupNames" :: NullOrUndefined.NullOrUndefined (SecurityGroupStringList) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "Monitoring" :: NullOrUndefined.NullOrUndefined (Boolean) , "Placement" :: NullOrUndefined.NullOrUndefined (Placement) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "UserData" :: NullOrUndefined.NullOrUndefined (UserData) } -> {"AdditionalInfo" :: NullOrUndefined.NullOrUndefined (String) , "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues) , "GroupIds" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "GroupNames" :: NullOrUndefined.NullOrUndefined (SecurityGroupStringList) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "Monitoring" :: NullOrUndefined.NullOrUndefined (Boolean) , "Placement" :: NullOrUndefined.NullOrUndefined (Placement) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "UserData" :: NullOrUndefined.NullOrUndefined (UserData) } ) -> ImportInstanceLaunchSpecification
newImportInstanceLaunchSpecification'  customize = (ImportInstanceLaunchSpecification <<< customize) { "AdditionalInfo": (NullOrUndefined Nothing), "Architecture": (NullOrUndefined Nothing), "GroupIds": (NullOrUndefined Nothing), "GroupNames": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ImportInstance.</p>
newtype ImportInstanceRequest = ImportInstanceRequest 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DiskImages" :: NullOrUndefined.NullOrUndefined (DiskImageList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "LaunchSpecification" :: NullOrUndefined.NullOrUndefined (ImportInstanceLaunchSpecification)
  , "Platform" :: (PlatformValues)
  }
derive instance newtypeImportInstanceRequest :: Newtype ImportInstanceRequest _
derive instance repGenericImportInstanceRequest :: Generic ImportInstanceRequest _
instance showImportInstanceRequest :: Show ImportInstanceRequest where
  show = genericShow
instance decodeImportInstanceRequest :: Decode ImportInstanceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportInstanceRequest :: Encode ImportInstanceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportInstanceRequest from required parameters
newImportInstanceRequest :: PlatformValues -> ImportInstanceRequest
newImportInstanceRequest _Platform = ImportInstanceRequest { "Platform": _Platform, "Description": (NullOrUndefined Nothing), "DiskImages": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LaunchSpecification": (NullOrUndefined Nothing) }

-- | Constructs ImportInstanceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportInstanceRequest' :: PlatformValues -> ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "DiskImages" :: NullOrUndefined.NullOrUndefined (DiskImageList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchSpecification" :: NullOrUndefined.NullOrUndefined (ImportInstanceLaunchSpecification) , "Platform" :: (PlatformValues) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "DiskImages" :: NullOrUndefined.NullOrUndefined (DiskImageList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchSpecification" :: NullOrUndefined.NullOrUndefined (ImportInstanceLaunchSpecification) , "Platform" :: (PlatformValues) } ) -> ImportInstanceRequest
newImportInstanceRequest' _Platform customize = (ImportInstanceRequest <<< customize) { "Platform": _Platform, "Description": (NullOrUndefined Nothing), "DiskImages": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LaunchSpecification": (NullOrUndefined Nothing) }



-- | <p>Contains the output for ImportInstance.</p>
newtype ImportInstanceResult = ImportInstanceResult 
  { "ConversionTask" :: NullOrUndefined.NullOrUndefined (ConversionTask)
  }
derive instance newtypeImportInstanceResult :: Newtype ImportInstanceResult _
derive instance repGenericImportInstanceResult :: Generic ImportInstanceResult _
instance showImportInstanceResult :: Show ImportInstanceResult where
  show = genericShow
instance decodeImportInstanceResult :: Decode ImportInstanceResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportInstanceResult :: Encode ImportInstanceResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportInstanceResult from required parameters
newImportInstanceResult :: ImportInstanceResult
newImportInstanceResult  = ImportInstanceResult { "ConversionTask": (NullOrUndefined Nothing) }

-- | Constructs ImportInstanceResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportInstanceResult' :: ( { "ConversionTask" :: NullOrUndefined.NullOrUndefined (ConversionTask) } -> {"ConversionTask" :: NullOrUndefined.NullOrUndefined (ConversionTask) } ) -> ImportInstanceResult
newImportInstanceResult'  customize = (ImportInstanceResult <<< customize) { "ConversionTask": (NullOrUndefined Nothing) }



-- | <p>Describes an import instance task.</p>
newtype ImportInstanceTaskDetails = ImportInstanceTaskDetails 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "Platform" :: NullOrUndefined.NullOrUndefined (PlatformValues)
  , "Volumes" :: (ImportInstanceVolumeDetailSet)
  }
derive instance newtypeImportInstanceTaskDetails :: Newtype ImportInstanceTaskDetails _
derive instance repGenericImportInstanceTaskDetails :: Generic ImportInstanceTaskDetails _
instance showImportInstanceTaskDetails :: Show ImportInstanceTaskDetails where
  show = genericShow
instance decodeImportInstanceTaskDetails :: Decode ImportInstanceTaskDetails where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportInstanceTaskDetails :: Encode ImportInstanceTaskDetails where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportInstanceTaskDetails from required parameters
newImportInstanceTaskDetails :: ImportInstanceVolumeDetailSet -> ImportInstanceTaskDetails
newImportInstanceTaskDetails _Volumes = ImportInstanceTaskDetails { "Volumes": _Volumes, "Description": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing) }

-- | Constructs ImportInstanceTaskDetails's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportInstanceTaskDetails' :: ImportInstanceVolumeDetailSet -> ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (PlatformValues) , "Volumes" :: (ImportInstanceVolumeDetailSet) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (PlatformValues) , "Volumes" :: (ImportInstanceVolumeDetailSet) } ) -> ImportInstanceTaskDetails
newImportInstanceTaskDetails' _Volumes customize = (ImportInstanceTaskDetails <<< customize) { "Volumes": _Volumes, "Description": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing) }



-- | <p>Describes an import volume task.</p>
newtype ImportInstanceVolumeDetailItem = ImportInstanceVolumeDetailItem 
  { "AvailabilityZone" :: (String)
  , "BytesConverted" :: (Number)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Image" :: (DiskImageDescription)
  , "Status" :: (String)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  , "Volume" :: (DiskImageVolumeDescription)
  }
derive instance newtypeImportInstanceVolumeDetailItem :: Newtype ImportInstanceVolumeDetailItem _
derive instance repGenericImportInstanceVolumeDetailItem :: Generic ImportInstanceVolumeDetailItem _
instance showImportInstanceVolumeDetailItem :: Show ImportInstanceVolumeDetailItem where
  show = genericShow
instance decodeImportInstanceVolumeDetailItem :: Decode ImportInstanceVolumeDetailItem where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportInstanceVolumeDetailItem :: Encode ImportInstanceVolumeDetailItem where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportInstanceVolumeDetailItem from required parameters
newImportInstanceVolumeDetailItem :: String -> Number -> DiskImageDescription -> String -> DiskImageVolumeDescription -> ImportInstanceVolumeDetailItem
newImportInstanceVolumeDetailItem _AvailabilityZone _BytesConverted _Image _Status _Volume = ImportInstanceVolumeDetailItem { "AvailabilityZone": _AvailabilityZone, "BytesConverted": _BytesConverted, "Image": _Image, "Status": _Status, "Volume": _Volume, "Description": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }

-- | Constructs ImportInstanceVolumeDetailItem's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportInstanceVolumeDetailItem' :: String -> Number -> DiskImageDescription -> String -> DiskImageVolumeDescription -> ( { "AvailabilityZone" :: (String) , "BytesConverted" :: (Number) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Image" :: (DiskImageDescription) , "Status" :: (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "Volume" :: (DiskImageVolumeDescription) } -> {"AvailabilityZone" :: (String) , "BytesConverted" :: (Number) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Image" :: (DiskImageDescription) , "Status" :: (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "Volume" :: (DiskImageVolumeDescription) } ) -> ImportInstanceVolumeDetailItem
newImportInstanceVolumeDetailItem' _AvailabilityZone _BytesConverted _Image _Status _Volume customize = (ImportInstanceVolumeDetailItem <<< customize) { "AvailabilityZone": _AvailabilityZone, "BytesConverted": _BytesConverted, "Image": _Image, "Status": _Status, "Volume": _Volume, "Description": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }



newtype ImportInstanceVolumeDetailSet = ImportInstanceVolumeDetailSet (Array ImportInstanceVolumeDetailItem)
derive instance newtypeImportInstanceVolumeDetailSet :: Newtype ImportInstanceVolumeDetailSet _
derive instance repGenericImportInstanceVolumeDetailSet :: Generic ImportInstanceVolumeDetailSet _
instance showImportInstanceVolumeDetailSet :: Show ImportInstanceVolumeDetailSet where
  show = genericShow
instance decodeImportInstanceVolumeDetailSet :: Decode ImportInstanceVolumeDetailSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportInstanceVolumeDetailSet :: Encode ImportInstanceVolumeDetailSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for ImportKeyPair.</p>
newtype ImportKeyPairRequest = ImportKeyPairRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "KeyName" :: (String)
  , "PublicKeyMaterial" :: (String)
  }
derive instance newtypeImportKeyPairRequest :: Newtype ImportKeyPairRequest _
derive instance repGenericImportKeyPairRequest :: Generic ImportKeyPairRequest _
instance showImportKeyPairRequest :: Show ImportKeyPairRequest where
  show = genericShow
instance decodeImportKeyPairRequest :: Decode ImportKeyPairRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportKeyPairRequest :: Encode ImportKeyPairRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportKeyPairRequest from required parameters
newImportKeyPairRequest :: String -> String -> ImportKeyPairRequest
newImportKeyPairRequest _KeyName _PublicKeyMaterial = ImportKeyPairRequest { "KeyName": _KeyName, "PublicKeyMaterial": _PublicKeyMaterial, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ImportKeyPairRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportKeyPairRequest' :: String -> String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "KeyName" :: (String) , "PublicKeyMaterial" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "KeyName" :: (String) , "PublicKeyMaterial" :: (String) } ) -> ImportKeyPairRequest
newImportKeyPairRequest' _KeyName _PublicKeyMaterial customize = (ImportKeyPairRequest <<< customize) { "KeyName": _KeyName, "PublicKeyMaterial": _PublicKeyMaterial, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of ImportKeyPair.</p>
newtype ImportKeyPairResult = ImportKeyPairResult 
  { "KeyFingerprint" :: NullOrUndefined.NullOrUndefined (String)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeImportKeyPairResult :: Newtype ImportKeyPairResult _
derive instance repGenericImportKeyPairResult :: Generic ImportKeyPairResult _
instance showImportKeyPairResult :: Show ImportKeyPairResult where
  show = genericShow
instance decodeImportKeyPairResult :: Decode ImportKeyPairResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportKeyPairResult :: Encode ImportKeyPairResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportKeyPairResult from required parameters
newImportKeyPairResult :: ImportKeyPairResult
newImportKeyPairResult  = ImportKeyPairResult { "KeyFingerprint": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing) }

-- | Constructs ImportKeyPairResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportKeyPairResult' :: ( { "KeyFingerprint" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) } -> {"KeyFingerprint" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) } ) -> ImportKeyPairResult
newImportKeyPairResult'  customize = (ImportKeyPairResult <<< customize) { "KeyFingerprint": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ImportSnapshot.</p>
newtype ImportSnapshotRequest = ImportSnapshotRequest 
  { "ClientData" :: NullOrUndefined.NullOrUndefined (ClientData)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DiskContainer" :: NullOrUndefined.NullOrUndefined (SnapshotDiskContainer)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "RoleName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeImportSnapshotRequest :: Newtype ImportSnapshotRequest _
derive instance repGenericImportSnapshotRequest :: Generic ImportSnapshotRequest _
instance showImportSnapshotRequest :: Show ImportSnapshotRequest where
  show = genericShow
instance decodeImportSnapshotRequest :: Decode ImportSnapshotRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportSnapshotRequest :: Encode ImportSnapshotRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportSnapshotRequest from required parameters
newImportSnapshotRequest :: ImportSnapshotRequest
newImportSnapshotRequest  = ImportSnapshotRequest { "ClientData": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DiskContainer": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "RoleName": (NullOrUndefined Nothing) }

-- | Constructs ImportSnapshotRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportSnapshotRequest' :: ( { "ClientData" :: NullOrUndefined.NullOrUndefined (ClientData) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DiskContainer" :: NullOrUndefined.NullOrUndefined (SnapshotDiskContainer) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RoleName" :: NullOrUndefined.NullOrUndefined (String) } -> {"ClientData" :: NullOrUndefined.NullOrUndefined (ClientData) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DiskContainer" :: NullOrUndefined.NullOrUndefined (SnapshotDiskContainer) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RoleName" :: NullOrUndefined.NullOrUndefined (String) } ) -> ImportSnapshotRequest
newImportSnapshotRequest'  customize = (ImportSnapshotRequest <<< customize) { "ClientData": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DiskContainer": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "RoleName": (NullOrUndefined Nothing) }



-- | <p>Contains the output for ImportSnapshot.</p>
newtype ImportSnapshotResult = ImportSnapshotResult 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotTaskDetail" :: NullOrUndefined.NullOrUndefined (SnapshotTaskDetail)
  }
derive instance newtypeImportSnapshotResult :: Newtype ImportSnapshotResult _
derive instance repGenericImportSnapshotResult :: Generic ImportSnapshotResult _
instance showImportSnapshotResult :: Show ImportSnapshotResult where
  show = genericShow
instance decodeImportSnapshotResult :: Decode ImportSnapshotResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportSnapshotResult :: Encode ImportSnapshotResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportSnapshotResult from required parameters
newImportSnapshotResult :: ImportSnapshotResult
newImportSnapshotResult  = ImportSnapshotResult { "Description": (NullOrUndefined Nothing), "ImportTaskId": (NullOrUndefined Nothing), "SnapshotTaskDetail": (NullOrUndefined Nothing) }

-- | Constructs ImportSnapshotResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportSnapshotResult' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotTaskDetail" :: NullOrUndefined.NullOrUndefined (SnapshotTaskDetail) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotTaskDetail" :: NullOrUndefined.NullOrUndefined (SnapshotTaskDetail) } ) -> ImportSnapshotResult
newImportSnapshotResult'  customize = (ImportSnapshotResult <<< customize) { "Description": (NullOrUndefined Nothing), "ImportTaskId": (NullOrUndefined Nothing), "SnapshotTaskDetail": (NullOrUndefined Nothing) }



-- | <p>Describes an import snapshot task.</p>
newtype ImportSnapshotTask = ImportSnapshotTask 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotTaskDetail" :: NullOrUndefined.NullOrUndefined (SnapshotTaskDetail)
  }
derive instance newtypeImportSnapshotTask :: Newtype ImportSnapshotTask _
derive instance repGenericImportSnapshotTask :: Generic ImportSnapshotTask _
instance showImportSnapshotTask :: Show ImportSnapshotTask where
  show = genericShow
instance decodeImportSnapshotTask :: Decode ImportSnapshotTask where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportSnapshotTask :: Encode ImportSnapshotTask where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportSnapshotTask from required parameters
newImportSnapshotTask :: ImportSnapshotTask
newImportSnapshotTask  = ImportSnapshotTask { "Description": (NullOrUndefined Nothing), "ImportTaskId": (NullOrUndefined Nothing), "SnapshotTaskDetail": (NullOrUndefined Nothing) }

-- | Constructs ImportSnapshotTask's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportSnapshotTask' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotTaskDetail" :: NullOrUndefined.NullOrUndefined (SnapshotTaskDetail) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "ImportTaskId" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotTaskDetail" :: NullOrUndefined.NullOrUndefined (SnapshotTaskDetail) } ) -> ImportSnapshotTask
newImportSnapshotTask'  customize = (ImportSnapshotTask <<< customize) { "Description": (NullOrUndefined Nothing), "ImportTaskId": (NullOrUndefined Nothing), "SnapshotTaskDetail": (NullOrUndefined Nothing) }



newtype ImportSnapshotTaskList = ImportSnapshotTaskList (Array ImportSnapshotTask)
derive instance newtypeImportSnapshotTaskList :: Newtype ImportSnapshotTaskList _
derive instance repGenericImportSnapshotTaskList :: Generic ImportSnapshotTaskList _
instance showImportSnapshotTaskList :: Show ImportSnapshotTaskList where
  show = genericShow
instance decodeImportSnapshotTaskList :: Decode ImportSnapshotTaskList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportSnapshotTaskList :: Encode ImportSnapshotTaskList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ImportTaskIdList = ImportTaskIdList (Array String)
derive instance newtypeImportTaskIdList :: Newtype ImportTaskIdList _
derive instance repGenericImportTaskIdList :: Generic ImportTaskIdList _
instance showImportTaskIdList :: Show ImportTaskIdList where
  show = genericShow
instance decodeImportTaskIdList :: Decode ImportTaskIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportTaskIdList :: Encode ImportTaskIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for ImportVolume.</p>
newtype ImportVolumeRequest = ImportVolumeRequest 
  { "AvailabilityZone" :: (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Image" :: (DiskImageDetail)
  , "Volume" :: (VolumeDetail)
  }
derive instance newtypeImportVolumeRequest :: Newtype ImportVolumeRequest _
derive instance repGenericImportVolumeRequest :: Generic ImportVolumeRequest _
instance showImportVolumeRequest :: Show ImportVolumeRequest where
  show = genericShow
instance decodeImportVolumeRequest :: Decode ImportVolumeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportVolumeRequest :: Encode ImportVolumeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportVolumeRequest from required parameters
newImportVolumeRequest :: String -> DiskImageDetail -> VolumeDetail -> ImportVolumeRequest
newImportVolumeRequest _AvailabilityZone _Image _Volume = ImportVolumeRequest { "AvailabilityZone": _AvailabilityZone, "Image": _Image, "Volume": _Volume, "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ImportVolumeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportVolumeRequest' :: String -> DiskImageDetail -> VolumeDetail -> ( { "AvailabilityZone" :: (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Image" :: (DiskImageDetail) , "Volume" :: (VolumeDetail) } -> {"AvailabilityZone" :: (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Image" :: (DiskImageDetail) , "Volume" :: (VolumeDetail) } ) -> ImportVolumeRequest
newImportVolumeRequest' _AvailabilityZone _Image _Volume customize = (ImportVolumeRequest <<< customize) { "AvailabilityZone": _AvailabilityZone, "Image": _Image, "Volume": _Volume, "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output for ImportVolume.</p>
newtype ImportVolumeResult = ImportVolumeResult 
  { "ConversionTask" :: NullOrUndefined.NullOrUndefined (ConversionTask)
  }
derive instance newtypeImportVolumeResult :: Newtype ImportVolumeResult _
derive instance repGenericImportVolumeResult :: Generic ImportVolumeResult _
instance showImportVolumeResult :: Show ImportVolumeResult where
  show = genericShow
instance decodeImportVolumeResult :: Decode ImportVolumeResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportVolumeResult :: Encode ImportVolumeResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportVolumeResult from required parameters
newImportVolumeResult :: ImportVolumeResult
newImportVolumeResult  = ImportVolumeResult { "ConversionTask": (NullOrUndefined Nothing) }

-- | Constructs ImportVolumeResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportVolumeResult' :: ( { "ConversionTask" :: NullOrUndefined.NullOrUndefined (ConversionTask) } -> {"ConversionTask" :: NullOrUndefined.NullOrUndefined (ConversionTask) } ) -> ImportVolumeResult
newImportVolumeResult'  customize = (ImportVolumeResult <<< customize) { "ConversionTask": (NullOrUndefined Nothing) }



-- | <p>Describes an import volume task.</p>
newtype ImportVolumeTaskDetails = ImportVolumeTaskDetails 
  { "AvailabilityZone" :: (String)
  , "BytesConverted" :: (Number)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Image" :: (DiskImageDescription)
  , "Volume" :: (DiskImageVolumeDescription)
  }
derive instance newtypeImportVolumeTaskDetails :: Newtype ImportVolumeTaskDetails _
derive instance repGenericImportVolumeTaskDetails :: Generic ImportVolumeTaskDetails _
instance showImportVolumeTaskDetails :: Show ImportVolumeTaskDetails where
  show = genericShow
instance decodeImportVolumeTaskDetails :: Decode ImportVolumeTaskDetails where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeImportVolumeTaskDetails :: Encode ImportVolumeTaskDetails where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ImportVolumeTaskDetails from required parameters
newImportVolumeTaskDetails :: String -> Number -> DiskImageDescription -> DiskImageVolumeDescription -> ImportVolumeTaskDetails
newImportVolumeTaskDetails _AvailabilityZone _BytesConverted _Image _Volume = ImportVolumeTaskDetails { "AvailabilityZone": _AvailabilityZone, "BytesConverted": _BytesConverted, "Image": _Image, "Volume": _Volume, "Description": (NullOrUndefined Nothing) }

-- | Constructs ImportVolumeTaskDetails's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newImportVolumeTaskDetails' :: String -> Number -> DiskImageDescription -> DiskImageVolumeDescription -> ( { "AvailabilityZone" :: (String) , "BytesConverted" :: (Number) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Image" :: (DiskImageDescription) , "Volume" :: (DiskImageVolumeDescription) } -> {"AvailabilityZone" :: (String) , "BytesConverted" :: (Number) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Image" :: (DiskImageDescription) , "Volume" :: (DiskImageVolumeDescription) } ) -> ImportVolumeTaskDetails
newImportVolumeTaskDetails' _AvailabilityZone _BytesConverted _Image _Volume customize = (ImportVolumeTaskDetails <<< customize) { "AvailabilityZone": _AvailabilityZone, "BytesConverted": _BytesConverted, "Image": _Image, "Volume": _Volume, "Description": (NullOrUndefined Nothing) }



-- | <p>Describes an instance.</p>
newtype Instance = Instance 
  { "AmiLaunchIndex" :: NullOrUndefined.NullOrUndefined (Int)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "KernelId" :: NullOrUndefined.NullOrUndefined (String)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Monitoring" :: NullOrUndefined.NullOrUndefined (Monitoring)
  , "Placement" :: NullOrUndefined.NullOrUndefined (Placement)
  , "Platform" :: NullOrUndefined.NullOrUndefined (PlatformValues)
  , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList)
  , "PublicDnsName" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (InstanceState)
  , "StateTransitionReason" :: NullOrUndefined.NullOrUndefined (String)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues)
  , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (InstanceBlockDeviceMappingList)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EnaSupport" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Hypervisor" :: NullOrUndefined.NullOrUndefined (HypervisorType)
  , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfile)
  , "InstanceLifecycle" :: NullOrUndefined.NullOrUndefined (InstanceLifecycleType)
  , "ElasticGpuAssociations" :: NullOrUndefined.NullOrUndefined (ElasticGpuAssociationList)
  , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceList)
  , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "RootDeviceType" :: NullOrUndefined.NullOrUndefined (DeviceType)
  , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList)
  , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String)
  , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (String)
  , "StateReason" :: NullOrUndefined.NullOrUndefined (StateReason)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VirtualizationType" :: NullOrUndefined.NullOrUndefined (VirtualizationType)
  }
derive instance newtypeInstance :: Newtype Instance _
derive instance repGenericInstance :: Generic Instance _
instance showInstance :: Show Instance where
  show = genericShow
instance decodeInstance :: Decode Instance where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstance :: Encode Instance where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Instance from required parameters
newInstance :: Instance
newInstance  = Instance { "AmiLaunchIndex": (NullOrUndefined Nothing), "Architecture": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "ElasticGpuAssociations": (NullOrUndefined Nothing), "EnaSupport": (NullOrUndefined Nothing), "Hypervisor": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceLifecycle": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "LaunchTime": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "PublicDnsName": (NullOrUndefined Nothing), "PublicIpAddress": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "RootDeviceName": (NullOrUndefined Nothing), "RootDeviceType": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing), "SpotInstanceRequestId": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "StateReason": (NullOrUndefined Nothing), "StateTransitionReason": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VirtualizationType": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs Instance's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstance' :: ( { "AmiLaunchIndex" :: NullOrUndefined.NullOrUndefined (Int) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Monitoring" :: NullOrUndefined.NullOrUndefined (Monitoring) , "Placement" :: NullOrUndefined.NullOrUndefined (Placement) , "Platform" :: NullOrUndefined.NullOrUndefined (PlatformValues) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "PublicDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PublicIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (InstanceState) , "StateTransitionReason" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (InstanceBlockDeviceMappingList) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "EnaSupport" :: NullOrUndefined.NullOrUndefined (Boolean) , "Hypervisor" :: NullOrUndefined.NullOrUndefined (HypervisorType) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfile) , "InstanceLifecycle" :: NullOrUndefined.NullOrUndefined (InstanceLifecycleType) , "ElasticGpuAssociations" :: NullOrUndefined.NullOrUndefined (ElasticGpuAssociationList) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceList) , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (String) , "RootDeviceType" :: NullOrUndefined.NullOrUndefined (DeviceType) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (Boolean) , "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (String) , "StateReason" :: NullOrUndefined.NullOrUndefined (StateReason) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VirtualizationType" :: NullOrUndefined.NullOrUndefined (VirtualizationType) } -> {"AmiLaunchIndex" :: NullOrUndefined.NullOrUndefined (Int) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Monitoring" :: NullOrUndefined.NullOrUndefined (Monitoring) , "Placement" :: NullOrUndefined.NullOrUndefined (Placement) , "Platform" :: NullOrUndefined.NullOrUndefined (PlatformValues) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "PublicDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PublicIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (InstanceState) , "StateTransitionReason" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (InstanceBlockDeviceMappingList) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "EnaSupport" :: NullOrUndefined.NullOrUndefined (Boolean) , "Hypervisor" :: NullOrUndefined.NullOrUndefined (HypervisorType) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfile) , "InstanceLifecycle" :: NullOrUndefined.NullOrUndefined (InstanceLifecycleType) , "ElasticGpuAssociations" :: NullOrUndefined.NullOrUndefined (ElasticGpuAssociationList) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceList) , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (String) , "RootDeviceType" :: NullOrUndefined.NullOrUndefined (DeviceType) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (Boolean) , "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (String) , "StateReason" :: NullOrUndefined.NullOrUndefined (StateReason) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VirtualizationType" :: NullOrUndefined.NullOrUndefined (VirtualizationType) } ) -> Instance
newInstance'  customize = (Instance <<< customize) { "AmiLaunchIndex": (NullOrUndefined Nothing), "Architecture": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "ElasticGpuAssociations": (NullOrUndefined Nothing), "EnaSupport": (NullOrUndefined Nothing), "Hypervisor": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceLifecycle": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "LaunchTime": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "PublicDnsName": (NullOrUndefined Nothing), "PublicIpAddress": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "RootDeviceName": (NullOrUndefined Nothing), "RootDeviceType": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing), "SpotInstanceRequestId": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "StateReason": (NullOrUndefined Nothing), "StateTransitionReason": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VirtualizationType": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Describes an instance attribute.</p>
newtype InstanceAttribute = InstanceAttribute 
  { "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList)
  , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (InstanceBlockDeviceMappingList)
  , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "EnaSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "KernelId" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList)
  , "RamdiskId" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "UserData" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  }
derive instance newtypeInstanceAttribute :: Newtype InstanceAttribute _
derive instance repGenericInstanceAttribute :: Generic InstanceAttribute _
instance showInstanceAttribute :: Show InstanceAttribute where
  show = genericShow
instance decodeInstanceAttribute :: Decode InstanceAttribute where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceAttribute :: Encode InstanceAttribute where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceAttribute from required parameters
newInstanceAttribute :: InstanceAttribute
newInstanceAttribute  = InstanceAttribute { "BlockDeviceMappings": (NullOrUndefined Nothing), "DisableApiTermination": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "EnaSupport": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "RootDeviceName": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }

-- | Constructs InstanceAttribute's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceAttribute' :: ( { "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (InstanceBlockDeviceMappingList) , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "EnaSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "InstanceType" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "KernelId" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "UserData" :: NullOrUndefined.NullOrUndefined (AttributeValue) } -> {"Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (InstanceBlockDeviceMappingList) , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "EnaSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "InstanceType" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "KernelId" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeList) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "UserData" :: NullOrUndefined.NullOrUndefined (AttributeValue) } ) -> InstanceAttribute
newInstanceAttribute'  customize = (InstanceAttribute <<< customize) { "BlockDeviceMappings": (NullOrUndefined Nothing), "DisableApiTermination": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "EnaSupport": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "RootDeviceName": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }



newtype InstanceAttributeName = InstanceAttributeName String
derive instance newtypeInstanceAttributeName :: Newtype InstanceAttributeName _
derive instance repGenericInstanceAttributeName :: Generic InstanceAttributeName _
instance showInstanceAttributeName :: Show InstanceAttributeName where
  show = genericShow
instance decodeInstanceAttributeName :: Decode InstanceAttributeName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceAttributeName :: Encode InstanceAttributeName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a block device mapping.</p>
newtype InstanceBlockDeviceMapping = InstanceBlockDeviceMapping 
  { "DeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "Ebs" :: NullOrUndefined.NullOrUndefined (EbsInstanceBlockDevice)
  }
derive instance newtypeInstanceBlockDeviceMapping :: Newtype InstanceBlockDeviceMapping _
derive instance repGenericInstanceBlockDeviceMapping :: Generic InstanceBlockDeviceMapping _
instance showInstanceBlockDeviceMapping :: Show InstanceBlockDeviceMapping where
  show = genericShow
instance decodeInstanceBlockDeviceMapping :: Decode InstanceBlockDeviceMapping where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceBlockDeviceMapping :: Encode InstanceBlockDeviceMapping where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceBlockDeviceMapping from required parameters
newInstanceBlockDeviceMapping :: InstanceBlockDeviceMapping
newInstanceBlockDeviceMapping  = InstanceBlockDeviceMapping { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing) }

-- | Constructs InstanceBlockDeviceMapping's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceBlockDeviceMapping' :: ( { "DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (EbsInstanceBlockDevice) } -> {"DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (EbsInstanceBlockDevice) } ) -> InstanceBlockDeviceMapping
newInstanceBlockDeviceMapping'  customize = (InstanceBlockDeviceMapping <<< customize) { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing) }



newtype InstanceBlockDeviceMappingList = InstanceBlockDeviceMappingList (Array InstanceBlockDeviceMapping)
derive instance newtypeInstanceBlockDeviceMappingList :: Newtype InstanceBlockDeviceMappingList _
derive instance repGenericInstanceBlockDeviceMappingList :: Generic InstanceBlockDeviceMappingList _
instance showInstanceBlockDeviceMappingList :: Show InstanceBlockDeviceMappingList where
  show = genericShow
instance decodeInstanceBlockDeviceMappingList :: Decode InstanceBlockDeviceMappingList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceBlockDeviceMappingList :: Encode InstanceBlockDeviceMappingList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a block device mapping entry.</p>
newtype InstanceBlockDeviceMappingSpecification = InstanceBlockDeviceMappingSpecification 
  { "DeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "Ebs" :: NullOrUndefined.NullOrUndefined (EbsInstanceBlockDeviceSpecification)
  , "NoDevice" :: NullOrUndefined.NullOrUndefined (String)
  , "VirtualName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeInstanceBlockDeviceMappingSpecification :: Newtype InstanceBlockDeviceMappingSpecification _
derive instance repGenericInstanceBlockDeviceMappingSpecification :: Generic InstanceBlockDeviceMappingSpecification _
instance showInstanceBlockDeviceMappingSpecification :: Show InstanceBlockDeviceMappingSpecification where
  show = genericShow
instance decodeInstanceBlockDeviceMappingSpecification :: Decode InstanceBlockDeviceMappingSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceBlockDeviceMappingSpecification :: Encode InstanceBlockDeviceMappingSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceBlockDeviceMappingSpecification from required parameters
newInstanceBlockDeviceMappingSpecification :: InstanceBlockDeviceMappingSpecification
newInstanceBlockDeviceMappingSpecification  = InstanceBlockDeviceMappingSpecification { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing), "NoDevice": (NullOrUndefined Nothing), "VirtualName": (NullOrUndefined Nothing) }

-- | Constructs InstanceBlockDeviceMappingSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceBlockDeviceMappingSpecification' :: ( { "DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (EbsInstanceBlockDeviceSpecification) , "NoDevice" :: NullOrUndefined.NullOrUndefined (String) , "VirtualName" :: NullOrUndefined.NullOrUndefined (String) } -> {"DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (EbsInstanceBlockDeviceSpecification) , "NoDevice" :: NullOrUndefined.NullOrUndefined (String) , "VirtualName" :: NullOrUndefined.NullOrUndefined (String) } ) -> InstanceBlockDeviceMappingSpecification
newInstanceBlockDeviceMappingSpecification'  customize = (InstanceBlockDeviceMappingSpecification <<< customize) { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing), "NoDevice": (NullOrUndefined Nothing), "VirtualName": (NullOrUndefined Nothing) }



newtype InstanceBlockDeviceMappingSpecificationList = InstanceBlockDeviceMappingSpecificationList (Array InstanceBlockDeviceMappingSpecification)
derive instance newtypeInstanceBlockDeviceMappingSpecificationList :: Newtype InstanceBlockDeviceMappingSpecificationList _
derive instance repGenericInstanceBlockDeviceMappingSpecificationList :: Generic InstanceBlockDeviceMappingSpecificationList _
instance showInstanceBlockDeviceMappingSpecificationList :: Show InstanceBlockDeviceMappingSpecificationList where
  show = genericShow
instance decodeInstanceBlockDeviceMappingSpecificationList :: Decode InstanceBlockDeviceMappingSpecificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceBlockDeviceMappingSpecificationList :: Encode InstanceBlockDeviceMappingSpecificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Information about the instance type that the Dedicated Host supports.</p>
newtype InstanceCapacity = InstanceCapacity 
  { "AvailableCapacity" :: NullOrUndefined.NullOrUndefined (Int)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (String)
  , "TotalCapacity" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeInstanceCapacity :: Newtype InstanceCapacity _
derive instance repGenericInstanceCapacity :: Generic InstanceCapacity _
instance showInstanceCapacity :: Show InstanceCapacity where
  show = genericShow
instance decodeInstanceCapacity :: Decode InstanceCapacity where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceCapacity :: Encode InstanceCapacity where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceCapacity from required parameters
newInstanceCapacity :: InstanceCapacity
newInstanceCapacity  = InstanceCapacity { "AvailableCapacity": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "TotalCapacity": (NullOrUndefined Nothing) }

-- | Constructs InstanceCapacity's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceCapacity' :: ( { "AvailableCapacity" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "TotalCapacity" :: NullOrUndefined.NullOrUndefined (Int) } -> {"AvailableCapacity" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "TotalCapacity" :: NullOrUndefined.NullOrUndefined (Int) } ) -> InstanceCapacity
newInstanceCapacity'  customize = (InstanceCapacity <<< customize) { "AvailableCapacity": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "TotalCapacity": (NullOrUndefined Nothing) }



-- | <p>Describes a Reserved Instance listing state.</p>
newtype InstanceCount = InstanceCount 
  { "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "State" :: NullOrUndefined.NullOrUndefined (ListingState)
  }
derive instance newtypeInstanceCount :: Newtype InstanceCount _
derive instance repGenericInstanceCount :: Generic InstanceCount _
instance showInstanceCount :: Show InstanceCount where
  show = genericShow
instance decodeInstanceCount :: Decode InstanceCount where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceCount :: Encode InstanceCount where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceCount from required parameters
newInstanceCount :: InstanceCount
newInstanceCount  = InstanceCount { "InstanceCount": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }

-- | Constructs InstanceCount's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceCount' :: ( { "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "State" :: NullOrUndefined.NullOrUndefined (ListingState) } -> {"InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "State" :: NullOrUndefined.NullOrUndefined (ListingState) } ) -> InstanceCount
newInstanceCount'  customize = (InstanceCount <<< customize) { "InstanceCount": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }



newtype InstanceCountList = InstanceCountList (Array InstanceCount)
derive instance newtypeInstanceCountList :: Newtype InstanceCountList _
derive instance repGenericInstanceCountList :: Generic InstanceCountList _
instance showInstanceCountList :: Show InstanceCountList where
  show = genericShow
instance decodeInstanceCountList :: Decode InstanceCountList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceCountList :: Encode InstanceCountList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the credit option for CPU usage of a T2 instance. </p>
newtype InstanceCreditSpecification = InstanceCreditSpecification 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "CpuCredits" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeInstanceCreditSpecification :: Newtype InstanceCreditSpecification _
derive instance repGenericInstanceCreditSpecification :: Generic InstanceCreditSpecification _
instance showInstanceCreditSpecification :: Show InstanceCreditSpecification where
  show = genericShow
instance decodeInstanceCreditSpecification :: Decode InstanceCreditSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceCreditSpecification :: Encode InstanceCreditSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceCreditSpecification from required parameters
newInstanceCreditSpecification :: InstanceCreditSpecification
newInstanceCreditSpecification  = InstanceCreditSpecification { "CpuCredits": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }

-- | Constructs InstanceCreditSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceCreditSpecification' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "CpuCredits" :: NullOrUndefined.NullOrUndefined (String) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "CpuCredits" :: NullOrUndefined.NullOrUndefined (String) } ) -> InstanceCreditSpecification
newInstanceCreditSpecification'  customize = (InstanceCreditSpecification <<< customize) { "CpuCredits": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }



newtype InstanceCreditSpecificationList = InstanceCreditSpecificationList (Array InstanceCreditSpecification)
derive instance newtypeInstanceCreditSpecificationList :: Newtype InstanceCreditSpecificationList _
derive instance repGenericInstanceCreditSpecificationList :: Generic InstanceCreditSpecificationList _
instance showInstanceCreditSpecificationList :: Show InstanceCreditSpecificationList where
  show = genericShow
instance decodeInstanceCreditSpecificationList :: Decode InstanceCreditSpecificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceCreditSpecificationList :: Encode InstanceCreditSpecificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InstanceCreditSpecificationListRequest = InstanceCreditSpecificationListRequest (Array InstanceCreditSpecificationRequest)
derive instance newtypeInstanceCreditSpecificationListRequest :: Newtype InstanceCreditSpecificationListRequest _
derive instance repGenericInstanceCreditSpecificationListRequest :: Generic InstanceCreditSpecificationListRequest _
instance showInstanceCreditSpecificationListRequest :: Show InstanceCreditSpecificationListRequest where
  show = genericShow
instance decodeInstanceCreditSpecificationListRequest :: Decode InstanceCreditSpecificationListRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceCreditSpecificationListRequest :: Encode InstanceCreditSpecificationListRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the credit option for CPU usage of a T2 instance.</p>
newtype InstanceCreditSpecificationRequest = InstanceCreditSpecificationRequest 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "CpuCredits" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeInstanceCreditSpecificationRequest :: Newtype InstanceCreditSpecificationRequest _
derive instance repGenericInstanceCreditSpecificationRequest :: Generic InstanceCreditSpecificationRequest _
instance showInstanceCreditSpecificationRequest :: Show InstanceCreditSpecificationRequest where
  show = genericShow
instance decodeInstanceCreditSpecificationRequest :: Decode InstanceCreditSpecificationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceCreditSpecificationRequest :: Encode InstanceCreditSpecificationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceCreditSpecificationRequest from required parameters
newInstanceCreditSpecificationRequest :: InstanceCreditSpecificationRequest
newInstanceCreditSpecificationRequest  = InstanceCreditSpecificationRequest { "CpuCredits": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }

-- | Constructs InstanceCreditSpecificationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceCreditSpecificationRequest' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "CpuCredits" :: NullOrUndefined.NullOrUndefined (String) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "CpuCredits" :: NullOrUndefined.NullOrUndefined (String) } ) -> InstanceCreditSpecificationRequest
newInstanceCreditSpecificationRequest'  customize = (InstanceCreditSpecificationRequest <<< customize) { "CpuCredits": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }



-- | <p>Describes an instance to export.</p>
newtype InstanceExportDetails = InstanceExportDetails 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "TargetEnvironment" :: NullOrUndefined.NullOrUndefined (ExportEnvironment)
  }
derive instance newtypeInstanceExportDetails :: Newtype InstanceExportDetails _
derive instance repGenericInstanceExportDetails :: Generic InstanceExportDetails _
instance showInstanceExportDetails :: Show InstanceExportDetails where
  show = genericShow
instance decodeInstanceExportDetails :: Decode InstanceExportDetails where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceExportDetails :: Encode InstanceExportDetails where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceExportDetails from required parameters
newInstanceExportDetails :: InstanceExportDetails
newInstanceExportDetails  = InstanceExportDetails { "InstanceId": (NullOrUndefined Nothing), "TargetEnvironment": (NullOrUndefined Nothing) }

-- | Constructs InstanceExportDetails's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceExportDetails' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "TargetEnvironment" :: NullOrUndefined.NullOrUndefined (ExportEnvironment) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "TargetEnvironment" :: NullOrUndefined.NullOrUndefined (ExportEnvironment) } ) -> InstanceExportDetails
newInstanceExportDetails'  customize = (InstanceExportDetails <<< customize) { "InstanceId": (NullOrUndefined Nothing), "TargetEnvironment": (NullOrUndefined Nothing) }



newtype InstanceHealthStatus = InstanceHealthStatus String
derive instance newtypeInstanceHealthStatus :: Newtype InstanceHealthStatus _
derive instance repGenericInstanceHealthStatus :: Generic InstanceHealthStatus _
instance showInstanceHealthStatus :: Show InstanceHealthStatus where
  show = genericShow
instance decodeInstanceHealthStatus :: Decode InstanceHealthStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceHealthStatus :: Encode InstanceHealthStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InstanceIdSet = InstanceIdSet (Array String)
derive instance newtypeInstanceIdSet :: Newtype InstanceIdSet _
derive instance repGenericInstanceIdSet :: Generic InstanceIdSet _
instance showInstanceIdSet :: Show InstanceIdSet where
  show = genericShow
instance decodeInstanceIdSet :: Decode InstanceIdSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceIdSet :: Encode InstanceIdSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InstanceIdStringList = InstanceIdStringList (Array String)
derive instance newtypeInstanceIdStringList :: Newtype InstanceIdStringList _
derive instance repGenericInstanceIdStringList :: Generic InstanceIdStringList _
instance showInstanceIdStringList :: Show InstanceIdStringList where
  show = genericShow
instance decodeInstanceIdStringList :: Decode InstanceIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceIdStringList :: Encode InstanceIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InstanceInterruptionBehavior = InstanceInterruptionBehavior String
derive instance newtypeInstanceInterruptionBehavior :: Newtype InstanceInterruptionBehavior _
derive instance repGenericInstanceInterruptionBehavior :: Generic InstanceInterruptionBehavior _
instance showInstanceInterruptionBehavior :: Show InstanceInterruptionBehavior where
  show = genericShow
instance decodeInstanceInterruptionBehavior :: Decode InstanceInterruptionBehavior where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceInterruptionBehavior :: Encode InstanceInterruptionBehavior where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IPv6 address.</p>
newtype InstanceIpv6Address = InstanceIpv6Address 
  { "Ipv6Address" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeInstanceIpv6Address :: Newtype InstanceIpv6Address _
derive instance repGenericInstanceIpv6Address :: Generic InstanceIpv6Address _
instance showInstanceIpv6Address :: Show InstanceIpv6Address where
  show = genericShow
instance decodeInstanceIpv6Address :: Decode InstanceIpv6Address where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceIpv6Address :: Encode InstanceIpv6Address where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceIpv6Address from required parameters
newInstanceIpv6Address :: InstanceIpv6Address
newInstanceIpv6Address  = InstanceIpv6Address { "Ipv6Address": (NullOrUndefined Nothing) }

-- | Constructs InstanceIpv6Address's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceIpv6Address' :: ( { "Ipv6Address" :: NullOrUndefined.NullOrUndefined (String) } -> {"Ipv6Address" :: NullOrUndefined.NullOrUndefined (String) } ) -> InstanceIpv6Address
newInstanceIpv6Address'  customize = (InstanceIpv6Address <<< customize) { "Ipv6Address": (NullOrUndefined Nothing) }



newtype InstanceIpv6AddressList = InstanceIpv6AddressList (Array InstanceIpv6Address)
derive instance newtypeInstanceIpv6AddressList :: Newtype InstanceIpv6AddressList _
derive instance repGenericInstanceIpv6AddressList :: Generic InstanceIpv6AddressList _
instance showInstanceIpv6AddressList :: Show InstanceIpv6AddressList where
  show = genericShow
instance decodeInstanceIpv6AddressList :: Decode InstanceIpv6AddressList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceIpv6AddressList :: Encode InstanceIpv6AddressList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InstanceIpv6AddressListRequest = InstanceIpv6AddressListRequest (Array InstanceIpv6AddressRequest)
derive instance newtypeInstanceIpv6AddressListRequest :: Newtype InstanceIpv6AddressListRequest _
derive instance repGenericInstanceIpv6AddressListRequest :: Generic InstanceIpv6AddressListRequest _
instance showInstanceIpv6AddressListRequest :: Show InstanceIpv6AddressListRequest where
  show = genericShow
instance decodeInstanceIpv6AddressListRequest :: Decode InstanceIpv6AddressListRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceIpv6AddressListRequest :: Encode InstanceIpv6AddressListRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IPv6 address.</p>
newtype InstanceIpv6AddressRequest = InstanceIpv6AddressRequest 
  { "Ipv6Address" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeInstanceIpv6AddressRequest :: Newtype InstanceIpv6AddressRequest _
derive instance repGenericInstanceIpv6AddressRequest :: Generic InstanceIpv6AddressRequest _
instance showInstanceIpv6AddressRequest :: Show InstanceIpv6AddressRequest where
  show = genericShow
instance decodeInstanceIpv6AddressRequest :: Decode InstanceIpv6AddressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceIpv6AddressRequest :: Encode InstanceIpv6AddressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceIpv6AddressRequest from required parameters
newInstanceIpv6AddressRequest :: InstanceIpv6AddressRequest
newInstanceIpv6AddressRequest  = InstanceIpv6AddressRequest { "Ipv6Address": (NullOrUndefined Nothing) }

-- | Constructs InstanceIpv6AddressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceIpv6AddressRequest' :: ( { "Ipv6Address" :: NullOrUndefined.NullOrUndefined (String) } -> {"Ipv6Address" :: NullOrUndefined.NullOrUndefined (String) } ) -> InstanceIpv6AddressRequest
newInstanceIpv6AddressRequest'  customize = (InstanceIpv6AddressRequest <<< customize) { "Ipv6Address": (NullOrUndefined Nothing) }



newtype InstanceLifecycleType = InstanceLifecycleType String
derive instance newtypeInstanceLifecycleType :: Newtype InstanceLifecycleType _
derive instance repGenericInstanceLifecycleType :: Generic InstanceLifecycleType _
instance showInstanceLifecycleType :: Show InstanceLifecycleType where
  show = genericShow
instance decodeInstanceLifecycleType :: Decode InstanceLifecycleType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceLifecycleType :: Encode InstanceLifecycleType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InstanceList = InstanceList (Array Instance)
derive instance newtypeInstanceList :: Newtype InstanceList _
derive instance repGenericInstanceList :: Generic InstanceList _
instance showInstanceList :: Show InstanceList where
  show = genericShow
instance decodeInstanceList :: Decode InstanceList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceList :: Encode InstanceList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the market (purchasing) option for the instances.</p>
newtype InstanceMarketOptionsRequest = InstanceMarketOptionsRequest 
  { "MarketType" :: NullOrUndefined.NullOrUndefined (MarketType)
  , "SpotOptions" :: NullOrUndefined.NullOrUndefined (SpotMarketOptions)
  }
derive instance newtypeInstanceMarketOptionsRequest :: Newtype InstanceMarketOptionsRequest _
derive instance repGenericInstanceMarketOptionsRequest :: Generic InstanceMarketOptionsRequest _
instance showInstanceMarketOptionsRequest :: Show InstanceMarketOptionsRequest where
  show = genericShow
instance decodeInstanceMarketOptionsRequest :: Decode InstanceMarketOptionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceMarketOptionsRequest :: Encode InstanceMarketOptionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceMarketOptionsRequest from required parameters
newInstanceMarketOptionsRequest :: InstanceMarketOptionsRequest
newInstanceMarketOptionsRequest  = InstanceMarketOptionsRequest { "MarketType": (NullOrUndefined Nothing), "SpotOptions": (NullOrUndefined Nothing) }

-- | Constructs InstanceMarketOptionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceMarketOptionsRequest' :: ( { "MarketType" :: NullOrUndefined.NullOrUndefined (MarketType) , "SpotOptions" :: NullOrUndefined.NullOrUndefined (SpotMarketOptions) } -> {"MarketType" :: NullOrUndefined.NullOrUndefined (MarketType) , "SpotOptions" :: NullOrUndefined.NullOrUndefined (SpotMarketOptions) } ) -> InstanceMarketOptionsRequest
newInstanceMarketOptionsRequest'  customize = (InstanceMarketOptionsRequest <<< customize) { "MarketType": (NullOrUndefined Nothing), "SpotOptions": (NullOrUndefined Nothing) }



-- | <p>Describes the monitoring of an instance.</p>
newtype InstanceMonitoring = InstanceMonitoring 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "Monitoring" :: NullOrUndefined.NullOrUndefined (Monitoring)
  }
derive instance newtypeInstanceMonitoring :: Newtype InstanceMonitoring _
derive instance repGenericInstanceMonitoring :: Generic InstanceMonitoring _
instance showInstanceMonitoring :: Show InstanceMonitoring where
  show = genericShow
instance decodeInstanceMonitoring :: Decode InstanceMonitoring where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceMonitoring :: Encode InstanceMonitoring where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceMonitoring from required parameters
newInstanceMonitoring :: InstanceMonitoring
newInstanceMonitoring  = InstanceMonitoring { "InstanceId": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing) }

-- | Constructs InstanceMonitoring's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceMonitoring' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (Monitoring) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (Monitoring) } ) -> InstanceMonitoring
newInstanceMonitoring'  customize = (InstanceMonitoring <<< customize) { "InstanceId": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing) }



newtype InstanceMonitoringList = InstanceMonitoringList (Array InstanceMonitoring)
derive instance newtypeInstanceMonitoringList :: Newtype InstanceMonitoringList _
derive instance repGenericInstanceMonitoringList :: Generic InstanceMonitoringList _
instance showInstanceMonitoringList :: Show InstanceMonitoringList where
  show = genericShow
instance decodeInstanceMonitoringList :: Decode InstanceMonitoringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceMonitoringList :: Encode InstanceMonitoringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a network interface.</p>
newtype InstanceNetworkInterface = InstanceNetworkInterface 
  { "Association" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceAssociation)
  , "Attachment" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceAttachment)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList)
  , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList)
  , "MacAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "OwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (InstancePrivateIpAddressList)
  , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Status" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceStatus)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeInstanceNetworkInterface :: Newtype InstanceNetworkInterface _
derive instance repGenericInstanceNetworkInterface :: Generic InstanceNetworkInterface _
instance showInstanceNetworkInterface :: Show InstanceNetworkInterface where
  show = genericShow
instance decodeInstanceNetworkInterface :: Decode InstanceNetworkInterface where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceNetworkInterface :: Encode InstanceNetworkInterface where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceNetworkInterface from required parameters
newInstanceNetworkInterface :: InstanceNetworkInterface
newInstanceNetworkInterface  = InstanceNetworkInterface { "Association": (NullOrUndefined Nothing), "Attachment": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "MacAddress": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs InstanceNetworkInterface's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceNetworkInterface' :: ( { "Association" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceAssociation) , "Attachment" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceAttachment) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList) , "MacAddress" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (InstancePrivateIpAddressList) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (Boolean) , "Status" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceStatus) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Association" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceAssociation) , "Attachment" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceAttachment) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList) , "MacAddress" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (InstancePrivateIpAddressList) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (Boolean) , "Status" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceStatus) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> InstanceNetworkInterface
newInstanceNetworkInterface'  customize = (InstanceNetworkInterface <<< customize) { "Association": (NullOrUndefined Nothing), "Attachment": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "MacAddress": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Describes association information for an Elastic IP address (IPv4).</p>
newtype InstanceNetworkInterfaceAssociation = InstanceNetworkInterfaceAssociation 
  { "IpOwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicDnsName" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicIp" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeInstanceNetworkInterfaceAssociation :: Newtype InstanceNetworkInterfaceAssociation _
derive instance repGenericInstanceNetworkInterfaceAssociation :: Generic InstanceNetworkInterfaceAssociation _
instance showInstanceNetworkInterfaceAssociation :: Show InstanceNetworkInterfaceAssociation where
  show = genericShow
instance decodeInstanceNetworkInterfaceAssociation :: Decode InstanceNetworkInterfaceAssociation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceNetworkInterfaceAssociation :: Encode InstanceNetworkInterfaceAssociation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceNetworkInterfaceAssociation from required parameters
newInstanceNetworkInterfaceAssociation :: InstanceNetworkInterfaceAssociation
newInstanceNetworkInterfaceAssociation  = InstanceNetworkInterfaceAssociation { "IpOwnerId": (NullOrUndefined Nothing), "PublicDnsName": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }

-- | Constructs InstanceNetworkInterfaceAssociation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceNetworkInterfaceAssociation' :: ( { "IpOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PublicDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) } -> {"IpOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PublicDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) } ) -> InstanceNetworkInterfaceAssociation
newInstanceNetworkInterfaceAssociation'  customize = (InstanceNetworkInterfaceAssociation <<< customize) { "IpOwnerId": (NullOrUndefined Nothing), "PublicDnsName": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }



-- | <p>Describes a network interface attachment.</p>
newtype InstanceNetworkInterfaceAttachment = InstanceNetworkInterfaceAttachment 
  { "AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "AttachmentId" :: NullOrUndefined.NullOrUndefined (String)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int)
  , "Status" :: NullOrUndefined.NullOrUndefined (AttachmentStatus)
  }
derive instance newtypeInstanceNetworkInterfaceAttachment :: Newtype InstanceNetworkInterfaceAttachment _
derive instance repGenericInstanceNetworkInterfaceAttachment :: Generic InstanceNetworkInterfaceAttachment _
instance showInstanceNetworkInterfaceAttachment :: Show InstanceNetworkInterfaceAttachment where
  show = genericShow
instance decodeInstanceNetworkInterfaceAttachment :: Decode InstanceNetworkInterfaceAttachment where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceNetworkInterfaceAttachment :: Encode InstanceNetworkInterfaceAttachment where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceNetworkInterfaceAttachment from required parameters
newInstanceNetworkInterfaceAttachment :: InstanceNetworkInterfaceAttachment
newInstanceNetworkInterfaceAttachment  = InstanceNetworkInterfaceAttachment { "AttachTime": (NullOrUndefined Nothing), "AttachmentId": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }

-- | Constructs InstanceNetworkInterfaceAttachment's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceNetworkInterfaceAttachment' :: ( { "AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "AttachmentId" :: NullOrUndefined.NullOrUndefined (String) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "Status" :: NullOrUndefined.NullOrUndefined (AttachmentStatus) } -> {"AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "AttachmentId" :: NullOrUndefined.NullOrUndefined (String) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "Status" :: NullOrUndefined.NullOrUndefined (AttachmentStatus) } ) -> InstanceNetworkInterfaceAttachment
newInstanceNetworkInterfaceAttachment'  customize = (InstanceNetworkInterfaceAttachment <<< customize) { "AttachTime": (NullOrUndefined Nothing), "AttachmentId": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }



newtype InstanceNetworkInterfaceList = InstanceNetworkInterfaceList (Array InstanceNetworkInterface)
derive instance newtypeInstanceNetworkInterfaceList :: Newtype InstanceNetworkInterfaceList _
derive instance repGenericInstanceNetworkInterfaceList :: Generic InstanceNetworkInterfaceList _
instance showInstanceNetworkInterfaceList :: Show InstanceNetworkInterfaceList where
  show = genericShow
instance decodeInstanceNetworkInterfaceList :: Decode InstanceNetworkInterfaceList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceNetworkInterfaceList :: Encode InstanceNetworkInterfaceList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a network interface.</p>
newtype InstanceNetworkInterfaceSpecification = InstanceNetworkInterfaceSpecification 
  { "AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int)
  , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList)
  , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList)
  , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeInstanceNetworkInterfaceSpecification :: Newtype InstanceNetworkInterfaceSpecification _
derive instance repGenericInstanceNetworkInterfaceSpecification :: Generic InstanceNetworkInterfaceSpecification _
instance showInstanceNetworkInterfaceSpecification :: Show InstanceNetworkInterfaceSpecification where
  show = genericShow
instance decodeInstanceNetworkInterfaceSpecification :: Decode InstanceNetworkInterfaceSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceNetworkInterfaceSpecification :: Encode InstanceNetworkInterfaceSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceNetworkInterfaceSpecification from required parameters
newInstanceNetworkInterfaceSpecification :: InstanceNetworkInterfaceSpecification
newInstanceNetworkInterfaceSpecification  = InstanceNetworkInterfaceSpecification { "AssociatePublicIpAddress": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }

-- | Constructs InstanceNetworkInterfaceSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceNetworkInterfaceSpecification' :: ( { "AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } ) -> InstanceNetworkInterfaceSpecification
newInstanceNetworkInterfaceSpecification'  customize = (InstanceNetworkInterfaceSpecification <<< customize) { "AssociatePublicIpAddress": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }



newtype InstanceNetworkInterfaceSpecificationList = InstanceNetworkInterfaceSpecificationList (Array InstanceNetworkInterfaceSpecification)
derive instance newtypeInstanceNetworkInterfaceSpecificationList :: Newtype InstanceNetworkInterfaceSpecificationList _
derive instance repGenericInstanceNetworkInterfaceSpecificationList :: Generic InstanceNetworkInterfaceSpecificationList _
instance showInstanceNetworkInterfaceSpecificationList :: Show InstanceNetworkInterfaceSpecificationList where
  show = genericShow
instance decodeInstanceNetworkInterfaceSpecificationList :: Decode InstanceNetworkInterfaceSpecificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceNetworkInterfaceSpecificationList :: Encode InstanceNetworkInterfaceSpecificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a private IPv4 address.</p>
newtype InstancePrivateIpAddress = InstancePrivateIpAddress 
  { "Association" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceAssociation)
  , "Primary" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeInstancePrivateIpAddress :: Newtype InstancePrivateIpAddress _
derive instance repGenericInstancePrivateIpAddress :: Generic InstancePrivateIpAddress _
instance showInstancePrivateIpAddress :: Show InstancePrivateIpAddress where
  show = genericShow
instance decodeInstancePrivateIpAddress :: Decode InstancePrivateIpAddress where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstancePrivateIpAddress :: Encode InstancePrivateIpAddress where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstancePrivateIpAddress from required parameters
newInstancePrivateIpAddress :: InstancePrivateIpAddress
newInstancePrivateIpAddress  = InstancePrivateIpAddress { "Association": (NullOrUndefined Nothing), "Primary": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing) }

-- | Constructs InstancePrivateIpAddress's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstancePrivateIpAddress' :: ( { "Association" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceAssociation) , "Primary" :: NullOrUndefined.NullOrUndefined (Boolean) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) } -> {"Association" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceAssociation) , "Primary" :: NullOrUndefined.NullOrUndefined (Boolean) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) } ) -> InstancePrivateIpAddress
newInstancePrivateIpAddress'  customize = (InstancePrivateIpAddress <<< customize) { "Association": (NullOrUndefined Nothing), "Primary": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing) }



newtype InstancePrivateIpAddressList = InstancePrivateIpAddressList (Array InstancePrivateIpAddress)
derive instance newtypeInstancePrivateIpAddressList :: Newtype InstancePrivateIpAddressList _
derive instance repGenericInstancePrivateIpAddressList :: Generic InstancePrivateIpAddressList _
instance showInstancePrivateIpAddressList :: Show InstancePrivateIpAddressList where
  show = genericShow
instance decodeInstancePrivateIpAddressList :: Decode InstancePrivateIpAddressList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstancePrivateIpAddressList :: Encode InstancePrivateIpAddressList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the current state of an instance.</p>
newtype InstanceState = InstanceState 
  { "Code" :: NullOrUndefined.NullOrUndefined (Int)
  , "Name" :: NullOrUndefined.NullOrUndefined (InstanceStateName)
  }
derive instance newtypeInstanceState :: Newtype InstanceState _
derive instance repGenericInstanceState :: Generic InstanceState _
instance showInstanceState :: Show InstanceState where
  show = genericShow
instance decodeInstanceState :: Decode InstanceState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceState :: Encode InstanceState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceState from required parameters
newInstanceState :: InstanceState
newInstanceState  = InstanceState { "Code": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }

-- | Constructs InstanceState's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceState' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (Int) , "Name" :: NullOrUndefined.NullOrUndefined (InstanceStateName) } -> {"Code" :: NullOrUndefined.NullOrUndefined (Int) , "Name" :: NullOrUndefined.NullOrUndefined (InstanceStateName) } ) -> InstanceState
newInstanceState'  customize = (InstanceState <<< customize) { "Code": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }



-- | <p>Describes an instance state change.</p>
newtype InstanceStateChange = InstanceStateChange 
  { "CurrentState" :: NullOrUndefined.NullOrUndefined (InstanceState)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "PreviousState" :: NullOrUndefined.NullOrUndefined (InstanceState)
  }
derive instance newtypeInstanceStateChange :: Newtype InstanceStateChange _
derive instance repGenericInstanceStateChange :: Generic InstanceStateChange _
instance showInstanceStateChange :: Show InstanceStateChange where
  show = genericShow
instance decodeInstanceStateChange :: Decode InstanceStateChange where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceStateChange :: Encode InstanceStateChange where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceStateChange from required parameters
newInstanceStateChange :: InstanceStateChange
newInstanceStateChange  = InstanceStateChange { "CurrentState": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "PreviousState": (NullOrUndefined Nothing) }

-- | Constructs InstanceStateChange's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceStateChange' :: ( { "CurrentState" :: NullOrUndefined.NullOrUndefined (InstanceState) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "PreviousState" :: NullOrUndefined.NullOrUndefined (InstanceState) } -> {"CurrentState" :: NullOrUndefined.NullOrUndefined (InstanceState) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "PreviousState" :: NullOrUndefined.NullOrUndefined (InstanceState) } ) -> InstanceStateChange
newInstanceStateChange'  customize = (InstanceStateChange <<< customize) { "CurrentState": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "PreviousState": (NullOrUndefined Nothing) }



newtype InstanceStateChangeList = InstanceStateChangeList (Array InstanceStateChange)
derive instance newtypeInstanceStateChangeList :: Newtype InstanceStateChangeList _
derive instance repGenericInstanceStateChangeList :: Generic InstanceStateChangeList _
instance showInstanceStateChangeList :: Show InstanceStateChangeList where
  show = genericShow
instance decodeInstanceStateChangeList :: Decode InstanceStateChangeList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceStateChangeList :: Encode InstanceStateChangeList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InstanceStateName = InstanceStateName String
derive instance newtypeInstanceStateName :: Newtype InstanceStateName _
derive instance repGenericInstanceStateName :: Generic InstanceStateName _
instance showInstanceStateName :: Show InstanceStateName where
  show = genericShow
instance decodeInstanceStateName :: Decode InstanceStateName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceStateName :: Encode InstanceStateName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the status of an instance.</p>
newtype InstanceStatus = InstanceStatus 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "Events" :: NullOrUndefined.NullOrUndefined (InstanceStatusEventList)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceState" :: NullOrUndefined.NullOrUndefined (InstanceState)
  , "InstanceStatus" :: NullOrUndefined.NullOrUndefined (InstanceStatusSummary)
  , "SystemStatus" :: NullOrUndefined.NullOrUndefined (InstanceStatusSummary)
  }
derive instance newtypeInstanceStatus :: Newtype InstanceStatus _
derive instance repGenericInstanceStatus :: Generic InstanceStatus _
instance showInstanceStatus :: Show InstanceStatus where
  show = genericShow
instance decodeInstanceStatus :: Decode InstanceStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceStatus :: Encode InstanceStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceStatus from required parameters
newInstanceStatus :: InstanceStatus
newInstanceStatus  = InstanceStatus { "AvailabilityZone": (NullOrUndefined Nothing), "Events": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceState": (NullOrUndefined Nothing), "InstanceStatus": (NullOrUndefined Nothing), "SystemStatus": (NullOrUndefined Nothing) }

-- | Constructs InstanceStatus's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceStatus' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Events" :: NullOrUndefined.NullOrUndefined (InstanceStatusEventList) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceState" :: NullOrUndefined.NullOrUndefined (InstanceState) , "InstanceStatus" :: NullOrUndefined.NullOrUndefined (InstanceStatusSummary) , "SystemStatus" :: NullOrUndefined.NullOrUndefined (InstanceStatusSummary) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Events" :: NullOrUndefined.NullOrUndefined (InstanceStatusEventList) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceState" :: NullOrUndefined.NullOrUndefined (InstanceState) , "InstanceStatus" :: NullOrUndefined.NullOrUndefined (InstanceStatusSummary) , "SystemStatus" :: NullOrUndefined.NullOrUndefined (InstanceStatusSummary) } ) -> InstanceStatus
newInstanceStatus'  customize = (InstanceStatus <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "Events": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceState": (NullOrUndefined Nothing), "InstanceStatus": (NullOrUndefined Nothing), "SystemStatus": (NullOrUndefined Nothing) }



-- | <p>Describes the instance status.</p>
newtype InstanceStatusDetails = InstanceStatusDetails 
  { "ImpairedSince" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Name" :: NullOrUndefined.NullOrUndefined (StatusName)
  , "Status" :: NullOrUndefined.NullOrUndefined (StatusType)
  }
derive instance newtypeInstanceStatusDetails :: Newtype InstanceStatusDetails _
derive instance repGenericInstanceStatusDetails :: Generic InstanceStatusDetails _
instance showInstanceStatusDetails :: Show InstanceStatusDetails where
  show = genericShow
instance decodeInstanceStatusDetails :: Decode InstanceStatusDetails where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceStatusDetails :: Encode InstanceStatusDetails where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceStatusDetails from required parameters
newInstanceStatusDetails :: InstanceStatusDetails
newInstanceStatusDetails  = InstanceStatusDetails { "ImpairedSince": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }

-- | Constructs InstanceStatusDetails's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceStatusDetails' :: ( { "ImpairedSince" :: NullOrUndefined.NullOrUndefined (DateTime) , "Name" :: NullOrUndefined.NullOrUndefined (StatusName) , "Status" :: NullOrUndefined.NullOrUndefined (StatusType) } -> {"ImpairedSince" :: NullOrUndefined.NullOrUndefined (DateTime) , "Name" :: NullOrUndefined.NullOrUndefined (StatusName) , "Status" :: NullOrUndefined.NullOrUndefined (StatusType) } ) -> InstanceStatusDetails
newInstanceStatusDetails'  customize = (InstanceStatusDetails <<< customize) { "ImpairedSince": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }



newtype InstanceStatusDetailsList = InstanceStatusDetailsList (Array InstanceStatusDetails)
derive instance newtypeInstanceStatusDetailsList :: Newtype InstanceStatusDetailsList _
derive instance repGenericInstanceStatusDetailsList :: Generic InstanceStatusDetailsList _
instance showInstanceStatusDetailsList :: Show InstanceStatusDetailsList where
  show = genericShow
instance decodeInstanceStatusDetailsList :: Decode InstanceStatusDetailsList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceStatusDetailsList :: Encode InstanceStatusDetailsList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a scheduled event for an instance.</p>
newtype InstanceStatusEvent = InstanceStatusEvent 
  { "Code" :: NullOrUndefined.NullOrUndefined (EventCode)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "NotAfter" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "NotBefore" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeInstanceStatusEvent :: Newtype InstanceStatusEvent _
derive instance repGenericInstanceStatusEvent :: Generic InstanceStatusEvent _
instance showInstanceStatusEvent :: Show InstanceStatusEvent where
  show = genericShow
instance decodeInstanceStatusEvent :: Decode InstanceStatusEvent where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceStatusEvent :: Encode InstanceStatusEvent where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceStatusEvent from required parameters
newInstanceStatusEvent :: InstanceStatusEvent
newInstanceStatusEvent  = InstanceStatusEvent { "Code": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "NotAfter": (NullOrUndefined Nothing), "NotBefore": (NullOrUndefined Nothing) }

-- | Constructs InstanceStatusEvent's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceStatusEvent' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (EventCode) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "NotAfter" :: NullOrUndefined.NullOrUndefined (DateTime) , "NotBefore" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"Code" :: NullOrUndefined.NullOrUndefined (EventCode) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "NotAfter" :: NullOrUndefined.NullOrUndefined (DateTime) , "NotBefore" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> InstanceStatusEvent
newInstanceStatusEvent'  customize = (InstanceStatusEvent <<< customize) { "Code": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "NotAfter": (NullOrUndefined Nothing), "NotBefore": (NullOrUndefined Nothing) }



newtype InstanceStatusEventList = InstanceStatusEventList (Array InstanceStatusEvent)
derive instance newtypeInstanceStatusEventList :: Newtype InstanceStatusEventList _
derive instance repGenericInstanceStatusEventList :: Generic InstanceStatusEventList _
instance showInstanceStatusEventList :: Show InstanceStatusEventList where
  show = genericShow
instance decodeInstanceStatusEventList :: Decode InstanceStatusEventList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceStatusEventList :: Encode InstanceStatusEventList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InstanceStatusList = InstanceStatusList (Array InstanceStatus)
derive instance newtypeInstanceStatusList :: Newtype InstanceStatusList _
derive instance repGenericInstanceStatusList :: Generic InstanceStatusList _
instance showInstanceStatusList :: Show InstanceStatusList where
  show = genericShow
instance decodeInstanceStatusList :: Decode InstanceStatusList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceStatusList :: Encode InstanceStatusList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the status of an instance.</p>
newtype InstanceStatusSummary = InstanceStatusSummary 
  { "Details" :: NullOrUndefined.NullOrUndefined (InstanceStatusDetailsList)
  , "Status" :: NullOrUndefined.NullOrUndefined (SummaryStatus)
  }
derive instance newtypeInstanceStatusSummary :: Newtype InstanceStatusSummary _
derive instance repGenericInstanceStatusSummary :: Generic InstanceStatusSummary _
instance showInstanceStatusSummary :: Show InstanceStatusSummary where
  show = genericShow
instance decodeInstanceStatusSummary :: Decode InstanceStatusSummary where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceStatusSummary :: Encode InstanceStatusSummary where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InstanceStatusSummary from required parameters
newInstanceStatusSummary :: InstanceStatusSummary
newInstanceStatusSummary  = InstanceStatusSummary { "Details": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }

-- | Constructs InstanceStatusSummary's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInstanceStatusSummary' :: ( { "Details" :: NullOrUndefined.NullOrUndefined (InstanceStatusDetailsList) , "Status" :: NullOrUndefined.NullOrUndefined (SummaryStatus) } -> {"Details" :: NullOrUndefined.NullOrUndefined (InstanceStatusDetailsList) , "Status" :: NullOrUndefined.NullOrUndefined (SummaryStatus) } ) -> InstanceStatusSummary
newInstanceStatusSummary'  customize = (InstanceStatusSummary <<< customize) { "Details": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }



newtype InstanceType = InstanceType String
derive instance newtypeInstanceType :: Newtype InstanceType _
derive instance repGenericInstanceType :: Generic InstanceType _
instance showInstanceType :: Show InstanceType where
  show = genericShow
instance decodeInstanceType :: Decode InstanceType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceType :: Encode InstanceType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InstanceTypeList = InstanceTypeList (Array InstanceType)
derive instance newtypeInstanceTypeList :: Newtype InstanceTypeList _
derive instance repGenericInstanceTypeList :: Generic InstanceTypeList _
instance showInstanceTypeList :: Show InstanceTypeList where
  show = genericShow
instance decodeInstanceTypeList :: Decode InstanceTypeList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInstanceTypeList :: Encode InstanceTypeList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InterfacePermissionType = InterfacePermissionType String
derive instance newtypeInterfacePermissionType :: Newtype InterfacePermissionType _
derive instance repGenericInterfacePermissionType :: Generic InterfacePermissionType _
instance showInterfacePermissionType :: Show InterfacePermissionType where
  show = genericShow
instance decodeInterfacePermissionType :: Decode InterfacePermissionType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInterfacePermissionType :: Encode InterfacePermissionType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an Internet gateway.</p>
newtype InternetGateway = InternetGateway 
  { "Attachments" :: NullOrUndefined.NullOrUndefined (InternetGatewayAttachmentList)
  , "InternetGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeInternetGateway :: Newtype InternetGateway _
derive instance repGenericInternetGateway :: Generic InternetGateway _
instance showInternetGateway :: Show InternetGateway where
  show = genericShow
instance decodeInternetGateway :: Decode InternetGateway where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInternetGateway :: Encode InternetGateway where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InternetGateway from required parameters
newInternetGateway :: InternetGateway
newInternetGateway  = InternetGateway { "Attachments": (NullOrUndefined Nothing), "InternetGatewayId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs InternetGateway's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInternetGateway' :: ( { "Attachments" :: NullOrUndefined.NullOrUndefined (InternetGatewayAttachmentList) , "InternetGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"Attachments" :: NullOrUndefined.NullOrUndefined (InternetGatewayAttachmentList) , "InternetGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> InternetGateway
newInternetGateway'  customize = (InternetGateway <<< customize) { "Attachments": (NullOrUndefined Nothing), "InternetGatewayId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



-- | <p>Describes the attachment of a VPC to an Internet gateway or an egress-only Internet gateway.</p>
newtype InternetGatewayAttachment = InternetGatewayAttachment 
  { "State" :: NullOrUndefined.NullOrUndefined (AttachmentStatus)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeInternetGatewayAttachment :: Newtype InternetGatewayAttachment _
derive instance repGenericInternetGatewayAttachment :: Generic InternetGatewayAttachment _
instance showInternetGatewayAttachment :: Show InternetGatewayAttachment where
  show = genericShow
instance decodeInternetGatewayAttachment :: Decode InternetGatewayAttachment where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInternetGatewayAttachment :: Encode InternetGatewayAttachment where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs InternetGatewayAttachment from required parameters
newInternetGatewayAttachment :: InternetGatewayAttachment
newInternetGatewayAttachment  = InternetGatewayAttachment { "State": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs InternetGatewayAttachment's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newInternetGatewayAttachment' :: ( { "State" :: NullOrUndefined.NullOrUndefined (AttachmentStatus) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"State" :: NullOrUndefined.NullOrUndefined (AttachmentStatus) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> InternetGatewayAttachment
newInternetGatewayAttachment'  customize = (InternetGatewayAttachment <<< customize) { "State": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



newtype InternetGatewayAttachmentList = InternetGatewayAttachmentList (Array InternetGatewayAttachment)
derive instance newtypeInternetGatewayAttachmentList :: Newtype InternetGatewayAttachmentList _
derive instance repGenericInternetGatewayAttachmentList :: Generic InternetGatewayAttachmentList _
instance showInternetGatewayAttachmentList :: Show InternetGatewayAttachmentList where
  show = genericShow
instance decodeInternetGatewayAttachmentList :: Decode InternetGatewayAttachmentList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInternetGatewayAttachmentList :: Encode InternetGatewayAttachmentList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype InternetGatewayList = InternetGatewayList (Array InternetGateway)
derive instance newtypeInternetGatewayList :: Newtype InternetGatewayList _
derive instance repGenericInternetGatewayList :: Generic InternetGatewayList _
instance showInternetGatewayList :: Show InternetGatewayList where
  show = genericShow
instance decodeInternetGatewayList :: Decode InternetGatewayList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeInternetGatewayList :: Encode InternetGatewayList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a set of permissions for a security group rule.</p>
newtype IpPermission = IpPermission 
  { "FromPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String)
  , "IpRanges" :: NullOrUndefined.NullOrUndefined (IpRangeList)
  , "Ipv6Ranges" :: NullOrUndefined.NullOrUndefined (Ipv6RangeList)
  , "PrefixListIds" :: NullOrUndefined.NullOrUndefined (PrefixListIdList)
  , "ToPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "UserIdGroupPairs" :: NullOrUndefined.NullOrUndefined (UserIdGroupPairList)
  }
derive instance newtypeIpPermission :: Newtype IpPermission _
derive instance repGenericIpPermission :: Generic IpPermission _
instance showIpPermission :: Show IpPermission where
  show = genericShow
instance decodeIpPermission :: Decode IpPermission where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpPermission :: Encode IpPermission where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs IpPermission from required parameters
newIpPermission :: IpPermission
newIpPermission  = IpPermission { "FromPort": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "IpRanges": (NullOrUndefined Nothing), "Ipv6Ranges": (NullOrUndefined Nothing), "PrefixListIds": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing), "UserIdGroupPairs": (NullOrUndefined Nothing) }

-- | Constructs IpPermission's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newIpPermission' :: ( { "FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "IpRanges" :: NullOrUndefined.NullOrUndefined (IpRangeList) , "Ipv6Ranges" :: NullOrUndefined.NullOrUndefined (Ipv6RangeList) , "PrefixListIds" :: NullOrUndefined.NullOrUndefined (PrefixListIdList) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "UserIdGroupPairs" :: NullOrUndefined.NullOrUndefined (UserIdGroupPairList) } -> {"FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "IpRanges" :: NullOrUndefined.NullOrUndefined (IpRangeList) , "Ipv6Ranges" :: NullOrUndefined.NullOrUndefined (Ipv6RangeList) , "PrefixListIds" :: NullOrUndefined.NullOrUndefined (PrefixListIdList) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "UserIdGroupPairs" :: NullOrUndefined.NullOrUndefined (UserIdGroupPairList) } ) -> IpPermission
newIpPermission'  customize = (IpPermission <<< customize) { "FromPort": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "IpRanges": (NullOrUndefined Nothing), "Ipv6Ranges": (NullOrUndefined Nothing), "PrefixListIds": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing), "UserIdGroupPairs": (NullOrUndefined Nothing) }



newtype IpPermissionList = IpPermissionList (Array IpPermission)
derive instance newtypeIpPermissionList :: Newtype IpPermissionList _
derive instance repGenericIpPermissionList :: Generic IpPermissionList _
instance showIpPermissionList :: Show IpPermissionList where
  show = genericShow
instance decodeIpPermissionList :: Decode IpPermissionList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpPermissionList :: Encode IpPermissionList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IPv4 range.</p>
newtype IpRange = IpRange 
  { "CidrIp" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeIpRange :: Newtype IpRange _
derive instance repGenericIpRange :: Generic IpRange _
instance showIpRange :: Show IpRange where
  show = genericShow
instance decodeIpRange :: Decode IpRange where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpRange :: Encode IpRange where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs IpRange from required parameters
newIpRange :: IpRange
newIpRange  = IpRange { "CidrIp": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing) }

-- | Constructs IpRange's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newIpRange' :: ( { "CidrIp" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) } -> {"CidrIp" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) } ) -> IpRange
newIpRange'  customize = (IpRange <<< customize) { "CidrIp": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing) }



newtype IpRangeList = IpRangeList (Array IpRange)
derive instance newtypeIpRangeList :: Newtype IpRangeList _
derive instance repGenericIpRangeList :: Generic IpRangeList _
instance showIpRangeList :: Show IpRangeList where
  show = genericShow
instance decodeIpRangeList :: Decode IpRangeList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpRangeList :: Encode IpRangeList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype IpRanges = IpRanges (Array String)
derive instance newtypeIpRanges :: Newtype IpRanges _
derive instance repGenericIpRanges :: Generic IpRanges _
instance showIpRanges :: Show IpRanges where
  show = genericShow
instance decodeIpRanges :: Decode IpRanges where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpRanges :: Encode IpRanges where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype Ipv6Address = Ipv6Address String
derive instance newtypeIpv6Address :: Newtype Ipv6Address _
derive instance repGenericIpv6Address :: Generic Ipv6Address _
instance showIpv6Address :: Show Ipv6Address where
  show = genericShow
instance decodeIpv6Address :: Decode Ipv6Address where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpv6Address :: Encode Ipv6Address where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype Ipv6AddressList = Ipv6AddressList (Array String)
derive instance newtypeIpv6AddressList :: Newtype Ipv6AddressList _
derive instance repGenericIpv6AddressList :: Generic Ipv6AddressList _
instance showIpv6AddressList :: Show Ipv6AddressList where
  show = genericShow
instance decodeIpv6AddressList :: Decode Ipv6AddressList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpv6AddressList :: Encode Ipv6AddressList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IPv6 CIDR block.</p>
newtype Ipv6CidrBlock = Ipv6CidrBlock 
  { "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeIpv6CidrBlock :: Newtype Ipv6CidrBlock _
derive instance repGenericIpv6CidrBlock :: Generic Ipv6CidrBlock _
instance showIpv6CidrBlock :: Show Ipv6CidrBlock where
  show = genericShow
instance decodeIpv6CidrBlock :: Decode Ipv6CidrBlock where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpv6CidrBlock :: Encode Ipv6CidrBlock where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Ipv6CidrBlock from required parameters
newIpv6CidrBlock :: Ipv6CidrBlock
newIpv6CidrBlock  = Ipv6CidrBlock { "Ipv6CidrBlock": (NullOrUndefined Nothing) }

-- | Constructs Ipv6CidrBlock's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newIpv6CidrBlock' :: ( { "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) } -> {"Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) } ) -> Ipv6CidrBlock
newIpv6CidrBlock'  customize = (Ipv6CidrBlock <<< customize) { "Ipv6CidrBlock": (NullOrUndefined Nothing) }



newtype Ipv6CidrBlockSet = Ipv6CidrBlockSet (Array Ipv6CidrBlock)
derive instance newtypeIpv6CidrBlockSet :: Newtype Ipv6CidrBlockSet _
derive instance repGenericIpv6CidrBlockSet :: Generic Ipv6CidrBlockSet _
instance showIpv6CidrBlockSet :: Show Ipv6CidrBlockSet where
  show = genericShow
instance decodeIpv6CidrBlockSet :: Decode Ipv6CidrBlockSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpv6CidrBlockSet :: Encode Ipv6CidrBlockSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>[EC2-VPC only] Describes an IPv6 range.</p>
newtype Ipv6Range = Ipv6Range 
  { "CidrIpv6" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeIpv6Range :: Newtype Ipv6Range _
derive instance repGenericIpv6Range :: Generic Ipv6Range _
instance showIpv6Range :: Show Ipv6Range where
  show = genericShow
instance decodeIpv6Range :: Decode Ipv6Range where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpv6Range :: Encode Ipv6Range where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Ipv6Range from required parameters
newIpv6Range :: Ipv6Range
newIpv6Range  = Ipv6Range { "CidrIpv6": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing) }

-- | Constructs Ipv6Range's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newIpv6Range' :: ( { "CidrIpv6" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) } -> {"CidrIpv6" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) } ) -> Ipv6Range
newIpv6Range'  customize = (Ipv6Range <<< customize) { "CidrIpv6": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing) }



newtype Ipv6RangeList = Ipv6RangeList (Array Ipv6Range)
derive instance newtypeIpv6RangeList :: Newtype Ipv6RangeList _
derive instance repGenericIpv6RangeList :: Generic Ipv6RangeList _
instance showIpv6RangeList :: Show Ipv6RangeList where
  show = genericShow
instance decodeIpv6RangeList :: Decode Ipv6RangeList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeIpv6RangeList :: Encode Ipv6RangeList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype KeyNameStringList = KeyNameStringList (Array String)
derive instance newtypeKeyNameStringList :: Newtype KeyNameStringList _
derive instance repGenericKeyNameStringList :: Generic KeyNameStringList _
instance showKeyNameStringList :: Show KeyNameStringList where
  show = genericShow
instance decodeKeyNameStringList :: Decode KeyNameStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeKeyNameStringList :: Encode KeyNameStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a key pair.</p>
newtype KeyPair = KeyPair 
  { "KeyFingerprint" :: NullOrUndefined.NullOrUndefined (String)
  , "KeyMaterial" :: NullOrUndefined.NullOrUndefined (String)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeKeyPair :: Newtype KeyPair _
derive instance repGenericKeyPair :: Generic KeyPair _
instance showKeyPair :: Show KeyPair where
  show = genericShow
instance decodeKeyPair :: Decode KeyPair where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeKeyPair :: Encode KeyPair where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs KeyPair from required parameters
newKeyPair :: KeyPair
newKeyPair  = KeyPair { "KeyFingerprint": (NullOrUndefined Nothing), "KeyMaterial": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing) }

-- | Constructs KeyPair's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newKeyPair' :: ( { "KeyFingerprint" :: NullOrUndefined.NullOrUndefined (String) , "KeyMaterial" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) } -> {"KeyFingerprint" :: NullOrUndefined.NullOrUndefined (String) , "KeyMaterial" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) } ) -> KeyPair
newKeyPair'  customize = (KeyPair <<< customize) { "KeyFingerprint": (NullOrUndefined Nothing), "KeyMaterial": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing) }



-- | <p>Describes a key pair.</p>
newtype KeyPairInfo = KeyPairInfo 
  { "KeyFingerprint" :: NullOrUndefined.NullOrUndefined (String)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeKeyPairInfo :: Newtype KeyPairInfo _
derive instance repGenericKeyPairInfo :: Generic KeyPairInfo _
instance showKeyPairInfo :: Show KeyPairInfo where
  show = genericShow
instance decodeKeyPairInfo :: Decode KeyPairInfo where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeKeyPairInfo :: Encode KeyPairInfo where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs KeyPairInfo from required parameters
newKeyPairInfo :: KeyPairInfo
newKeyPairInfo  = KeyPairInfo { "KeyFingerprint": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing) }

-- | Constructs KeyPairInfo's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newKeyPairInfo' :: ( { "KeyFingerprint" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) } -> {"KeyFingerprint" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) } ) -> KeyPairInfo
newKeyPairInfo'  customize = (KeyPairInfo <<< customize) { "KeyFingerprint": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing) }



newtype KeyPairList = KeyPairList (Array KeyPairInfo)
derive instance newtypeKeyPairList :: Newtype KeyPairList _
derive instance repGenericKeyPairList :: Generic KeyPairList _
instance showKeyPairList :: Show KeyPairList where
  show = genericShow
instance decodeKeyPairList :: Decode KeyPairList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeKeyPairList :: Encode KeyPairList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a launch permission.</p>
newtype LaunchPermission = LaunchPermission 
  { "Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup)
  , "UserId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLaunchPermission :: Newtype LaunchPermission _
derive instance repGenericLaunchPermission :: Generic LaunchPermission _
instance showLaunchPermission :: Show LaunchPermission where
  show = genericShow
instance decodeLaunchPermission :: Decode LaunchPermission where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchPermission :: Encode LaunchPermission where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchPermission from required parameters
newLaunchPermission :: LaunchPermission
newLaunchPermission  = LaunchPermission { "Group": (NullOrUndefined Nothing), "UserId": (NullOrUndefined Nothing) }

-- | Constructs LaunchPermission's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchPermission' :: ( { "Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup) , "UserId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup) , "UserId" :: NullOrUndefined.NullOrUndefined (String) } ) -> LaunchPermission
newLaunchPermission'  customize = (LaunchPermission <<< customize) { "Group": (NullOrUndefined Nothing), "UserId": (NullOrUndefined Nothing) }



newtype LaunchPermissionList = LaunchPermissionList (Array LaunchPermission)
derive instance newtypeLaunchPermissionList :: Newtype LaunchPermissionList _
derive instance repGenericLaunchPermissionList :: Generic LaunchPermissionList _
instance showLaunchPermissionList :: Show LaunchPermissionList where
  show = genericShow
instance decodeLaunchPermissionList :: Decode LaunchPermissionList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchPermissionList :: Encode LaunchPermissionList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a launch permission modification.</p>
newtype LaunchPermissionModifications = LaunchPermissionModifications 
  { "Add" :: NullOrUndefined.NullOrUndefined (LaunchPermissionList)
  , "Remove" :: NullOrUndefined.NullOrUndefined (LaunchPermissionList)
  }
derive instance newtypeLaunchPermissionModifications :: Newtype LaunchPermissionModifications _
derive instance repGenericLaunchPermissionModifications :: Generic LaunchPermissionModifications _
instance showLaunchPermissionModifications :: Show LaunchPermissionModifications where
  show = genericShow
instance decodeLaunchPermissionModifications :: Decode LaunchPermissionModifications where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchPermissionModifications :: Encode LaunchPermissionModifications where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchPermissionModifications from required parameters
newLaunchPermissionModifications :: LaunchPermissionModifications
newLaunchPermissionModifications  = LaunchPermissionModifications { "Add": (NullOrUndefined Nothing), "Remove": (NullOrUndefined Nothing) }

-- | Constructs LaunchPermissionModifications's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchPermissionModifications' :: ( { "Add" :: NullOrUndefined.NullOrUndefined (LaunchPermissionList) , "Remove" :: NullOrUndefined.NullOrUndefined (LaunchPermissionList) } -> {"Add" :: NullOrUndefined.NullOrUndefined (LaunchPermissionList) , "Remove" :: NullOrUndefined.NullOrUndefined (LaunchPermissionList) } ) -> LaunchPermissionModifications
newLaunchPermissionModifications'  customize = (LaunchPermissionModifications <<< customize) { "Add": (NullOrUndefined Nothing), "Remove": (NullOrUndefined Nothing) }



-- | <p>Describes the launch specification for an instance.</p>
newtype LaunchSpecification = LaunchSpecification 
  { "UserData" :: NullOrUndefined.NullOrUndefined (String)
  , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList)
  , "AddressingType" :: NullOrUndefined.NullOrUndefined (String)
  , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList)
  , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "KernelId" :: NullOrUndefined.NullOrUndefined (String)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList)
  , "Placement" :: NullOrUndefined.NullOrUndefined (SpotPlacement)
  , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "Monitoring" :: NullOrUndefined.NullOrUndefined (RunInstancesMonitoringEnabled)
  }
derive instance newtypeLaunchSpecification :: Newtype LaunchSpecification _
derive instance repGenericLaunchSpecification :: Generic LaunchSpecification _
instance showLaunchSpecification :: Show LaunchSpecification where
  show = genericShow
instance decodeLaunchSpecification :: Decode LaunchSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchSpecification :: Encode LaunchSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchSpecification from required parameters
newLaunchSpecification :: LaunchSpecification
newLaunchSpecification  = LaunchSpecification { "AddressingType": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }

-- | Constructs LaunchSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchSpecification' :: ( { "UserData" :: NullOrUndefined.NullOrUndefined (String) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "AddressingType" :: NullOrUndefined.NullOrUndefined (String) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList) , "Placement" :: NullOrUndefined.NullOrUndefined (SpotPlacement) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (RunInstancesMonitoringEnabled) } -> {"UserData" :: NullOrUndefined.NullOrUndefined (String) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "AddressingType" :: NullOrUndefined.NullOrUndefined (String) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList) , "Placement" :: NullOrUndefined.NullOrUndefined (SpotPlacement) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (RunInstancesMonitoringEnabled) } ) -> LaunchSpecification
newLaunchSpecification'  customize = (LaunchSpecification <<< customize) { "AddressingType": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }



newtype LaunchSpecsList = LaunchSpecsList (Array SpotFleetLaunchSpecification)
derive instance newtypeLaunchSpecsList :: Newtype LaunchSpecsList _
derive instance repGenericLaunchSpecsList :: Generic LaunchSpecsList _
instance showLaunchSpecsList :: Show LaunchSpecsList where
  show = genericShow
instance decodeLaunchSpecsList :: Decode LaunchSpecsList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchSpecsList :: Encode LaunchSpecsList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a launch template.</p>
newtype LaunchTemplate = LaunchTemplate 
  { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName)
  , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "CreatedBy" :: NullOrUndefined.NullOrUndefined (String)
  , "DefaultVersionNumber" :: NullOrUndefined.NullOrUndefined (Number)
  , "LatestVersionNumber" :: NullOrUndefined.NullOrUndefined (Number)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeLaunchTemplate :: Newtype LaunchTemplate _
derive instance repGenericLaunchTemplate :: Generic LaunchTemplate _
instance showLaunchTemplate :: Show LaunchTemplate where
  show = genericShow
instance decodeLaunchTemplate :: Decode LaunchTemplate where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplate :: Encode LaunchTemplate where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplate from required parameters
newLaunchTemplate :: LaunchTemplate
newLaunchTemplate  = LaunchTemplate { "CreateTime": (NullOrUndefined Nothing), "CreatedBy": (NullOrUndefined Nothing), "DefaultVersionNumber": (NullOrUndefined Nothing), "LatestVersionNumber": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplate's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplate' :: ( { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "CreatedBy" :: NullOrUndefined.NullOrUndefined (String) , "DefaultVersionNumber" :: NullOrUndefined.NullOrUndefined (Number) , "LatestVersionNumber" :: NullOrUndefined.NullOrUndefined (Number) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "CreatedBy" :: NullOrUndefined.NullOrUndefined (String) , "DefaultVersionNumber" :: NullOrUndefined.NullOrUndefined (Number) , "LatestVersionNumber" :: NullOrUndefined.NullOrUndefined (Number) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> LaunchTemplate
newLaunchTemplate'  customize = (LaunchTemplate <<< customize) { "CreateTime": (NullOrUndefined Nothing), "CreatedBy": (NullOrUndefined Nothing), "DefaultVersionNumber": (NullOrUndefined Nothing), "LatestVersionNumber": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



-- | <p>Describes a block device mapping.</p>
newtype LaunchTemplateBlockDeviceMapping = LaunchTemplateBlockDeviceMapping 
  { "DeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "VirtualName" :: NullOrUndefined.NullOrUndefined (String)
  , "Ebs" :: NullOrUndefined.NullOrUndefined (LaunchTemplateEbsBlockDevice)
  , "NoDevice" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLaunchTemplateBlockDeviceMapping :: Newtype LaunchTemplateBlockDeviceMapping _
derive instance repGenericLaunchTemplateBlockDeviceMapping :: Generic LaunchTemplateBlockDeviceMapping _
instance showLaunchTemplateBlockDeviceMapping :: Show LaunchTemplateBlockDeviceMapping where
  show = genericShow
instance decodeLaunchTemplateBlockDeviceMapping :: Decode LaunchTemplateBlockDeviceMapping where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateBlockDeviceMapping :: Encode LaunchTemplateBlockDeviceMapping where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateBlockDeviceMapping from required parameters
newLaunchTemplateBlockDeviceMapping :: LaunchTemplateBlockDeviceMapping
newLaunchTemplateBlockDeviceMapping  = LaunchTemplateBlockDeviceMapping { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing), "NoDevice": (NullOrUndefined Nothing), "VirtualName": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateBlockDeviceMapping's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateBlockDeviceMapping' :: ( { "DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "VirtualName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (LaunchTemplateEbsBlockDevice) , "NoDevice" :: NullOrUndefined.NullOrUndefined (String) } -> {"DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "VirtualName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (LaunchTemplateEbsBlockDevice) , "NoDevice" :: NullOrUndefined.NullOrUndefined (String) } ) -> LaunchTemplateBlockDeviceMapping
newLaunchTemplateBlockDeviceMapping'  customize = (LaunchTemplateBlockDeviceMapping <<< customize) { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing), "NoDevice": (NullOrUndefined Nothing), "VirtualName": (NullOrUndefined Nothing) }



newtype LaunchTemplateBlockDeviceMappingList = LaunchTemplateBlockDeviceMappingList (Array LaunchTemplateBlockDeviceMapping)
derive instance newtypeLaunchTemplateBlockDeviceMappingList :: Newtype LaunchTemplateBlockDeviceMappingList _
derive instance repGenericLaunchTemplateBlockDeviceMappingList :: Generic LaunchTemplateBlockDeviceMappingList _
instance showLaunchTemplateBlockDeviceMappingList :: Show LaunchTemplateBlockDeviceMappingList where
  show = genericShow
instance decodeLaunchTemplateBlockDeviceMappingList :: Decode LaunchTemplateBlockDeviceMappingList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateBlockDeviceMappingList :: Encode LaunchTemplateBlockDeviceMappingList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a block device mapping.</p>
newtype LaunchTemplateBlockDeviceMappingRequest = LaunchTemplateBlockDeviceMappingRequest 
  { "DeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "VirtualName" :: NullOrUndefined.NullOrUndefined (String)
  , "Ebs" :: NullOrUndefined.NullOrUndefined (LaunchTemplateEbsBlockDeviceRequest)
  , "NoDevice" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLaunchTemplateBlockDeviceMappingRequest :: Newtype LaunchTemplateBlockDeviceMappingRequest _
derive instance repGenericLaunchTemplateBlockDeviceMappingRequest :: Generic LaunchTemplateBlockDeviceMappingRequest _
instance showLaunchTemplateBlockDeviceMappingRequest :: Show LaunchTemplateBlockDeviceMappingRequest where
  show = genericShow
instance decodeLaunchTemplateBlockDeviceMappingRequest :: Decode LaunchTemplateBlockDeviceMappingRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateBlockDeviceMappingRequest :: Encode LaunchTemplateBlockDeviceMappingRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateBlockDeviceMappingRequest from required parameters
newLaunchTemplateBlockDeviceMappingRequest :: LaunchTemplateBlockDeviceMappingRequest
newLaunchTemplateBlockDeviceMappingRequest  = LaunchTemplateBlockDeviceMappingRequest { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing), "NoDevice": (NullOrUndefined Nothing), "VirtualName": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateBlockDeviceMappingRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateBlockDeviceMappingRequest' :: ( { "DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "VirtualName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (LaunchTemplateEbsBlockDeviceRequest) , "NoDevice" :: NullOrUndefined.NullOrUndefined (String) } -> {"DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "VirtualName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (LaunchTemplateEbsBlockDeviceRequest) , "NoDevice" :: NullOrUndefined.NullOrUndefined (String) } ) -> LaunchTemplateBlockDeviceMappingRequest
newLaunchTemplateBlockDeviceMappingRequest'  customize = (LaunchTemplateBlockDeviceMappingRequest <<< customize) { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing), "NoDevice": (NullOrUndefined Nothing), "VirtualName": (NullOrUndefined Nothing) }



newtype LaunchTemplateBlockDeviceMappingRequestList = LaunchTemplateBlockDeviceMappingRequestList (Array LaunchTemplateBlockDeviceMappingRequest)
derive instance newtypeLaunchTemplateBlockDeviceMappingRequestList :: Newtype LaunchTemplateBlockDeviceMappingRequestList _
derive instance repGenericLaunchTemplateBlockDeviceMappingRequestList :: Generic LaunchTemplateBlockDeviceMappingRequestList _
instance showLaunchTemplateBlockDeviceMappingRequestList :: Show LaunchTemplateBlockDeviceMappingRequestList where
  show = genericShow
instance decodeLaunchTemplateBlockDeviceMappingRequestList :: Decode LaunchTemplateBlockDeviceMappingRequestList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateBlockDeviceMappingRequestList :: Encode LaunchTemplateBlockDeviceMappingRequestList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a launch template and overrides.</p>
newtype LaunchTemplateConfig = LaunchTemplateConfig 
  { "LaunchTemplateSpecification" :: NullOrUndefined.NullOrUndefined (FleetLaunchTemplateSpecification)
  , "Overrides" :: NullOrUndefined.NullOrUndefined (LaunchTemplateOverridesList)
  }
derive instance newtypeLaunchTemplateConfig :: Newtype LaunchTemplateConfig _
derive instance repGenericLaunchTemplateConfig :: Generic LaunchTemplateConfig _
instance showLaunchTemplateConfig :: Show LaunchTemplateConfig where
  show = genericShow
instance decodeLaunchTemplateConfig :: Decode LaunchTemplateConfig where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateConfig :: Encode LaunchTemplateConfig where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateConfig from required parameters
newLaunchTemplateConfig :: LaunchTemplateConfig
newLaunchTemplateConfig  = LaunchTemplateConfig { "LaunchTemplateSpecification": (NullOrUndefined Nothing), "Overrides": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateConfig's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateConfig' :: ( { "LaunchTemplateSpecification" :: NullOrUndefined.NullOrUndefined (FleetLaunchTemplateSpecification) , "Overrides" :: NullOrUndefined.NullOrUndefined (LaunchTemplateOverridesList) } -> {"LaunchTemplateSpecification" :: NullOrUndefined.NullOrUndefined (FleetLaunchTemplateSpecification) , "Overrides" :: NullOrUndefined.NullOrUndefined (LaunchTemplateOverridesList) } ) -> LaunchTemplateConfig
newLaunchTemplateConfig'  customize = (LaunchTemplateConfig <<< customize) { "LaunchTemplateSpecification": (NullOrUndefined Nothing), "Overrides": (NullOrUndefined Nothing) }



newtype LaunchTemplateConfigList = LaunchTemplateConfigList (Array LaunchTemplateConfig)
derive instance newtypeLaunchTemplateConfigList :: Newtype LaunchTemplateConfigList _
derive instance repGenericLaunchTemplateConfigList :: Generic LaunchTemplateConfigList _
instance showLaunchTemplateConfigList :: Show LaunchTemplateConfigList where
  show = genericShow
instance decodeLaunchTemplateConfigList :: Decode LaunchTemplateConfigList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateConfigList :: Encode LaunchTemplateConfigList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a block device for an EBS volume.</p>
newtype LaunchTemplateEbsBlockDevice = LaunchTemplateEbsBlockDevice 
  { "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Iops" :: NullOrUndefined.NullOrUndefined (Int)
  , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int)
  , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType)
  }
derive instance newtypeLaunchTemplateEbsBlockDevice :: Newtype LaunchTemplateEbsBlockDevice _
derive instance repGenericLaunchTemplateEbsBlockDevice :: Generic LaunchTemplateEbsBlockDevice _
instance showLaunchTemplateEbsBlockDevice :: Show LaunchTemplateEbsBlockDevice where
  show = genericShow
instance decodeLaunchTemplateEbsBlockDevice :: Decode LaunchTemplateEbsBlockDevice where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateEbsBlockDevice :: Encode LaunchTemplateEbsBlockDevice where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateEbsBlockDevice from required parameters
newLaunchTemplateEbsBlockDevice :: LaunchTemplateEbsBlockDevice
newLaunchTemplateEbsBlockDevice  = LaunchTemplateEbsBlockDevice { "DeleteOnTermination": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "VolumeSize": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateEbsBlockDevice's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateEbsBlockDevice' :: ( { "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) } -> {"Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) } ) -> LaunchTemplateEbsBlockDevice
newLaunchTemplateEbsBlockDevice'  customize = (LaunchTemplateEbsBlockDevice <<< customize) { "DeleteOnTermination": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "VolumeSize": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }



-- | <p>The parameters for a block device for an EBS volume.</p>
newtype LaunchTemplateEbsBlockDeviceRequest = LaunchTemplateEbsBlockDeviceRequest 
  { "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Iops" :: NullOrUndefined.NullOrUndefined (Int)
  , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int)
  , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType)
  }
derive instance newtypeLaunchTemplateEbsBlockDeviceRequest :: Newtype LaunchTemplateEbsBlockDeviceRequest _
derive instance repGenericLaunchTemplateEbsBlockDeviceRequest :: Generic LaunchTemplateEbsBlockDeviceRequest _
instance showLaunchTemplateEbsBlockDeviceRequest :: Show LaunchTemplateEbsBlockDeviceRequest where
  show = genericShow
instance decodeLaunchTemplateEbsBlockDeviceRequest :: Decode LaunchTemplateEbsBlockDeviceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateEbsBlockDeviceRequest :: Encode LaunchTemplateEbsBlockDeviceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateEbsBlockDeviceRequest from required parameters
newLaunchTemplateEbsBlockDeviceRequest :: LaunchTemplateEbsBlockDeviceRequest
newLaunchTemplateEbsBlockDeviceRequest  = LaunchTemplateEbsBlockDeviceRequest { "DeleteOnTermination": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "VolumeSize": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateEbsBlockDeviceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateEbsBlockDeviceRequest' :: ( { "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) } -> {"Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) } ) -> LaunchTemplateEbsBlockDeviceRequest
newLaunchTemplateEbsBlockDeviceRequest'  customize = (LaunchTemplateEbsBlockDeviceRequest <<< customize) { "DeleteOnTermination": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "VolumeSize": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }



newtype LaunchTemplateErrorCode = LaunchTemplateErrorCode String
derive instance newtypeLaunchTemplateErrorCode :: Newtype LaunchTemplateErrorCode _
derive instance repGenericLaunchTemplateErrorCode :: Generic LaunchTemplateErrorCode _
instance showLaunchTemplateErrorCode :: Show LaunchTemplateErrorCode where
  show = genericShow
instance decodeLaunchTemplateErrorCode :: Decode LaunchTemplateErrorCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateErrorCode :: Encode LaunchTemplateErrorCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IAM instance profile.</p>
newtype LaunchTemplateIamInstanceProfileSpecification = LaunchTemplateIamInstanceProfileSpecification 
  { "Arn" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLaunchTemplateIamInstanceProfileSpecification :: Newtype LaunchTemplateIamInstanceProfileSpecification _
derive instance repGenericLaunchTemplateIamInstanceProfileSpecification :: Generic LaunchTemplateIamInstanceProfileSpecification _
instance showLaunchTemplateIamInstanceProfileSpecification :: Show LaunchTemplateIamInstanceProfileSpecification where
  show = genericShow
instance decodeLaunchTemplateIamInstanceProfileSpecification :: Decode LaunchTemplateIamInstanceProfileSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateIamInstanceProfileSpecification :: Encode LaunchTemplateIamInstanceProfileSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateIamInstanceProfileSpecification from required parameters
newLaunchTemplateIamInstanceProfileSpecification :: LaunchTemplateIamInstanceProfileSpecification
newLaunchTemplateIamInstanceProfileSpecification  = LaunchTemplateIamInstanceProfileSpecification { "Arn": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateIamInstanceProfileSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateIamInstanceProfileSpecification' :: ( { "Arn" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) } -> {"Arn" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) } ) -> LaunchTemplateIamInstanceProfileSpecification
newLaunchTemplateIamInstanceProfileSpecification'  customize = (LaunchTemplateIamInstanceProfileSpecification <<< customize) { "Arn": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }



-- | <p>An IAM instance profile.</p>
newtype LaunchTemplateIamInstanceProfileSpecificationRequest = LaunchTemplateIamInstanceProfileSpecificationRequest 
  { "Arn" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLaunchTemplateIamInstanceProfileSpecificationRequest :: Newtype LaunchTemplateIamInstanceProfileSpecificationRequest _
derive instance repGenericLaunchTemplateIamInstanceProfileSpecificationRequest :: Generic LaunchTemplateIamInstanceProfileSpecificationRequest _
instance showLaunchTemplateIamInstanceProfileSpecificationRequest :: Show LaunchTemplateIamInstanceProfileSpecificationRequest where
  show = genericShow
instance decodeLaunchTemplateIamInstanceProfileSpecificationRequest :: Decode LaunchTemplateIamInstanceProfileSpecificationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateIamInstanceProfileSpecificationRequest :: Encode LaunchTemplateIamInstanceProfileSpecificationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateIamInstanceProfileSpecificationRequest from required parameters
newLaunchTemplateIamInstanceProfileSpecificationRequest :: LaunchTemplateIamInstanceProfileSpecificationRequest
newLaunchTemplateIamInstanceProfileSpecificationRequest  = LaunchTemplateIamInstanceProfileSpecificationRequest { "Arn": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateIamInstanceProfileSpecificationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateIamInstanceProfileSpecificationRequest' :: ( { "Arn" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) } -> {"Arn" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) } ) -> LaunchTemplateIamInstanceProfileSpecificationRequest
newLaunchTemplateIamInstanceProfileSpecificationRequest'  customize = (LaunchTemplateIamInstanceProfileSpecificationRequest <<< customize) { "Arn": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }



-- | <p>The market (purchasing) option for the instances.</p>
newtype LaunchTemplateInstanceMarketOptions = LaunchTemplateInstanceMarketOptions 
  { "MarketType" :: NullOrUndefined.NullOrUndefined (MarketType)
  , "SpotOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSpotMarketOptions)
  }
derive instance newtypeLaunchTemplateInstanceMarketOptions :: Newtype LaunchTemplateInstanceMarketOptions _
derive instance repGenericLaunchTemplateInstanceMarketOptions :: Generic LaunchTemplateInstanceMarketOptions _
instance showLaunchTemplateInstanceMarketOptions :: Show LaunchTemplateInstanceMarketOptions where
  show = genericShow
instance decodeLaunchTemplateInstanceMarketOptions :: Decode LaunchTemplateInstanceMarketOptions where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateInstanceMarketOptions :: Encode LaunchTemplateInstanceMarketOptions where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateInstanceMarketOptions from required parameters
newLaunchTemplateInstanceMarketOptions :: LaunchTemplateInstanceMarketOptions
newLaunchTemplateInstanceMarketOptions  = LaunchTemplateInstanceMarketOptions { "MarketType": (NullOrUndefined Nothing), "SpotOptions": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateInstanceMarketOptions's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateInstanceMarketOptions' :: ( { "MarketType" :: NullOrUndefined.NullOrUndefined (MarketType) , "SpotOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSpotMarketOptions) } -> {"MarketType" :: NullOrUndefined.NullOrUndefined (MarketType) , "SpotOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSpotMarketOptions) } ) -> LaunchTemplateInstanceMarketOptions
newLaunchTemplateInstanceMarketOptions'  customize = (LaunchTemplateInstanceMarketOptions <<< customize) { "MarketType": (NullOrUndefined Nothing), "SpotOptions": (NullOrUndefined Nothing) }



-- | <p>The market (purchasing) option for the instances.</p>
newtype LaunchTemplateInstanceMarketOptionsRequest = LaunchTemplateInstanceMarketOptionsRequest 
  { "MarketType" :: NullOrUndefined.NullOrUndefined (MarketType)
  , "SpotOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSpotMarketOptionsRequest)
  }
derive instance newtypeLaunchTemplateInstanceMarketOptionsRequest :: Newtype LaunchTemplateInstanceMarketOptionsRequest _
derive instance repGenericLaunchTemplateInstanceMarketOptionsRequest :: Generic LaunchTemplateInstanceMarketOptionsRequest _
instance showLaunchTemplateInstanceMarketOptionsRequest :: Show LaunchTemplateInstanceMarketOptionsRequest where
  show = genericShow
instance decodeLaunchTemplateInstanceMarketOptionsRequest :: Decode LaunchTemplateInstanceMarketOptionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateInstanceMarketOptionsRequest :: Encode LaunchTemplateInstanceMarketOptionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateInstanceMarketOptionsRequest from required parameters
newLaunchTemplateInstanceMarketOptionsRequest :: LaunchTemplateInstanceMarketOptionsRequest
newLaunchTemplateInstanceMarketOptionsRequest  = LaunchTemplateInstanceMarketOptionsRequest { "MarketType": (NullOrUndefined Nothing), "SpotOptions": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateInstanceMarketOptionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateInstanceMarketOptionsRequest' :: ( { "MarketType" :: NullOrUndefined.NullOrUndefined (MarketType) , "SpotOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSpotMarketOptionsRequest) } -> {"MarketType" :: NullOrUndefined.NullOrUndefined (MarketType) , "SpotOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSpotMarketOptionsRequest) } ) -> LaunchTemplateInstanceMarketOptionsRequest
newLaunchTemplateInstanceMarketOptionsRequest'  customize = (LaunchTemplateInstanceMarketOptionsRequest <<< customize) { "MarketType": (NullOrUndefined Nothing), "SpotOptions": (NullOrUndefined Nothing) }



-- | <p>Describes a network interface.</p>
newtype LaunchTemplateInstanceNetworkInterfaceSpecification = LaunchTemplateInstanceNetworkInterfaceSpecification 
  { "AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int)
  , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdStringList)
  , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList)
  , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLaunchTemplateInstanceNetworkInterfaceSpecification :: Newtype LaunchTemplateInstanceNetworkInterfaceSpecification _
derive instance repGenericLaunchTemplateInstanceNetworkInterfaceSpecification :: Generic LaunchTemplateInstanceNetworkInterfaceSpecification _
instance showLaunchTemplateInstanceNetworkInterfaceSpecification :: Show LaunchTemplateInstanceNetworkInterfaceSpecification where
  show = genericShow
instance decodeLaunchTemplateInstanceNetworkInterfaceSpecification :: Decode LaunchTemplateInstanceNetworkInterfaceSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateInstanceNetworkInterfaceSpecification :: Encode LaunchTemplateInstanceNetworkInterfaceSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateInstanceNetworkInterfaceSpecification from required parameters
newLaunchTemplateInstanceNetworkInterfaceSpecification :: LaunchTemplateInstanceNetworkInterfaceSpecification
newLaunchTemplateInstanceNetworkInterfaceSpecification  = LaunchTemplateInstanceNetworkInterfaceSpecification { "AssociatePublicIpAddress": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateInstanceNetworkInterfaceSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateInstanceNetworkInterfaceSpecification' :: ( { "AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdStringList) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdStringList) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } ) -> LaunchTemplateInstanceNetworkInterfaceSpecification
newLaunchTemplateInstanceNetworkInterfaceSpecification'  customize = (LaunchTemplateInstanceNetworkInterfaceSpecification <<< customize) { "AssociatePublicIpAddress": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }



newtype LaunchTemplateInstanceNetworkInterfaceSpecificationList = LaunchTemplateInstanceNetworkInterfaceSpecificationList (Array LaunchTemplateInstanceNetworkInterfaceSpecification)
derive instance newtypeLaunchTemplateInstanceNetworkInterfaceSpecificationList :: Newtype LaunchTemplateInstanceNetworkInterfaceSpecificationList _
derive instance repGenericLaunchTemplateInstanceNetworkInterfaceSpecificationList :: Generic LaunchTemplateInstanceNetworkInterfaceSpecificationList _
instance showLaunchTemplateInstanceNetworkInterfaceSpecificationList :: Show LaunchTemplateInstanceNetworkInterfaceSpecificationList where
  show = genericShow
instance decodeLaunchTemplateInstanceNetworkInterfaceSpecificationList :: Decode LaunchTemplateInstanceNetworkInterfaceSpecificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateInstanceNetworkInterfaceSpecificationList :: Encode LaunchTemplateInstanceNetworkInterfaceSpecificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The parameters for a network interface.</p>
newtype LaunchTemplateInstanceNetworkInterfaceSpecificationRequest = LaunchTemplateInstanceNetworkInterfaceSpecificationRequest 
  { "AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int)
  , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList)
  , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressListRequest)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList)
  , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLaunchTemplateInstanceNetworkInterfaceSpecificationRequest :: Newtype LaunchTemplateInstanceNetworkInterfaceSpecificationRequest _
derive instance repGenericLaunchTemplateInstanceNetworkInterfaceSpecificationRequest :: Generic LaunchTemplateInstanceNetworkInterfaceSpecificationRequest _
instance showLaunchTemplateInstanceNetworkInterfaceSpecificationRequest :: Show LaunchTemplateInstanceNetworkInterfaceSpecificationRequest where
  show = genericShow
instance decodeLaunchTemplateInstanceNetworkInterfaceSpecificationRequest :: Decode LaunchTemplateInstanceNetworkInterfaceSpecificationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateInstanceNetworkInterfaceSpecificationRequest :: Encode LaunchTemplateInstanceNetworkInterfaceSpecificationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateInstanceNetworkInterfaceSpecificationRequest from required parameters
newLaunchTemplateInstanceNetworkInterfaceSpecificationRequest :: LaunchTemplateInstanceNetworkInterfaceSpecificationRequest
newLaunchTemplateInstanceNetworkInterfaceSpecificationRequest  = LaunchTemplateInstanceNetworkInterfaceSpecificationRequest { "AssociatePublicIpAddress": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateInstanceNetworkInterfaceSpecificationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateInstanceNetworkInterfaceSpecificationRequest' :: ( { "AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressListRequest) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressListRequest) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressSpecificationList) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } ) -> LaunchTemplateInstanceNetworkInterfaceSpecificationRequest
newLaunchTemplateInstanceNetworkInterfaceSpecificationRequest'  customize = (LaunchTemplateInstanceNetworkInterfaceSpecificationRequest <<< customize) { "AssociatePublicIpAddress": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }



newtype LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList = LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList (Array LaunchTemplateInstanceNetworkInterfaceSpecificationRequest)
derive instance newtypeLaunchTemplateInstanceNetworkInterfaceSpecificationRequestList :: Newtype LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList _
derive instance repGenericLaunchTemplateInstanceNetworkInterfaceSpecificationRequestList :: Generic LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList _
instance showLaunchTemplateInstanceNetworkInterfaceSpecificationRequestList :: Show LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList where
  show = genericShow
instance decodeLaunchTemplateInstanceNetworkInterfaceSpecificationRequestList :: Decode LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateInstanceNetworkInterfaceSpecificationRequestList :: Encode LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype LaunchTemplateName = LaunchTemplateName String
derive instance newtypeLaunchTemplateName :: Newtype LaunchTemplateName _
derive instance repGenericLaunchTemplateName :: Generic LaunchTemplateName _
instance showLaunchTemplateName :: Show LaunchTemplateName where
  show = genericShow
instance decodeLaunchTemplateName :: Decode LaunchTemplateName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateName :: Encode LaunchTemplateName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype LaunchTemplateNameStringList = LaunchTemplateNameStringList (Array LaunchTemplateName)
derive instance newtypeLaunchTemplateNameStringList :: Newtype LaunchTemplateNameStringList _
derive instance repGenericLaunchTemplateNameStringList :: Generic LaunchTemplateNameStringList _
instance showLaunchTemplateNameStringList :: Show LaunchTemplateNameStringList where
  show = genericShow
instance decodeLaunchTemplateNameStringList :: Decode LaunchTemplateNameStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateNameStringList :: Encode LaunchTemplateNameStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes overrides for a launch template.</p>
newtype LaunchTemplateOverrides = LaunchTemplateOverrides 
  { "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "WeightedCapacity" :: NullOrUndefined.NullOrUndefined (Number)
  }
derive instance newtypeLaunchTemplateOverrides :: Newtype LaunchTemplateOverrides _
derive instance repGenericLaunchTemplateOverrides :: Generic LaunchTemplateOverrides _
instance showLaunchTemplateOverrides :: Show LaunchTemplateOverrides where
  show = genericShow
instance decodeLaunchTemplateOverrides :: Decode LaunchTemplateOverrides where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateOverrides :: Encode LaunchTemplateOverrides where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateOverrides from required parameters
newLaunchTemplateOverrides :: LaunchTemplateOverrides
newLaunchTemplateOverrides  = LaunchTemplateOverrides { "AvailabilityZone": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "WeightedCapacity": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateOverrides's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateOverrides' :: ( { "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "WeightedCapacity" :: NullOrUndefined.NullOrUndefined (Number) } -> {"InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "WeightedCapacity" :: NullOrUndefined.NullOrUndefined (Number) } ) -> LaunchTemplateOverrides
newLaunchTemplateOverrides'  customize = (LaunchTemplateOverrides <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "WeightedCapacity": (NullOrUndefined Nothing) }



newtype LaunchTemplateOverridesList = LaunchTemplateOverridesList (Array LaunchTemplateOverrides)
derive instance newtypeLaunchTemplateOverridesList :: Newtype LaunchTemplateOverridesList _
derive instance repGenericLaunchTemplateOverridesList :: Generic LaunchTemplateOverridesList _
instance showLaunchTemplateOverridesList :: Show LaunchTemplateOverridesList where
  show = genericShow
instance decodeLaunchTemplateOverridesList :: Decode LaunchTemplateOverridesList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateOverridesList :: Encode LaunchTemplateOverridesList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the placement of an instance.</p>
newtype LaunchTemplatePlacement = LaunchTemplatePlacement 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "Affinity" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "HostId" :: NullOrUndefined.NullOrUndefined (String)
  , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy)
  , "SpreadDomain" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLaunchTemplatePlacement :: Newtype LaunchTemplatePlacement _
derive instance repGenericLaunchTemplatePlacement :: Generic LaunchTemplatePlacement _
instance showLaunchTemplatePlacement :: Show LaunchTemplatePlacement where
  show = genericShow
instance decodeLaunchTemplatePlacement :: Decode LaunchTemplatePlacement where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplatePlacement :: Encode LaunchTemplatePlacement where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplatePlacement from required parameters
newLaunchTemplatePlacement :: LaunchTemplatePlacement
newLaunchTemplatePlacement  = LaunchTemplatePlacement { "Affinity": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "HostId": (NullOrUndefined Nothing), "SpreadDomain": (NullOrUndefined Nothing), "Tenancy": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplatePlacement's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplatePlacement' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Affinity" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "HostId" :: NullOrUndefined.NullOrUndefined (String) , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "SpreadDomain" :: NullOrUndefined.NullOrUndefined (String) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Affinity" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "HostId" :: NullOrUndefined.NullOrUndefined (String) , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "SpreadDomain" :: NullOrUndefined.NullOrUndefined (String) } ) -> LaunchTemplatePlacement
newLaunchTemplatePlacement'  customize = (LaunchTemplatePlacement <<< customize) { "Affinity": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "HostId": (NullOrUndefined Nothing), "SpreadDomain": (NullOrUndefined Nothing), "Tenancy": (NullOrUndefined Nothing) }



-- | <p>The placement for the instance.</p>
newtype LaunchTemplatePlacementRequest = LaunchTemplatePlacementRequest 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "Affinity" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "HostId" :: NullOrUndefined.NullOrUndefined (String)
  , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy)
  , "SpreadDomain" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLaunchTemplatePlacementRequest :: Newtype LaunchTemplatePlacementRequest _
derive instance repGenericLaunchTemplatePlacementRequest :: Generic LaunchTemplatePlacementRequest _
instance showLaunchTemplatePlacementRequest :: Show LaunchTemplatePlacementRequest where
  show = genericShow
instance decodeLaunchTemplatePlacementRequest :: Decode LaunchTemplatePlacementRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplatePlacementRequest :: Encode LaunchTemplatePlacementRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplatePlacementRequest from required parameters
newLaunchTemplatePlacementRequest :: LaunchTemplatePlacementRequest
newLaunchTemplatePlacementRequest  = LaunchTemplatePlacementRequest { "Affinity": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "HostId": (NullOrUndefined Nothing), "SpreadDomain": (NullOrUndefined Nothing), "Tenancy": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplatePlacementRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplatePlacementRequest' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Affinity" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "HostId" :: NullOrUndefined.NullOrUndefined (String) , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "SpreadDomain" :: NullOrUndefined.NullOrUndefined (String) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Affinity" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "HostId" :: NullOrUndefined.NullOrUndefined (String) , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "SpreadDomain" :: NullOrUndefined.NullOrUndefined (String) } ) -> LaunchTemplatePlacementRequest
newLaunchTemplatePlacementRequest'  customize = (LaunchTemplatePlacementRequest <<< customize) { "Affinity": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "HostId": (NullOrUndefined Nothing), "SpreadDomain": (NullOrUndefined Nothing), "Tenancy": (NullOrUndefined Nothing) }



newtype LaunchTemplateSet = LaunchTemplateSet (Array LaunchTemplate)
derive instance newtypeLaunchTemplateSet :: Newtype LaunchTemplateSet _
derive instance repGenericLaunchTemplateSet :: Generic LaunchTemplateSet _
instance showLaunchTemplateSet :: Show LaunchTemplateSet where
  show = genericShow
instance decodeLaunchTemplateSet :: Decode LaunchTemplateSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateSet :: Encode LaunchTemplateSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The launch template to use. You must specify either the launch template ID or launch template name in the request.</p>
newtype LaunchTemplateSpecification = LaunchTemplateSpecification 
  { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (String)
  , "Version" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLaunchTemplateSpecification :: Newtype LaunchTemplateSpecification _
derive instance repGenericLaunchTemplateSpecification :: Generic LaunchTemplateSpecification _
instance showLaunchTemplateSpecification :: Show LaunchTemplateSpecification where
  show = genericShow
instance decodeLaunchTemplateSpecification :: Decode LaunchTemplateSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateSpecification :: Encode LaunchTemplateSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateSpecification from required parameters
newLaunchTemplateSpecification :: LaunchTemplateSpecification
newLaunchTemplateSpecification  = LaunchTemplateSpecification { "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "Version": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateSpecification' :: ( { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (String) , "Version" :: NullOrUndefined.NullOrUndefined (String) } -> {"LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (String) , "Version" :: NullOrUndefined.NullOrUndefined (String) } ) -> LaunchTemplateSpecification
newLaunchTemplateSpecification'  customize = (LaunchTemplateSpecification <<< customize) { "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "Version": (NullOrUndefined Nothing) }



-- | <p>The options for Spot Instances.</p>
newtype LaunchTemplateSpotMarketOptions = LaunchTemplateSpotMarketOptions 
  { "MaxPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotInstanceType" :: NullOrUndefined.NullOrUndefined (SpotInstanceType)
  , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int)
  , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior)
  }
derive instance newtypeLaunchTemplateSpotMarketOptions :: Newtype LaunchTemplateSpotMarketOptions _
derive instance repGenericLaunchTemplateSpotMarketOptions :: Generic LaunchTemplateSpotMarketOptions _
instance showLaunchTemplateSpotMarketOptions :: Show LaunchTemplateSpotMarketOptions where
  show = genericShow
instance decodeLaunchTemplateSpotMarketOptions :: Decode LaunchTemplateSpotMarketOptions where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateSpotMarketOptions :: Encode LaunchTemplateSpotMarketOptions where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateSpotMarketOptions from required parameters
newLaunchTemplateSpotMarketOptions :: LaunchTemplateSpotMarketOptions
newLaunchTemplateSpotMarketOptions  = LaunchTemplateSpotMarketOptions { "BlockDurationMinutes": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "MaxPrice": (NullOrUndefined Nothing), "SpotInstanceType": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateSpotMarketOptions's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateSpotMarketOptions' :: ( { "MaxPrice" :: NullOrUndefined.NullOrUndefined (String) , "SpotInstanceType" :: NullOrUndefined.NullOrUndefined (SpotInstanceType) , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) } -> {"MaxPrice" :: NullOrUndefined.NullOrUndefined (String) , "SpotInstanceType" :: NullOrUndefined.NullOrUndefined (SpotInstanceType) , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) } ) -> LaunchTemplateSpotMarketOptions
newLaunchTemplateSpotMarketOptions'  customize = (LaunchTemplateSpotMarketOptions <<< customize) { "BlockDurationMinutes": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "MaxPrice": (NullOrUndefined Nothing), "SpotInstanceType": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }



-- | <p>The options for Spot Instances.</p>
newtype LaunchTemplateSpotMarketOptionsRequest = LaunchTemplateSpotMarketOptionsRequest 
  { "MaxPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotInstanceType" :: NullOrUndefined.NullOrUndefined (SpotInstanceType)
  , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int)
  , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior)
  }
derive instance newtypeLaunchTemplateSpotMarketOptionsRequest :: Newtype LaunchTemplateSpotMarketOptionsRequest _
derive instance repGenericLaunchTemplateSpotMarketOptionsRequest :: Generic LaunchTemplateSpotMarketOptionsRequest _
instance showLaunchTemplateSpotMarketOptionsRequest :: Show LaunchTemplateSpotMarketOptionsRequest where
  show = genericShow
instance decodeLaunchTemplateSpotMarketOptionsRequest :: Decode LaunchTemplateSpotMarketOptionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateSpotMarketOptionsRequest :: Encode LaunchTemplateSpotMarketOptionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateSpotMarketOptionsRequest from required parameters
newLaunchTemplateSpotMarketOptionsRequest :: LaunchTemplateSpotMarketOptionsRequest
newLaunchTemplateSpotMarketOptionsRequest  = LaunchTemplateSpotMarketOptionsRequest { "BlockDurationMinutes": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "MaxPrice": (NullOrUndefined Nothing), "SpotInstanceType": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateSpotMarketOptionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateSpotMarketOptionsRequest' :: ( { "MaxPrice" :: NullOrUndefined.NullOrUndefined (String) , "SpotInstanceType" :: NullOrUndefined.NullOrUndefined (SpotInstanceType) , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) } -> {"MaxPrice" :: NullOrUndefined.NullOrUndefined (String) , "SpotInstanceType" :: NullOrUndefined.NullOrUndefined (SpotInstanceType) , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) } ) -> LaunchTemplateSpotMarketOptionsRequest
newLaunchTemplateSpotMarketOptionsRequest'  customize = (LaunchTemplateSpotMarketOptionsRequest <<< customize) { "BlockDurationMinutes": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "MaxPrice": (NullOrUndefined Nothing), "SpotInstanceType": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }



-- | <p>The tag specification for the launch template.</p>
newtype LaunchTemplateTagSpecification = LaunchTemplateTagSpecification 
  { "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeLaunchTemplateTagSpecification :: Newtype LaunchTemplateTagSpecification _
derive instance repGenericLaunchTemplateTagSpecification :: Generic LaunchTemplateTagSpecification _
instance showLaunchTemplateTagSpecification :: Show LaunchTemplateTagSpecification where
  show = genericShow
instance decodeLaunchTemplateTagSpecification :: Decode LaunchTemplateTagSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateTagSpecification :: Encode LaunchTemplateTagSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateTagSpecification from required parameters
newLaunchTemplateTagSpecification :: LaunchTemplateTagSpecification
newLaunchTemplateTagSpecification  = LaunchTemplateTagSpecification { "ResourceType": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateTagSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateTagSpecification' :: ( { "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> LaunchTemplateTagSpecification
newLaunchTemplateTagSpecification'  customize = (LaunchTemplateTagSpecification <<< customize) { "ResourceType": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



newtype LaunchTemplateTagSpecificationList = LaunchTemplateTagSpecificationList (Array LaunchTemplateTagSpecification)
derive instance newtypeLaunchTemplateTagSpecificationList :: Newtype LaunchTemplateTagSpecificationList _
derive instance repGenericLaunchTemplateTagSpecificationList :: Generic LaunchTemplateTagSpecificationList _
instance showLaunchTemplateTagSpecificationList :: Show LaunchTemplateTagSpecificationList where
  show = genericShow
instance decodeLaunchTemplateTagSpecificationList :: Decode LaunchTemplateTagSpecificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateTagSpecificationList :: Encode LaunchTemplateTagSpecificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The tags specification for the launch template.</p>
newtype LaunchTemplateTagSpecificationRequest = LaunchTemplateTagSpecificationRequest 
  { "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeLaunchTemplateTagSpecificationRequest :: Newtype LaunchTemplateTagSpecificationRequest _
derive instance repGenericLaunchTemplateTagSpecificationRequest :: Generic LaunchTemplateTagSpecificationRequest _
instance showLaunchTemplateTagSpecificationRequest :: Show LaunchTemplateTagSpecificationRequest where
  show = genericShow
instance decodeLaunchTemplateTagSpecificationRequest :: Decode LaunchTemplateTagSpecificationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateTagSpecificationRequest :: Encode LaunchTemplateTagSpecificationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateTagSpecificationRequest from required parameters
newLaunchTemplateTagSpecificationRequest :: LaunchTemplateTagSpecificationRequest
newLaunchTemplateTagSpecificationRequest  = LaunchTemplateTagSpecificationRequest { "ResourceType": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateTagSpecificationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateTagSpecificationRequest' :: ( { "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> LaunchTemplateTagSpecificationRequest
newLaunchTemplateTagSpecificationRequest'  customize = (LaunchTemplateTagSpecificationRequest <<< customize) { "ResourceType": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



newtype LaunchTemplateTagSpecificationRequestList = LaunchTemplateTagSpecificationRequestList (Array LaunchTemplateTagSpecificationRequest)
derive instance newtypeLaunchTemplateTagSpecificationRequestList :: Newtype LaunchTemplateTagSpecificationRequestList _
derive instance repGenericLaunchTemplateTagSpecificationRequestList :: Generic LaunchTemplateTagSpecificationRequestList _
instance showLaunchTemplateTagSpecificationRequestList :: Show LaunchTemplateTagSpecificationRequestList where
  show = genericShow
instance decodeLaunchTemplateTagSpecificationRequestList :: Decode LaunchTemplateTagSpecificationRequestList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateTagSpecificationRequestList :: Encode LaunchTemplateTagSpecificationRequestList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a launch template version.</p>
newtype LaunchTemplateVersion = LaunchTemplateVersion 
  { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName)
  , "VersionNumber" :: NullOrUndefined.NullOrUndefined (Number)
  , "VersionDescription" :: NullOrUndefined.NullOrUndefined (VersionDescription)
  , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "CreatedBy" :: NullOrUndefined.NullOrUndefined (String)
  , "DefaultVersion" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "LaunchTemplateData" :: NullOrUndefined.NullOrUndefined (ResponseLaunchTemplateData)
  }
derive instance newtypeLaunchTemplateVersion :: Newtype LaunchTemplateVersion _
derive instance repGenericLaunchTemplateVersion :: Generic LaunchTemplateVersion _
instance showLaunchTemplateVersion :: Show LaunchTemplateVersion where
  show = genericShow
instance decodeLaunchTemplateVersion :: Decode LaunchTemplateVersion where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateVersion :: Encode LaunchTemplateVersion where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplateVersion from required parameters
newLaunchTemplateVersion :: LaunchTemplateVersion
newLaunchTemplateVersion  = LaunchTemplateVersion { "CreateTime": (NullOrUndefined Nothing), "CreatedBy": (NullOrUndefined Nothing), "DefaultVersion": (NullOrUndefined Nothing), "LaunchTemplateData": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "VersionDescription": (NullOrUndefined Nothing), "VersionNumber": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplateVersion's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplateVersion' :: ( { "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "VersionNumber" :: NullOrUndefined.NullOrUndefined (Number) , "VersionDescription" :: NullOrUndefined.NullOrUndefined (VersionDescription) , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "CreatedBy" :: NullOrUndefined.NullOrUndefined (String) , "DefaultVersion" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchTemplateData" :: NullOrUndefined.NullOrUndefined (ResponseLaunchTemplateData) } -> {"LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "VersionNumber" :: NullOrUndefined.NullOrUndefined (Number) , "VersionDescription" :: NullOrUndefined.NullOrUndefined (VersionDescription) , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "CreatedBy" :: NullOrUndefined.NullOrUndefined (String) , "DefaultVersion" :: NullOrUndefined.NullOrUndefined (Boolean) , "LaunchTemplateData" :: NullOrUndefined.NullOrUndefined (ResponseLaunchTemplateData) } ) -> LaunchTemplateVersion
newLaunchTemplateVersion'  customize = (LaunchTemplateVersion <<< customize) { "CreateTime": (NullOrUndefined Nothing), "CreatedBy": (NullOrUndefined Nothing), "DefaultVersion": (NullOrUndefined Nothing), "LaunchTemplateData": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing), "VersionDescription": (NullOrUndefined Nothing), "VersionNumber": (NullOrUndefined Nothing) }



newtype LaunchTemplateVersionSet = LaunchTemplateVersionSet (Array LaunchTemplateVersion)
derive instance newtypeLaunchTemplateVersionSet :: Newtype LaunchTemplateVersionSet _
derive instance repGenericLaunchTemplateVersionSet :: Generic LaunchTemplateVersionSet _
instance showLaunchTemplateVersionSet :: Show LaunchTemplateVersionSet where
  show = genericShow
instance decodeLaunchTemplateVersionSet :: Decode LaunchTemplateVersionSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplateVersionSet :: Encode LaunchTemplateVersionSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the monitoring for the instance.</p>
newtype LaunchTemplatesMonitoring = LaunchTemplatesMonitoring 
  { "Enabled" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeLaunchTemplatesMonitoring :: Newtype LaunchTemplatesMonitoring _
derive instance repGenericLaunchTemplatesMonitoring :: Generic LaunchTemplatesMonitoring _
instance showLaunchTemplatesMonitoring :: Show LaunchTemplatesMonitoring where
  show = genericShow
instance decodeLaunchTemplatesMonitoring :: Decode LaunchTemplatesMonitoring where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplatesMonitoring :: Encode LaunchTemplatesMonitoring where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplatesMonitoring from required parameters
newLaunchTemplatesMonitoring :: LaunchTemplatesMonitoring
newLaunchTemplatesMonitoring  = LaunchTemplatesMonitoring { "Enabled": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplatesMonitoring's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplatesMonitoring' :: ( { "Enabled" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Enabled" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> LaunchTemplatesMonitoring
newLaunchTemplatesMonitoring'  customize = (LaunchTemplatesMonitoring <<< customize) { "Enabled": (NullOrUndefined Nothing) }



-- | <p>Describes the monitoring for the instance.</p>
newtype LaunchTemplatesMonitoringRequest = LaunchTemplatesMonitoringRequest 
  { "Enabled" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeLaunchTemplatesMonitoringRequest :: Newtype LaunchTemplatesMonitoringRequest _
derive instance repGenericLaunchTemplatesMonitoringRequest :: Generic LaunchTemplatesMonitoringRequest _
instance showLaunchTemplatesMonitoringRequest :: Show LaunchTemplatesMonitoringRequest where
  show = genericShow
instance decodeLaunchTemplatesMonitoringRequest :: Decode LaunchTemplatesMonitoringRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLaunchTemplatesMonitoringRequest :: Encode LaunchTemplatesMonitoringRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LaunchTemplatesMonitoringRequest from required parameters
newLaunchTemplatesMonitoringRequest :: LaunchTemplatesMonitoringRequest
newLaunchTemplatesMonitoringRequest  = LaunchTemplatesMonitoringRequest { "Enabled": (NullOrUndefined Nothing) }

-- | Constructs LaunchTemplatesMonitoringRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLaunchTemplatesMonitoringRequest' :: ( { "Enabled" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Enabled" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> LaunchTemplatesMonitoringRequest
newLaunchTemplatesMonitoringRequest'  customize = (LaunchTemplatesMonitoringRequest <<< customize) { "Enabled": (NullOrUndefined Nothing) }



newtype ListingState = ListingState String
derive instance newtypeListingState :: Newtype ListingState _
derive instance repGenericListingState :: Generic ListingState _
instance showListingState :: Show ListingState where
  show = genericShow
instance decodeListingState :: Decode ListingState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeListingState :: Encode ListingState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ListingStatus = ListingStatus String
derive instance newtypeListingStatus :: Newtype ListingStatus _
derive instance repGenericListingStatus :: Generic ListingStatus _
instance showListingStatus :: Show ListingStatus where
  show = genericShow
instance decodeListingStatus :: Decode ListingStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeListingStatus :: Encode ListingStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the Classic Load Balancers and target groups to attach to a Spot Fleet request.</p>
newtype LoadBalancersConfig = LoadBalancersConfig 
  { "ClassicLoadBalancersConfig" :: NullOrUndefined.NullOrUndefined (ClassicLoadBalancersConfig)
  , "TargetGroupsConfig" :: NullOrUndefined.NullOrUndefined (TargetGroupsConfig)
  }
derive instance newtypeLoadBalancersConfig :: Newtype LoadBalancersConfig _
derive instance repGenericLoadBalancersConfig :: Generic LoadBalancersConfig _
instance showLoadBalancersConfig :: Show LoadBalancersConfig where
  show = genericShow
instance decodeLoadBalancersConfig :: Decode LoadBalancersConfig where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLoadBalancersConfig :: Encode LoadBalancersConfig where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LoadBalancersConfig from required parameters
newLoadBalancersConfig :: LoadBalancersConfig
newLoadBalancersConfig  = LoadBalancersConfig { "ClassicLoadBalancersConfig": (NullOrUndefined Nothing), "TargetGroupsConfig": (NullOrUndefined Nothing) }

-- | Constructs LoadBalancersConfig's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLoadBalancersConfig' :: ( { "ClassicLoadBalancersConfig" :: NullOrUndefined.NullOrUndefined (ClassicLoadBalancersConfig) , "TargetGroupsConfig" :: NullOrUndefined.NullOrUndefined (TargetGroupsConfig) } -> {"ClassicLoadBalancersConfig" :: NullOrUndefined.NullOrUndefined (ClassicLoadBalancersConfig) , "TargetGroupsConfig" :: NullOrUndefined.NullOrUndefined (TargetGroupsConfig) } ) -> LoadBalancersConfig
newLoadBalancersConfig'  customize = (LoadBalancersConfig <<< customize) { "ClassicLoadBalancersConfig": (NullOrUndefined Nothing), "TargetGroupsConfig": (NullOrUndefined Nothing) }



-- | <p>Describes a load permission.</p>
newtype LoadPermission = LoadPermission 
  { "UserId" :: NullOrUndefined.NullOrUndefined (String)
  , "Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup)
  }
derive instance newtypeLoadPermission :: Newtype LoadPermission _
derive instance repGenericLoadPermission :: Generic LoadPermission _
instance showLoadPermission :: Show LoadPermission where
  show = genericShow
instance decodeLoadPermission :: Decode LoadPermission where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLoadPermission :: Encode LoadPermission where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LoadPermission from required parameters
newLoadPermission :: LoadPermission
newLoadPermission  = LoadPermission { "Group": (NullOrUndefined Nothing), "UserId": (NullOrUndefined Nothing) }

-- | Constructs LoadPermission's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLoadPermission' :: ( { "UserId" :: NullOrUndefined.NullOrUndefined (String) , "Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup) } -> {"UserId" :: NullOrUndefined.NullOrUndefined (String) , "Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup) } ) -> LoadPermission
newLoadPermission'  customize = (LoadPermission <<< customize) { "Group": (NullOrUndefined Nothing), "UserId": (NullOrUndefined Nothing) }



newtype LoadPermissionList = LoadPermissionList (Array LoadPermission)
derive instance newtypeLoadPermissionList :: Newtype LoadPermissionList _
derive instance repGenericLoadPermissionList :: Generic LoadPermissionList _
instance showLoadPermissionList :: Show LoadPermissionList where
  show = genericShow
instance decodeLoadPermissionList :: Decode LoadPermissionList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLoadPermissionList :: Encode LoadPermissionList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype LoadPermissionListRequest = LoadPermissionListRequest (Array LoadPermissionRequest)
derive instance newtypeLoadPermissionListRequest :: Newtype LoadPermissionListRequest _
derive instance repGenericLoadPermissionListRequest :: Generic LoadPermissionListRequest _
instance showLoadPermissionListRequest :: Show LoadPermissionListRequest where
  show = genericShow
instance decodeLoadPermissionListRequest :: Decode LoadPermissionListRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLoadPermissionListRequest :: Encode LoadPermissionListRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes modifications to the load permissions of an Amazon FPGA image (AFI).</p>
newtype LoadPermissionModifications = LoadPermissionModifications 
  { "Add" :: NullOrUndefined.NullOrUndefined (LoadPermissionListRequest)
  , "Remove" :: NullOrUndefined.NullOrUndefined (LoadPermissionListRequest)
  }
derive instance newtypeLoadPermissionModifications :: Newtype LoadPermissionModifications _
derive instance repGenericLoadPermissionModifications :: Generic LoadPermissionModifications _
instance showLoadPermissionModifications :: Show LoadPermissionModifications where
  show = genericShow
instance decodeLoadPermissionModifications :: Decode LoadPermissionModifications where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLoadPermissionModifications :: Encode LoadPermissionModifications where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LoadPermissionModifications from required parameters
newLoadPermissionModifications :: LoadPermissionModifications
newLoadPermissionModifications  = LoadPermissionModifications { "Add": (NullOrUndefined Nothing), "Remove": (NullOrUndefined Nothing) }

-- | Constructs LoadPermissionModifications's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLoadPermissionModifications' :: ( { "Add" :: NullOrUndefined.NullOrUndefined (LoadPermissionListRequest) , "Remove" :: NullOrUndefined.NullOrUndefined (LoadPermissionListRequest) } -> {"Add" :: NullOrUndefined.NullOrUndefined (LoadPermissionListRequest) , "Remove" :: NullOrUndefined.NullOrUndefined (LoadPermissionListRequest) } ) -> LoadPermissionModifications
newLoadPermissionModifications'  customize = (LoadPermissionModifications <<< customize) { "Add": (NullOrUndefined Nothing), "Remove": (NullOrUndefined Nothing) }



-- | <p>Describes a load permission.</p>
newtype LoadPermissionRequest = LoadPermissionRequest 
  { "Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup)
  , "UserId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeLoadPermissionRequest :: Newtype LoadPermissionRequest _
derive instance repGenericLoadPermissionRequest :: Generic LoadPermissionRequest _
instance showLoadPermissionRequest :: Show LoadPermissionRequest where
  show = genericShow
instance decodeLoadPermissionRequest :: Decode LoadPermissionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeLoadPermissionRequest :: Encode LoadPermissionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs LoadPermissionRequest from required parameters
newLoadPermissionRequest :: LoadPermissionRequest
newLoadPermissionRequest  = LoadPermissionRequest { "Group": (NullOrUndefined Nothing), "UserId": (NullOrUndefined Nothing) }

-- | Constructs LoadPermissionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newLoadPermissionRequest' :: ( { "Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup) , "UserId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Group" :: NullOrUndefined.NullOrUndefined (PermissionGroup) , "UserId" :: NullOrUndefined.NullOrUndefined (String) } ) -> LoadPermissionRequest
newLoadPermissionRequest'  customize = (LoadPermissionRequest <<< customize) { "Group": (NullOrUndefined Nothing), "UserId": (NullOrUndefined Nothing) }



newtype MarketType = MarketType String
derive instance newtypeMarketType :: Newtype MarketType _
derive instance repGenericMarketType :: Generic MarketType _
instance showMarketType :: Show MarketType where
  show = genericShow
instance decodeMarketType :: Decode MarketType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMarketType :: Encode MarketType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype MaxResults = MaxResults Int
derive instance newtypeMaxResults :: Newtype MaxResults _
derive instance repGenericMaxResults :: Generic MaxResults _
instance showMaxResults :: Show MaxResults where
  show = genericShow
instance decodeMaxResults :: Decode MaxResults where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMaxResults :: Encode MaxResults where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ModifyFpgaImageAttributeRequest = ModifyFpgaImageAttributeRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "FpgaImageId" :: (String)
  , "Attribute" :: NullOrUndefined.NullOrUndefined (FpgaImageAttributeName)
  , "OperationType" :: NullOrUndefined.NullOrUndefined (OperationType)
  , "UserIds" :: NullOrUndefined.NullOrUndefined (UserIdStringList)
  , "UserGroups" :: NullOrUndefined.NullOrUndefined (UserGroupStringList)
  , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeStringList)
  , "LoadPermission" :: NullOrUndefined.NullOrUndefined (LoadPermissionModifications)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeModifyFpgaImageAttributeRequest :: Newtype ModifyFpgaImageAttributeRequest _
derive instance repGenericModifyFpgaImageAttributeRequest :: Generic ModifyFpgaImageAttributeRequest _
instance showModifyFpgaImageAttributeRequest :: Show ModifyFpgaImageAttributeRequest where
  show = genericShow
instance decodeModifyFpgaImageAttributeRequest :: Decode ModifyFpgaImageAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyFpgaImageAttributeRequest :: Encode ModifyFpgaImageAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyFpgaImageAttributeRequest from required parameters
newModifyFpgaImageAttributeRequest :: String -> ModifyFpgaImageAttributeRequest
newModifyFpgaImageAttributeRequest _FpgaImageId = ModifyFpgaImageAttributeRequest { "FpgaImageId": _FpgaImageId, "Attribute": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LoadPermission": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing), "OperationType": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "UserGroups": (NullOrUndefined Nothing), "UserIds": (NullOrUndefined Nothing) }

-- | Constructs ModifyFpgaImageAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyFpgaImageAttributeRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "FpgaImageId" :: (String) , "Attribute" :: NullOrUndefined.NullOrUndefined (FpgaImageAttributeName) , "OperationType" :: NullOrUndefined.NullOrUndefined (OperationType) , "UserIds" :: NullOrUndefined.NullOrUndefined (UserIdStringList) , "UserGroups" :: NullOrUndefined.NullOrUndefined (UserGroupStringList) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeStringList) , "LoadPermission" :: NullOrUndefined.NullOrUndefined (LoadPermissionModifications) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "FpgaImageId" :: (String) , "Attribute" :: NullOrUndefined.NullOrUndefined (FpgaImageAttributeName) , "OperationType" :: NullOrUndefined.NullOrUndefined (OperationType) , "UserIds" :: NullOrUndefined.NullOrUndefined (UserIdStringList) , "UserGroups" :: NullOrUndefined.NullOrUndefined (UserGroupStringList) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeStringList) , "LoadPermission" :: NullOrUndefined.NullOrUndefined (LoadPermissionModifications) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) } ) -> ModifyFpgaImageAttributeRequest
newModifyFpgaImageAttributeRequest' _FpgaImageId customize = (ModifyFpgaImageAttributeRequest <<< customize) { "FpgaImageId": _FpgaImageId, "Attribute": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LoadPermission": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing), "OperationType": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "UserGroups": (NullOrUndefined Nothing), "UserIds": (NullOrUndefined Nothing) }



newtype ModifyFpgaImageAttributeResult = ModifyFpgaImageAttributeResult 
  { "FpgaImageAttribute" :: NullOrUndefined.NullOrUndefined (FpgaImageAttribute)
  }
derive instance newtypeModifyFpgaImageAttributeResult :: Newtype ModifyFpgaImageAttributeResult _
derive instance repGenericModifyFpgaImageAttributeResult :: Generic ModifyFpgaImageAttributeResult _
instance showModifyFpgaImageAttributeResult :: Show ModifyFpgaImageAttributeResult where
  show = genericShow
instance decodeModifyFpgaImageAttributeResult :: Decode ModifyFpgaImageAttributeResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyFpgaImageAttributeResult :: Encode ModifyFpgaImageAttributeResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyFpgaImageAttributeResult from required parameters
newModifyFpgaImageAttributeResult :: ModifyFpgaImageAttributeResult
newModifyFpgaImageAttributeResult  = ModifyFpgaImageAttributeResult { "FpgaImageAttribute": (NullOrUndefined Nothing) }

-- | Constructs ModifyFpgaImageAttributeResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyFpgaImageAttributeResult' :: ( { "FpgaImageAttribute" :: NullOrUndefined.NullOrUndefined (FpgaImageAttribute) } -> {"FpgaImageAttribute" :: NullOrUndefined.NullOrUndefined (FpgaImageAttribute) } ) -> ModifyFpgaImageAttributeResult
newModifyFpgaImageAttributeResult'  customize = (ModifyFpgaImageAttributeResult <<< customize) { "FpgaImageAttribute": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifyHosts.</p>
newtype ModifyHostsRequest = ModifyHostsRequest 
  { "AutoPlacement" :: (AutoPlacement)
  , "HostIds" :: (RequestHostIdList)
  }
derive instance newtypeModifyHostsRequest :: Newtype ModifyHostsRequest _
derive instance repGenericModifyHostsRequest :: Generic ModifyHostsRequest _
instance showModifyHostsRequest :: Show ModifyHostsRequest where
  show = genericShow
instance decodeModifyHostsRequest :: Decode ModifyHostsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyHostsRequest :: Encode ModifyHostsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyHostsRequest from required parameters
newModifyHostsRequest :: AutoPlacement -> RequestHostIdList -> ModifyHostsRequest
newModifyHostsRequest _AutoPlacement _HostIds = ModifyHostsRequest { "AutoPlacement": _AutoPlacement, "HostIds": _HostIds }

-- | Constructs ModifyHostsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyHostsRequest' :: AutoPlacement -> RequestHostIdList -> ( { "AutoPlacement" :: (AutoPlacement) , "HostIds" :: (RequestHostIdList) } -> {"AutoPlacement" :: (AutoPlacement) , "HostIds" :: (RequestHostIdList) } ) -> ModifyHostsRequest
newModifyHostsRequest' _AutoPlacement _HostIds customize = (ModifyHostsRequest <<< customize) { "AutoPlacement": _AutoPlacement, "HostIds": _HostIds }



-- | <p>Contains the output of ModifyHosts.</p>
newtype ModifyHostsResult = ModifyHostsResult 
  { "Successful" :: NullOrUndefined.NullOrUndefined (ResponseHostIdList)
  , "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemList)
  }
derive instance newtypeModifyHostsResult :: Newtype ModifyHostsResult _
derive instance repGenericModifyHostsResult :: Generic ModifyHostsResult _
instance showModifyHostsResult :: Show ModifyHostsResult where
  show = genericShow
instance decodeModifyHostsResult :: Decode ModifyHostsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyHostsResult :: Encode ModifyHostsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyHostsResult from required parameters
newModifyHostsResult :: ModifyHostsResult
newModifyHostsResult  = ModifyHostsResult { "Successful": (NullOrUndefined Nothing), "Unsuccessful": (NullOrUndefined Nothing) }

-- | Constructs ModifyHostsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyHostsResult' :: ( { "Successful" :: NullOrUndefined.NullOrUndefined (ResponseHostIdList) , "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemList) } -> {"Successful" :: NullOrUndefined.NullOrUndefined (ResponseHostIdList) , "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemList) } ) -> ModifyHostsResult
newModifyHostsResult'  customize = (ModifyHostsResult <<< customize) { "Successful": (NullOrUndefined Nothing), "Unsuccessful": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters of ModifyIdFormat.</p>
newtype ModifyIdFormatRequest = ModifyIdFormatRequest 
  { "Resource" :: (String)
  , "UseLongIds" :: (Boolean)
  }
derive instance newtypeModifyIdFormatRequest :: Newtype ModifyIdFormatRequest _
derive instance repGenericModifyIdFormatRequest :: Generic ModifyIdFormatRequest _
instance showModifyIdFormatRequest :: Show ModifyIdFormatRequest where
  show = genericShow
instance decodeModifyIdFormatRequest :: Decode ModifyIdFormatRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyIdFormatRequest :: Encode ModifyIdFormatRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyIdFormatRequest from required parameters
newModifyIdFormatRequest :: String -> Boolean -> ModifyIdFormatRequest
newModifyIdFormatRequest _Resource _UseLongIds = ModifyIdFormatRequest { "Resource": _Resource, "UseLongIds": _UseLongIds }

-- | Constructs ModifyIdFormatRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyIdFormatRequest' :: String -> Boolean -> ( { "Resource" :: (String) , "UseLongIds" :: (Boolean) } -> {"Resource" :: (String) , "UseLongIds" :: (Boolean) } ) -> ModifyIdFormatRequest
newModifyIdFormatRequest' _Resource _UseLongIds customize = (ModifyIdFormatRequest <<< customize) { "Resource": _Resource, "UseLongIds": _UseLongIds }



-- | <p>Contains the parameters of ModifyIdentityIdFormat.</p>
newtype ModifyIdentityIdFormatRequest = ModifyIdentityIdFormatRequest 
  { "PrincipalArn" :: (String)
  , "Resource" :: (String)
  , "UseLongIds" :: (Boolean)
  }
derive instance newtypeModifyIdentityIdFormatRequest :: Newtype ModifyIdentityIdFormatRequest _
derive instance repGenericModifyIdentityIdFormatRequest :: Generic ModifyIdentityIdFormatRequest _
instance showModifyIdentityIdFormatRequest :: Show ModifyIdentityIdFormatRequest where
  show = genericShow
instance decodeModifyIdentityIdFormatRequest :: Decode ModifyIdentityIdFormatRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyIdentityIdFormatRequest :: Encode ModifyIdentityIdFormatRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyIdentityIdFormatRequest from required parameters
newModifyIdentityIdFormatRequest :: String -> String -> Boolean -> ModifyIdentityIdFormatRequest
newModifyIdentityIdFormatRequest _PrincipalArn _Resource _UseLongIds = ModifyIdentityIdFormatRequest { "PrincipalArn": _PrincipalArn, "Resource": _Resource, "UseLongIds": _UseLongIds }

-- | Constructs ModifyIdentityIdFormatRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyIdentityIdFormatRequest' :: String -> String -> Boolean -> ( { "PrincipalArn" :: (String) , "Resource" :: (String) , "UseLongIds" :: (Boolean) } -> {"PrincipalArn" :: (String) , "Resource" :: (String) , "UseLongIds" :: (Boolean) } ) -> ModifyIdentityIdFormatRequest
newModifyIdentityIdFormatRequest' _PrincipalArn _Resource _UseLongIds customize = (ModifyIdentityIdFormatRequest <<< customize) { "PrincipalArn": _PrincipalArn, "Resource": _Resource, "UseLongIds": _UseLongIds }



-- | <p>Contains the parameters for ModifyImageAttribute.</p>
newtype ModifyImageAttributeRequest = ModifyImageAttributeRequest 
  { "Attribute" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "ImageId" :: (String)
  , "LaunchPermission" :: NullOrUndefined.NullOrUndefined (LaunchPermissionModifications)
  , "OperationType" :: NullOrUndefined.NullOrUndefined (OperationType)
  , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeStringList)
  , "UserGroups" :: NullOrUndefined.NullOrUndefined (UserGroupStringList)
  , "UserIds" :: NullOrUndefined.NullOrUndefined (UserIdStringList)
  , "Value" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifyImageAttributeRequest :: Newtype ModifyImageAttributeRequest _
derive instance repGenericModifyImageAttributeRequest :: Generic ModifyImageAttributeRequest _
instance showModifyImageAttributeRequest :: Show ModifyImageAttributeRequest where
  show = genericShow
instance decodeModifyImageAttributeRequest :: Decode ModifyImageAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyImageAttributeRequest :: Encode ModifyImageAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyImageAttributeRequest from required parameters
newModifyImageAttributeRequest :: String -> ModifyImageAttributeRequest
newModifyImageAttributeRequest _ImageId = ModifyImageAttributeRequest { "ImageId": _ImageId, "Attribute": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LaunchPermission": (NullOrUndefined Nothing), "OperationType": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "UserGroups": (NullOrUndefined Nothing), "UserIds": (NullOrUndefined Nothing), "Value": (NullOrUndefined Nothing) }

-- | Constructs ModifyImageAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyImageAttributeRequest' :: String -> ( { "Attribute" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "ImageId" :: (String) , "LaunchPermission" :: NullOrUndefined.NullOrUndefined (LaunchPermissionModifications) , "OperationType" :: NullOrUndefined.NullOrUndefined (OperationType) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeStringList) , "UserGroups" :: NullOrUndefined.NullOrUndefined (UserGroupStringList) , "UserIds" :: NullOrUndefined.NullOrUndefined (UserIdStringList) , "Value" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Attribute" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "ImageId" :: (String) , "LaunchPermission" :: NullOrUndefined.NullOrUndefined (LaunchPermissionModifications) , "OperationType" :: NullOrUndefined.NullOrUndefined (OperationType) , "ProductCodes" :: NullOrUndefined.NullOrUndefined (ProductCodeStringList) , "UserGroups" :: NullOrUndefined.NullOrUndefined (UserGroupStringList) , "UserIds" :: NullOrUndefined.NullOrUndefined (UserIdStringList) , "Value" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifyImageAttributeRequest
newModifyImageAttributeRequest' _ImageId customize = (ModifyImageAttributeRequest <<< customize) { "ImageId": _ImageId, "Attribute": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LaunchPermission": (NullOrUndefined Nothing), "OperationType": (NullOrUndefined Nothing), "ProductCodes": (NullOrUndefined Nothing), "UserGroups": (NullOrUndefined Nothing), "UserIds": (NullOrUndefined Nothing), "Value": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifyInstanceAttribute.</p>
newtype ModifyInstanceAttributeRequest = ModifyInstanceAttributeRequest 
  { "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "Attribute" :: NullOrUndefined.NullOrUndefined (InstanceAttributeName)
  , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (InstanceBlockDeviceMappingSpecificationList)
  , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "EnaSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdStringList)
  , "InstanceId" :: (String)
  , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "Kernel" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "Ramdisk" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "UserData" :: NullOrUndefined.NullOrUndefined (BlobAttributeValue)
  , "Value" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeModifyInstanceAttributeRequest :: Newtype ModifyInstanceAttributeRequest _
derive instance repGenericModifyInstanceAttributeRequest :: Generic ModifyInstanceAttributeRequest _
instance showModifyInstanceAttributeRequest :: Show ModifyInstanceAttributeRequest where
  show = genericShow
instance decodeModifyInstanceAttributeRequest :: Decode ModifyInstanceAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyInstanceAttributeRequest :: Encode ModifyInstanceAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyInstanceAttributeRequest from required parameters
newModifyInstanceAttributeRequest :: String -> ModifyInstanceAttributeRequest
newModifyInstanceAttributeRequest _InstanceId = ModifyInstanceAttributeRequest { "InstanceId": _InstanceId, "Attribute": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "DisableApiTermination": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "EnaSupport": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Kernel": (NullOrUndefined Nothing), "Ramdisk": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing), "Value": (NullOrUndefined Nothing) }

-- | Constructs ModifyInstanceAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyInstanceAttributeRequest' :: String -> ( { "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "Attribute" :: NullOrUndefined.NullOrUndefined (InstanceAttributeName) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (InstanceBlockDeviceMappingSpecificationList) , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "EnaSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdStringList) , "InstanceId" :: (String) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "InstanceType" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "Kernel" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "Ramdisk" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "UserData" :: NullOrUndefined.NullOrUndefined (BlobAttributeValue) , "Value" :: NullOrUndefined.NullOrUndefined (String) } -> {"SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "Attribute" :: NullOrUndefined.NullOrUndefined (InstanceAttributeName) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (InstanceBlockDeviceMappingSpecificationList) , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "EnaSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdStringList) , "InstanceId" :: (String) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "InstanceType" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "Kernel" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "Ramdisk" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "UserData" :: NullOrUndefined.NullOrUndefined (BlobAttributeValue) , "Value" :: NullOrUndefined.NullOrUndefined (String) } ) -> ModifyInstanceAttributeRequest
newModifyInstanceAttributeRequest' _InstanceId customize = (ModifyInstanceAttributeRequest <<< customize) { "InstanceId": _InstanceId, "Attribute": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "DisableApiTermination": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "EnaSupport": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Kernel": (NullOrUndefined Nothing), "Ramdisk": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing), "Value": (NullOrUndefined Nothing) }



newtype ModifyInstanceCreditSpecificationRequest = ModifyInstanceCreditSpecificationRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceCreditSpecifications" :: (InstanceCreditSpecificationListRequest)
  }
derive instance newtypeModifyInstanceCreditSpecificationRequest :: Newtype ModifyInstanceCreditSpecificationRequest _
derive instance repGenericModifyInstanceCreditSpecificationRequest :: Generic ModifyInstanceCreditSpecificationRequest _
instance showModifyInstanceCreditSpecificationRequest :: Show ModifyInstanceCreditSpecificationRequest where
  show = genericShow
instance decodeModifyInstanceCreditSpecificationRequest :: Decode ModifyInstanceCreditSpecificationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyInstanceCreditSpecificationRequest :: Encode ModifyInstanceCreditSpecificationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyInstanceCreditSpecificationRequest from required parameters
newModifyInstanceCreditSpecificationRequest :: InstanceCreditSpecificationListRequest -> ModifyInstanceCreditSpecificationRequest
newModifyInstanceCreditSpecificationRequest _InstanceCreditSpecifications = ModifyInstanceCreditSpecificationRequest { "InstanceCreditSpecifications": _InstanceCreditSpecifications, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ModifyInstanceCreditSpecificationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyInstanceCreditSpecificationRequest' :: InstanceCreditSpecificationListRequest -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "InstanceCreditSpecifications" :: (InstanceCreditSpecificationListRequest) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "InstanceCreditSpecifications" :: (InstanceCreditSpecificationListRequest) } ) -> ModifyInstanceCreditSpecificationRequest
newModifyInstanceCreditSpecificationRequest' _InstanceCreditSpecifications customize = (ModifyInstanceCreditSpecificationRequest <<< customize) { "InstanceCreditSpecifications": _InstanceCreditSpecifications, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



newtype ModifyInstanceCreditSpecificationResult = ModifyInstanceCreditSpecificationResult 
  { "SuccessfulInstanceCreditSpecifications" :: NullOrUndefined.NullOrUndefined (SuccessfulInstanceCreditSpecificationSet)
  , "UnsuccessfulInstanceCreditSpecifications" :: NullOrUndefined.NullOrUndefined (UnsuccessfulInstanceCreditSpecificationSet)
  }
derive instance newtypeModifyInstanceCreditSpecificationResult :: Newtype ModifyInstanceCreditSpecificationResult _
derive instance repGenericModifyInstanceCreditSpecificationResult :: Generic ModifyInstanceCreditSpecificationResult _
instance showModifyInstanceCreditSpecificationResult :: Show ModifyInstanceCreditSpecificationResult where
  show = genericShow
instance decodeModifyInstanceCreditSpecificationResult :: Decode ModifyInstanceCreditSpecificationResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyInstanceCreditSpecificationResult :: Encode ModifyInstanceCreditSpecificationResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyInstanceCreditSpecificationResult from required parameters
newModifyInstanceCreditSpecificationResult :: ModifyInstanceCreditSpecificationResult
newModifyInstanceCreditSpecificationResult  = ModifyInstanceCreditSpecificationResult { "SuccessfulInstanceCreditSpecifications": (NullOrUndefined Nothing), "UnsuccessfulInstanceCreditSpecifications": (NullOrUndefined Nothing) }

-- | Constructs ModifyInstanceCreditSpecificationResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyInstanceCreditSpecificationResult' :: ( { "SuccessfulInstanceCreditSpecifications" :: NullOrUndefined.NullOrUndefined (SuccessfulInstanceCreditSpecificationSet) , "UnsuccessfulInstanceCreditSpecifications" :: NullOrUndefined.NullOrUndefined (UnsuccessfulInstanceCreditSpecificationSet) } -> {"SuccessfulInstanceCreditSpecifications" :: NullOrUndefined.NullOrUndefined (SuccessfulInstanceCreditSpecificationSet) , "UnsuccessfulInstanceCreditSpecifications" :: NullOrUndefined.NullOrUndefined (UnsuccessfulInstanceCreditSpecificationSet) } ) -> ModifyInstanceCreditSpecificationResult
newModifyInstanceCreditSpecificationResult'  customize = (ModifyInstanceCreditSpecificationResult <<< customize) { "SuccessfulInstanceCreditSpecifications": (NullOrUndefined Nothing), "UnsuccessfulInstanceCreditSpecifications": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifyInstancePlacement.</p>
newtype ModifyInstancePlacementRequest = ModifyInstancePlacementRequest 
  { "Affinity" :: NullOrUndefined.NullOrUndefined (Affinity)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "HostId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: (String)
  , "Tenancy" :: NullOrUndefined.NullOrUndefined (HostTenancy)
  }
derive instance newtypeModifyInstancePlacementRequest :: Newtype ModifyInstancePlacementRequest _
derive instance repGenericModifyInstancePlacementRequest :: Generic ModifyInstancePlacementRequest _
instance showModifyInstancePlacementRequest :: Show ModifyInstancePlacementRequest where
  show = genericShow
instance decodeModifyInstancePlacementRequest :: Decode ModifyInstancePlacementRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyInstancePlacementRequest :: Encode ModifyInstancePlacementRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyInstancePlacementRequest from required parameters
newModifyInstancePlacementRequest :: String -> ModifyInstancePlacementRequest
newModifyInstancePlacementRequest _InstanceId = ModifyInstancePlacementRequest { "InstanceId": _InstanceId, "Affinity": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "HostId": (NullOrUndefined Nothing), "Tenancy": (NullOrUndefined Nothing) }

-- | Constructs ModifyInstancePlacementRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyInstancePlacementRequest' :: String -> ( { "Affinity" :: NullOrUndefined.NullOrUndefined (Affinity) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "HostId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: (String) , "Tenancy" :: NullOrUndefined.NullOrUndefined (HostTenancy) } -> {"Affinity" :: NullOrUndefined.NullOrUndefined (Affinity) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "HostId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: (String) , "Tenancy" :: NullOrUndefined.NullOrUndefined (HostTenancy) } ) -> ModifyInstancePlacementRequest
newModifyInstancePlacementRequest' _InstanceId customize = (ModifyInstancePlacementRequest <<< customize) { "InstanceId": _InstanceId, "Affinity": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "HostId": (NullOrUndefined Nothing), "Tenancy": (NullOrUndefined Nothing) }



-- | <p>Contains the output of ModifyInstancePlacement.</p>
newtype ModifyInstancePlacementResult = ModifyInstancePlacementResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifyInstancePlacementResult :: Newtype ModifyInstancePlacementResult _
derive instance repGenericModifyInstancePlacementResult :: Generic ModifyInstancePlacementResult _
instance showModifyInstancePlacementResult :: Show ModifyInstancePlacementResult where
  show = genericShow
instance decodeModifyInstancePlacementResult :: Decode ModifyInstancePlacementResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyInstancePlacementResult :: Encode ModifyInstancePlacementResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyInstancePlacementResult from required parameters
newModifyInstancePlacementResult :: ModifyInstancePlacementResult
newModifyInstancePlacementResult  = ModifyInstancePlacementResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs ModifyInstancePlacementResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyInstancePlacementResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifyInstancePlacementResult
newModifyInstancePlacementResult'  customize = (ModifyInstancePlacementResult <<< customize) { "Return": (NullOrUndefined Nothing) }



newtype ModifyLaunchTemplateRequest = ModifyLaunchTemplateRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName)
  , "DefaultVersion" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeModifyLaunchTemplateRequest :: Newtype ModifyLaunchTemplateRequest _
derive instance repGenericModifyLaunchTemplateRequest :: Generic ModifyLaunchTemplateRequest _
instance showModifyLaunchTemplateRequest :: Show ModifyLaunchTemplateRequest where
  show = genericShow
instance decodeModifyLaunchTemplateRequest :: Decode ModifyLaunchTemplateRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyLaunchTemplateRequest :: Encode ModifyLaunchTemplateRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyLaunchTemplateRequest from required parameters
newModifyLaunchTemplateRequest :: ModifyLaunchTemplateRequest
newModifyLaunchTemplateRequest  = ModifyLaunchTemplateRequest { "ClientToken": (NullOrUndefined Nothing), "DefaultVersion": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing) }

-- | Constructs ModifyLaunchTemplateRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyLaunchTemplateRequest' :: ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "DefaultVersion" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchTemplateName" :: NullOrUndefined.NullOrUndefined (LaunchTemplateName) , "DefaultVersion" :: NullOrUndefined.NullOrUndefined (String) } ) -> ModifyLaunchTemplateRequest
newModifyLaunchTemplateRequest'  customize = (ModifyLaunchTemplateRequest <<< customize) { "ClientToken": (NullOrUndefined Nothing), "DefaultVersion": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "LaunchTemplateId": (NullOrUndefined Nothing), "LaunchTemplateName": (NullOrUndefined Nothing) }



newtype ModifyLaunchTemplateResult = ModifyLaunchTemplateResult 
  { "LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplate)
  }
derive instance newtypeModifyLaunchTemplateResult :: Newtype ModifyLaunchTemplateResult _
derive instance repGenericModifyLaunchTemplateResult :: Generic ModifyLaunchTemplateResult _
instance showModifyLaunchTemplateResult :: Show ModifyLaunchTemplateResult where
  show = genericShow
instance decodeModifyLaunchTemplateResult :: Decode ModifyLaunchTemplateResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyLaunchTemplateResult :: Encode ModifyLaunchTemplateResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyLaunchTemplateResult from required parameters
newModifyLaunchTemplateResult :: ModifyLaunchTemplateResult
newModifyLaunchTemplateResult  = ModifyLaunchTemplateResult { "LaunchTemplate": (NullOrUndefined Nothing) }

-- | Constructs ModifyLaunchTemplateResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyLaunchTemplateResult' :: ( { "LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplate) } -> {"LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplate) } ) -> ModifyLaunchTemplateResult
newModifyLaunchTemplateResult'  customize = (ModifyLaunchTemplateResult <<< customize) { "LaunchTemplate": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifyNetworkInterfaceAttribute.</p>
newtype ModifyNetworkInterfaceAttributeRequest = ModifyNetworkInterfaceAttributeRequest 
  { "Attachment" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttachmentChanges)
  , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList)
  , "NetworkInterfaceId" :: (String)
  , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  }
derive instance newtypeModifyNetworkInterfaceAttributeRequest :: Newtype ModifyNetworkInterfaceAttributeRequest _
derive instance repGenericModifyNetworkInterfaceAttributeRequest :: Generic ModifyNetworkInterfaceAttributeRequest _
instance showModifyNetworkInterfaceAttributeRequest :: Show ModifyNetworkInterfaceAttributeRequest where
  show = genericShow
instance decodeModifyNetworkInterfaceAttributeRequest :: Decode ModifyNetworkInterfaceAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyNetworkInterfaceAttributeRequest :: Encode ModifyNetworkInterfaceAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyNetworkInterfaceAttributeRequest from required parameters
newModifyNetworkInterfaceAttributeRequest :: String -> ModifyNetworkInterfaceAttributeRequest
newModifyNetworkInterfaceAttributeRequest _NetworkInterfaceId = ModifyNetworkInterfaceAttributeRequest { "NetworkInterfaceId": _NetworkInterfaceId, "Attachment": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing) }

-- | Constructs ModifyNetworkInterfaceAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyNetworkInterfaceAttributeRequest' :: String -> ( { "Attachment" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttachmentChanges) , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "NetworkInterfaceId" :: (String) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) } -> {"Attachment" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttachmentChanges) , "Description" :: NullOrUndefined.NullOrUndefined (AttributeValue) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Groups" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "NetworkInterfaceId" :: (String) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) } ) -> ModifyNetworkInterfaceAttributeRequest
newModifyNetworkInterfaceAttributeRequest' _NetworkInterfaceId customize = (ModifyNetworkInterfaceAttributeRequest <<< customize) { "NetworkInterfaceId": _NetworkInterfaceId, "Attachment": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifyReservedInstances.</p>
newtype ModifyReservedInstancesRequest = ModifyReservedInstancesRequest 
  { "ReservedInstancesIds" :: (ReservedInstancesIdStringList)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "TargetConfigurations" :: (ReservedInstancesConfigurationList)
  }
derive instance newtypeModifyReservedInstancesRequest :: Newtype ModifyReservedInstancesRequest _
derive instance repGenericModifyReservedInstancesRequest :: Generic ModifyReservedInstancesRequest _
instance showModifyReservedInstancesRequest :: Show ModifyReservedInstancesRequest where
  show = genericShow
instance decodeModifyReservedInstancesRequest :: Decode ModifyReservedInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyReservedInstancesRequest :: Encode ModifyReservedInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyReservedInstancesRequest from required parameters
newModifyReservedInstancesRequest :: ReservedInstancesIdStringList -> ReservedInstancesConfigurationList -> ModifyReservedInstancesRequest
newModifyReservedInstancesRequest _ReservedInstancesIds _TargetConfigurations = ModifyReservedInstancesRequest { "ReservedInstancesIds": _ReservedInstancesIds, "TargetConfigurations": _TargetConfigurations, "ClientToken": (NullOrUndefined Nothing) }

-- | Constructs ModifyReservedInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyReservedInstancesRequest' :: ReservedInstancesIdStringList -> ReservedInstancesConfigurationList -> ( { "ReservedInstancesIds" :: (ReservedInstancesIdStringList) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "TargetConfigurations" :: (ReservedInstancesConfigurationList) } -> {"ReservedInstancesIds" :: (ReservedInstancesIdStringList) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "TargetConfigurations" :: (ReservedInstancesConfigurationList) } ) -> ModifyReservedInstancesRequest
newModifyReservedInstancesRequest' _ReservedInstancesIds _TargetConfigurations customize = (ModifyReservedInstancesRequest <<< customize) { "ReservedInstancesIds": _ReservedInstancesIds, "TargetConfigurations": _TargetConfigurations, "ClientToken": (NullOrUndefined Nothing) }



-- | <p>Contains the output of ModifyReservedInstances.</p>
newtype ModifyReservedInstancesResult = ModifyReservedInstancesResult 
  { "ReservedInstancesModificationId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeModifyReservedInstancesResult :: Newtype ModifyReservedInstancesResult _
derive instance repGenericModifyReservedInstancesResult :: Generic ModifyReservedInstancesResult _
instance showModifyReservedInstancesResult :: Show ModifyReservedInstancesResult where
  show = genericShow
instance decodeModifyReservedInstancesResult :: Decode ModifyReservedInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyReservedInstancesResult :: Encode ModifyReservedInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyReservedInstancesResult from required parameters
newModifyReservedInstancesResult :: ModifyReservedInstancesResult
newModifyReservedInstancesResult  = ModifyReservedInstancesResult { "ReservedInstancesModificationId": (NullOrUndefined Nothing) }

-- | Constructs ModifyReservedInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyReservedInstancesResult' :: ( { "ReservedInstancesModificationId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ReservedInstancesModificationId" :: NullOrUndefined.NullOrUndefined (String) } ) -> ModifyReservedInstancesResult
newModifyReservedInstancesResult'  customize = (ModifyReservedInstancesResult <<< customize) { "ReservedInstancesModificationId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifySnapshotAttribute.</p>
newtype ModifySnapshotAttributeRequest = ModifySnapshotAttributeRequest 
  { "Attribute" :: NullOrUndefined.NullOrUndefined (SnapshotAttributeName)
  , "CreateVolumePermission" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionModifications)
  , "GroupNames" :: NullOrUndefined.NullOrUndefined (GroupNameStringList)
  , "OperationType" :: NullOrUndefined.NullOrUndefined (OperationType)
  , "SnapshotId" :: (String)
  , "UserIds" :: NullOrUndefined.NullOrUndefined (UserIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifySnapshotAttributeRequest :: Newtype ModifySnapshotAttributeRequest _
derive instance repGenericModifySnapshotAttributeRequest :: Generic ModifySnapshotAttributeRequest _
instance showModifySnapshotAttributeRequest :: Show ModifySnapshotAttributeRequest where
  show = genericShow
instance decodeModifySnapshotAttributeRequest :: Decode ModifySnapshotAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifySnapshotAttributeRequest :: Encode ModifySnapshotAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifySnapshotAttributeRequest from required parameters
newModifySnapshotAttributeRequest :: String -> ModifySnapshotAttributeRequest
newModifySnapshotAttributeRequest _SnapshotId = ModifySnapshotAttributeRequest { "SnapshotId": _SnapshotId, "Attribute": (NullOrUndefined Nothing), "CreateVolumePermission": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "GroupNames": (NullOrUndefined Nothing), "OperationType": (NullOrUndefined Nothing), "UserIds": (NullOrUndefined Nothing) }

-- | Constructs ModifySnapshotAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifySnapshotAttributeRequest' :: String -> ( { "Attribute" :: NullOrUndefined.NullOrUndefined (SnapshotAttributeName) , "CreateVolumePermission" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionModifications) , "GroupNames" :: NullOrUndefined.NullOrUndefined (GroupNameStringList) , "OperationType" :: NullOrUndefined.NullOrUndefined (OperationType) , "SnapshotId" :: (String) , "UserIds" :: NullOrUndefined.NullOrUndefined (UserIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Attribute" :: NullOrUndefined.NullOrUndefined (SnapshotAttributeName) , "CreateVolumePermission" :: NullOrUndefined.NullOrUndefined (CreateVolumePermissionModifications) , "GroupNames" :: NullOrUndefined.NullOrUndefined (GroupNameStringList) , "OperationType" :: NullOrUndefined.NullOrUndefined (OperationType) , "SnapshotId" :: (String) , "UserIds" :: NullOrUndefined.NullOrUndefined (UserIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifySnapshotAttributeRequest
newModifySnapshotAttributeRequest' _SnapshotId customize = (ModifySnapshotAttributeRequest <<< customize) { "SnapshotId": _SnapshotId, "Attribute": (NullOrUndefined Nothing), "CreateVolumePermission": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "GroupNames": (NullOrUndefined Nothing), "OperationType": (NullOrUndefined Nothing), "UserIds": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifySpotFleetRequest.</p>
newtype ModifySpotFleetRequestRequest = ModifySpotFleetRequestRequest 
  { "ExcessCapacityTerminationPolicy" :: NullOrUndefined.NullOrUndefined (ExcessCapacityTerminationPolicy)
  , "SpotFleetRequestId" :: (String)
  , "TargetCapacity" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeModifySpotFleetRequestRequest :: Newtype ModifySpotFleetRequestRequest _
derive instance repGenericModifySpotFleetRequestRequest :: Generic ModifySpotFleetRequestRequest _
instance showModifySpotFleetRequestRequest :: Show ModifySpotFleetRequestRequest where
  show = genericShow
instance decodeModifySpotFleetRequestRequest :: Decode ModifySpotFleetRequestRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifySpotFleetRequestRequest :: Encode ModifySpotFleetRequestRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifySpotFleetRequestRequest from required parameters
newModifySpotFleetRequestRequest :: String -> ModifySpotFleetRequestRequest
newModifySpotFleetRequestRequest _SpotFleetRequestId = ModifySpotFleetRequestRequest { "SpotFleetRequestId": _SpotFleetRequestId, "ExcessCapacityTerminationPolicy": (NullOrUndefined Nothing), "TargetCapacity": (NullOrUndefined Nothing) }

-- | Constructs ModifySpotFleetRequestRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifySpotFleetRequestRequest' :: String -> ( { "ExcessCapacityTerminationPolicy" :: NullOrUndefined.NullOrUndefined (ExcessCapacityTerminationPolicy) , "SpotFleetRequestId" :: (String) , "TargetCapacity" :: NullOrUndefined.NullOrUndefined (Int) } -> {"ExcessCapacityTerminationPolicy" :: NullOrUndefined.NullOrUndefined (ExcessCapacityTerminationPolicy) , "SpotFleetRequestId" :: (String) , "TargetCapacity" :: NullOrUndefined.NullOrUndefined (Int) } ) -> ModifySpotFleetRequestRequest
newModifySpotFleetRequestRequest' _SpotFleetRequestId customize = (ModifySpotFleetRequestRequest <<< customize) { "SpotFleetRequestId": _SpotFleetRequestId, "ExcessCapacityTerminationPolicy": (NullOrUndefined Nothing), "TargetCapacity": (NullOrUndefined Nothing) }



-- | <p>Contains the output of ModifySpotFleetRequest.</p>
newtype ModifySpotFleetRequestResponse = ModifySpotFleetRequestResponse 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifySpotFleetRequestResponse :: Newtype ModifySpotFleetRequestResponse _
derive instance repGenericModifySpotFleetRequestResponse :: Generic ModifySpotFleetRequestResponse _
instance showModifySpotFleetRequestResponse :: Show ModifySpotFleetRequestResponse where
  show = genericShow
instance decodeModifySpotFleetRequestResponse :: Decode ModifySpotFleetRequestResponse where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifySpotFleetRequestResponse :: Encode ModifySpotFleetRequestResponse where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifySpotFleetRequestResponse from required parameters
newModifySpotFleetRequestResponse :: ModifySpotFleetRequestResponse
newModifySpotFleetRequestResponse  = ModifySpotFleetRequestResponse { "Return": (NullOrUndefined Nothing) }

-- | Constructs ModifySpotFleetRequestResponse's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifySpotFleetRequestResponse' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifySpotFleetRequestResponse
newModifySpotFleetRequestResponse'  customize = (ModifySpotFleetRequestResponse <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifySubnetAttribute.</p>
newtype ModifySubnetAttributeRequest = ModifySubnetAttributeRequest 
  { "AssignIpv6AddressOnCreation" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "MapPublicIpOnLaunch" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "SubnetId" :: (String)
  }
derive instance newtypeModifySubnetAttributeRequest :: Newtype ModifySubnetAttributeRequest _
derive instance repGenericModifySubnetAttributeRequest :: Generic ModifySubnetAttributeRequest _
instance showModifySubnetAttributeRequest :: Show ModifySubnetAttributeRequest where
  show = genericShow
instance decodeModifySubnetAttributeRequest :: Decode ModifySubnetAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifySubnetAttributeRequest :: Encode ModifySubnetAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifySubnetAttributeRequest from required parameters
newModifySubnetAttributeRequest :: String -> ModifySubnetAttributeRequest
newModifySubnetAttributeRequest _SubnetId = ModifySubnetAttributeRequest { "SubnetId": _SubnetId, "AssignIpv6AddressOnCreation": (NullOrUndefined Nothing), "MapPublicIpOnLaunch": (NullOrUndefined Nothing) }

-- | Constructs ModifySubnetAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifySubnetAttributeRequest' :: String -> ( { "AssignIpv6AddressOnCreation" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "MapPublicIpOnLaunch" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "SubnetId" :: (String) } -> {"AssignIpv6AddressOnCreation" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "MapPublicIpOnLaunch" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "SubnetId" :: (String) } ) -> ModifySubnetAttributeRequest
newModifySubnetAttributeRequest' _SubnetId customize = (ModifySubnetAttributeRequest <<< customize) { "SubnetId": _SubnetId, "AssignIpv6AddressOnCreation": (NullOrUndefined Nothing), "MapPublicIpOnLaunch": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifyVolumeAttribute.</p>
newtype ModifyVolumeAttributeRequest = ModifyVolumeAttributeRequest 
  { "AutoEnableIO" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "VolumeId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifyVolumeAttributeRequest :: Newtype ModifyVolumeAttributeRequest _
derive instance repGenericModifyVolumeAttributeRequest :: Generic ModifyVolumeAttributeRequest _
instance showModifyVolumeAttributeRequest :: Show ModifyVolumeAttributeRequest where
  show = genericShow
instance decodeModifyVolumeAttributeRequest :: Decode ModifyVolumeAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVolumeAttributeRequest :: Encode ModifyVolumeAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVolumeAttributeRequest from required parameters
newModifyVolumeAttributeRequest :: String -> ModifyVolumeAttributeRequest
newModifyVolumeAttributeRequest _VolumeId = ModifyVolumeAttributeRequest { "VolumeId": _VolumeId, "AutoEnableIO": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ModifyVolumeAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVolumeAttributeRequest' :: String -> ( { "AutoEnableIO" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "VolumeId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AutoEnableIO" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "VolumeId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifyVolumeAttributeRequest
newModifyVolumeAttributeRequest' _VolumeId customize = (ModifyVolumeAttributeRequest <<< customize) { "VolumeId": _VolumeId, "AutoEnableIO": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



newtype ModifyVolumeRequest = ModifyVolumeRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VolumeId" :: (String)
  , "Size" :: NullOrUndefined.NullOrUndefined (Int)
  , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType)
  , "Iops" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeModifyVolumeRequest :: Newtype ModifyVolumeRequest _
derive instance repGenericModifyVolumeRequest :: Generic ModifyVolumeRequest _
instance showModifyVolumeRequest :: Show ModifyVolumeRequest where
  show = genericShow
instance decodeModifyVolumeRequest :: Decode ModifyVolumeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVolumeRequest :: Encode ModifyVolumeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVolumeRequest from required parameters
newModifyVolumeRequest :: String -> ModifyVolumeRequest
newModifyVolumeRequest _VolumeId = ModifyVolumeRequest { "VolumeId": _VolumeId, "DryRun": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "Size": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }

-- | Constructs ModifyVolumeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVolumeRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VolumeId" :: (String) , "Size" :: NullOrUndefined.NullOrUndefined (Int) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VolumeId" :: (String) , "Size" :: NullOrUndefined.NullOrUndefined (Int) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) } ) -> ModifyVolumeRequest
newModifyVolumeRequest' _VolumeId customize = (ModifyVolumeRequest <<< customize) { "VolumeId": _VolumeId, "DryRun": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "Size": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }



newtype ModifyVolumeResult = ModifyVolumeResult 
  { "VolumeModification" :: NullOrUndefined.NullOrUndefined (VolumeModification)
  }
derive instance newtypeModifyVolumeResult :: Newtype ModifyVolumeResult _
derive instance repGenericModifyVolumeResult :: Generic ModifyVolumeResult _
instance showModifyVolumeResult :: Show ModifyVolumeResult where
  show = genericShow
instance decodeModifyVolumeResult :: Decode ModifyVolumeResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVolumeResult :: Encode ModifyVolumeResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVolumeResult from required parameters
newModifyVolumeResult :: ModifyVolumeResult
newModifyVolumeResult  = ModifyVolumeResult { "VolumeModification": (NullOrUndefined Nothing) }

-- | Constructs ModifyVolumeResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVolumeResult' :: ( { "VolumeModification" :: NullOrUndefined.NullOrUndefined (VolumeModification) } -> {"VolumeModification" :: NullOrUndefined.NullOrUndefined (VolumeModification) } ) -> ModifyVolumeResult
newModifyVolumeResult'  customize = (ModifyVolumeResult <<< customize) { "VolumeModification": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifyVpcAttribute.</p>
newtype ModifyVpcAttributeRequest = ModifyVpcAttributeRequest 
  { "EnableDnsHostnames" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "EnableDnsSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue)
  , "VpcId" :: (String)
  }
derive instance newtypeModifyVpcAttributeRequest :: Newtype ModifyVpcAttributeRequest _
derive instance repGenericModifyVpcAttributeRequest :: Generic ModifyVpcAttributeRequest _
instance showModifyVpcAttributeRequest :: Show ModifyVpcAttributeRequest where
  show = genericShow
instance decodeModifyVpcAttributeRequest :: Decode ModifyVpcAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcAttributeRequest :: Encode ModifyVpcAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcAttributeRequest from required parameters
newModifyVpcAttributeRequest :: String -> ModifyVpcAttributeRequest
newModifyVpcAttributeRequest _VpcId = ModifyVpcAttributeRequest { "VpcId": _VpcId, "EnableDnsHostnames": (NullOrUndefined Nothing), "EnableDnsSupport": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcAttributeRequest' :: String -> ( { "EnableDnsHostnames" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "EnableDnsSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "VpcId" :: (String) } -> {"EnableDnsHostnames" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "EnableDnsSupport" :: NullOrUndefined.NullOrUndefined (AttributeBooleanValue) , "VpcId" :: (String) } ) -> ModifyVpcAttributeRequest
newModifyVpcAttributeRequest' _VpcId customize = (ModifyVpcAttributeRequest <<< customize) { "VpcId": _VpcId, "EnableDnsHostnames": (NullOrUndefined Nothing), "EnableDnsSupport": (NullOrUndefined Nothing) }



newtype ModifyVpcEndpointConnectionNotificationRequest = ModifyVpcEndpointConnectionNotificationRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ConnectionNotificationId" :: (String)
  , "ConnectionNotificationArn" :: NullOrUndefined.NullOrUndefined (String)
  , "ConnectionEvents" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeModifyVpcEndpointConnectionNotificationRequest :: Newtype ModifyVpcEndpointConnectionNotificationRequest _
derive instance repGenericModifyVpcEndpointConnectionNotificationRequest :: Generic ModifyVpcEndpointConnectionNotificationRequest _
instance showModifyVpcEndpointConnectionNotificationRequest :: Show ModifyVpcEndpointConnectionNotificationRequest where
  show = genericShow
instance decodeModifyVpcEndpointConnectionNotificationRequest :: Decode ModifyVpcEndpointConnectionNotificationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcEndpointConnectionNotificationRequest :: Encode ModifyVpcEndpointConnectionNotificationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcEndpointConnectionNotificationRequest from required parameters
newModifyVpcEndpointConnectionNotificationRequest :: String -> ModifyVpcEndpointConnectionNotificationRequest
newModifyVpcEndpointConnectionNotificationRequest _ConnectionNotificationId = ModifyVpcEndpointConnectionNotificationRequest { "ConnectionNotificationId": _ConnectionNotificationId, "ConnectionEvents": (NullOrUndefined Nothing), "ConnectionNotificationArn": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcEndpointConnectionNotificationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcEndpointConnectionNotificationRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ConnectionNotificationId" :: (String) , "ConnectionNotificationArn" :: NullOrUndefined.NullOrUndefined (String) , "ConnectionEvents" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ConnectionNotificationId" :: (String) , "ConnectionNotificationArn" :: NullOrUndefined.NullOrUndefined (String) , "ConnectionEvents" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> ModifyVpcEndpointConnectionNotificationRequest
newModifyVpcEndpointConnectionNotificationRequest' _ConnectionNotificationId customize = (ModifyVpcEndpointConnectionNotificationRequest <<< customize) { "ConnectionNotificationId": _ConnectionNotificationId, "ConnectionEvents": (NullOrUndefined Nothing), "ConnectionNotificationArn": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



newtype ModifyVpcEndpointConnectionNotificationResult = ModifyVpcEndpointConnectionNotificationResult 
  { "ReturnValue" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifyVpcEndpointConnectionNotificationResult :: Newtype ModifyVpcEndpointConnectionNotificationResult _
derive instance repGenericModifyVpcEndpointConnectionNotificationResult :: Generic ModifyVpcEndpointConnectionNotificationResult _
instance showModifyVpcEndpointConnectionNotificationResult :: Show ModifyVpcEndpointConnectionNotificationResult where
  show = genericShow
instance decodeModifyVpcEndpointConnectionNotificationResult :: Decode ModifyVpcEndpointConnectionNotificationResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcEndpointConnectionNotificationResult :: Encode ModifyVpcEndpointConnectionNotificationResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcEndpointConnectionNotificationResult from required parameters
newModifyVpcEndpointConnectionNotificationResult :: ModifyVpcEndpointConnectionNotificationResult
newModifyVpcEndpointConnectionNotificationResult  = ModifyVpcEndpointConnectionNotificationResult { "ReturnValue": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcEndpointConnectionNotificationResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcEndpointConnectionNotificationResult' :: ( { "ReturnValue" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"ReturnValue" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifyVpcEndpointConnectionNotificationResult
newModifyVpcEndpointConnectionNotificationResult'  customize = (ModifyVpcEndpointConnectionNotificationResult <<< customize) { "ReturnValue": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifyVpcEndpoint.</p>
newtype ModifyVpcEndpointRequest = ModifyVpcEndpointRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcEndpointId" :: (String)
  , "ResetPolicy" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "PolicyDocument" :: NullOrUndefined.NullOrUndefined (String)
  , "AddRouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "RemoveRouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "AddSubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "RemoveSubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "AddSecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "RemoveSecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "PrivateDnsEnabled" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifyVpcEndpointRequest :: Newtype ModifyVpcEndpointRequest _
derive instance repGenericModifyVpcEndpointRequest :: Generic ModifyVpcEndpointRequest _
instance showModifyVpcEndpointRequest :: Show ModifyVpcEndpointRequest where
  show = genericShow
instance decodeModifyVpcEndpointRequest :: Decode ModifyVpcEndpointRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcEndpointRequest :: Encode ModifyVpcEndpointRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcEndpointRequest from required parameters
newModifyVpcEndpointRequest :: String -> ModifyVpcEndpointRequest
newModifyVpcEndpointRequest _VpcEndpointId = ModifyVpcEndpointRequest { "VpcEndpointId": _VpcEndpointId, "AddRouteTableIds": (NullOrUndefined Nothing), "AddSecurityGroupIds": (NullOrUndefined Nothing), "AddSubnetIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "PolicyDocument": (NullOrUndefined Nothing), "PrivateDnsEnabled": (NullOrUndefined Nothing), "RemoveRouteTableIds": (NullOrUndefined Nothing), "RemoveSecurityGroupIds": (NullOrUndefined Nothing), "RemoveSubnetIds": (NullOrUndefined Nothing), "ResetPolicy": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcEndpointRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcEndpointRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcEndpointId" :: (String) , "ResetPolicy" :: NullOrUndefined.NullOrUndefined (Boolean) , "PolicyDocument" :: NullOrUndefined.NullOrUndefined (String) , "AddRouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "RemoveRouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "AddSubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "RemoveSubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "AddSecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "RemoveSecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "PrivateDnsEnabled" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcEndpointId" :: (String) , "ResetPolicy" :: NullOrUndefined.NullOrUndefined (Boolean) , "PolicyDocument" :: NullOrUndefined.NullOrUndefined (String) , "AddRouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "RemoveRouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "AddSubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "RemoveSubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "AddSecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "RemoveSecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "PrivateDnsEnabled" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifyVpcEndpointRequest
newModifyVpcEndpointRequest' _VpcEndpointId customize = (ModifyVpcEndpointRequest <<< customize) { "VpcEndpointId": _VpcEndpointId, "AddRouteTableIds": (NullOrUndefined Nothing), "AddSecurityGroupIds": (NullOrUndefined Nothing), "AddSubnetIds": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "PolicyDocument": (NullOrUndefined Nothing), "PrivateDnsEnabled": (NullOrUndefined Nothing), "RemoveRouteTableIds": (NullOrUndefined Nothing), "RemoveSecurityGroupIds": (NullOrUndefined Nothing), "RemoveSubnetIds": (NullOrUndefined Nothing), "ResetPolicy": (NullOrUndefined Nothing) }



newtype ModifyVpcEndpointResult = ModifyVpcEndpointResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifyVpcEndpointResult :: Newtype ModifyVpcEndpointResult _
derive instance repGenericModifyVpcEndpointResult :: Generic ModifyVpcEndpointResult _
instance showModifyVpcEndpointResult :: Show ModifyVpcEndpointResult where
  show = genericShow
instance decodeModifyVpcEndpointResult :: Decode ModifyVpcEndpointResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcEndpointResult :: Encode ModifyVpcEndpointResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcEndpointResult from required parameters
newModifyVpcEndpointResult :: ModifyVpcEndpointResult
newModifyVpcEndpointResult  = ModifyVpcEndpointResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcEndpointResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcEndpointResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifyVpcEndpointResult
newModifyVpcEndpointResult'  customize = (ModifyVpcEndpointResult <<< customize) { "Return": (NullOrUndefined Nothing) }



newtype ModifyVpcEndpointServiceConfigurationRequest = ModifyVpcEndpointServiceConfigurationRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ServiceId" :: (String)
  , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "AddNetworkLoadBalancerArns" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "RemoveNetworkLoadBalancerArns" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeModifyVpcEndpointServiceConfigurationRequest :: Newtype ModifyVpcEndpointServiceConfigurationRequest _
derive instance repGenericModifyVpcEndpointServiceConfigurationRequest :: Generic ModifyVpcEndpointServiceConfigurationRequest _
instance showModifyVpcEndpointServiceConfigurationRequest :: Show ModifyVpcEndpointServiceConfigurationRequest where
  show = genericShow
instance decodeModifyVpcEndpointServiceConfigurationRequest :: Decode ModifyVpcEndpointServiceConfigurationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcEndpointServiceConfigurationRequest :: Encode ModifyVpcEndpointServiceConfigurationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcEndpointServiceConfigurationRequest from required parameters
newModifyVpcEndpointServiceConfigurationRequest :: String -> ModifyVpcEndpointServiceConfigurationRequest
newModifyVpcEndpointServiceConfigurationRequest _ServiceId = ModifyVpcEndpointServiceConfigurationRequest { "ServiceId": _ServiceId, "AcceptanceRequired": (NullOrUndefined Nothing), "AddNetworkLoadBalancerArns": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "RemoveNetworkLoadBalancerArns": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcEndpointServiceConfigurationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcEndpointServiceConfigurationRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: (String) , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean) , "AddNetworkLoadBalancerArns" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "RemoveNetworkLoadBalancerArns" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: (String) , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean) , "AddNetworkLoadBalancerArns" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "RemoveNetworkLoadBalancerArns" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> ModifyVpcEndpointServiceConfigurationRequest
newModifyVpcEndpointServiceConfigurationRequest' _ServiceId customize = (ModifyVpcEndpointServiceConfigurationRequest <<< customize) { "ServiceId": _ServiceId, "AcceptanceRequired": (NullOrUndefined Nothing), "AddNetworkLoadBalancerArns": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "RemoveNetworkLoadBalancerArns": (NullOrUndefined Nothing) }



newtype ModifyVpcEndpointServiceConfigurationResult = ModifyVpcEndpointServiceConfigurationResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifyVpcEndpointServiceConfigurationResult :: Newtype ModifyVpcEndpointServiceConfigurationResult _
derive instance repGenericModifyVpcEndpointServiceConfigurationResult :: Generic ModifyVpcEndpointServiceConfigurationResult _
instance showModifyVpcEndpointServiceConfigurationResult :: Show ModifyVpcEndpointServiceConfigurationResult where
  show = genericShow
instance decodeModifyVpcEndpointServiceConfigurationResult :: Decode ModifyVpcEndpointServiceConfigurationResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcEndpointServiceConfigurationResult :: Encode ModifyVpcEndpointServiceConfigurationResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcEndpointServiceConfigurationResult from required parameters
newModifyVpcEndpointServiceConfigurationResult :: ModifyVpcEndpointServiceConfigurationResult
newModifyVpcEndpointServiceConfigurationResult  = ModifyVpcEndpointServiceConfigurationResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcEndpointServiceConfigurationResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcEndpointServiceConfigurationResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifyVpcEndpointServiceConfigurationResult
newModifyVpcEndpointServiceConfigurationResult'  customize = (ModifyVpcEndpointServiceConfigurationResult <<< customize) { "Return": (NullOrUndefined Nothing) }



newtype ModifyVpcEndpointServicePermissionsRequest = ModifyVpcEndpointServicePermissionsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ServiceId" :: (String)
  , "AddAllowedPrincipals" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "RemoveAllowedPrincipals" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeModifyVpcEndpointServicePermissionsRequest :: Newtype ModifyVpcEndpointServicePermissionsRequest _
derive instance repGenericModifyVpcEndpointServicePermissionsRequest :: Generic ModifyVpcEndpointServicePermissionsRequest _
instance showModifyVpcEndpointServicePermissionsRequest :: Show ModifyVpcEndpointServicePermissionsRequest where
  show = genericShow
instance decodeModifyVpcEndpointServicePermissionsRequest :: Decode ModifyVpcEndpointServicePermissionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcEndpointServicePermissionsRequest :: Encode ModifyVpcEndpointServicePermissionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcEndpointServicePermissionsRequest from required parameters
newModifyVpcEndpointServicePermissionsRequest :: String -> ModifyVpcEndpointServicePermissionsRequest
newModifyVpcEndpointServicePermissionsRequest _ServiceId = ModifyVpcEndpointServicePermissionsRequest { "ServiceId": _ServiceId, "AddAllowedPrincipals": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "RemoveAllowedPrincipals": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcEndpointServicePermissionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcEndpointServicePermissionsRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: (String) , "AddAllowedPrincipals" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "RemoveAllowedPrincipals" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: (String) , "AddAllowedPrincipals" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "RemoveAllowedPrincipals" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> ModifyVpcEndpointServicePermissionsRequest
newModifyVpcEndpointServicePermissionsRequest' _ServiceId customize = (ModifyVpcEndpointServicePermissionsRequest <<< customize) { "ServiceId": _ServiceId, "AddAllowedPrincipals": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "RemoveAllowedPrincipals": (NullOrUndefined Nothing) }



newtype ModifyVpcEndpointServicePermissionsResult = ModifyVpcEndpointServicePermissionsResult 
  { "ReturnValue" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifyVpcEndpointServicePermissionsResult :: Newtype ModifyVpcEndpointServicePermissionsResult _
derive instance repGenericModifyVpcEndpointServicePermissionsResult :: Generic ModifyVpcEndpointServicePermissionsResult _
instance showModifyVpcEndpointServicePermissionsResult :: Show ModifyVpcEndpointServicePermissionsResult where
  show = genericShow
instance decodeModifyVpcEndpointServicePermissionsResult :: Decode ModifyVpcEndpointServicePermissionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcEndpointServicePermissionsResult :: Encode ModifyVpcEndpointServicePermissionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcEndpointServicePermissionsResult from required parameters
newModifyVpcEndpointServicePermissionsResult :: ModifyVpcEndpointServicePermissionsResult
newModifyVpcEndpointServicePermissionsResult  = ModifyVpcEndpointServicePermissionsResult { "ReturnValue": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcEndpointServicePermissionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcEndpointServicePermissionsResult' :: ( { "ReturnValue" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"ReturnValue" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifyVpcEndpointServicePermissionsResult
newModifyVpcEndpointServicePermissionsResult'  customize = (ModifyVpcEndpointServicePermissionsResult <<< customize) { "ReturnValue": (NullOrUndefined Nothing) }



newtype ModifyVpcPeeringConnectionOptionsRequest = ModifyVpcPeeringConnectionOptionsRequest 
  { "AccepterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptionsRequest)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "RequesterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptionsRequest)
  , "VpcPeeringConnectionId" :: (String)
  }
derive instance newtypeModifyVpcPeeringConnectionOptionsRequest :: Newtype ModifyVpcPeeringConnectionOptionsRequest _
derive instance repGenericModifyVpcPeeringConnectionOptionsRequest :: Generic ModifyVpcPeeringConnectionOptionsRequest _
instance showModifyVpcPeeringConnectionOptionsRequest :: Show ModifyVpcPeeringConnectionOptionsRequest where
  show = genericShow
instance decodeModifyVpcPeeringConnectionOptionsRequest :: Decode ModifyVpcPeeringConnectionOptionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcPeeringConnectionOptionsRequest :: Encode ModifyVpcPeeringConnectionOptionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcPeeringConnectionOptionsRequest from required parameters
newModifyVpcPeeringConnectionOptionsRequest :: String -> ModifyVpcPeeringConnectionOptionsRequest
newModifyVpcPeeringConnectionOptionsRequest _VpcPeeringConnectionId = ModifyVpcPeeringConnectionOptionsRequest { "VpcPeeringConnectionId": _VpcPeeringConnectionId, "AccepterPeeringConnectionOptions": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "RequesterPeeringConnectionOptions": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcPeeringConnectionOptionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcPeeringConnectionOptionsRequest' :: String -> ( { "AccepterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptionsRequest) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RequesterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptionsRequest) , "VpcPeeringConnectionId" :: (String) } -> {"AccepterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptionsRequest) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RequesterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptionsRequest) , "VpcPeeringConnectionId" :: (String) } ) -> ModifyVpcPeeringConnectionOptionsRequest
newModifyVpcPeeringConnectionOptionsRequest' _VpcPeeringConnectionId customize = (ModifyVpcPeeringConnectionOptionsRequest <<< customize) { "VpcPeeringConnectionId": _VpcPeeringConnectionId, "AccepterPeeringConnectionOptions": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "RequesterPeeringConnectionOptions": (NullOrUndefined Nothing) }



newtype ModifyVpcPeeringConnectionOptionsResult = ModifyVpcPeeringConnectionOptionsResult 
  { "AccepterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptions)
  , "RequesterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptions)
  }
derive instance newtypeModifyVpcPeeringConnectionOptionsResult :: Newtype ModifyVpcPeeringConnectionOptionsResult _
derive instance repGenericModifyVpcPeeringConnectionOptionsResult :: Generic ModifyVpcPeeringConnectionOptionsResult _
instance showModifyVpcPeeringConnectionOptionsResult :: Show ModifyVpcPeeringConnectionOptionsResult where
  show = genericShow
instance decodeModifyVpcPeeringConnectionOptionsResult :: Decode ModifyVpcPeeringConnectionOptionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcPeeringConnectionOptionsResult :: Encode ModifyVpcPeeringConnectionOptionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcPeeringConnectionOptionsResult from required parameters
newModifyVpcPeeringConnectionOptionsResult :: ModifyVpcPeeringConnectionOptionsResult
newModifyVpcPeeringConnectionOptionsResult  = ModifyVpcPeeringConnectionOptionsResult { "AccepterPeeringConnectionOptions": (NullOrUndefined Nothing), "RequesterPeeringConnectionOptions": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcPeeringConnectionOptionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcPeeringConnectionOptionsResult' :: ( { "AccepterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptions) , "RequesterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptions) } -> {"AccepterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptions) , "RequesterPeeringConnectionOptions" :: NullOrUndefined.NullOrUndefined (PeeringConnectionOptions) } ) -> ModifyVpcPeeringConnectionOptionsResult
newModifyVpcPeeringConnectionOptionsResult'  customize = (ModifyVpcPeeringConnectionOptionsResult <<< customize) { "AccepterPeeringConnectionOptions": (NullOrUndefined Nothing), "RequesterPeeringConnectionOptions": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ModifyVpcTenancy.</p>
newtype ModifyVpcTenancyRequest = ModifyVpcTenancyRequest 
  { "VpcId" :: (String)
  , "InstanceTenancy" :: (VpcTenancy)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifyVpcTenancyRequest :: Newtype ModifyVpcTenancyRequest _
derive instance repGenericModifyVpcTenancyRequest :: Generic ModifyVpcTenancyRequest _
instance showModifyVpcTenancyRequest :: Show ModifyVpcTenancyRequest where
  show = genericShow
instance decodeModifyVpcTenancyRequest :: Decode ModifyVpcTenancyRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcTenancyRequest :: Encode ModifyVpcTenancyRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcTenancyRequest from required parameters
newModifyVpcTenancyRequest :: VpcTenancy -> String -> ModifyVpcTenancyRequest
newModifyVpcTenancyRequest _InstanceTenancy _VpcId = ModifyVpcTenancyRequest { "InstanceTenancy": _InstanceTenancy, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcTenancyRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcTenancyRequest' :: VpcTenancy -> String -> ( { "VpcId" :: (String) , "InstanceTenancy" :: (VpcTenancy) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"VpcId" :: (String) , "InstanceTenancy" :: (VpcTenancy) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifyVpcTenancyRequest
newModifyVpcTenancyRequest' _InstanceTenancy _VpcId customize = (ModifyVpcTenancyRequest <<< customize) { "InstanceTenancy": _InstanceTenancy, "VpcId": _VpcId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of ModifyVpcTenancy.</p>
newtype ModifyVpcTenancyResult = ModifyVpcTenancyResult 
  { "ReturnValue" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeModifyVpcTenancyResult :: Newtype ModifyVpcTenancyResult _
derive instance repGenericModifyVpcTenancyResult :: Generic ModifyVpcTenancyResult _
instance showModifyVpcTenancyResult :: Show ModifyVpcTenancyResult where
  show = genericShow
instance decodeModifyVpcTenancyResult :: Decode ModifyVpcTenancyResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeModifyVpcTenancyResult :: Encode ModifyVpcTenancyResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ModifyVpcTenancyResult from required parameters
newModifyVpcTenancyResult :: ModifyVpcTenancyResult
newModifyVpcTenancyResult  = ModifyVpcTenancyResult { "ReturnValue": (NullOrUndefined Nothing) }

-- | Constructs ModifyVpcTenancyResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newModifyVpcTenancyResult' :: ( { "ReturnValue" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"ReturnValue" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ModifyVpcTenancyResult
newModifyVpcTenancyResult'  customize = (ModifyVpcTenancyResult <<< customize) { "ReturnValue": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for MonitorInstances.</p>
newtype MonitorInstancesRequest = MonitorInstancesRequest 
  { "InstanceIds" :: (InstanceIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeMonitorInstancesRequest :: Newtype MonitorInstancesRequest _
derive instance repGenericMonitorInstancesRequest :: Generic MonitorInstancesRequest _
instance showMonitorInstancesRequest :: Show MonitorInstancesRequest where
  show = genericShow
instance decodeMonitorInstancesRequest :: Decode MonitorInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMonitorInstancesRequest :: Encode MonitorInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs MonitorInstancesRequest from required parameters
newMonitorInstancesRequest :: InstanceIdStringList -> MonitorInstancesRequest
newMonitorInstancesRequest _InstanceIds = MonitorInstancesRequest { "InstanceIds": _InstanceIds, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs MonitorInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newMonitorInstancesRequest' :: InstanceIdStringList -> ( { "InstanceIds" :: (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"InstanceIds" :: (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> MonitorInstancesRequest
newMonitorInstancesRequest' _InstanceIds customize = (MonitorInstancesRequest <<< customize) { "InstanceIds": _InstanceIds, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of MonitorInstances.</p>
newtype MonitorInstancesResult = MonitorInstancesResult 
  { "InstanceMonitorings" :: NullOrUndefined.NullOrUndefined (InstanceMonitoringList)
  }
derive instance newtypeMonitorInstancesResult :: Newtype MonitorInstancesResult _
derive instance repGenericMonitorInstancesResult :: Generic MonitorInstancesResult _
instance showMonitorInstancesResult :: Show MonitorInstancesResult where
  show = genericShow
instance decodeMonitorInstancesResult :: Decode MonitorInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMonitorInstancesResult :: Encode MonitorInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs MonitorInstancesResult from required parameters
newMonitorInstancesResult :: MonitorInstancesResult
newMonitorInstancesResult  = MonitorInstancesResult { "InstanceMonitorings": (NullOrUndefined Nothing) }

-- | Constructs MonitorInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newMonitorInstancesResult' :: ( { "InstanceMonitorings" :: NullOrUndefined.NullOrUndefined (InstanceMonitoringList) } -> {"InstanceMonitorings" :: NullOrUndefined.NullOrUndefined (InstanceMonitoringList) } ) -> MonitorInstancesResult
newMonitorInstancesResult'  customize = (MonitorInstancesResult <<< customize) { "InstanceMonitorings": (NullOrUndefined Nothing) }



-- | <p>Describes the monitoring of an instance.</p>
newtype Monitoring = Monitoring 
  { "State" :: NullOrUndefined.NullOrUndefined (MonitoringState)
  }
derive instance newtypeMonitoring :: Newtype Monitoring _
derive instance repGenericMonitoring :: Generic Monitoring _
instance showMonitoring :: Show Monitoring where
  show = genericShow
instance decodeMonitoring :: Decode Monitoring where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMonitoring :: Encode Monitoring where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Monitoring from required parameters
newMonitoring :: Monitoring
newMonitoring  = Monitoring { "State": (NullOrUndefined Nothing) }

-- | Constructs Monitoring's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newMonitoring' :: ( { "State" :: NullOrUndefined.NullOrUndefined (MonitoringState) } -> {"State" :: NullOrUndefined.NullOrUndefined (MonitoringState) } ) -> Monitoring
newMonitoring'  customize = (Monitoring <<< customize) { "State": (NullOrUndefined Nothing) }



newtype MonitoringState = MonitoringState String
derive instance newtypeMonitoringState :: Newtype MonitoringState _
derive instance repGenericMonitoringState :: Generic MonitoringState _
instance showMonitoringState :: Show MonitoringState where
  show = genericShow
instance decodeMonitoringState :: Decode MonitoringState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMonitoringState :: Encode MonitoringState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for MoveAddressToVpc.</p>
newtype MoveAddressToVpcRequest = MoveAddressToVpcRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "PublicIp" :: (String)
  }
derive instance newtypeMoveAddressToVpcRequest :: Newtype MoveAddressToVpcRequest _
derive instance repGenericMoveAddressToVpcRequest :: Generic MoveAddressToVpcRequest _
instance showMoveAddressToVpcRequest :: Show MoveAddressToVpcRequest where
  show = genericShow
instance decodeMoveAddressToVpcRequest :: Decode MoveAddressToVpcRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMoveAddressToVpcRequest :: Encode MoveAddressToVpcRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs MoveAddressToVpcRequest from required parameters
newMoveAddressToVpcRequest :: String -> MoveAddressToVpcRequest
newMoveAddressToVpcRequest _PublicIp = MoveAddressToVpcRequest { "PublicIp": _PublicIp, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs MoveAddressToVpcRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newMoveAddressToVpcRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "PublicIp" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "PublicIp" :: (String) } ) -> MoveAddressToVpcRequest
newMoveAddressToVpcRequest' _PublicIp customize = (MoveAddressToVpcRequest <<< customize) { "PublicIp": _PublicIp, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of MoveAddressToVpc.</p>
newtype MoveAddressToVpcResult = MoveAddressToVpcResult 
  { "AllocationId" :: NullOrUndefined.NullOrUndefined (String)
  , "Status" :: NullOrUndefined.NullOrUndefined (Status)
  }
derive instance newtypeMoveAddressToVpcResult :: Newtype MoveAddressToVpcResult _
derive instance repGenericMoveAddressToVpcResult :: Generic MoveAddressToVpcResult _
instance showMoveAddressToVpcResult :: Show MoveAddressToVpcResult where
  show = genericShow
instance decodeMoveAddressToVpcResult :: Decode MoveAddressToVpcResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMoveAddressToVpcResult :: Encode MoveAddressToVpcResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs MoveAddressToVpcResult from required parameters
newMoveAddressToVpcResult :: MoveAddressToVpcResult
newMoveAddressToVpcResult  = MoveAddressToVpcResult { "AllocationId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }

-- | Constructs MoveAddressToVpcResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newMoveAddressToVpcResult' :: ( { "AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (Status) } -> {"AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (Status) } ) -> MoveAddressToVpcResult
newMoveAddressToVpcResult'  customize = (MoveAddressToVpcResult <<< customize) { "AllocationId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }



newtype MoveStatus = MoveStatus String
derive instance newtypeMoveStatus :: Newtype MoveStatus _
derive instance repGenericMoveStatus :: Generic MoveStatus _
instance showMoveStatus :: Show MoveStatus where
  show = genericShow
instance decodeMoveStatus :: Decode MoveStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMoveStatus :: Encode MoveStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the status of a moving Elastic IP address.</p>
newtype MovingAddressStatus = MovingAddressStatus 
  { "MoveStatus" :: NullOrUndefined.NullOrUndefined (MoveStatus)
  , "PublicIp" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeMovingAddressStatus :: Newtype MovingAddressStatus _
derive instance repGenericMovingAddressStatus :: Generic MovingAddressStatus _
instance showMovingAddressStatus :: Show MovingAddressStatus where
  show = genericShow
instance decodeMovingAddressStatus :: Decode MovingAddressStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMovingAddressStatus :: Encode MovingAddressStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs MovingAddressStatus from required parameters
newMovingAddressStatus :: MovingAddressStatus
newMovingAddressStatus  = MovingAddressStatus { "MoveStatus": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }

-- | Constructs MovingAddressStatus's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newMovingAddressStatus' :: ( { "MoveStatus" :: NullOrUndefined.NullOrUndefined (MoveStatus) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) } -> {"MoveStatus" :: NullOrUndefined.NullOrUndefined (MoveStatus) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) } ) -> MovingAddressStatus
newMovingAddressStatus'  customize = (MovingAddressStatus <<< customize) { "MoveStatus": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }



newtype MovingAddressStatusSet = MovingAddressStatusSet (Array MovingAddressStatus)
derive instance newtypeMovingAddressStatusSet :: Newtype MovingAddressStatusSet _
derive instance repGenericMovingAddressStatusSet :: Generic MovingAddressStatusSet _
instance showMovingAddressStatusSet :: Show MovingAddressStatusSet where
  show = genericShow
instance decodeMovingAddressStatusSet :: Decode MovingAddressStatusSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeMovingAddressStatusSet :: Encode MovingAddressStatusSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a NAT gateway.</p>
newtype NatGateway = NatGateway 
  { "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "DeleteTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "FailureCode" :: NullOrUndefined.NullOrUndefined (String)
  , "FailureMessage" :: NullOrUndefined.NullOrUndefined (String)
  , "NatGatewayAddresses" :: NullOrUndefined.NullOrUndefined (NatGatewayAddressList)
  , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "ProvisionedBandwidth" :: NullOrUndefined.NullOrUndefined (ProvisionedBandwidth)
  , "State" :: NullOrUndefined.NullOrUndefined (NatGatewayState)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeNatGateway :: Newtype NatGateway _
derive instance repGenericNatGateway :: Generic NatGateway _
instance showNatGateway :: Show NatGateway where
  show = genericShow
instance decodeNatGateway :: Decode NatGateway where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNatGateway :: Encode NatGateway where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NatGateway from required parameters
newNatGateway :: NatGateway
newNatGateway  = NatGateway { "CreateTime": (NullOrUndefined Nothing), "DeleteTime": (NullOrUndefined Nothing), "FailureCode": (NullOrUndefined Nothing), "FailureMessage": (NullOrUndefined Nothing), "NatGatewayAddresses": (NullOrUndefined Nothing), "NatGatewayId": (NullOrUndefined Nothing), "ProvisionedBandwidth": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs NatGateway's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNatGateway' :: ( { "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "DeleteTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "FailureCode" :: NullOrUndefined.NullOrUndefined (String) , "FailureMessage" :: NullOrUndefined.NullOrUndefined (String) , "NatGatewayAddresses" :: NullOrUndefined.NullOrUndefined (NatGatewayAddressList) , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "ProvisionedBandwidth" :: NullOrUndefined.NullOrUndefined (ProvisionedBandwidth) , "State" :: NullOrUndefined.NullOrUndefined (NatGatewayState) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "DeleteTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "FailureCode" :: NullOrUndefined.NullOrUndefined (String) , "FailureMessage" :: NullOrUndefined.NullOrUndefined (String) , "NatGatewayAddresses" :: NullOrUndefined.NullOrUndefined (NatGatewayAddressList) , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "ProvisionedBandwidth" :: NullOrUndefined.NullOrUndefined (ProvisionedBandwidth) , "State" :: NullOrUndefined.NullOrUndefined (NatGatewayState) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> NatGateway
newNatGateway'  customize = (NatGateway <<< customize) { "CreateTime": (NullOrUndefined Nothing), "DeleteTime": (NullOrUndefined Nothing), "FailureCode": (NullOrUndefined Nothing), "FailureMessage": (NullOrUndefined Nothing), "NatGatewayAddresses": (NullOrUndefined Nothing), "NatGatewayId": (NullOrUndefined Nothing), "ProvisionedBandwidth": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Describes the IP addresses and network interface associated with a NAT gateway.</p>
newtype NatGatewayAddress = NatGatewayAddress 
  { "AllocationId" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIp" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicIp" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeNatGatewayAddress :: Newtype NatGatewayAddress _
derive instance repGenericNatGatewayAddress :: Generic NatGatewayAddress _
instance showNatGatewayAddress :: Show NatGatewayAddress where
  show = genericShow
instance decodeNatGatewayAddress :: Decode NatGatewayAddress where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNatGatewayAddress :: Encode NatGatewayAddress where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NatGatewayAddress from required parameters
newNatGatewayAddress :: NatGatewayAddress
newNatGatewayAddress  = NatGatewayAddress { "AllocationId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIp": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }

-- | Constructs NatGatewayAddress's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNatGatewayAddress' :: ( { "AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIp" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) } -> {"AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIp" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) } ) -> NatGatewayAddress
newNatGatewayAddress'  customize = (NatGatewayAddress <<< customize) { "AllocationId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIp": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }



newtype NatGatewayAddressList = NatGatewayAddressList (Array NatGatewayAddress)
derive instance newtypeNatGatewayAddressList :: Newtype NatGatewayAddressList _
derive instance repGenericNatGatewayAddressList :: Generic NatGatewayAddressList _
instance showNatGatewayAddressList :: Show NatGatewayAddressList where
  show = genericShow
instance decodeNatGatewayAddressList :: Decode NatGatewayAddressList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNatGatewayAddressList :: Encode NatGatewayAddressList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype NatGatewayList = NatGatewayList (Array NatGateway)
derive instance newtypeNatGatewayList :: Newtype NatGatewayList _
derive instance repGenericNatGatewayList :: Generic NatGatewayList _
instance showNatGatewayList :: Show NatGatewayList where
  show = genericShow
instance decodeNatGatewayList :: Decode NatGatewayList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNatGatewayList :: Encode NatGatewayList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype NatGatewayState = NatGatewayState String
derive instance newtypeNatGatewayState :: Newtype NatGatewayState _
derive instance repGenericNatGatewayState :: Generic NatGatewayState _
instance showNatGatewayState :: Show NatGatewayState where
  show = genericShow
instance decodeNatGatewayState :: Decode NatGatewayState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNatGatewayState :: Encode NatGatewayState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a network ACL.</p>
newtype NetworkAcl = NetworkAcl 
  { "Associations" :: NullOrUndefined.NullOrUndefined (NetworkAclAssociationList)
  , "Entries" :: NullOrUndefined.NullOrUndefined (NetworkAclEntryList)
  , "IsDefault" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkAclId" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeNetworkAcl :: Newtype NetworkAcl _
derive instance repGenericNetworkAcl :: Generic NetworkAcl _
instance showNetworkAcl :: Show NetworkAcl where
  show = genericShow
instance decodeNetworkAcl :: Decode NetworkAcl where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkAcl :: Encode NetworkAcl where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkAcl from required parameters
newNetworkAcl :: NetworkAcl
newNetworkAcl  = NetworkAcl { "Associations": (NullOrUndefined Nothing), "Entries": (NullOrUndefined Nothing), "IsDefault": (NullOrUndefined Nothing), "NetworkAclId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs NetworkAcl's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkAcl' :: ( { "Associations" :: NullOrUndefined.NullOrUndefined (NetworkAclAssociationList) , "Entries" :: NullOrUndefined.NullOrUndefined (NetworkAclEntryList) , "IsDefault" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkAclId" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Associations" :: NullOrUndefined.NullOrUndefined (NetworkAclAssociationList) , "Entries" :: NullOrUndefined.NullOrUndefined (NetworkAclEntryList) , "IsDefault" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkAclId" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> NetworkAcl
newNetworkAcl'  customize = (NetworkAcl <<< customize) { "Associations": (NullOrUndefined Nothing), "Entries": (NullOrUndefined Nothing), "IsDefault": (NullOrUndefined Nothing), "NetworkAclId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Describes an association between a network ACL and a subnet.</p>
newtype NetworkAclAssociation = NetworkAclAssociation 
  { "NetworkAclAssociationId" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkAclId" :: NullOrUndefined.NullOrUndefined (String)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeNetworkAclAssociation :: Newtype NetworkAclAssociation _
derive instance repGenericNetworkAclAssociation :: Generic NetworkAclAssociation _
instance showNetworkAclAssociation :: Show NetworkAclAssociation where
  show = genericShow
instance decodeNetworkAclAssociation :: Decode NetworkAclAssociation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkAclAssociation :: Encode NetworkAclAssociation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkAclAssociation from required parameters
newNetworkAclAssociation :: NetworkAclAssociation
newNetworkAclAssociation  = NetworkAclAssociation { "NetworkAclAssociationId": (NullOrUndefined Nothing), "NetworkAclId": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }

-- | Constructs NetworkAclAssociation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkAclAssociation' :: ( { "NetworkAclAssociationId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkAclId" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } -> {"NetworkAclAssociationId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkAclId" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } ) -> NetworkAclAssociation
newNetworkAclAssociation'  customize = (NetworkAclAssociation <<< customize) { "NetworkAclAssociationId": (NullOrUndefined Nothing), "NetworkAclId": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }



newtype NetworkAclAssociationList = NetworkAclAssociationList (Array NetworkAclAssociation)
derive instance newtypeNetworkAclAssociationList :: Newtype NetworkAclAssociationList _
derive instance repGenericNetworkAclAssociationList :: Generic NetworkAclAssociationList _
instance showNetworkAclAssociationList :: Show NetworkAclAssociationList where
  show = genericShow
instance decodeNetworkAclAssociationList :: Decode NetworkAclAssociationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkAclAssociationList :: Encode NetworkAclAssociationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an entry in a network ACL.</p>
newtype NetworkAclEntry = NetworkAclEntry 
  { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "Egress" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "IcmpTypeCode" :: NullOrUndefined.NullOrUndefined (IcmpTypeCode)
  , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "PortRange" :: NullOrUndefined.NullOrUndefined (PortRange)
  , "Protocol" :: NullOrUndefined.NullOrUndefined (String)
  , "RuleAction" :: NullOrUndefined.NullOrUndefined (RuleAction)
  , "RuleNumber" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeNetworkAclEntry :: Newtype NetworkAclEntry _
derive instance repGenericNetworkAclEntry :: Generic NetworkAclEntry _
instance showNetworkAclEntry :: Show NetworkAclEntry where
  show = genericShow
instance decodeNetworkAclEntry :: Decode NetworkAclEntry where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkAclEntry :: Encode NetworkAclEntry where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkAclEntry from required parameters
newNetworkAclEntry :: NetworkAclEntry
newNetworkAclEntry  = NetworkAclEntry { "CidrBlock": (NullOrUndefined Nothing), "Egress": (NullOrUndefined Nothing), "IcmpTypeCode": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing), "PortRange": (NullOrUndefined Nothing), "Protocol": (NullOrUndefined Nothing), "RuleAction": (NullOrUndefined Nothing), "RuleNumber": (NullOrUndefined Nothing) }

-- | Constructs NetworkAclEntry's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkAclEntry' :: ( { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "Egress" :: NullOrUndefined.NullOrUndefined (Boolean) , "IcmpTypeCode" :: NullOrUndefined.NullOrUndefined (IcmpTypeCode) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "PortRange" :: NullOrUndefined.NullOrUndefined (PortRange) , "Protocol" :: NullOrUndefined.NullOrUndefined (String) , "RuleAction" :: NullOrUndefined.NullOrUndefined (RuleAction) , "RuleNumber" :: NullOrUndefined.NullOrUndefined (Int) } -> {"CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "Egress" :: NullOrUndefined.NullOrUndefined (Boolean) , "IcmpTypeCode" :: NullOrUndefined.NullOrUndefined (IcmpTypeCode) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "PortRange" :: NullOrUndefined.NullOrUndefined (PortRange) , "Protocol" :: NullOrUndefined.NullOrUndefined (String) , "RuleAction" :: NullOrUndefined.NullOrUndefined (RuleAction) , "RuleNumber" :: NullOrUndefined.NullOrUndefined (Int) } ) -> NetworkAclEntry
newNetworkAclEntry'  customize = (NetworkAclEntry <<< customize) { "CidrBlock": (NullOrUndefined Nothing), "Egress": (NullOrUndefined Nothing), "IcmpTypeCode": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing), "PortRange": (NullOrUndefined Nothing), "Protocol": (NullOrUndefined Nothing), "RuleAction": (NullOrUndefined Nothing), "RuleNumber": (NullOrUndefined Nothing) }



newtype NetworkAclEntryList = NetworkAclEntryList (Array NetworkAclEntry)
derive instance newtypeNetworkAclEntryList :: Newtype NetworkAclEntryList _
derive instance repGenericNetworkAclEntryList :: Generic NetworkAclEntryList _
instance showNetworkAclEntryList :: Show NetworkAclEntryList where
  show = genericShow
instance decodeNetworkAclEntryList :: Decode NetworkAclEntryList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkAclEntryList :: Encode NetworkAclEntryList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype NetworkAclList = NetworkAclList (Array NetworkAcl)
derive instance newtypeNetworkAclList :: Newtype NetworkAclList _
derive instance repGenericNetworkAclList :: Generic NetworkAclList _
instance showNetworkAclList :: Show NetworkAclList where
  show = genericShow
instance decodeNetworkAclList :: Decode NetworkAclList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkAclList :: Encode NetworkAclList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a network interface.</p>
newtype NetworkInterface = NetworkInterface 
  { "Association" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAssociation)
  , "Attachment" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttachment)
  , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList)
  , "InterfaceType" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceType)
  , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceIpv6AddressesList)
  , "MacAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "OwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePrivateIpAddressList)
  , "RequesterId" :: NullOrUndefined.NullOrUndefined (String)
  , "RequesterManaged" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Status" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceStatus)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "TagSet" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeNetworkInterface :: Newtype NetworkInterface _
derive instance repGenericNetworkInterface :: Generic NetworkInterface _
instance showNetworkInterface :: Show NetworkInterface where
  show = genericShow
instance decodeNetworkInterface :: Decode NetworkInterface where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterface :: Encode NetworkInterface where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkInterface from required parameters
newNetworkInterface :: NetworkInterface
newNetworkInterface  = NetworkInterface { "Association": (NullOrUndefined Nothing), "Attachment": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "InterfaceType": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "MacAddress": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "RequesterId": (NullOrUndefined Nothing), "RequesterManaged": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "TagSet": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs NetworkInterface's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkInterface' :: ( { "Association" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAssociation) , "Attachment" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttachment) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "InterfaceType" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceType) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceIpv6AddressesList) , "MacAddress" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePrivateIpAddressList) , "RequesterId" :: NullOrUndefined.NullOrUndefined (String) , "RequesterManaged" :: NullOrUndefined.NullOrUndefined (Boolean) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (Boolean) , "Status" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceStatus) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "TagSet" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Association" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAssociation) , "Attachment" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAttachment) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "InterfaceType" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceType) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceIpv6AddressesList) , "MacAddress" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddresses" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePrivateIpAddressList) , "RequesterId" :: NullOrUndefined.NullOrUndefined (String) , "RequesterManaged" :: NullOrUndefined.NullOrUndefined (Boolean) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (Boolean) , "Status" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceStatus) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "TagSet" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> NetworkInterface
newNetworkInterface'  customize = (NetworkInterface <<< customize) { "Association": (NullOrUndefined Nothing), "Attachment": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "InterfaceType": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "MacAddress": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddresses": (NullOrUndefined Nothing), "RequesterId": (NullOrUndefined Nothing), "RequesterManaged": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "TagSet": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Describes association information for an Elastic IP address (IPv4 only).</p>
newtype NetworkInterfaceAssociation = NetworkInterfaceAssociation 
  { "AllocationId" :: NullOrUndefined.NullOrUndefined (String)
  , "AssociationId" :: NullOrUndefined.NullOrUndefined (String)
  , "IpOwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicDnsName" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicIp" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeNetworkInterfaceAssociation :: Newtype NetworkInterfaceAssociation _
derive instance repGenericNetworkInterfaceAssociation :: Generic NetworkInterfaceAssociation _
instance showNetworkInterfaceAssociation :: Show NetworkInterfaceAssociation where
  show = genericShow
instance decodeNetworkInterfaceAssociation :: Decode NetworkInterfaceAssociation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfaceAssociation :: Encode NetworkInterfaceAssociation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkInterfaceAssociation from required parameters
newNetworkInterfaceAssociation :: NetworkInterfaceAssociation
newNetworkInterfaceAssociation  = NetworkInterfaceAssociation { "AllocationId": (NullOrUndefined Nothing), "AssociationId": (NullOrUndefined Nothing), "IpOwnerId": (NullOrUndefined Nothing), "PublicDnsName": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }

-- | Constructs NetworkInterfaceAssociation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkInterfaceAssociation' :: ( { "AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "IpOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PublicDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) } -> {"AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "IpOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PublicDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) } ) -> NetworkInterfaceAssociation
newNetworkInterfaceAssociation'  customize = (NetworkInterfaceAssociation <<< customize) { "AllocationId": (NullOrUndefined Nothing), "AssociationId": (NullOrUndefined Nothing), "IpOwnerId": (NullOrUndefined Nothing), "PublicDnsName": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }



-- | <p>Describes a network interface attachment.</p>
newtype NetworkInterfaceAttachment = NetworkInterfaceAttachment 
  { "AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "AttachmentId" :: NullOrUndefined.NullOrUndefined (String)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceOwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "Status" :: NullOrUndefined.NullOrUndefined (AttachmentStatus)
  }
derive instance newtypeNetworkInterfaceAttachment :: Newtype NetworkInterfaceAttachment _
derive instance repGenericNetworkInterfaceAttachment :: Generic NetworkInterfaceAttachment _
instance showNetworkInterfaceAttachment :: Show NetworkInterfaceAttachment where
  show = genericShow
instance decodeNetworkInterfaceAttachment :: Decode NetworkInterfaceAttachment where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfaceAttachment :: Encode NetworkInterfaceAttachment where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkInterfaceAttachment from required parameters
newNetworkInterfaceAttachment :: NetworkInterfaceAttachment
newNetworkInterfaceAttachment  = NetworkInterfaceAttachment { "AttachTime": (NullOrUndefined Nothing), "AttachmentId": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceOwnerId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }

-- | Constructs NetworkInterfaceAttachment's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkInterfaceAttachment' :: ( { "AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "AttachmentId" :: NullOrUndefined.NullOrUndefined (String) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (AttachmentStatus) } -> {"AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "AttachmentId" :: NullOrUndefined.NullOrUndefined (String) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (AttachmentStatus) } ) -> NetworkInterfaceAttachment
newNetworkInterfaceAttachment'  customize = (NetworkInterfaceAttachment <<< customize) { "AttachTime": (NullOrUndefined Nothing), "AttachmentId": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceOwnerId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }



-- | <p>Describes an attachment change.</p>
newtype NetworkInterfaceAttachmentChanges = NetworkInterfaceAttachmentChanges 
  { "AttachmentId" :: NullOrUndefined.NullOrUndefined (String)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeNetworkInterfaceAttachmentChanges :: Newtype NetworkInterfaceAttachmentChanges _
derive instance repGenericNetworkInterfaceAttachmentChanges :: Generic NetworkInterfaceAttachmentChanges _
instance showNetworkInterfaceAttachmentChanges :: Show NetworkInterfaceAttachmentChanges where
  show = genericShow
instance decodeNetworkInterfaceAttachmentChanges :: Decode NetworkInterfaceAttachmentChanges where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfaceAttachmentChanges :: Encode NetworkInterfaceAttachmentChanges where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkInterfaceAttachmentChanges from required parameters
newNetworkInterfaceAttachmentChanges :: NetworkInterfaceAttachmentChanges
newNetworkInterfaceAttachmentChanges  = NetworkInterfaceAttachmentChanges { "AttachmentId": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing) }

-- | Constructs NetworkInterfaceAttachmentChanges's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkInterfaceAttachmentChanges' :: ( { "AttachmentId" :: NullOrUndefined.NullOrUndefined (String) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AttachmentId" :: NullOrUndefined.NullOrUndefined (String) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> NetworkInterfaceAttachmentChanges
newNetworkInterfaceAttachmentChanges'  customize = (NetworkInterfaceAttachmentChanges <<< customize) { "AttachmentId": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing) }



newtype NetworkInterfaceAttribute = NetworkInterfaceAttribute String
derive instance newtypeNetworkInterfaceAttribute :: Newtype NetworkInterfaceAttribute _
derive instance repGenericNetworkInterfaceAttribute :: Generic NetworkInterfaceAttribute _
instance showNetworkInterfaceAttribute :: Show NetworkInterfaceAttribute where
  show = genericShow
instance decodeNetworkInterfaceAttribute :: Decode NetworkInterfaceAttribute where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfaceAttribute :: Encode NetworkInterfaceAttribute where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype NetworkInterfaceIdList = NetworkInterfaceIdList (Array String)
derive instance newtypeNetworkInterfaceIdList :: Newtype NetworkInterfaceIdList _
derive instance repGenericNetworkInterfaceIdList :: Generic NetworkInterfaceIdList _
instance showNetworkInterfaceIdList :: Show NetworkInterfaceIdList where
  show = genericShow
instance decodeNetworkInterfaceIdList :: Decode NetworkInterfaceIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfaceIdList :: Encode NetworkInterfaceIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IPv6 address associated with a network interface.</p>
newtype NetworkInterfaceIpv6Address = NetworkInterfaceIpv6Address 
  { "Ipv6Address" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeNetworkInterfaceIpv6Address :: Newtype NetworkInterfaceIpv6Address _
derive instance repGenericNetworkInterfaceIpv6Address :: Generic NetworkInterfaceIpv6Address _
instance showNetworkInterfaceIpv6Address :: Show NetworkInterfaceIpv6Address where
  show = genericShow
instance decodeNetworkInterfaceIpv6Address :: Decode NetworkInterfaceIpv6Address where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfaceIpv6Address :: Encode NetworkInterfaceIpv6Address where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkInterfaceIpv6Address from required parameters
newNetworkInterfaceIpv6Address :: NetworkInterfaceIpv6Address
newNetworkInterfaceIpv6Address  = NetworkInterfaceIpv6Address { "Ipv6Address": (NullOrUndefined Nothing) }

-- | Constructs NetworkInterfaceIpv6Address's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkInterfaceIpv6Address' :: ( { "Ipv6Address" :: NullOrUndefined.NullOrUndefined (String) } -> {"Ipv6Address" :: NullOrUndefined.NullOrUndefined (String) } ) -> NetworkInterfaceIpv6Address
newNetworkInterfaceIpv6Address'  customize = (NetworkInterfaceIpv6Address <<< customize) { "Ipv6Address": (NullOrUndefined Nothing) }



newtype NetworkInterfaceIpv6AddressesList = NetworkInterfaceIpv6AddressesList (Array NetworkInterfaceIpv6Address)
derive instance newtypeNetworkInterfaceIpv6AddressesList :: Newtype NetworkInterfaceIpv6AddressesList _
derive instance repGenericNetworkInterfaceIpv6AddressesList :: Generic NetworkInterfaceIpv6AddressesList _
instance showNetworkInterfaceIpv6AddressesList :: Show NetworkInterfaceIpv6AddressesList where
  show = genericShow
instance decodeNetworkInterfaceIpv6AddressesList :: Decode NetworkInterfaceIpv6AddressesList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfaceIpv6AddressesList :: Encode NetworkInterfaceIpv6AddressesList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype NetworkInterfaceList = NetworkInterfaceList (Array NetworkInterface)
derive instance newtypeNetworkInterfaceList :: Newtype NetworkInterfaceList _
derive instance repGenericNetworkInterfaceList :: Generic NetworkInterfaceList _
instance showNetworkInterfaceList :: Show NetworkInterfaceList where
  show = genericShow
instance decodeNetworkInterfaceList :: Decode NetworkInterfaceList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfaceList :: Encode NetworkInterfaceList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a permission for a network interface.</p>
newtype NetworkInterfacePermission = NetworkInterfacePermission 
  { "NetworkInterfacePermissionId" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "AwsAccountId" :: NullOrUndefined.NullOrUndefined (String)
  , "AwsService" :: NullOrUndefined.NullOrUndefined (String)
  , "Permission" :: NullOrUndefined.NullOrUndefined (InterfacePermissionType)
  , "PermissionState" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionState)
  }
derive instance newtypeNetworkInterfacePermission :: Newtype NetworkInterfacePermission _
derive instance repGenericNetworkInterfacePermission :: Generic NetworkInterfacePermission _
instance showNetworkInterfacePermission :: Show NetworkInterfacePermission where
  show = genericShow
instance decodeNetworkInterfacePermission :: Decode NetworkInterfacePermission where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfacePermission :: Encode NetworkInterfacePermission where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkInterfacePermission from required parameters
newNetworkInterfacePermission :: NetworkInterfacePermission
newNetworkInterfacePermission  = NetworkInterfacePermission { "AwsAccountId": (NullOrUndefined Nothing), "AwsService": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "NetworkInterfacePermissionId": (NullOrUndefined Nothing), "Permission": (NullOrUndefined Nothing), "PermissionState": (NullOrUndefined Nothing) }

-- | Constructs NetworkInterfacePermission's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkInterfacePermission' :: ( { "NetworkInterfacePermissionId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "AwsAccountId" :: NullOrUndefined.NullOrUndefined (String) , "AwsService" :: NullOrUndefined.NullOrUndefined (String) , "Permission" :: NullOrUndefined.NullOrUndefined (InterfacePermissionType) , "PermissionState" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionState) } -> {"NetworkInterfacePermissionId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "AwsAccountId" :: NullOrUndefined.NullOrUndefined (String) , "AwsService" :: NullOrUndefined.NullOrUndefined (String) , "Permission" :: NullOrUndefined.NullOrUndefined (InterfacePermissionType) , "PermissionState" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionState) } ) -> NetworkInterfacePermission
newNetworkInterfacePermission'  customize = (NetworkInterfacePermission <<< customize) { "AwsAccountId": (NullOrUndefined Nothing), "AwsService": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "NetworkInterfacePermissionId": (NullOrUndefined Nothing), "Permission": (NullOrUndefined Nothing), "PermissionState": (NullOrUndefined Nothing) }



newtype NetworkInterfacePermissionIdList = NetworkInterfacePermissionIdList (Array String)
derive instance newtypeNetworkInterfacePermissionIdList :: Newtype NetworkInterfacePermissionIdList _
derive instance repGenericNetworkInterfacePermissionIdList :: Generic NetworkInterfacePermissionIdList _
instance showNetworkInterfacePermissionIdList :: Show NetworkInterfacePermissionIdList where
  show = genericShow
instance decodeNetworkInterfacePermissionIdList :: Decode NetworkInterfacePermissionIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfacePermissionIdList :: Encode NetworkInterfacePermissionIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype NetworkInterfacePermissionList = NetworkInterfacePermissionList (Array NetworkInterfacePermission)
derive instance newtypeNetworkInterfacePermissionList :: Newtype NetworkInterfacePermissionList _
derive instance repGenericNetworkInterfacePermissionList :: Generic NetworkInterfacePermissionList _
instance showNetworkInterfacePermissionList :: Show NetworkInterfacePermissionList where
  show = genericShow
instance decodeNetworkInterfacePermissionList :: Decode NetworkInterfacePermissionList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfacePermissionList :: Encode NetworkInterfacePermissionList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the state of a network interface permission.</p>
newtype NetworkInterfacePermissionState = NetworkInterfacePermissionState 
  { "State" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionStateCode)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeNetworkInterfacePermissionState :: Newtype NetworkInterfacePermissionState _
derive instance repGenericNetworkInterfacePermissionState :: Generic NetworkInterfacePermissionState _
instance showNetworkInterfacePermissionState :: Show NetworkInterfacePermissionState where
  show = genericShow
instance decodeNetworkInterfacePermissionState :: Decode NetworkInterfacePermissionState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfacePermissionState :: Encode NetworkInterfacePermissionState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkInterfacePermissionState from required parameters
newNetworkInterfacePermissionState :: NetworkInterfacePermissionState
newNetworkInterfacePermissionState  = NetworkInterfacePermissionState { "State": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }

-- | Constructs NetworkInterfacePermissionState's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkInterfacePermissionState' :: ( { "State" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionStateCode) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } -> {"State" :: NullOrUndefined.NullOrUndefined (NetworkInterfacePermissionStateCode) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } ) -> NetworkInterfacePermissionState
newNetworkInterfacePermissionState'  customize = (NetworkInterfacePermissionState <<< customize) { "State": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }



newtype NetworkInterfacePermissionStateCode = NetworkInterfacePermissionStateCode String
derive instance newtypeNetworkInterfacePermissionStateCode :: Newtype NetworkInterfacePermissionStateCode _
derive instance repGenericNetworkInterfacePermissionStateCode :: Generic NetworkInterfacePermissionStateCode _
instance showNetworkInterfacePermissionStateCode :: Show NetworkInterfacePermissionStateCode where
  show = genericShow
instance decodeNetworkInterfacePermissionStateCode :: Decode NetworkInterfacePermissionStateCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfacePermissionStateCode :: Encode NetworkInterfacePermissionStateCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the private IPv4 address of a network interface.</p>
newtype NetworkInterfacePrivateIpAddress = NetworkInterfacePrivateIpAddress 
  { "Association" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAssociation)
  , "Primary" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeNetworkInterfacePrivateIpAddress :: Newtype NetworkInterfacePrivateIpAddress _
derive instance repGenericNetworkInterfacePrivateIpAddress :: Generic NetworkInterfacePrivateIpAddress _
instance showNetworkInterfacePrivateIpAddress :: Show NetworkInterfacePrivateIpAddress where
  show = genericShow
instance decodeNetworkInterfacePrivateIpAddress :: Decode NetworkInterfacePrivateIpAddress where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfacePrivateIpAddress :: Encode NetworkInterfacePrivateIpAddress where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NetworkInterfacePrivateIpAddress from required parameters
newNetworkInterfacePrivateIpAddress :: NetworkInterfacePrivateIpAddress
newNetworkInterfacePrivateIpAddress  = NetworkInterfacePrivateIpAddress { "Association": (NullOrUndefined Nothing), "Primary": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing) }

-- | Constructs NetworkInterfacePrivateIpAddress's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNetworkInterfacePrivateIpAddress' :: ( { "Association" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAssociation) , "Primary" :: NullOrUndefined.NullOrUndefined (Boolean) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) } -> {"Association" :: NullOrUndefined.NullOrUndefined (NetworkInterfaceAssociation) , "Primary" :: NullOrUndefined.NullOrUndefined (Boolean) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) } ) -> NetworkInterfacePrivateIpAddress
newNetworkInterfacePrivateIpAddress'  customize = (NetworkInterfacePrivateIpAddress <<< customize) { "Association": (NullOrUndefined Nothing), "Primary": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing) }



newtype NetworkInterfacePrivateIpAddressList = NetworkInterfacePrivateIpAddressList (Array NetworkInterfacePrivateIpAddress)
derive instance newtypeNetworkInterfacePrivateIpAddressList :: Newtype NetworkInterfacePrivateIpAddressList _
derive instance repGenericNetworkInterfacePrivateIpAddressList :: Generic NetworkInterfacePrivateIpAddressList _
instance showNetworkInterfacePrivateIpAddressList :: Show NetworkInterfacePrivateIpAddressList where
  show = genericShow
instance decodeNetworkInterfacePrivateIpAddressList :: Decode NetworkInterfacePrivateIpAddressList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfacePrivateIpAddressList :: Encode NetworkInterfacePrivateIpAddressList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype NetworkInterfaceStatus = NetworkInterfaceStatus String
derive instance newtypeNetworkInterfaceStatus :: Newtype NetworkInterfaceStatus _
derive instance repGenericNetworkInterfaceStatus :: Generic NetworkInterfaceStatus _
instance showNetworkInterfaceStatus :: Show NetworkInterfaceStatus where
  show = genericShow
instance decodeNetworkInterfaceStatus :: Decode NetworkInterfaceStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfaceStatus :: Encode NetworkInterfaceStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype NetworkInterfaceType = NetworkInterfaceType String
derive instance newtypeNetworkInterfaceType :: Newtype NetworkInterfaceType _
derive instance repGenericNetworkInterfaceType :: Generic NetworkInterfaceType _
instance showNetworkInterfaceType :: Show NetworkInterfaceType where
  show = genericShow
instance decodeNetworkInterfaceType :: Decode NetworkInterfaceType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNetworkInterfaceType :: Encode NetworkInterfaceType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype NewDhcpConfiguration = NewDhcpConfiguration 
  { "Key" :: NullOrUndefined.NullOrUndefined (String)
  , "Values" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  }
derive instance newtypeNewDhcpConfiguration :: Newtype NewDhcpConfiguration _
derive instance repGenericNewDhcpConfiguration :: Generic NewDhcpConfiguration _
instance showNewDhcpConfiguration :: Show NewDhcpConfiguration where
  show = genericShow
instance decodeNewDhcpConfiguration :: Decode NewDhcpConfiguration where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNewDhcpConfiguration :: Encode NewDhcpConfiguration where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs NewDhcpConfiguration from required parameters
newNewDhcpConfiguration :: NewDhcpConfiguration
newNewDhcpConfiguration  = NewDhcpConfiguration { "Key": (NullOrUndefined Nothing), "Values": (NullOrUndefined Nothing) }

-- | Constructs NewDhcpConfiguration's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newNewDhcpConfiguration' :: ( { "Key" :: NullOrUndefined.NullOrUndefined (String) , "Values" :: NullOrUndefined.NullOrUndefined (ValueStringList) } -> {"Key" :: NullOrUndefined.NullOrUndefined (String) , "Values" :: NullOrUndefined.NullOrUndefined (ValueStringList) } ) -> NewDhcpConfiguration
newNewDhcpConfiguration'  customize = (NewDhcpConfiguration <<< customize) { "Key": (NullOrUndefined Nothing), "Values": (NullOrUndefined Nothing) }



newtype NewDhcpConfigurationList = NewDhcpConfigurationList (Array NewDhcpConfiguration)
derive instance newtypeNewDhcpConfigurationList :: Newtype NewDhcpConfigurationList _
derive instance repGenericNewDhcpConfigurationList :: Generic NewDhcpConfigurationList _
instance showNewDhcpConfigurationList :: Show NewDhcpConfigurationList where
  show = genericShow
instance decodeNewDhcpConfigurationList :: Decode NewDhcpConfigurationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNewDhcpConfigurationList :: Encode NewDhcpConfigurationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype NextToken = NextToken String
derive instance newtypeNextToken :: Newtype NextToken _
derive instance repGenericNextToken :: Generic NextToken _
instance showNextToken :: Show NextToken where
  show = genericShow
instance decodeNextToken :: Decode NextToken where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeNextToken :: Encode NextToken where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype OccurrenceDayRequestSet = OccurrenceDayRequestSet (Array Int)
derive instance newtypeOccurrenceDayRequestSet :: Newtype OccurrenceDayRequestSet _
derive instance repGenericOccurrenceDayRequestSet :: Generic OccurrenceDayRequestSet _
instance showOccurrenceDayRequestSet :: Show OccurrenceDayRequestSet where
  show = genericShow
instance decodeOccurrenceDayRequestSet :: Decode OccurrenceDayRequestSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeOccurrenceDayRequestSet :: Encode OccurrenceDayRequestSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype OccurrenceDaySet = OccurrenceDaySet (Array Int)
derive instance newtypeOccurrenceDaySet :: Newtype OccurrenceDaySet _
derive instance repGenericOccurrenceDaySet :: Generic OccurrenceDaySet _
instance showOccurrenceDaySet :: Show OccurrenceDaySet where
  show = genericShow
instance decodeOccurrenceDaySet :: Decode OccurrenceDaySet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeOccurrenceDaySet :: Encode OccurrenceDaySet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype OfferingClassType = OfferingClassType String
derive instance newtypeOfferingClassType :: Newtype OfferingClassType _
derive instance repGenericOfferingClassType :: Generic OfferingClassType _
instance showOfferingClassType :: Show OfferingClassType where
  show = genericShow
instance decodeOfferingClassType :: Decode OfferingClassType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeOfferingClassType :: Encode OfferingClassType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype OfferingTypeValues = OfferingTypeValues String
derive instance newtypeOfferingTypeValues :: Newtype OfferingTypeValues _
derive instance repGenericOfferingTypeValues :: Generic OfferingTypeValues _
instance showOfferingTypeValues :: Show OfferingTypeValues where
  show = genericShow
instance decodeOfferingTypeValues :: Decode OfferingTypeValues where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeOfferingTypeValues :: Encode OfferingTypeValues where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype OperationType = OperationType String
derive instance newtypeOperationType :: Newtype OperationType _
derive instance repGenericOperationType :: Generic OperationType _
instance showOperationType :: Show OperationType where
  show = genericShow
instance decodeOperationType :: Decode OperationType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeOperationType :: Encode OperationType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype OwnerStringList = OwnerStringList (Array String)
derive instance newtypeOwnerStringList :: Newtype OwnerStringList _
derive instance repGenericOwnerStringList :: Generic OwnerStringList _
instance showOwnerStringList :: Show OwnerStringList where
  show = genericShow
instance decodeOwnerStringList :: Decode OwnerStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeOwnerStringList :: Encode OwnerStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PaymentOption = PaymentOption String
derive instance newtypePaymentOption :: Newtype PaymentOption _
derive instance repGenericPaymentOption :: Generic PaymentOption _
instance showPaymentOption :: Show PaymentOption where
  show = genericShow
instance decodePaymentOption :: Decode PaymentOption where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePaymentOption :: Encode PaymentOption where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the data that identifies an Amazon FPGA image (AFI) on the PCI bus.</p>
newtype PciId = PciId 
  { "DeviceId" :: NullOrUndefined.NullOrUndefined (String)
  , "VendorId" :: NullOrUndefined.NullOrUndefined (String)
  , "SubsystemId" :: NullOrUndefined.NullOrUndefined (String)
  , "SubsystemVendorId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypePciId :: Newtype PciId _
derive instance repGenericPciId :: Generic PciId _
instance showPciId :: Show PciId where
  show = genericShow
instance decodePciId :: Decode PciId where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePciId :: Encode PciId where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PciId from required parameters
newPciId :: PciId
newPciId  = PciId { "DeviceId": (NullOrUndefined Nothing), "SubsystemId": (NullOrUndefined Nothing), "SubsystemVendorId": (NullOrUndefined Nothing), "VendorId": (NullOrUndefined Nothing) }

-- | Constructs PciId's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPciId' :: ( { "DeviceId" :: NullOrUndefined.NullOrUndefined (String) , "VendorId" :: NullOrUndefined.NullOrUndefined (String) , "SubsystemId" :: NullOrUndefined.NullOrUndefined (String) , "SubsystemVendorId" :: NullOrUndefined.NullOrUndefined (String) } -> {"DeviceId" :: NullOrUndefined.NullOrUndefined (String) , "VendorId" :: NullOrUndefined.NullOrUndefined (String) , "SubsystemId" :: NullOrUndefined.NullOrUndefined (String) , "SubsystemVendorId" :: NullOrUndefined.NullOrUndefined (String) } ) -> PciId
newPciId'  customize = (PciId <<< customize) { "DeviceId": (NullOrUndefined Nothing), "SubsystemId": (NullOrUndefined Nothing), "SubsystemVendorId": (NullOrUndefined Nothing), "VendorId": (NullOrUndefined Nothing) }



-- | <p>Describes the VPC peering connection options.</p>
newtype PeeringConnectionOptions = PeeringConnectionOptions 
  { "AllowDnsResolutionFromRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "AllowEgressFromLocalClassicLinkToRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "AllowEgressFromLocalVpcToRemoteClassicLink" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypePeeringConnectionOptions :: Newtype PeeringConnectionOptions _
derive instance repGenericPeeringConnectionOptions :: Generic PeeringConnectionOptions _
instance showPeeringConnectionOptions :: Show PeeringConnectionOptions where
  show = genericShow
instance decodePeeringConnectionOptions :: Decode PeeringConnectionOptions where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePeeringConnectionOptions :: Encode PeeringConnectionOptions where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PeeringConnectionOptions from required parameters
newPeeringConnectionOptions :: PeeringConnectionOptions
newPeeringConnectionOptions  = PeeringConnectionOptions { "AllowDnsResolutionFromRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalClassicLinkToRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalVpcToRemoteClassicLink": (NullOrUndefined Nothing) }

-- | Constructs PeeringConnectionOptions's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPeeringConnectionOptions' :: ( { "AllowDnsResolutionFromRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalClassicLinkToRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalVpcToRemoteClassicLink" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AllowDnsResolutionFromRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalClassicLinkToRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalVpcToRemoteClassicLink" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> PeeringConnectionOptions
newPeeringConnectionOptions'  customize = (PeeringConnectionOptions <<< customize) { "AllowDnsResolutionFromRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalClassicLinkToRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalVpcToRemoteClassicLink": (NullOrUndefined Nothing) }



-- | <p>The VPC peering connection options.</p>
newtype PeeringConnectionOptionsRequest = PeeringConnectionOptionsRequest 
  { "AllowDnsResolutionFromRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "AllowEgressFromLocalClassicLinkToRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "AllowEgressFromLocalVpcToRemoteClassicLink" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypePeeringConnectionOptionsRequest :: Newtype PeeringConnectionOptionsRequest _
derive instance repGenericPeeringConnectionOptionsRequest :: Generic PeeringConnectionOptionsRequest _
instance showPeeringConnectionOptionsRequest :: Show PeeringConnectionOptionsRequest where
  show = genericShow
instance decodePeeringConnectionOptionsRequest :: Decode PeeringConnectionOptionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePeeringConnectionOptionsRequest :: Encode PeeringConnectionOptionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PeeringConnectionOptionsRequest from required parameters
newPeeringConnectionOptionsRequest :: PeeringConnectionOptionsRequest
newPeeringConnectionOptionsRequest  = PeeringConnectionOptionsRequest { "AllowDnsResolutionFromRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalClassicLinkToRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalVpcToRemoteClassicLink": (NullOrUndefined Nothing) }

-- | Constructs PeeringConnectionOptionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPeeringConnectionOptionsRequest' :: ( { "AllowDnsResolutionFromRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalClassicLinkToRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalVpcToRemoteClassicLink" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AllowDnsResolutionFromRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalClassicLinkToRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalVpcToRemoteClassicLink" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> PeeringConnectionOptionsRequest
newPeeringConnectionOptionsRequest'  customize = (PeeringConnectionOptionsRequest <<< customize) { "AllowDnsResolutionFromRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalClassicLinkToRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalVpcToRemoteClassicLink": (NullOrUndefined Nothing) }



newtype PermissionGroup = PermissionGroup String
derive instance newtypePermissionGroup :: Newtype PermissionGroup _
derive instance repGenericPermissionGroup :: Generic PermissionGroup _
instance showPermissionGroup :: Show PermissionGroup where
  show = genericShow
instance decodePermissionGroup :: Decode PermissionGroup where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePermissionGroup :: Encode PermissionGroup where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the placement of an instance.</p>
newtype Placement = Placement 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "Affinity" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "HostId" :: NullOrUndefined.NullOrUndefined (String)
  , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy)
  , "SpreadDomain" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypePlacement :: Newtype Placement _
derive instance repGenericPlacement :: Generic Placement _
instance showPlacement :: Show Placement where
  show = genericShow
instance decodePlacement :: Decode Placement where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePlacement :: Encode Placement where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Placement from required parameters
newPlacement :: Placement
newPlacement  = Placement { "Affinity": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "HostId": (NullOrUndefined Nothing), "SpreadDomain": (NullOrUndefined Nothing), "Tenancy": (NullOrUndefined Nothing) }

-- | Constructs Placement's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPlacement' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Affinity" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "HostId" :: NullOrUndefined.NullOrUndefined (String) , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "SpreadDomain" :: NullOrUndefined.NullOrUndefined (String) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Affinity" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "HostId" :: NullOrUndefined.NullOrUndefined (String) , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "SpreadDomain" :: NullOrUndefined.NullOrUndefined (String) } ) -> Placement
newPlacement'  customize = (Placement <<< customize) { "Affinity": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "HostId": (NullOrUndefined Nothing), "SpreadDomain": (NullOrUndefined Nothing), "Tenancy": (NullOrUndefined Nothing) }



-- | <p>Describes a placement group.</p>
newtype PlacementGroup = PlacementGroup 
  { "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (PlacementGroupState)
  , "Strategy" :: NullOrUndefined.NullOrUndefined (PlacementStrategy)
  }
derive instance newtypePlacementGroup :: Newtype PlacementGroup _
derive instance repGenericPlacementGroup :: Generic PlacementGroup _
instance showPlacementGroup :: Show PlacementGroup where
  show = genericShow
instance decodePlacementGroup :: Decode PlacementGroup where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePlacementGroup :: Encode PlacementGroup where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PlacementGroup from required parameters
newPlacementGroup :: PlacementGroup
newPlacementGroup  = PlacementGroup { "GroupName": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Strategy": (NullOrUndefined Nothing) }

-- | Constructs PlacementGroup's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPlacementGroup' :: ( { "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (PlacementGroupState) , "Strategy" :: NullOrUndefined.NullOrUndefined (PlacementStrategy) } -> {"GroupName" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (PlacementGroupState) , "Strategy" :: NullOrUndefined.NullOrUndefined (PlacementStrategy) } ) -> PlacementGroup
newPlacementGroup'  customize = (PlacementGroup <<< customize) { "GroupName": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Strategy": (NullOrUndefined Nothing) }



newtype PlacementGroupList = PlacementGroupList (Array PlacementGroup)
derive instance newtypePlacementGroupList :: Newtype PlacementGroupList _
derive instance repGenericPlacementGroupList :: Generic PlacementGroupList _
instance showPlacementGroupList :: Show PlacementGroupList where
  show = genericShow
instance decodePlacementGroupList :: Decode PlacementGroupList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePlacementGroupList :: Encode PlacementGroupList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PlacementGroupState = PlacementGroupState String
derive instance newtypePlacementGroupState :: Newtype PlacementGroupState _
derive instance repGenericPlacementGroupState :: Generic PlacementGroupState _
instance showPlacementGroupState :: Show PlacementGroupState where
  show = genericShow
instance decodePlacementGroupState :: Decode PlacementGroupState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePlacementGroupState :: Encode PlacementGroupState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PlacementGroupStringList = PlacementGroupStringList (Array String)
derive instance newtypePlacementGroupStringList :: Newtype PlacementGroupStringList _
derive instance repGenericPlacementGroupStringList :: Generic PlacementGroupStringList _
instance showPlacementGroupStringList :: Show PlacementGroupStringList where
  show = genericShow
instance decodePlacementGroupStringList :: Decode PlacementGroupStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePlacementGroupStringList :: Encode PlacementGroupStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PlacementStrategy = PlacementStrategy String
derive instance newtypePlacementStrategy :: Newtype PlacementStrategy _
derive instance repGenericPlacementStrategy :: Generic PlacementStrategy _
instance showPlacementStrategy :: Show PlacementStrategy where
  show = genericShow
instance decodePlacementStrategy :: Decode PlacementStrategy where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePlacementStrategy :: Encode PlacementStrategy where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PlatformValues = PlatformValues String
derive instance newtypePlatformValues :: Newtype PlatformValues _
derive instance repGenericPlatformValues :: Generic PlatformValues _
instance showPlatformValues :: Show PlatformValues where
  show = genericShow
instance decodePlatformValues :: Decode PlatformValues where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePlatformValues :: Encode PlatformValues where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a range of ports.</p>
newtype PortRange = PortRange 
  { "From" :: NullOrUndefined.NullOrUndefined (Int)
  , "To" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypePortRange :: Newtype PortRange _
derive instance repGenericPortRange :: Generic PortRange _
instance showPortRange :: Show PortRange where
  show = genericShow
instance decodePortRange :: Decode PortRange where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePortRange :: Encode PortRange where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PortRange from required parameters
newPortRange :: PortRange
newPortRange  = PortRange { "From": (NullOrUndefined Nothing), "To": (NullOrUndefined Nothing) }

-- | Constructs PortRange's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPortRange' :: ( { "From" :: NullOrUndefined.NullOrUndefined (Int) , "To" :: NullOrUndefined.NullOrUndefined (Int) } -> {"From" :: NullOrUndefined.NullOrUndefined (Int) , "To" :: NullOrUndefined.NullOrUndefined (Int) } ) -> PortRange
newPortRange'  customize = (PortRange <<< customize) { "From": (NullOrUndefined Nothing), "To": (NullOrUndefined Nothing) }



-- | <p>Describes prefixes for AWS services.</p>
newtype PrefixList = PrefixList 
  { "Cidrs" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "PrefixListId" :: NullOrUndefined.NullOrUndefined (String)
  , "PrefixListName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypePrefixList :: Newtype PrefixList _
derive instance repGenericPrefixList :: Generic PrefixList _
instance showPrefixList :: Show PrefixList where
  show = genericShow
instance decodePrefixList :: Decode PrefixList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrefixList :: Encode PrefixList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PrefixList from required parameters
newPrefixList :: PrefixList
newPrefixList  = PrefixList { "Cidrs": (NullOrUndefined Nothing), "PrefixListId": (NullOrUndefined Nothing), "PrefixListName": (NullOrUndefined Nothing) }

-- | Constructs PrefixList's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPrefixList' :: ( { "Cidrs" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "PrefixListId" :: NullOrUndefined.NullOrUndefined (String) , "PrefixListName" :: NullOrUndefined.NullOrUndefined (String) } -> {"Cidrs" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "PrefixListId" :: NullOrUndefined.NullOrUndefined (String) , "PrefixListName" :: NullOrUndefined.NullOrUndefined (String) } ) -> PrefixList
newPrefixList'  customize = (PrefixList <<< customize) { "Cidrs": (NullOrUndefined Nothing), "PrefixListId": (NullOrUndefined Nothing), "PrefixListName": (NullOrUndefined Nothing) }



-- | <p>[EC2-VPC only] The ID of the prefix.</p>
newtype PrefixListId = PrefixListId 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "PrefixListId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypePrefixListId :: Newtype PrefixListId _
derive instance repGenericPrefixListId :: Generic PrefixListId _
instance showPrefixListId :: Show PrefixListId where
  show = genericShow
instance decodePrefixListId :: Decode PrefixListId where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrefixListId :: Encode PrefixListId where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PrefixListId from required parameters
newPrefixListId :: PrefixListId
newPrefixListId  = PrefixListId { "Description": (NullOrUndefined Nothing), "PrefixListId": (NullOrUndefined Nothing) }

-- | Constructs PrefixListId's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPrefixListId' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "PrefixListId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "PrefixListId" :: NullOrUndefined.NullOrUndefined (String) } ) -> PrefixListId
newPrefixListId'  customize = (PrefixListId <<< customize) { "Description": (NullOrUndefined Nothing), "PrefixListId": (NullOrUndefined Nothing) }



newtype PrefixListIdList = PrefixListIdList (Array PrefixListId)
derive instance newtypePrefixListIdList :: Newtype PrefixListIdList _
derive instance repGenericPrefixListIdList :: Generic PrefixListIdList _
instance showPrefixListIdList :: Show PrefixListIdList where
  show = genericShow
instance decodePrefixListIdList :: Decode PrefixListIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrefixListIdList :: Encode PrefixListIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PrefixListIdSet = PrefixListIdSet (Array String)
derive instance newtypePrefixListIdSet :: Newtype PrefixListIdSet _
derive instance repGenericPrefixListIdSet :: Generic PrefixListIdSet _
instance showPrefixListIdSet :: Show PrefixListIdSet where
  show = genericShow
instance decodePrefixListIdSet :: Decode PrefixListIdSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrefixListIdSet :: Encode PrefixListIdSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PrefixListSet = PrefixListSet (Array PrefixList)
derive instance newtypePrefixListSet :: Newtype PrefixListSet _
derive instance repGenericPrefixListSet :: Generic PrefixListSet _
instance showPrefixListSet :: Show PrefixListSet where
  show = genericShow
instance decodePrefixListSet :: Decode PrefixListSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrefixListSet :: Encode PrefixListSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the price for a Reserved Instance.</p>
newtype PriceSchedule = PriceSchedule 
  { "Active" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  , "Price" :: NullOrUndefined.NullOrUndefined (Number)
  , "Term" :: NullOrUndefined.NullOrUndefined (Number)
  }
derive instance newtypePriceSchedule :: Newtype PriceSchedule _
derive instance repGenericPriceSchedule :: Generic PriceSchedule _
instance showPriceSchedule :: Show PriceSchedule where
  show = genericShow
instance decodePriceSchedule :: Decode PriceSchedule where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePriceSchedule :: Encode PriceSchedule where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PriceSchedule from required parameters
newPriceSchedule :: PriceSchedule
newPriceSchedule  = PriceSchedule { "Active": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "Price": (NullOrUndefined Nothing), "Term": (NullOrUndefined Nothing) }

-- | Constructs PriceSchedule's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPriceSchedule' :: ( { "Active" :: NullOrUndefined.NullOrUndefined (Boolean) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Price" :: NullOrUndefined.NullOrUndefined (Number) , "Term" :: NullOrUndefined.NullOrUndefined (Number) } -> {"Active" :: NullOrUndefined.NullOrUndefined (Boolean) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Price" :: NullOrUndefined.NullOrUndefined (Number) , "Term" :: NullOrUndefined.NullOrUndefined (Number) } ) -> PriceSchedule
newPriceSchedule'  customize = (PriceSchedule <<< customize) { "Active": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "Price": (NullOrUndefined Nothing), "Term": (NullOrUndefined Nothing) }



newtype PriceScheduleList = PriceScheduleList (Array PriceSchedule)
derive instance newtypePriceScheduleList :: Newtype PriceScheduleList _
derive instance repGenericPriceScheduleList :: Generic PriceScheduleList _
instance showPriceScheduleList :: Show PriceScheduleList where
  show = genericShow
instance decodePriceScheduleList :: Decode PriceScheduleList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePriceScheduleList :: Encode PriceScheduleList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the price for a Reserved Instance.</p>
newtype PriceScheduleSpecification = PriceScheduleSpecification 
  { "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  , "Price" :: NullOrUndefined.NullOrUndefined (Number)
  , "Term" :: NullOrUndefined.NullOrUndefined (Number)
  }
derive instance newtypePriceScheduleSpecification :: Newtype PriceScheduleSpecification _
derive instance repGenericPriceScheduleSpecification :: Generic PriceScheduleSpecification _
instance showPriceScheduleSpecification :: Show PriceScheduleSpecification where
  show = genericShow
instance decodePriceScheduleSpecification :: Decode PriceScheduleSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePriceScheduleSpecification :: Encode PriceScheduleSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PriceScheduleSpecification from required parameters
newPriceScheduleSpecification :: PriceScheduleSpecification
newPriceScheduleSpecification  = PriceScheduleSpecification { "CurrencyCode": (NullOrUndefined Nothing), "Price": (NullOrUndefined Nothing), "Term": (NullOrUndefined Nothing) }

-- | Constructs PriceScheduleSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPriceScheduleSpecification' :: ( { "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Price" :: NullOrUndefined.NullOrUndefined (Number) , "Term" :: NullOrUndefined.NullOrUndefined (Number) } -> {"CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Price" :: NullOrUndefined.NullOrUndefined (Number) , "Term" :: NullOrUndefined.NullOrUndefined (Number) } ) -> PriceScheduleSpecification
newPriceScheduleSpecification'  customize = (PriceScheduleSpecification <<< customize) { "CurrencyCode": (NullOrUndefined Nothing), "Price": (NullOrUndefined Nothing), "Term": (NullOrUndefined Nothing) }



newtype PriceScheduleSpecificationList = PriceScheduleSpecificationList (Array PriceScheduleSpecification)
derive instance newtypePriceScheduleSpecificationList :: Newtype PriceScheduleSpecificationList _
derive instance repGenericPriceScheduleSpecificationList :: Generic PriceScheduleSpecificationList _
instance showPriceScheduleSpecificationList :: Show PriceScheduleSpecificationList where
  show = genericShow
instance decodePriceScheduleSpecificationList :: Decode PriceScheduleSpecificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePriceScheduleSpecificationList :: Encode PriceScheduleSpecificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a Reserved Instance offering.</p>
newtype PricingDetail = PricingDetail 
  { "Count" :: NullOrUndefined.NullOrUndefined (Int)
  , "Price" :: NullOrUndefined.NullOrUndefined (Number)
  }
derive instance newtypePricingDetail :: Newtype PricingDetail _
derive instance repGenericPricingDetail :: Generic PricingDetail _
instance showPricingDetail :: Show PricingDetail where
  show = genericShow
instance decodePricingDetail :: Decode PricingDetail where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePricingDetail :: Encode PricingDetail where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PricingDetail from required parameters
newPricingDetail :: PricingDetail
newPricingDetail  = PricingDetail { "Count": (NullOrUndefined Nothing), "Price": (NullOrUndefined Nothing) }

-- | Constructs PricingDetail's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPricingDetail' :: ( { "Count" :: NullOrUndefined.NullOrUndefined (Int) , "Price" :: NullOrUndefined.NullOrUndefined (Number) } -> {"Count" :: NullOrUndefined.NullOrUndefined (Int) , "Price" :: NullOrUndefined.NullOrUndefined (Number) } ) -> PricingDetail
newPricingDetail'  customize = (PricingDetail <<< customize) { "Count": (NullOrUndefined Nothing), "Price": (NullOrUndefined Nothing) }



newtype PricingDetailsList = PricingDetailsList (Array PricingDetail)
derive instance newtypePricingDetailsList :: Newtype PricingDetailsList _
derive instance repGenericPricingDetailsList :: Generic PricingDetailsList _
instance showPricingDetailsList :: Show PricingDetailsList where
  show = genericShow
instance decodePricingDetailsList :: Decode PricingDetailsList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePricingDetailsList :: Encode PricingDetailsList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>PrincipalIdFormat description</p>
newtype PrincipalIdFormat = PrincipalIdFormat 
  { "Arn" :: NullOrUndefined.NullOrUndefined (String)
  , "Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList)
  }
derive instance newtypePrincipalIdFormat :: Newtype PrincipalIdFormat _
derive instance repGenericPrincipalIdFormat :: Generic PrincipalIdFormat _
instance showPrincipalIdFormat :: Show PrincipalIdFormat where
  show = genericShow
instance decodePrincipalIdFormat :: Decode PrincipalIdFormat where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrincipalIdFormat :: Encode PrincipalIdFormat where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PrincipalIdFormat from required parameters
newPrincipalIdFormat :: PrincipalIdFormat
newPrincipalIdFormat  = PrincipalIdFormat { "Arn": (NullOrUndefined Nothing), "Statuses": (NullOrUndefined Nothing) }

-- | Constructs PrincipalIdFormat's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPrincipalIdFormat' :: ( { "Arn" :: NullOrUndefined.NullOrUndefined (String) , "Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList) } -> {"Arn" :: NullOrUndefined.NullOrUndefined (String) , "Statuses" :: NullOrUndefined.NullOrUndefined (IdFormatList) } ) -> PrincipalIdFormat
newPrincipalIdFormat'  customize = (PrincipalIdFormat <<< customize) { "Arn": (NullOrUndefined Nothing), "Statuses": (NullOrUndefined Nothing) }



newtype PrincipalIdFormatList = PrincipalIdFormatList (Array PrincipalIdFormat)
derive instance newtypePrincipalIdFormatList :: Newtype PrincipalIdFormatList _
derive instance repGenericPrincipalIdFormatList :: Generic PrincipalIdFormatList _
instance showPrincipalIdFormatList :: Show PrincipalIdFormatList where
  show = genericShow
instance decodePrincipalIdFormatList :: Decode PrincipalIdFormatList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrincipalIdFormatList :: Encode PrincipalIdFormatList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PrincipalType = PrincipalType String
derive instance newtypePrincipalType :: Newtype PrincipalType _
derive instance repGenericPrincipalType :: Generic PrincipalType _
instance showPrincipalType :: Show PrincipalType where
  show = genericShow
instance decodePrincipalType :: Decode PrincipalType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrincipalType :: Encode PrincipalType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PrivateIpAddressConfigSet = PrivateIpAddressConfigSet (Array ScheduledInstancesPrivateIpAddressConfig)
derive instance newtypePrivateIpAddressConfigSet :: Newtype PrivateIpAddressConfigSet _
derive instance repGenericPrivateIpAddressConfigSet :: Generic PrivateIpAddressConfigSet _
instance showPrivateIpAddressConfigSet :: Show PrivateIpAddressConfigSet where
  show = genericShow
instance decodePrivateIpAddressConfigSet :: Decode PrivateIpAddressConfigSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrivateIpAddressConfigSet :: Encode PrivateIpAddressConfigSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a secondary private IPv4 address for a network interface.</p>
newtype PrivateIpAddressSpecification = PrivateIpAddressSpecification 
  { "Primary" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "PrivateIpAddress" :: (String)
  }
derive instance newtypePrivateIpAddressSpecification :: Newtype PrivateIpAddressSpecification _
derive instance repGenericPrivateIpAddressSpecification :: Generic PrivateIpAddressSpecification _
instance showPrivateIpAddressSpecification :: Show PrivateIpAddressSpecification where
  show = genericShow
instance decodePrivateIpAddressSpecification :: Decode PrivateIpAddressSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrivateIpAddressSpecification :: Encode PrivateIpAddressSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PrivateIpAddressSpecification from required parameters
newPrivateIpAddressSpecification :: String -> PrivateIpAddressSpecification
newPrivateIpAddressSpecification _PrivateIpAddress = PrivateIpAddressSpecification { "PrivateIpAddress": _PrivateIpAddress, "Primary": (NullOrUndefined Nothing) }

-- | Constructs PrivateIpAddressSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPrivateIpAddressSpecification' :: String -> ( { "Primary" :: NullOrUndefined.NullOrUndefined (Boolean) , "PrivateIpAddress" :: (String) } -> {"Primary" :: NullOrUndefined.NullOrUndefined (Boolean) , "PrivateIpAddress" :: (String) } ) -> PrivateIpAddressSpecification
newPrivateIpAddressSpecification' _PrivateIpAddress customize = (PrivateIpAddressSpecification <<< customize) { "PrivateIpAddress": _PrivateIpAddress, "Primary": (NullOrUndefined Nothing) }



newtype PrivateIpAddressSpecificationList = PrivateIpAddressSpecificationList (Array PrivateIpAddressSpecification)
derive instance newtypePrivateIpAddressSpecificationList :: Newtype PrivateIpAddressSpecificationList _
derive instance repGenericPrivateIpAddressSpecificationList :: Generic PrivateIpAddressSpecificationList _
instance showPrivateIpAddressSpecificationList :: Show PrivateIpAddressSpecificationList where
  show = genericShow
instance decodePrivateIpAddressSpecificationList :: Decode PrivateIpAddressSpecificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrivateIpAddressSpecificationList :: Encode PrivateIpAddressSpecificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PrivateIpAddressStringList = PrivateIpAddressStringList (Array String)
derive instance newtypePrivateIpAddressStringList :: Newtype PrivateIpAddressStringList _
derive instance repGenericPrivateIpAddressStringList :: Generic PrivateIpAddressStringList _
instance showPrivateIpAddressStringList :: Show PrivateIpAddressStringList where
  show = genericShow
instance decodePrivateIpAddressStringList :: Decode PrivateIpAddressStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePrivateIpAddressStringList :: Encode PrivateIpAddressStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a product code.</p>
newtype ProductCode = ProductCode 
  { "ProductCodeId" :: NullOrUndefined.NullOrUndefined (String)
  , "ProductCodeType" :: NullOrUndefined.NullOrUndefined (ProductCodeValues)
  }
derive instance newtypeProductCode :: Newtype ProductCode _
derive instance repGenericProductCode :: Generic ProductCode _
instance showProductCode :: Show ProductCode where
  show = genericShow
instance decodeProductCode :: Decode ProductCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeProductCode :: Encode ProductCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ProductCode from required parameters
newProductCode :: ProductCode
newProductCode  = ProductCode { "ProductCodeId": (NullOrUndefined Nothing), "ProductCodeType": (NullOrUndefined Nothing) }

-- | Constructs ProductCode's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newProductCode' :: ( { "ProductCodeId" :: NullOrUndefined.NullOrUndefined (String) , "ProductCodeType" :: NullOrUndefined.NullOrUndefined (ProductCodeValues) } -> {"ProductCodeId" :: NullOrUndefined.NullOrUndefined (String) , "ProductCodeType" :: NullOrUndefined.NullOrUndefined (ProductCodeValues) } ) -> ProductCode
newProductCode'  customize = (ProductCode <<< customize) { "ProductCodeId": (NullOrUndefined Nothing), "ProductCodeType": (NullOrUndefined Nothing) }



newtype ProductCodeList = ProductCodeList (Array ProductCode)
derive instance newtypeProductCodeList :: Newtype ProductCodeList _
derive instance repGenericProductCodeList :: Generic ProductCodeList _
instance showProductCodeList :: Show ProductCodeList where
  show = genericShow
instance decodeProductCodeList :: Decode ProductCodeList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeProductCodeList :: Encode ProductCodeList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ProductCodeStringList = ProductCodeStringList (Array String)
derive instance newtypeProductCodeStringList :: Newtype ProductCodeStringList _
derive instance repGenericProductCodeStringList :: Generic ProductCodeStringList _
instance showProductCodeStringList :: Show ProductCodeStringList where
  show = genericShow
instance decodeProductCodeStringList :: Decode ProductCodeStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeProductCodeStringList :: Encode ProductCodeStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ProductCodeValues = ProductCodeValues String
derive instance newtypeProductCodeValues :: Newtype ProductCodeValues _
derive instance repGenericProductCodeValues :: Generic ProductCodeValues _
instance showProductCodeValues :: Show ProductCodeValues where
  show = genericShow
instance decodeProductCodeValues :: Decode ProductCodeValues where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeProductCodeValues :: Encode ProductCodeValues where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ProductDescriptionList = ProductDescriptionList (Array String)
derive instance newtypeProductDescriptionList :: Newtype ProductDescriptionList _
derive instance repGenericProductDescriptionList :: Generic ProductDescriptionList _
instance showProductDescriptionList :: Show ProductDescriptionList where
  show = genericShow
instance decodeProductDescriptionList :: Decode ProductDescriptionList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeProductDescriptionList :: Encode ProductDescriptionList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a virtual private gateway propagating route.</p>
newtype PropagatingVgw = PropagatingVgw 
  { "GatewayId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypePropagatingVgw :: Newtype PropagatingVgw _
derive instance repGenericPropagatingVgw :: Generic PropagatingVgw _
instance showPropagatingVgw :: Show PropagatingVgw where
  show = genericShow
instance decodePropagatingVgw :: Decode PropagatingVgw where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePropagatingVgw :: Encode PropagatingVgw where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PropagatingVgw from required parameters
newPropagatingVgw :: PropagatingVgw
newPropagatingVgw  = PropagatingVgw { "GatewayId": (NullOrUndefined Nothing) }

-- | Constructs PropagatingVgw's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPropagatingVgw' :: ( { "GatewayId" :: NullOrUndefined.NullOrUndefined (String) } -> {"GatewayId" :: NullOrUndefined.NullOrUndefined (String) } ) -> PropagatingVgw
newPropagatingVgw'  customize = (PropagatingVgw <<< customize) { "GatewayId": (NullOrUndefined Nothing) }



newtype PropagatingVgwList = PropagatingVgwList (Array PropagatingVgw)
derive instance newtypePropagatingVgwList :: Newtype PropagatingVgwList _
derive instance repGenericPropagatingVgwList :: Generic PropagatingVgwList _
instance showPropagatingVgwList :: Show PropagatingVgwList where
  show = genericShow
instance decodePropagatingVgwList :: Decode PropagatingVgwList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePropagatingVgwList :: Encode PropagatingVgwList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
newtype ProvisionedBandwidth = ProvisionedBandwidth 
  { "ProvisionTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Provisioned" :: NullOrUndefined.NullOrUndefined (String)
  , "RequestTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Requested" :: NullOrUndefined.NullOrUndefined (String)
  , "Status" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeProvisionedBandwidth :: Newtype ProvisionedBandwidth _
derive instance repGenericProvisionedBandwidth :: Generic ProvisionedBandwidth _
instance showProvisionedBandwidth :: Show ProvisionedBandwidth where
  show = genericShow
instance decodeProvisionedBandwidth :: Decode ProvisionedBandwidth where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeProvisionedBandwidth :: Encode ProvisionedBandwidth where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ProvisionedBandwidth from required parameters
newProvisionedBandwidth :: ProvisionedBandwidth
newProvisionedBandwidth  = ProvisionedBandwidth { "ProvisionTime": (NullOrUndefined Nothing), "Provisioned": (NullOrUndefined Nothing), "RequestTime": (NullOrUndefined Nothing), "Requested": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }

-- | Constructs ProvisionedBandwidth's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newProvisionedBandwidth' :: ( { "ProvisionTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Provisioned" :: NullOrUndefined.NullOrUndefined (String) , "RequestTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Requested" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (String) } -> {"ProvisionTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Provisioned" :: NullOrUndefined.NullOrUndefined (String) , "RequestTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Requested" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (String) } ) -> ProvisionedBandwidth
newProvisionedBandwidth'  customize = (ProvisionedBandwidth <<< customize) { "ProvisionTime": (NullOrUndefined Nothing), "Provisioned": (NullOrUndefined Nothing), "RequestTime": (NullOrUndefined Nothing), "Requested": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }



newtype PublicIpStringList = PublicIpStringList (Array String)
derive instance newtypePublicIpStringList :: Newtype PublicIpStringList _
derive instance repGenericPublicIpStringList :: Generic PublicIpStringList _
instance showPublicIpStringList :: Show PublicIpStringList where
  show = genericShow
instance decodePublicIpStringList :: Decode PublicIpStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePublicIpStringList :: Encode PublicIpStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the result of the purchase.</p>
newtype Purchase = Purchase 
  { "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  , "Duration" :: NullOrUndefined.NullOrUndefined (Int)
  , "HostIdSet" :: NullOrUndefined.NullOrUndefined (ResponseHostIdSet)
  , "HostReservationId" :: NullOrUndefined.NullOrUndefined (String)
  , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceFamily" :: NullOrUndefined.NullOrUndefined (String)
  , "PaymentOption" :: NullOrUndefined.NullOrUndefined (PaymentOption)
  , "UpfrontPrice" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypePurchase :: Newtype Purchase _
derive instance repGenericPurchase :: Generic Purchase _
instance showPurchase :: Show Purchase where
  show = genericShow
instance decodePurchase :: Decode Purchase where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchase :: Encode Purchase where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Purchase from required parameters
newPurchase :: Purchase
newPurchase  = Purchase { "CurrencyCode": (NullOrUndefined Nothing), "Duration": (NullOrUndefined Nothing), "HostIdSet": (NullOrUndefined Nothing), "HostReservationId": (NullOrUndefined Nothing), "HourlyPrice": (NullOrUndefined Nothing), "InstanceFamily": (NullOrUndefined Nothing), "PaymentOption": (NullOrUndefined Nothing), "UpfrontPrice": (NullOrUndefined Nothing) }

-- | Constructs Purchase's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPurchase' :: ( { "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Duration" :: NullOrUndefined.NullOrUndefined (Int) , "HostIdSet" :: NullOrUndefined.NullOrUndefined (ResponseHostIdSet) , "HostReservationId" :: NullOrUndefined.NullOrUndefined (String) , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "InstanceFamily" :: NullOrUndefined.NullOrUndefined (String) , "PaymentOption" :: NullOrUndefined.NullOrUndefined (PaymentOption) , "UpfrontPrice" :: NullOrUndefined.NullOrUndefined (String) } -> {"CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Duration" :: NullOrUndefined.NullOrUndefined (Int) , "HostIdSet" :: NullOrUndefined.NullOrUndefined (ResponseHostIdSet) , "HostReservationId" :: NullOrUndefined.NullOrUndefined (String) , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "InstanceFamily" :: NullOrUndefined.NullOrUndefined (String) , "PaymentOption" :: NullOrUndefined.NullOrUndefined (PaymentOption) , "UpfrontPrice" :: NullOrUndefined.NullOrUndefined (String) } ) -> Purchase
newPurchase'  customize = (Purchase <<< customize) { "CurrencyCode": (NullOrUndefined Nothing), "Duration": (NullOrUndefined Nothing), "HostIdSet": (NullOrUndefined Nothing), "HostReservationId": (NullOrUndefined Nothing), "HourlyPrice": (NullOrUndefined Nothing), "InstanceFamily": (NullOrUndefined Nothing), "PaymentOption": (NullOrUndefined Nothing), "UpfrontPrice": (NullOrUndefined Nothing) }



newtype PurchaseHostReservationRequest = PurchaseHostReservationRequest 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  , "HostIdSet" :: (RequestHostIdSet)
  , "LimitPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "OfferingId" :: (String)
  }
derive instance newtypePurchaseHostReservationRequest :: Newtype PurchaseHostReservationRequest _
derive instance repGenericPurchaseHostReservationRequest :: Generic PurchaseHostReservationRequest _
instance showPurchaseHostReservationRequest :: Show PurchaseHostReservationRequest where
  show = genericShow
instance decodePurchaseHostReservationRequest :: Decode PurchaseHostReservationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchaseHostReservationRequest :: Encode PurchaseHostReservationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PurchaseHostReservationRequest from required parameters
newPurchaseHostReservationRequest :: RequestHostIdSet -> String -> PurchaseHostReservationRequest
newPurchaseHostReservationRequest _HostIdSet _OfferingId = PurchaseHostReservationRequest { "HostIdSet": _HostIdSet, "OfferingId": _OfferingId, "ClientToken": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "LimitPrice": (NullOrUndefined Nothing) }

-- | Constructs PurchaseHostReservationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPurchaseHostReservationRequest' :: RequestHostIdSet -> String -> ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "HostIdSet" :: (RequestHostIdSet) , "LimitPrice" :: NullOrUndefined.NullOrUndefined (String) , "OfferingId" :: (String) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "HostIdSet" :: (RequestHostIdSet) , "LimitPrice" :: NullOrUndefined.NullOrUndefined (String) , "OfferingId" :: (String) } ) -> PurchaseHostReservationRequest
newPurchaseHostReservationRequest' _HostIdSet _OfferingId customize = (PurchaseHostReservationRequest <<< customize) { "HostIdSet": _HostIdSet, "OfferingId": _OfferingId, "ClientToken": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "LimitPrice": (NullOrUndefined Nothing) }



newtype PurchaseHostReservationResult = PurchaseHostReservationResult 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  , "Purchase" :: NullOrUndefined.NullOrUndefined (PurchaseSet)
  , "TotalHourlyPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "TotalUpfrontPrice" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypePurchaseHostReservationResult :: Newtype PurchaseHostReservationResult _
derive instance repGenericPurchaseHostReservationResult :: Generic PurchaseHostReservationResult _
instance showPurchaseHostReservationResult :: Show PurchaseHostReservationResult where
  show = genericShow
instance decodePurchaseHostReservationResult :: Decode PurchaseHostReservationResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchaseHostReservationResult :: Encode PurchaseHostReservationResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PurchaseHostReservationResult from required parameters
newPurchaseHostReservationResult :: PurchaseHostReservationResult
newPurchaseHostReservationResult  = PurchaseHostReservationResult { "ClientToken": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "Purchase": (NullOrUndefined Nothing), "TotalHourlyPrice": (NullOrUndefined Nothing), "TotalUpfrontPrice": (NullOrUndefined Nothing) }

-- | Constructs PurchaseHostReservationResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPurchaseHostReservationResult' :: ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Purchase" :: NullOrUndefined.NullOrUndefined (PurchaseSet) , "TotalHourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "TotalUpfrontPrice" :: NullOrUndefined.NullOrUndefined (String) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "Purchase" :: NullOrUndefined.NullOrUndefined (PurchaseSet) , "TotalHourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "TotalUpfrontPrice" :: NullOrUndefined.NullOrUndefined (String) } ) -> PurchaseHostReservationResult
newPurchaseHostReservationResult'  customize = (PurchaseHostReservationResult <<< customize) { "ClientToken": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "Purchase": (NullOrUndefined Nothing), "TotalHourlyPrice": (NullOrUndefined Nothing), "TotalUpfrontPrice": (NullOrUndefined Nothing) }



-- | <p>Describes a request to purchase Scheduled Instances.</p>
newtype PurchaseRequest = PurchaseRequest 
  { "InstanceCount" :: (Int)
  , "PurchaseToken" :: (String)
  }
derive instance newtypePurchaseRequest :: Newtype PurchaseRequest _
derive instance repGenericPurchaseRequest :: Generic PurchaseRequest _
instance showPurchaseRequest :: Show PurchaseRequest where
  show = genericShow
instance decodePurchaseRequest :: Decode PurchaseRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchaseRequest :: Encode PurchaseRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PurchaseRequest from required parameters
newPurchaseRequest :: Int -> String -> PurchaseRequest
newPurchaseRequest _InstanceCount _PurchaseToken = PurchaseRequest { "InstanceCount": _InstanceCount, "PurchaseToken": _PurchaseToken }

-- | Constructs PurchaseRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPurchaseRequest' :: Int -> String -> ( { "InstanceCount" :: (Int) , "PurchaseToken" :: (String) } -> {"InstanceCount" :: (Int) , "PurchaseToken" :: (String) } ) -> PurchaseRequest
newPurchaseRequest' _InstanceCount _PurchaseToken customize = (PurchaseRequest <<< customize) { "InstanceCount": _InstanceCount, "PurchaseToken": _PurchaseToken }



newtype PurchaseRequestSet = PurchaseRequestSet (Array PurchaseRequest)
derive instance newtypePurchaseRequestSet :: Newtype PurchaseRequestSet _
derive instance repGenericPurchaseRequestSet :: Generic PurchaseRequestSet _
instance showPurchaseRequestSet :: Show PurchaseRequestSet where
  show = genericShow
instance decodePurchaseRequestSet :: Decode PurchaseRequestSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchaseRequestSet :: Encode PurchaseRequestSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for PurchaseReservedInstancesOffering.</p>
newtype PurchaseReservedInstancesOfferingRequest = PurchaseReservedInstancesOfferingRequest 
  { "InstanceCount" :: (Int)
  , "ReservedInstancesOfferingId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "LimitPrice" :: NullOrUndefined.NullOrUndefined (ReservedInstanceLimitPrice)
  }
derive instance newtypePurchaseReservedInstancesOfferingRequest :: Newtype PurchaseReservedInstancesOfferingRequest _
derive instance repGenericPurchaseReservedInstancesOfferingRequest :: Generic PurchaseReservedInstancesOfferingRequest _
instance showPurchaseReservedInstancesOfferingRequest :: Show PurchaseReservedInstancesOfferingRequest where
  show = genericShow
instance decodePurchaseReservedInstancesOfferingRequest :: Decode PurchaseReservedInstancesOfferingRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchaseReservedInstancesOfferingRequest :: Encode PurchaseReservedInstancesOfferingRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PurchaseReservedInstancesOfferingRequest from required parameters
newPurchaseReservedInstancesOfferingRequest :: Int -> String -> PurchaseReservedInstancesOfferingRequest
newPurchaseReservedInstancesOfferingRequest _InstanceCount _ReservedInstancesOfferingId = PurchaseReservedInstancesOfferingRequest { "InstanceCount": _InstanceCount, "ReservedInstancesOfferingId": _ReservedInstancesOfferingId, "DryRun": (NullOrUndefined Nothing), "LimitPrice": (NullOrUndefined Nothing) }

-- | Constructs PurchaseReservedInstancesOfferingRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPurchaseReservedInstancesOfferingRequest' :: Int -> String -> ( { "InstanceCount" :: (Int) , "ReservedInstancesOfferingId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LimitPrice" :: NullOrUndefined.NullOrUndefined (ReservedInstanceLimitPrice) } -> {"InstanceCount" :: (Int) , "ReservedInstancesOfferingId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "LimitPrice" :: NullOrUndefined.NullOrUndefined (ReservedInstanceLimitPrice) } ) -> PurchaseReservedInstancesOfferingRequest
newPurchaseReservedInstancesOfferingRequest' _InstanceCount _ReservedInstancesOfferingId customize = (PurchaseReservedInstancesOfferingRequest <<< customize) { "InstanceCount": _InstanceCount, "ReservedInstancesOfferingId": _ReservedInstancesOfferingId, "DryRun": (NullOrUndefined Nothing), "LimitPrice": (NullOrUndefined Nothing) }



-- | <p>Contains the output of PurchaseReservedInstancesOffering.</p>
newtype PurchaseReservedInstancesOfferingResult = PurchaseReservedInstancesOfferingResult 
  { "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypePurchaseReservedInstancesOfferingResult :: Newtype PurchaseReservedInstancesOfferingResult _
derive instance repGenericPurchaseReservedInstancesOfferingResult :: Generic PurchaseReservedInstancesOfferingResult _
instance showPurchaseReservedInstancesOfferingResult :: Show PurchaseReservedInstancesOfferingResult where
  show = genericShow
instance decodePurchaseReservedInstancesOfferingResult :: Decode PurchaseReservedInstancesOfferingResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchaseReservedInstancesOfferingResult :: Encode PurchaseReservedInstancesOfferingResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PurchaseReservedInstancesOfferingResult from required parameters
newPurchaseReservedInstancesOfferingResult :: PurchaseReservedInstancesOfferingResult
newPurchaseReservedInstancesOfferingResult  = PurchaseReservedInstancesOfferingResult { "ReservedInstancesId": (NullOrUndefined Nothing) }

-- | Constructs PurchaseReservedInstancesOfferingResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPurchaseReservedInstancesOfferingResult' :: ( { "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) } ) -> PurchaseReservedInstancesOfferingResult
newPurchaseReservedInstancesOfferingResult'  customize = (PurchaseReservedInstancesOfferingResult <<< customize) { "ReservedInstancesId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for PurchaseScheduledInstances.</p>
newtype PurchaseScheduledInstancesRequest = PurchaseScheduledInstancesRequest 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "PurchaseRequests" :: (PurchaseRequestSet)
  }
derive instance newtypePurchaseScheduledInstancesRequest :: Newtype PurchaseScheduledInstancesRequest _
derive instance repGenericPurchaseScheduledInstancesRequest :: Generic PurchaseScheduledInstancesRequest _
instance showPurchaseScheduledInstancesRequest :: Show PurchaseScheduledInstancesRequest where
  show = genericShow
instance decodePurchaseScheduledInstancesRequest :: Decode PurchaseScheduledInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchaseScheduledInstancesRequest :: Encode PurchaseScheduledInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PurchaseScheduledInstancesRequest from required parameters
newPurchaseScheduledInstancesRequest :: PurchaseRequestSet -> PurchaseScheduledInstancesRequest
newPurchaseScheduledInstancesRequest _PurchaseRequests = PurchaseScheduledInstancesRequest { "PurchaseRequests": _PurchaseRequests, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs PurchaseScheduledInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPurchaseScheduledInstancesRequest' :: PurchaseRequestSet -> ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "PurchaseRequests" :: (PurchaseRequestSet) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "PurchaseRequests" :: (PurchaseRequestSet) } ) -> PurchaseScheduledInstancesRequest
newPurchaseScheduledInstancesRequest' _PurchaseRequests customize = (PurchaseScheduledInstancesRequest <<< customize) { "PurchaseRequests": _PurchaseRequests, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of PurchaseScheduledInstances.</p>
newtype PurchaseScheduledInstancesResult = PurchaseScheduledInstancesResult 
  { "ScheduledInstanceSet" :: NullOrUndefined.NullOrUndefined (PurchasedScheduledInstanceSet)
  }
derive instance newtypePurchaseScheduledInstancesResult :: Newtype PurchaseScheduledInstancesResult _
derive instance repGenericPurchaseScheduledInstancesResult :: Generic PurchaseScheduledInstancesResult _
instance showPurchaseScheduledInstancesResult :: Show PurchaseScheduledInstancesResult where
  show = genericShow
instance decodePurchaseScheduledInstancesResult :: Decode PurchaseScheduledInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchaseScheduledInstancesResult :: Encode PurchaseScheduledInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs PurchaseScheduledInstancesResult from required parameters
newPurchaseScheduledInstancesResult :: PurchaseScheduledInstancesResult
newPurchaseScheduledInstancesResult  = PurchaseScheduledInstancesResult { "ScheduledInstanceSet": (NullOrUndefined Nothing) }

-- | Constructs PurchaseScheduledInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newPurchaseScheduledInstancesResult' :: ( { "ScheduledInstanceSet" :: NullOrUndefined.NullOrUndefined (PurchasedScheduledInstanceSet) } -> {"ScheduledInstanceSet" :: NullOrUndefined.NullOrUndefined (PurchasedScheduledInstanceSet) } ) -> PurchaseScheduledInstancesResult
newPurchaseScheduledInstancesResult'  customize = (PurchaseScheduledInstancesResult <<< customize) { "ScheduledInstanceSet": (NullOrUndefined Nothing) }



newtype PurchaseSet = PurchaseSet (Array Purchase)
derive instance newtypePurchaseSet :: Newtype PurchaseSet _
derive instance repGenericPurchaseSet :: Generic PurchaseSet _
instance showPurchaseSet :: Show PurchaseSet where
  show = genericShow
instance decodePurchaseSet :: Decode PurchaseSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchaseSet :: Encode PurchaseSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype PurchasedScheduledInstanceSet = PurchasedScheduledInstanceSet (Array ScheduledInstance)
derive instance newtypePurchasedScheduledInstanceSet :: Newtype PurchasedScheduledInstanceSet _
derive instance repGenericPurchasedScheduledInstanceSet :: Generic PurchasedScheduledInstanceSet _
instance showPurchasedScheduledInstanceSet :: Show PurchasedScheduledInstanceSet where
  show = genericShow
instance decodePurchasedScheduledInstanceSet :: Decode PurchasedScheduledInstanceSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodePurchasedScheduledInstanceSet :: Encode PurchasedScheduledInstanceSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype RIProductDescription = RIProductDescription String
derive instance newtypeRIProductDescription :: Newtype RIProductDescription _
derive instance repGenericRIProductDescription :: Generic RIProductDescription _
instance showRIProductDescription :: Show RIProductDescription where
  show = genericShow
instance decodeRIProductDescription :: Decode RIProductDescription where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRIProductDescription :: Encode RIProductDescription where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ReasonCodesList = ReasonCodesList (Array ReportInstanceReasonCodes)
derive instance newtypeReasonCodesList :: Newtype ReasonCodesList _
derive instance repGenericReasonCodesList :: Generic ReasonCodesList _
instance showReasonCodesList :: Show ReasonCodesList where
  show = genericShow
instance decodeReasonCodesList :: Decode ReasonCodesList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReasonCodesList :: Encode ReasonCodesList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for RebootInstances.</p>
newtype RebootInstancesRequest = RebootInstancesRequest 
  { "InstanceIds" :: (InstanceIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeRebootInstancesRequest :: Newtype RebootInstancesRequest _
derive instance repGenericRebootInstancesRequest :: Generic RebootInstancesRequest _
instance showRebootInstancesRequest :: Show RebootInstancesRequest where
  show = genericShow
instance decodeRebootInstancesRequest :: Decode RebootInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRebootInstancesRequest :: Encode RebootInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RebootInstancesRequest from required parameters
newRebootInstancesRequest :: InstanceIdStringList -> RebootInstancesRequest
newRebootInstancesRequest _InstanceIds = RebootInstancesRequest { "InstanceIds": _InstanceIds, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs RebootInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRebootInstancesRequest' :: InstanceIdStringList -> ( { "InstanceIds" :: (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"InstanceIds" :: (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> RebootInstancesRequest
newRebootInstancesRequest' _InstanceIds customize = (RebootInstancesRequest <<< customize) { "InstanceIds": _InstanceIds, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Describes a recurring charge.</p>
newtype RecurringCharge = RecurringCharge 
  { "Amount" :: NullOrUndefined.NullOrUndefined (Number)
  , "Frequency" :: NullOrUndefined.NullOrUndefined (RecurringChargeFrequency)
  }
derive instance newtypeRecurringCharge :: Newtype RecurringCharge _
derive instance repGenericRecurringCharge :: Generic RecurringCharge _
instance showRecurringCharge :: Show RecurringCharge where
  show = genericShow
instance decodeRecurringCharge :: Decode RecurringCharge where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRecurringCharge :: Encode RecurringCharge where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RecurringCharge from required parameters
newRecurringCharge :: RecurringCharge
newRecurringCharge  = RecurringCharge { "Amount": (NullOrUndefined Nothing), "Frequency": (NullOrUndefined Nothing) }

-- | Constructs RecurringCharge's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRecurringCharge' :: ( { "Amount" :: NullOrUndefined.NullOrUndefined (Number) , "Frequency" :: NullOrUndefined.NullOrUndefined (RecurringChargeFrequency) } -> {"Amount" :: NullOrUndefined.NullOrUndefined (Number) , "Frequency" :: NullOrUndefined.NullOrUndefined (RecurringChargeFrequency) } ) -> RecurringCharge
newRecurringCharge'  customize = (RecurringCharge <<< customize) { "Amount": (NullOrUndefined Nothing), "Frequency": (NullOrUndefined Nothing) }



newtype RecurringChargeFrequency = RecurringChargeFrequency String
derive instance newtypeRecurringChargeFrequency :: Newtype RecurringChargeFrequency _
derive instance repGenericRecurringChargeFrequency :: Generic RecurringChargeFrequency _
instance showRecurringChargeFrequency :: Show RecurringChargeFrequency where
  show = genericShow
instance decodeRecurringChargeFrequency :: Decode RecurringChargeFrequency where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRecurringChargeFrequency :: Encode RecurringChargeFrequency where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype RecurringChargesList = RecurringChargesList (Array RecurringCharge)
derive instance newtypeRecurringChargesList :: Newtype RecurringChargesList _
derive instance repGenericRecurringChargesList :: Generic RecurringChargesList _
instance showRecurringChargesList :: Show RecurringChargesList where
  show = genericShow
instance decodeRecurringChargesList :: Decode RecurringChargesList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRecurringChargesList :: Encode RecurringChargesList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a region.</p>
newtype Region = Region 
  { "Endpoint" :: NullOrUndefined.NullOrUndefined (String)
  , "RegionName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeRegion :: Newtype Region _
derive instance repGenericRegion :: Generic Region _
instance showRegion :: Show Region where
  show = genericShow
instance decodeRegion :: Decode Region where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRegion :: Encode Region where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Region from required parameters
newRegion :: Region
newRegion  = Region { "Endpoint": (NullOrUndefined Nothing), "RegionName": (NullOrUndefined Nothing) }

-- | Constructs Region's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRegion' :: ( { "Endpoint" :: NullOrUndefined.NullOrUndefined (String) , "RegionName" :: NullOrUndefined.NullOrUndefined (String) } -> {"Endpoint" :: NullOrUndefined.NullOrUndefined (String) , "RegionName" :: NullOrUndefined.NullOrUndefined (String) } ) -> Region
newRegion'  customize = (Region <<< customize) { "Endpoint": (NullOrUndefined Nothing), "RegionName": (NullOrUndefined Nothing) }



newtype RegionList = RegionList (Array Region)
derive instance newtypeRegionList :: Newtype RegionList _
derive instance repGenericRegionList :: Generic RegionList _
instance showRegionList :: Show RegionList where
  show = genericShow
instance decodeRegionList :: Decode RegionList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRegionList :: Encode RegionList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype RegionNameStringList = RegionNameStringList (Array String)
derive instance newtypeRegionNameStringList :: Newtype RegionNameStringList _
derive instance repGenericRegionNameStringList :: Generic RegionNameStringList _
instance showRegionNameStringList :: Show RegionNameStringList where
  show = genericShow
instance decodeRegionNameStringList :: Decode RegionNameStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRegionNameStringList :: Encode RegionNameStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for RegisterImage.</p>
newtype RegisterImageRequest = RegisterImageRequest 
  { "ImageLocation" :: NullOrUndefined.NullOrUndefined (String)
  , "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues)
  , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingRequestList)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EnaSupport" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "KernelId" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: (String)
  , "BillingProducts" :: NullOrUndefined.NullOrUndefined (BillingProductList)
  , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String)
  , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (String)
  , "VirtualizationType" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeRegisterImageRequest :: Newtype RegisterImageRequest _
derive instance repGenericRegisterImageRequest :: Generic RegisterImageRequest _
instance showRegisterImageRequest :: Show RegisterImageRequest where
  show = genericShow
instance decodeRegisterImageRequest :: Decode RegisterImageRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRegisterImageRequest :: Encode RegisterImageRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RegisterImageRequest from required parameters
newRegisterImageRequest :: String -> RegisterImageRequest
newRegisterImageRequest _Name = RegisterImageRequest { "Name": _Name, "Architecture": (NullOrUndefined Nothing), "BillingProducts": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EnaSupport": (NullOrUndefined Nothing), "ImageLocation": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "RootDeviceName": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing), "VirtualizationType": (NullOrUndefined Nothing) }

-- | Constructs RegisterImageRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRegisterImageRequest' :: String -> ( { "ImageLocation" :: NullOrUndefined.NullOrUndefined (String) , "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingRequestList) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EnaSupport" :: NullOrUndefined.NullOrUndefined (Boolean) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: (String) , "BillingProducts" :: NullOrUndefined.NullOrUndefined (BillingProductList) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (String) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (String) , "VirtualizationType" :: NullOrUndefined.NullOrUndefined (String) } -> {"ImageLocation" :: NullOrUndefined.NullOrUndefined (String) , "Architecture" :: NullOrUndefined.NullOrUndefined (ArchitectureValues) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingRequestList) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EnaSupport" :: NullOrUndefined.NullOrUndefined (Boolean) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: (String) , "BillingProducts" :: NullOrUndefined.NullOrUndefined (BillingProductList) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "RootDeviceName" :: NullOrUndefined.NullOrUndefined (String) , "SriovNetSupport" :: NullOrUndefined.NullOrUndefined (String) , "VirtualizationType" :: NullOrUndefined.NullOrUndefined (String) } ) -> RegisterImageRequest
newRegisterImageRequest' _Name customize = (RegisterImageRequest <<< customize) { "Name": _Name, "Architecture": (NullOrUndefined Nothing), "BillingProducts": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EnaSupport": (NullOrUndefined Nothing), "ImageLocation": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "RootDeviceName": (NullOrUndefined Nothing), "SriovNetSupport": (NullOrUndefined Nothing), "VirtualizationType": (NullOrUndefined Nothing) }



-- | <p>Contains the output of RegisterImage.</p>
newtype RegisterImageResult = RegisterImageResult 
  { "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeRegisterImageResult :: Newtype RegisterImageResult _
derive instance repGenericRegisterImageResult :: Generic RegisterImageResult _
instance showRegisterImageResult :: Show RegisterImageResult where
  show = genericShow
instance decodeRegisterImageResult :: Decode RegisterImageResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRegisterImageResult :: Encode RegisterImageResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RegisterImageResult from required parameters
newRegisterImageResult :: RegisterImageResult
newRegisterImageResult  = RegisterImageResult { "ImageId": (NullOrUndefined Nothing) }

-- | Constructs RegisterImageResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRegisterImageResult' :: ( { "ImageId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ImageId" :: NullOrUndefined.NullOrUndefined (String) } ) -> RegisterImageResult
newRegisterImageResult'  customize = (RegisterImageResult <<< customize) { "ImageId": (NullOrUndefined Nothing) }



newtype RejectVpcEndpointConnectionsRequest = RejectVpcEndpointConnectionsRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "ServiceId" :: (String)
  , "VpcEndpointIds" :: (ValueStringList)
  }
derive instance newtypeRejectVpcEndpointConnectionsRequest :: Newtype RejectVpcEndpointConnectionsRequest _
derive instance repGenericRejectVpcEndpointConnectionsRequest :: Generic RejectVpcEndpointConnectionsRequest _
instance showRejectVpcEndpointConnectionsRequest :: Show RejectVpcEndpointConnectionsRequest where
  show = genericShow
instance decodeRejectVpcEndpointConnectionsRequest :: Decode RejectVpcEndpointConnectionsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRejectVpcEndpointConnectionsRequest :: Encode RejectVpcEndpointConnectionsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RejectVpcEndpointConnectionsRequest from required parameters
newRejectVpcEndpointConnectionsRequest :: String -> ValueStringList -> RejectVpcEndpointConnectionsRequest
newRejectVpcEndpointConnectionsRequest _ServiceId _VpcEndpointIds = RejectVpcEndpointConnectionsRequest { "ServiceId": _ServiceId, "VpcEndpointIds": _VpcEndpointIds, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs RejectVpcEndpointConnectionsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRejectVpcEndpointConnectionsRequest' :: String -> ValueStringList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: (String) , "VpcEndpointIds" :: (ValueStringList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "ServiceId" :: (String) , "VpcEndpointIds" :: (ValueStringList) } ) -> RejectVpcEndpointConnectionsRequest
newRejectVpcEndpointConnectionsRequest' _ServiceId _VpcEndpointIds customize = (RejectVpcEndpointConnectionsRequest <<< customize) { "ServiceId": _ServiceId, "VpcEndpointIds": _VpcEndpointIds, "DryRun": (NullOrUndefined Nothing) }



newtype RejectVpcEndpointConnectionsResult = RejectVpcEndpointConnectionsResult 
  { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet)
  }
derive instance newtypeRejectVpcEndpointConnectionsResult :: Newtype RejectVpcEndpointConnectionsResult _
derive instance repGenericRejectVpcEndpointConnectionsResult :: Generic RejectVpcEndpointConnectionsResult _
instance showRejectVpcEndpointConnectionsResult :: Show RejectVpcEndpointConnectionsResult where
  show = genericShow
instance decodeRejectVpcEndpointConnectionsResult :: Decode RejectVpcEndpointConnectionsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRejectVpcEndpointConnectionsResult :: Encode RejectVpcEndpointConnectionsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RejectVpcEndpointConnectionsResult from required parameters
newRejectVpcEndpointConnectionsResult :: RejectVpcEndpointConnectionsResult
newRejectVpcEndpointConnectionsResult  = RejectVpcEndpointConnectionsResult { "Unsuccessful": (NullOrUndefined Nothing) }

-- | Constructs RejectVpcEndpointConnectionsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRejectVpcEndpointConnectionsResult' :: ( { "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } -> {"Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemSet) } ) -> RejectVpcEndpointConnectionsResult
newRejectVpcEndpointConnectionsResult'  customize = (RejectVpcEndpointConnectionsResult <<< customize) { "Unsuccessful": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for RejectVpcPeeringConnection.</p>
newtype RejectVpcPeeringConnectionRequest = RejectVpcPeeringConnectionRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "VpcPeeringConnectionId" :: (String)
  }
derive instance newtypeRejectVpcPeeringConnectionRequest :: Newtype RejectVpcPeeringConnectionRequest _
derive instance repGenericRejectVpcPeeringConnectionRequest :: Generic RejectVpcPeeringConnectionRequest _
instance showRejectVpcPeeringConnectionRequest :: Show RejectVpcPeeringConnectionRequest where
  show = genericShow
instance decodeRejectVpcPeeringConnectionRequest :: Decode RejectVpcPeeringConnectionRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRejectVpcPeeringConnectionRequest :: Encode RejectVpcPeeringConnectionRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RejectVpcPeeringConnectionRequest from required parameters
newRejectVpcPeeringConnectionRequest :: String -> RejectVpcPeeringConnectionRequest
newRejectVpcPeeringConnectionRequest _VpcPeeringConnectionId = RejectVpcPeeringConnectionRequest { "VpcPeeringConnectionId": _VpcPeeringConnectionId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs RejectVpcPeeringConnectionRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRejectVpcPeeringConnectionRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcPeeringConnectionId" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "VpcPeeringConnectionId" :: (String) } ) -> RejectVpcPeeringConnectionRequest
newRejectVpcPeeringConnectionRequest' _VpcPeeringConnectionId customize = (RejectVpcPeeringConnectionRequest <<< customize) { "VpcPeeringConnectionId": _VpcPeeringConnectionId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of RejectVpcPeeringConnection.</p>
newtype RejectVpcPeeringConnectionResult = RejectVpcPeeringConnectionResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeRejectVpcPeeringConnectionResult :: Newtype RejectVpcPeeringConnectionResult _
derive instance repGenericRejectVpcPeeringConnectionResult :: Generic RejectVpcPeeringConnectionResult _
instance showRejectVpcPeeringConnectionResult :: Show RejectVpcPeeringConnectionResult where
  show = genericShow
instance decodeRejectVpcPeeringConnectionResult :: Decode RejectVpcPeeringConnectionResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRejectVpcPeeringConnectionResult :: Encode RejectVpcPeeringConnectionResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RejectVpcPeeringConnectionResult from required parameters
newRejectVpcPeeringConnectionResult :: RejectVpcPeeringConnectionResult
newRejectVpcPeeringConnectionResult  = RejectVpcPeeringConnectionResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs RejectVpcPeeringConnectionResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRejectVpcPeeringConnectionResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> RejectVpcPeeringConnectionResult
newRejectVpcPeeringConnectionResult'  customize = (RejectVpcPeeringConnectionResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ReleaseAddress.</p>
newtype ReleaseAddressRequest = ReleaseAddressRequest 
  { "AllocationId" :: NullOrUndefined.NullOrUndefined (String)
  , "PublicIp" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeReleaseAddressRequest :: Newtype ReleaseAddressRequest _
derive instance repGenericReleaseAddressRequest :: Generic ReleaseAddressRequest _
instance showReleaseAddressRequest :: Show ReleaseAddressRequest where
  show = genericShow
instance decodeReleaseAddressRequest :: Decode ReleaseAddressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReleaseAddressRequest :: Encode ReleaseAddressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReleaseAddressRequest from required parameters
newReleaseAddressRequest :: ReleaseAddressRequest
newReleaseAddressRequest  = ReleaseAddressRequest { "AllocationId": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }

-- | Constructs ReleaseAddressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReleaseAddressRequest' :: ( { "AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AllocationId" :: NullOrUndefined.NullOrUndefined (String) , "PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ReleaseAddressRequest
newReleaseAddressRequest'  customize = (ReleaseAddressRequest <<< customize) { "AllocationId": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "PublicIp": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ReleaseHosts.</p>
newtype ReleaseHostsRequest = ReleaseHostsRequest 
  { "HostIds" :: (RequestHostIdList)
  }
derive instance newtypeReleaseHostsRequest :: Newtype ReleaseHostsRequest _
derive instance repGenericReleaseHostsRequest :: Generic ReleaseHostsRequest _
instance showReleaseHostsRequest :: Show ReleaseHostsRequest where
  show = genericShow
instance decodeReleaseHostsRequest :: Decode ReleaseHostsRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReleaseHostsRequest :: Encode ReleaseHostsRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReleaseHostsRequest from required parameters
newReleaseHostsRequest :: RequestHostIdList -> ReleaseHostsRequest
newReleaseHostsRequest _HostIds = ReleaseHostsRequest { "HostIds": _HostIds }

-- | Constructs ReleaseHostsRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReleaseHostsRequest' :: RequestHostIdList -> ( { "HostIds" :: (RequestHostIdList) } -> {"HostIds" :: (RequestHostIdList) } ) -> ReleaseHostsRequest
newReleaseHostsRequest' _HostIds customize = (ReleaseHostsRequest <<< customize) { "HostIds": _HostIds }



-- | <p>Contains the output of ReleaseHosts.</p>
newtype ReleaseHostsResult = ReleaseHostsResult 
  { "Successful" :: NullOrUndefined.NullOrUndefined (ResponseHostIdList)
  , "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemList)
  }
derive instance newtypeReleaseHostsResult :: Newtype ReleaseHostsResult _
derive instance repGenericReleaseHostsResult :: Generic ReleaseHostsResult _
instance showReleaseHostsResult :: Show ReleaseHostsResult where
  show = genericShow
instance decodeReleaseHostsResult :: Decode ReleaseHostsResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReleaseHostsResult :: Encode ReleaseHostsResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReleaseHostsResult from required parameters
newReleaseHostsResult :: ReleaseHostsResult
newReleaseHostsResult  = ReleaseHostsResult { "Successful": (NullOrUndefined Nothing), "Unsuccessful": (NullOrUndefined Nothing) }

-- | Constructs ReleaseHostsResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReleaseHostsResult' :: ( { "Successful" :: NullOrUndefined.NullOrUndefined (ResponseHostIdList) , "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemList) } -> {"Successful" :: NullOrUndefined.NullOrUndefined (ResponseHostIdList) , "Unsuccessful" :: NullOrUndefined.NullOrUndefined (UnsuccessfulItemList) } ) -> ReleaseHostsResult
newReleaseHostsResult'  customize = (ReleaseHostsResult <<< customize) { "Successful": (NullOrUndefined Nothing), "Unsuccessful": (NullOrUndefined Nothing) }



newtype ReplaceIamInstanceProfileAssociationRequest = ReplaceIamInstanceProfileAssociationRequest 
  { "IamInstanceProfile" :: (IamInstanceProfileSpecification)
  , "AssociationId" :: (String)
  }
derive instance newtypeReplaceIamInstanceProfileAssociationRequest :: Newtype ReplaceIamInstanceProfileAssociationRequest _
derive instance repGenericReplaceIamInstanceProfileAssociationRequest :: Generic ReplaceIamInstanceProfileAssociationRequest _
instance showReplaceIamInstanceProfileAssociationRequest :: Show ReplaceIamInstanceProfileAssociationRequest where
  show = genericShow
instance decodeReplaceIamInstanceProfileAssociationRequest :: Decode ReplaceIamInstanceProfileAssociationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReplaceIamInstanceProfileAssociationRequest :: Encode ReplaceIamInstanceProfileAssociationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReplaceIamInstanceProfileAssociationRequest from required parameters
newReplaceIamInstanceProfileAssociationRequest :: String -> IamInstanceProfileSpecification -> ReplaceIamInstanceProfileAssociationRequest
newReplaceIamInstanceProfileAssociationRequest _AssociationId _IamInstanceProfile = ReplaceIamInstanceProfileAssociationRequest { "AssociationId": _AssociationId, "IamInstanceProfile": _IamInstanceProfile }

-- | Constructs ReplaceIamInstanceProfileAssociationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReplaceIamInstanceProfileAssociationRequest' :: String -> IamInstanceProfileSpecification -> ( { "IamInstanceProfile" :: (IamInstanceProfileSpecification) , "AssociationId" :: (String) } -> {"IamInstanceProfile" :: (IamInstanceProfileSpecification) , "AssociationId" :: (String) } ) -> ReplaceIamInstanceProfileAssociationRequest
newReplaceIamInstanceProfileAssociationRequest' _AssociationId _IamInstanceProfile customize = (ReplaceIamInstanceProfileAssociationRequest <<< customize) { "AssociationId": _AssociationId, "IamInstanceProfile": _IamInstanceProfile }



newtype ReplaceIamInstanceProfileAssociationResult = ReplaceIamInstanceProfileAssociationResult 
  { "IamInstanceProfileAssociation" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociation)
  }
derive instance newtypeReplaceIamInstanceProfileAssociationResult :: Newtype ReplaceIamInstanceProfileAssociationResult _
derive instance repGenericReplaceIamInstanceProfileAssociationResult :: Generic ReplaceIamInstanceProfileAssociationResult _
instance showReplaceIamInstanceProfileAssociationResult :: Show ReplaceIamInstanceProfileAssociationResult where
  show = genericShow
instance decodeReplaceIamInstanceProfileAssociationResult :: Decode ReplaceIamInstanceProfileAssociationResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReplaceIamInstanceProfileAssociationResult :: Encode ReplaceIamInstanceProfileAssociationResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReplaceIamInstanceProfileAssociationResult from required parameters
newReplaceIamInstanceProfileAssociationResult :: ReplaceIamInstanceProfileAssociationResult
newReplaceIamInstanceProfileAssociationResult  = ReplaceIamInstanceProfileAssociationResult { "IamInstanceProfileAssociation": (NullOrUndefined Nothing) }

-- | Constructs ReplaceIamInstanceProfileAssociationResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReplaceIamInstanceProfileAssociationResult' :: ( { "IamInstanceProfileAssociation" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociation) } -> {"IamInstanceProfileAssociation" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileAssociation) } ) -> ReplaceIamInstanceProfileAssociationResult
newReplaceIamInstanceProfileAssociationResult'  customize = (ReplaceIamInstanceProfileAssociationResult <<< customize) { "IamInstanceProfileAssociation": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ReplaceNetworkAclAssociation.</p>
newtype ReplaceNetworkAclAssociationRequest = ReplaceNetworkAclAssociationRequest 
  { "AssociationId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkAclId" :: (String)
  }
derive instance newtypeReplaceNetworkAclAssociationRequest :: Newtype ReplaceNetworkAclAssociationRequest _
derive instance repGenericReplaceNetworkAclAssociationRequest :: Generic ReplaceNetworkAclAssociationRequest _
instance showReplaceNetworkAclAssociationRequest :: Show ReplaceNetworkAclAssociationRequest where
  show = genericShow
instance decodeReplaceNetworkAclAssociationRequest :: Decode ReplaceNetworkAclAssociationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReplaceNetworkAclAssociationRequest :: Encode ReplaceNetworkAclAssociationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReplaceNetworkAclAssociationRequest from required parameters
newReplaceNetworkAclAssociationRequest :: String -> String -> ReplaceNetworkAclAssociationRequest
newReplaceNetworkAclAssociationRequest _AssociationId _NetworkAclId = ReplaceNetworkAclAssociationRequest { "AssociationId": _AssociationId, "NetworkAclId": _NetworkAclId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ReplaceNetworkAclAssociationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReplaceNetworkAclAssociationRequest' :: String -> String -> ( { "AssociationId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkAclId" :: (String) } -> {"AssociationId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkAclId" :: (String) } ) -> ReplaceNetworkAclAssociationRequest
newReplaceNetworkAclAssociationRequest' _AssociationId _NetworkAclId customize = (ReplaceNetworkAclAssociationRequest <<< customize) { "AssociationId": _AssociationId, "NetworkAclId": _NetworkAclId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of ReplaceNetworkAclAssociation.</p>
newtype ReplaceNetworkAclAssociationResult = ReplaceNetworkAclAssociationResult 
  { "NewAssociationId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeReplaceNetworkAclAssociationResult :: Newtype ReplaceNetworkAclAssociationResult _
derive instance repGenericReplaceNetworkAclAssociationResult :: Generic ReplaceNetworkAclAssociationResult _
instance showReplaceNetworkAclAssociationResult :: Show ReplaceNetworkAclAssociationResult where
  show = genericShow
instance decodeReplaceNetworkAclAssociationResult :: Decode ReplaceNetworkAclAssociationResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReplaceNetworkAclAssociationResult :: Encode ReplaceNetworkAclAssociationResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReplaceNetworkAclAssociationResult from required parameters
newReplaceNetworkAclAssociationResult :: ReplaceNetworkAclAssociationResult
newReplaceNetworkAclAssociationResult  = ReplaceNetworkAclAssociationResult { "NewAssociationId": (NullOrUndefined Nothing) }

-- | Constructs ReplaceNetworkAclAssociationResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReplaceNetworkAclAssociationResult' :: ( { "NewAssociationId" :: NullOrUndefined.NullOrUndefined (String) } -> {"NewAssociationId" :: NullOrUndefined.NullOrUndefined (String) } ) -> ReplaceNetworkAclAssociationResult
newReplaceNetworkAclAssociationResult'  customize = (ReplaceNetworkAclAssociationResult <<< customize) { "NewAssociationId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ReplaceNetworkAclEntry.</p>
newtype ReplaceNetworkAclEntryRequest = ReplaceNetworkAclEntryRequest 
  { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Egress" :: (Boolean)
  , "IcmpTypeCode" :: NullOrUndefined.NullOrUndefined (IcmpTypeCode)
  , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkAclId" :: (String)
  , "PortRange" :: NullOrUndefined.NullOrUndefined (PortRange)
  , "Protocol" :: (String)
  , "RuleAction" :: (RuleAction)
  , "RuleNumber" :: (Int)
  }
derive instance newtypeReplaceNetworkAclEntryRequest :: Newtype ReplaceNetworkAclEntryRequest _
derive instance repGenericReplaceNetworkAclEntryRequest :: Generic ReplaceNetworkAclEntryRequest _
instance showReplaceNetworkAclEntryRequest :: Show ReplaceNetworkAclEntryRequest where
  show = genericShow
instance decodeReplaceNetworkAclEntryRequest :: Decode ReplaceNetworkAclEntryRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReplaceNetworkAclEntryRequest :: Encode ReplaceNetworkAclEntryRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReplaceNetworkAclEntryRequest from required parameters
newReplaceNetworkAclEntryRequest :: Boolean -> String -> String -> RuleAction -> Int -> ReplaceNetworkAclEntryRequest
newReplaceNetworkAclEntryRequest _Egress _NetworkAclId _Protocol _RuleAction _RuleNumber = ReplaceNetworkAclEntryRequest { "Egress": _Egress, "NetworkAclId": _NetworkAclId, "Protocol": _Protocol, "RuleAction": _RuleAction, "RuleNumber": _RuleNumber, "CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "IcmpTypeCode": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing), "PortRange": (NullOrUndefined Nothing) }

-- | Constructs ReplaceNetworkAclEntryRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReplaceNetworkAclEntryRequest' :: Boolean -> String -> String -> RuleAction -> Int -> ( { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Egress" :: (Boolean) , "IcmpTypeCode" :: NullOrUndefined.NullOrUndefined (IcmpTypeCode) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "NetworkAclId" :: (String) , "PortRange" :: NullOrUndefined.NullOrUndefined (PortRange) , "Protocol" :: (String) , "RuleAction" :: (RuleAction) , "RuleNumber" :: (Int) } -> {"CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Egress" :: (Boolean) , "IcmpTypeCode" :: NullOrUndefined.NullOrUndefined (IcmpTypeCode) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "NetworkAclId" :: (String) , "PortRange" :: NullOrUndefined.NullOrUndefined (PortRange) , "Protocol" :: (String) , "RuleAction" :: (RuleAction) , "RuleNumber" :: (Int) } ) -> ReplaceNetworkAclEntryRequest
newReplaceNetworkAclEntryRequest' _Egress _NetworkAclId _Protocol _RuleAction _RuleNumber customize = (ReplaceNetworkAclEntryRequest <<< customize) { "Egress": _Egress, "NetworkAclId": _NetworkAclId, "Protocol": _Protocol, "RuleAction": _RuleAction, "RuleNumber": _RuleNumber, "CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "IcmpTypeCode": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing), "PortRange": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ReplaceRoute.</p>
newtype ReplaceRouteRequest = ReplaceRouteRequest 
  { "DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "GatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "RouteTableId" :: (String)
  , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeReplaceRouteRequest :: Newtype ReplaceRouteRequest _
derive instance repGenericReplaceRouteRequest :: Generic ReplaceRouteRequest _
instance showReplaceRouteRequest :: Show ReplaceRouteRequest where
  show = genericShow
instance decodeReplaceRouteRequest :: Decode ReplaceRouteRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReplaceRouteRequest :: Encode ReplaceRouteRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReplaceRouteRequest from required parameters
newReplaceRouteRequest :: String -> ReplaceRouteRequest
newReplaceRouteRequest _RouteTableId = ReplaceRouteRequest { "RouteTableId": _RouteTableId, "DestinationCidrBlock": (NullOrUndefined Nothing), "DestinationIpv6CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EgressOnlyInternetGatewayId": (NullOrUndefined Nothing), "GatewayId": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "NatGatewayId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }

-- | Constructs ReplaceRouteRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReplaceRouteRequest' :: String -> ( { "DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "GatewayId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "RouteTableId" :: (String) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } -> {"DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "GatewayId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "RouteTableId" :: (String) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } ) -> ReplaceRouteRequest
newReplaceRouteRequest' _RouteTableId customize = (ReplaceRouteRequest <<< customize) { "RouteTableId": _RouteTableId, "DestinationCidrBlock": (NullOrUndefined Nothing), "DestinationIpv6CidrBlock": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EgressOnlyInternetGatewayId": (NullOrUndefined Nothing), "GatewayId": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "NatGatewayId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ReplaceRouteTableAssociation.</p>
newtype ReplaceRouteTableAssociationRequest = ReplaceRouteTableAssociationRequest 
  { "AssociationId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "RouteTableId" :: (String)
  }
derive instance newtypeReplaceRouteTableAssociationRequest :: Newtype ReplaceRouteTableAssociationRequest _
derive instance repGenericReplaceRouteTableAssociationRequest :: Generic ReplaceRouteTableAssociationRequest _
instance showReplaceRouteTableAssociationRequest :: Show ReplaceRouteTableAssociationRequest where
  show = genericShow
instance decodeReplaceRouteTableAssociationRequest :: Decode ReplaceRouteTableAssociationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReplaceRouteTableAssociationRequest :: Encode ReplaceRouteTableAssociationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReplaceRouteTableAssociationRequest from required parameters
newReplaceRouteTableAssociationRequest :: String -> String -> ReplaceRouteTableAssociationRequest
newReplaceRouteTableAssociationRequest _AssociationId _RouteTableId = ReplaceRouteTableAssociationRequest { "AssociationId": _AssociationId, "RouteTableId": _RouteTableId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ReplaceRouteTableAssociationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReplaceRouteTableAssociationRequest' :: String -> String -> ( { "AssociationId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableId" :: (String) } -> {"AssociationId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableId" :: (String) } ) -> ReplaceRouteTableAssociationRequest
newReplaceRouteTableAssociationRequest' _AssociationId _RouteTableId customize = (ReplaceRouteTableAssociationRequest <<< customize) { "AssociationId": _AssociationId, "RouteTableId": _RouteTableId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of ReplaceRouteTableAssociation.</p>
newtype ReplaceRouteTableAssociationResult = ReplaceRouteTableAssociationResult 
  { "NewAssociationId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeReplaceRouteTableAssociationResult :: Newtype ReplaceRouteTableAssociationResult _
derive instance repGenericReplaceRouteTableAssociationResult :: Generic ReplaceRouteTableAssociationResult _
instance showReplaceRouteTableAssociationResult :: Show ReplaceRouteTableAssociationResult where
  show = genericShow
instance decodeReplaceRouteTableAssociationResult :: Decode ReplaceRouteTableAssociationResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReplaceRouteTableAssociationResult :: Encode ReplaceRouteTableAssociationResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReplaceRouteTableAssociationResult from required parameters
newReplaceRouteTableAssociationResult :: ReplaceRouteTableAssociationResult
newReplaceRouteTableAssociationResult  = ReplaceRouteTableAssociationResult { "NewAssociationId": (NullOrUndefined Nothing) }

-- | Constructs ReplaceRouteTableAssociationResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReplaceRouteTableAssociationResult' :: ( { "NewAssociationId" :: NullOrUndefined.NullOrUndefined (String) } -> {"NewAssociationId" :: NullOrUndefined.NullOrUndefined (String) } ) -> ReplaceRouteTableAssociationResult
newReplaceRouteTableAssociationResult'  customize = (ReplaceRouteTableAssociationResult <<< customize) { "NewAssociationId": (NullOrUndefined Nothing) }



newtype ReportInstanceReasonCodes = ReportInstanceReasonCodes String
derive instance newtypeReportInstanceReasonCodes :: Newtype ReportInstanceReasonCodes _
derive instance repGenericReportInstanceReasonCodes :: Generic ReportInstanceReasonCodes _
instance showReportInstanceReasonCodes :: Show ReportInstanceReasonCodes where
  show = genericShow
instance decodeReportInstanceReasonCodes :: Decode ReportInstanceReasonCodes where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReportInstanceReasonCodes :: Encode ReportInstanceReasonCodes where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for ReportInstanceStatus.</p>
newtype ReportInstanceStatusRequest = ReportInstanceStatusRequest 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EndTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Instances" :: (InstanceIdStringList)
  , "ReasonCodes" :: (ReasonCodesList)
  , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Status" :: (ReportStatusType)
  }
derive instance newtypeReportInstanceStatusRequest :: Newtype ReportInstanceStatusRequest _
derive instance repGenericReportInstanceStatusRequest :: Generic ReportInstanceStatusRequest _
instance showReportInstanceStatusRequest :: Show ReportInstanceStatusRequest where
  show = genericShow
instance decodeReportInstanceStatusRequest :: Decode ReportInstanceStatusRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReportInstanceStatusRequest :: Encode ReportInstanceStatusRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReportInstanceStatusRequest from required parameters
newReportInstanceStatusRequest :: InstanceIdStringList -> ReasonCodesList -> ReportStatusType -> ReportInstanceStatusRequest
newReportInstanceStatusRequest _Instances _ReasonCodes _Status = ReportInstanceStatusRequest { "Instances": _Instances, "ReasonCodes": _ReasonCodes, "Status": _Status, "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EndTime": (NullOrUndefined Nothing), "StartTime": (NullOrUndefined Nothing) }

-- | Constructs ReportInstanceStatusRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReportInstanceStatusRequest' :: InstanceIdStringList -> ReasonCodesList -> ReportStatusType -> ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EndTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Instances" :: (InstanceIdStringList) , "ReasonCodes" :: (ReasonCodesList) , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Status" :: (ReportStatusType) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EndTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Instances" :: (InstanceIdStringList) , "ReasonCodes" :: (ReasonCodesList) , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Status" :: (ReportStatusType) } ) -> ReportInstanceStatusRequest
newReportInstanceStatusRequest' _Instances _ReasonCodes _Status customize = (ReportInstanceStatusRequest <<< customize) { "Instances": _Instances, "ReasonCodes": _ReasonCodes, "Status": _Status, "Description": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EndTime": (NullOrUndefined Nothing), "StartTime": (NullOrUndefined Nothing) }



newtype ReportStatusType = ReportStatusType String
derive instance newtypeReportStatusType :: Newtype ReportStatusType _
derive instance repGenericReportStatusType :: Generic ReportStatusType _
instance showReportStatusType :: Show ReportStatusType where
  show = genericShow
instance decodeReportStatusType :: Decode ReportStatusType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReportStatusType :: Encode ReportStatusType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype RequestHostIdList = RequestHostIdList (Array String)
derive instance newtypeRequestHostIdList :: Newtype RequestHostIdList _
derive instance repGenericRequestHostIdList :: Generic RequestHostIdList _
instance showRequestHostIdList :: Show RequestHostIdList where
  show = genericShow
instance decodeRequestHostIdList :: Decode RequestHostIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRequestHostIdList :: Encode RequestHostIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype RequestHostIdSet = RequestHostIdSet (Array String)
derive instance newtypeRequestHostIdSet :: Newtype RequestHostIdSet _
derive instance repGenericRequestHostIdSet :: Generic RequestHostIdSet _
instance showRequestHostIdSet :: Show RequestHostIdSet where
  show = genericShow
instance decodeRequestHostIdSet :: Decode RequestHostIdSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRequestHostIdSet :: Encode RequestHostIdSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The information to include in the launch template.</p>
newtype RequestLaunchTemplateData = RequestLaunchTemplateData 
  { "KernelId" :: NullOrUndefined.NullOrUndefined (String)
  , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (LaunchTemplateIamInstanceProfileSpecificationRequest)
  , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (LaunchTemplateBlockDeviceMappingRequestList)
  , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  , "Monitoring" :: NullOrUndefined.NullOrUndefined (LaunchTemplatesMonitoringRequest)
  , "Placement" :: NullOrUndefined.NullOrUndefined (LaunchTemplatePlacementRequest)
  , "RamDiskId" :: NullOrUndefined.NullOrUndefined (String)
  , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior)
  , "UserData" :: NullOrUndefined.NullOrUndefined (String)
  , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (LaunchTemplateTagSpecificationRequestList)
  , "ElasticGpuSpecifications" :: NullOrUndefined.NullOrUndefined (ElasticGpuSpecificationList)
  , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList)
  , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (SecurityGroupStringList)
  , "InstanceMarketOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceMarketOptionsRequest)
  , "CreditSpecification" :: NullOrUndefined.NullOrUndefined (CreditSpecificationRequest)
  }
derive instance newtypeRequestLaunchTemplateData :: Newtype RequestLaunchTemplateData _
derive instance repGenericRequestLaunchTemplateData :: Generic RequestLaunchTemplateData _
instance showRequestLaunchTemplateData :: Show RequestLaunchTemplateData where
  show = genericShow
instance decodeRequestLaunchTemplateData :: Decode RequestLaunchTemplateData where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRequestLaunchTemplateData :: Encode RequestLaunchTemplateData where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RequestLaunchTemplateData from required parameters
newRequestLaunchTemplateData :: RequestLaunchTemplateData
newRequestLaunchTemplateData  = RequestLaunchTemplateData { "BlockDeviceMappings": (NullOrUndefined Nothing), "CreditSpecification": (NullOrUndefined Nothing), "DisableApiTermination": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "ElasticGpuSpecifications": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceMarketOptions": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamDiskId": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }

-- | Constructs RequestLaunchTemplateData's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRequestLaunchTemplateData' :: ( { "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (LaunchTemplateIamInstanceProfileSpecificationRequest) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (LaunchTemplateBlockDeviceMappingRequestList) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (LaunchTemplatesMonitoringRequest) , "Placement" :: NullOrUndefined.NullOrUndefined (LaunchTemplatePlacementRequest) , "RamDiskId" :: NullOrUndefined.NullOrUndefined (String) , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior) , "UserData" :: NullOrUndefined.NullOrUndefined (String) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (LaunchTemplateTagSpecificationRequestList) , "ElasticGpuSpecifications" :: NullOrUndefined.NullOrUndefined (ElasticGpuSpecificationList) , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (SecurityGroupStringList) , "InstanceMarketOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceMarketOptionsRequest) , "CreditSpecification" :: NullOrUndefined.NullOrUndefined (CreditSpecificationRequest) } -> {"KernelId" :: NullOrUndefined.NullOrUndefined (String) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (LaunchTemplateIamInstanceProfileSpecificationRequest) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (LaunchTemplateBlockDeviceMappingRequestList) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (LaunchTemplatesMonitoringRequest) , "Placement" :: NullOrUndefined.NullOrUndefined (LaunchTemplatePlacementRequest) , "RamDiskId" :: NullOrUndefined.NullOrUndefined (String) , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior) , "UserData" :: NullOrUndefined.NullOrUndefined (String) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (LaunchTemplateTagSpecificationRequestList) , "ElasticGpuSpecifications" :: NullOrUndefined.NullOrUndefined (ElasticGpuSpecificationList) , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (SecurityGroupStringList) , "InstanceMarketOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceMarketOptionsRequest) , "CreditSpecification" :: NullOrUndefined.NullOrUndefined (CreditSpecificationRequest) } ) -> RequestLaunchTemplateData
newRequestLaunchTemplateData'  customize = (RequestLaunchTemplateData <<< customize) { "BlockDeviceMappings": (NullOrUndefined Nothing), "CreditSpecification": (NullOrUndefined Nothing), "DisableApiTermination": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "ElasticGpuSpecifications": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceMarketOptions": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamDiskId": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for RequestSpotFleet.</p>
newtype RequestSpotFleetRequest = RequestSpotFleetRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "SpotFleetRequestConfig" :: (SpotFleetRequestConfigData)
  }
derive instance newtypeRequestSpotFleetRequest :: Newtype RequestSpotFleetRequest _
derive instance repGenericRequestSpotFleetRequest :: Generic RequestSpotFleetRequest _
instance showRequestSpotFleetRequest :: Show RequestSpotFleetRequest where
  show = genericShow
instance decodeRequestSpotFleetRequest :: Decode RequestSpotFleetRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRequestSpotFleetRequest :: Encode RequestSpotFleetRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RequestSpotFleetRequest from required parameters
newRequestSpotFleetRequest :: SpotFleetRequestConfigData -> RequestSpotFleetRequest
newRequestSpotFleetRequest _SpotFleetRequestConfig = RequestSpotFleetRequest { "SpotFleetRequestConfig": _SpotFleetRequestConfig, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs RequestSpotFleetRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRequestSpotFleetRequest' :: SpotFleetRequestConfigData -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "SpotFleetRequestConfig" :: (SpotFleetRequestConfigData) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "SpotFleetRequestConfig" :: (SpotFleetRequestConfigData) } ) -> RequestSpotFleetRequest
newRequestSpotFleetRequest' _SpotFleetRequestConfig customize = (RequestSpotFleetRequest <<< customize) { "SpotFleetRequestConfig": _SpotFleetRequestConfig, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of RequestSpotFleet.</p>
newtype RequestSpotFleetResponse = RequestSpotFleetResponse 
  { "SpotFleetRequestId" :: (String)
  }
derive instance newtypeRequestSpotFleetResponse :: Newtype RequestSpotFleetResponse _
derive instance repGenericRequestSpotFleetResponse :: Generic RequestSpotFleetResponse _
instance showRequestSpotFleetResponse :: Show RequestSpotFleetResponse where
  show = genericShow
instance decodeRequestSpotFleetResponse :: Decode RequestSpotFleetResponse where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRequestSpotFleetResponse :: Encode RequestSpotFleetResponse where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RequestSpotFleetResponse from required parameters
newRequestSpotFleetResponse :: String -> RequestSpotFleetResponse
newRequestSpotFleetResponse _SpotFleetRequestId = RequestSpotFleetResponse { "SpotFleetRequestId": _SpotFleetRequestId }

-- | Constructs RequestSpotFleetResponse's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRequestSpotFleetResponse' :: String -> ( { "SpotFleetRequestId" :: (String) } -> {"SpotFleetRequestId" :: (String) } ) -> RequestSpotFleetResponse
newRequestSpotFleetResponse' _SpotFleetRequestId customize = (RequestSpotFleetResponse <<< customize) { "SpotFleetRequestId": _SpotFleetRequestId }



-- | <p>Contains the parameters for RequestSpotInstances.</p>
newtype RequestSpotInstancesRequest = RequestSpotInstancesRequest 
  { "AvailabilityZoneGroup" :: NullOrUndefined.NullOrUndefined (String)
  , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "LaunchGroup" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchSpecification" :: NullOrUndefined.NullOrUndefined (RequestSpotLaunchSpecification)
  , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "Type" :: NullOrUndefined.NullOrUndefined (SpotInstanceType)
  , "ValidFrom" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior)
  }
derive instance newtypeRequestSpotInstancesRequest :: Newtype RequestSpotInstancesRequest _
derive instance repGenericRequestSpotInstancesRequest :: Generic RequestSpotInstancesRequest _
instance showRequestSpotInstancesRequest :: Show RequestSpotInstancesRequest where
  show = genericShow
instance decodeRequestSpotInstancesRequest :: Decode RequestSpotInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRequestSpotInstancesRequest :: Encode RequestSpotInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RequestSpotInstancesRequest from required parameters
newRequestSpotInstancesRequest :: RequestSpotInstancesRequest
newRequestSpotInstancesRequest  = RequestSpotInstancesRequest { "AvailabilityZoneGroup": (NullOrUndefined Nothing), "BlockDurationMinutes": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "InstanceCount": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "LaunchGroup": (NullOrUndefined Nothing), "LaunchSpecification": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing), "ValidFrom": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }

-- | Constructs RequestSpotInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRequestSpotInstancesRequest' :: ( { "AvailabilityZoneGroup" :: NullOrUndefined.NullOrUndefined (String) , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "LaunchGroup" :: NullOrUndefined.NullOrUndefined (String) , "LaunchSpecification" :: NullOrUndefined.NullOrUndefined (RequestSpotLaunchSpecification) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "Type" :: NullOrUndefined.NullOrUndefined (SpotInstanceType) , "ValidFrom" :: NullOrUndefined.NullOrUndefined (DateTime) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) } -> {"AvailabilityZoneGroup" :: NullOrUndefined.NullOrUndefined (String) , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "LaunchGroup" :: NullOrUndefined.NullOrUndefined (String) , "LaunchSpecification" :: NullOrUndefined.NullOrUndefined (RequestSpotLaunchSpecification) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "Type" :: NullOrUndefined.NullOrUndefined (SpotInstanceType) , "ValidFrom" :: NullOrUndefined.NullOrUndefined (DateTime) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) } ) -> RequestSpotInstancesRequest
newRequestSpotInstancesRequest'  customize = (RequestSpotInstancesRequest <<< customize) { "AvailabilityZoneGroup": (NullOrUndefined Nothing), "BlockDurationMinutes": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "InstanceCount": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "LaunchGroup": (NullOrUndefined Nothing), "LaunchSpecification": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing), "ValidFrom": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }



-- | <p>Contains the output of RequestSpotInstances.</p>
newtype RequestSpotInstancesResult = RequestSpotInstancesResult 
  { "SpotInstanceRequests" :: NullOrUndefined.NullOrUndefined (SpotInstanceRequestList)
  }
derive instance newtypeRequestSpotInstancesResult :: Newtype RequestSpotInstancesResult _
derive instance repGenericRequestSpotInstancesResult :: Generic RequestSpotInstancesResult _
instance showRequestSpotInstancesResult :: Show RequestSpotInstancesResult where
  show = genericShow
instance decodeRequestSpotInstancesResult :: Decode RequestSpotInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRequestSpotInstancesResult :: Encode RequestSpotInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RequestSpotInstancesResult from required parameters
newRequestSpotInstancesResult :: RequestSpotInstancesResult
newRequestSpotInstancesResult  = RequestSpotInstancesResult { "SpotInstanceRequests": (NullOrUndefined Nothing) }

-- | Constructs RequestSpotInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRequestSpotInstancesResult' :: ( { "SpotInstanceRequests" :: NullOrUndefined.NullOrUndefined (SpotInstanceRequestList) } -> {"SpotInstanceRequests" :: NullOrUndefined.NullOrUndefined (SpotInstanceRequestList) } ) -> RequestSpotInstancesResult
newRequestSpotInstancesResult'  customize = (RequestSpotInstancesResult <<< customize) { "SpotInstanceRequests": (NullOrUndefined Nothing) }



-- | <p>Describes the launch specification for an instance.</p>
newtype RequestSpotLaunchSpecification = RequestSpotLaunchSpecification 
  { "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "AddressingType" :: NullOrUndefined.NullOrUndefined (String)
  , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList)
  , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "KernelId" :: NullOrUndefined.NullOrUndefined (String)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  , "Monitoring" :: NullOrUndefined.NullOrUndefined (RunInstancesMonitoringEnabled)
  , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList)
  , "Placement" :: NullOrUndefined.NullOrUndefined (SpotPlacement)
  , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "UserData" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeRequestSpotLaunchSpecification :: Newtype RequestSpotLaunchSpecification _
derive instance repGenericRequestSpotLaunchSpecification :: Generic RequestSpotLaunchSpecification _
instance showRequestSpotLaunchSpecification :: Show RequestSpotLaunchSpecification where
  show = genericShow
instance decodeRequestSpotLaunchSpecification :: Decode RequestSpotLaunchSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRequestSpotLaunchSpecification :: Encode RequestSpotLaunchSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RequestSpotLaunchSpecification from required parameters
newRequestSpotLaunchSpecification :: RequestSpotLaunchSpecification
newRequestSpotLaunchSpecification  = RequestSpotLaunchSpecification { "AddressingType": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }

-- | Constructs RequestSpotLaunchSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRequestSpotLaunchSpecification' :: ( { "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "AddressingType" :: NullOrUndefined.NullOrUndefined (String) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (RunInstancesMonitoringEnabled) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList) , "Placement" :: NullOrUndefined.NullOrUndefined (SpotPlacement) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "UserData" :: NullOrUndefined.NullOrUndefined (String) } -> {"SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "AddressingType" :: NullOrUndefined.NullOrUndefined (String) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (RunInstancesMonitoringEnabled) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList) , "Placement" :: NullOrUndefined.NullOrUndefined (SpotPlacement) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "UserData" :: NullOrUndefined.NullOrUndefined (String) } ) -> RequestSpotLaunchSpecification
newRequestSpotLaunchSpecification'  customize = (RequestSpotLaunchSpecification <<< customize) { "AddressingType": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }



-- | <p>Describes a reservation.</p>
newtype Reservation = Reservation 
  { "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList)
  , "Instances" :: NullOrUndefined.NullOrUndefined (InstanceList)
  , "OwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "RequesterId" :: NullOrUndefined.NullOrUndefined (String)
  , "ReservationId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeReservation :: Newtype Reservation _
derive instance repGenericReservation :: Generic Reservation _
instance showReservation :: Show Reservation where
  show = genericShow
instance decodeReservation :: Decode Reservation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservation :: Encode Reservation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Reservation from required parameters
newReservation :: Reservation
newReservation  = Reservation { "Groups": (NullOrUndefined Nothing), "Instances": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "RequesterId": (NullOrUndefined Nothing), "ReservationId": (NullOrUndefined Nothing) }

-- | Constructs Reservation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservation' :: ( { "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "Instances" :: NullOrUndefined.NullOrUndefined (InstanceList) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "RequesterId" :: NullOrUndefined.NullOrUndefined (String) , "ReservationId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "Instances" :: NullOrUndefined.NullOrUndefined (InstanceList) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "RequesterId" :: NullOrUndefined.NullOrUndefined (String) , "ReservationId" :: NullOrUndefined.NullOrUndefined (String) } ) -> Reservation
newReservation'  customize = (Reservation <<< customize) { "Groups": (NullOrUndefined Nothing), "Instances": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "RequesterId": (NullOrUndefined Nothing), "ReservationId": (NullOrUndefined Nothing) }



newtype ReservationList = ReservationList (Array Reservation)
derive instance newtypeReservationList :: Newtype ReservationList _
derive instance repGenericReservationList :: Generic ReservationList _
instance showReservationList :: Show ReservationList where
  show = genericShow
instance decodeReservationList :: Decode ReservationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservationList :: Encode ReservationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ReservationState = ReservationState String
derive instance newtypeReservationState :: Newtype ReservationState _
derive instance repGenericReservationState :: Generic ReservationState _
instance showReservationState :: Show ReservationState where
  show = genericShow
instance decodeReservationState :: Decode ReservationState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservationState :: Encode ReservationState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The cost associated with the Reserved Instance.</p>
newtype ReservationValue = ReservationValue 
  { "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "RemainingTotalValue" :: NullOrUndefined.NullOrUndefined (String)
  , "RemainingUpfrontValue" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeReservationValue :: Newtype ReservationValue _
derive instance repGenericReservationValue :: Generic ReservationValue _
instance showReservationValue :: Show ReservationValue where
  show = genericShow
instance decodeReservationValue :: Decode ReservationValue where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservationValue :: Encode ReservationValue where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReservationValue from required parameters
newReservationValue :: ReservationValue
newReservationValue  = ReservationValue { "HourlyPrice": (NullOrUndefined Nothing), "RemainingTotalValue": (NullOrUndefined Nothing), "RemainingUpfrontValue": (NullOrUndefined Nothing) }

-- | Constructs ReservationValue's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservationValue' :: ( { "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "RemainingTotalValue" :: NullOrUndefined.NullOrUndefined (String) , "RemainingUpfrontValue" :: NullOrUndefined.NullOrUndefined (String) } -> {"HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "RemainingTotalValue" :: NullOrUndefined.NullOrUndefined (String) , "RemainingUpfrontValue" :: NullOrUndefined.NullOrUndefined (String) } ) -> ReservationValue
newReservationValue'  customize = (ReservationValue <<< customize) { "HourlyPrice": (NullOrUndefined Nothing), "RemainingTotalValue": (NullOrUndefined Nothing), "RemainingUpfrontValue": (NullOrUndefined Nothing) }



newtype ReservedInstanceIdSet = ReservedInstanceIdSet (Array String)
derive instance newtypeReservedInstanceIdSet :: Newtype ReservedInstanceIdSet _
derive instance repGenericReservedInstanceIdSet :: Generic ReservedInstanceIdSet _
instance showReservedInstanceIdSet :: Show ReservedInstanceIdSet where
  show = genericShow
instance decodeReservedInstanceIdSet :: Decode ReservedInstanceIdSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstanceIdSet :: Encode ReservedInstanceIdSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the limit price of a Reserved Instance offering.</p>
newtype ReservedInstanceLimitPrice = ReservedInstanceLimitPrice 
  { "Amount" :: NullOrUndefined.NullOrUndefined (Number)
  , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  }
derive instance newtypeReservedInstanceLimitPrice :: Newtype ReservedInstanceLimitPrice _
derive instance repGenericReservedInstanceLimitPrice :: Generic ReservedInstanceLimitPrice _
instance showReservedInstanceLimitPrice :: Show ReservedInstanceLimitPrice where
  show = genericShow
instance decodeReservedInstanceLimitPrice :: Decode ReservedInstanceLimitPrice where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstanceLimitPrice :: Encode ReservedInstanceLimitPrice where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReservedInstanceLimitPrice from required parameters
newReservedInstanceLimitPrice :: ReservedInstanceLimitPrice
newReservedInstanceLimitPrice  = ReservedInstanceLimitPrice { "Amount": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing) }

-- | Constructs ReservedInstanceLimitPrice's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservedInstanceLimitPrice' :: ( { "Amount" :: NullOrUndefined.NullOrUndefined (Number) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) } -> {"Amount" :: NullOrUndefined.NullOrUndefined (Number) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) } ) -> ReservedInstanceLimitPrice
newReservedInstanceLimitPrice'  customize = (ReservedInstanceLimitPrice <<< customize) { "Amount": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing) }



-- | <p>The total value of the Convertible Reserved Instance.</p>
newtype ReservedInstanceReservationValue = ReservedInstanceReservationValue 
  { "ReservationValue" :: NullOrUndefined.NullOrUndefined (ReservationValue)
  , "ReservedInstanceId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeReservedInstanceReservationValue :: Newtype ReservedInstanceReservationValue _
derive instance repGenericReservedInstanceReservationValue :: Generic ReservedInstanceReservationValue _
instance showReservedInstanceReservationValue :: Show ReservedInstanceReservationValue where
  show = genericShow
instance decodeReservedInstanceReservationValue :: Decode ReservedInstanceReservationValue where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstanceReservationValue :: Encode ReservedInstanceReservationValue where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReservedInstanceReservationValue from required parameters
newReservedInstanceReservationValue :: ReservedInstanceReservationValue
newReservedInstanceReservationValue  = ReservedInstanceReservationValue { "ReservationValue": (NullOrUndefined Nothing), "ReservedInstanceId": (NullOrUndefined Nothing) }

-- | Constructs ReservedInstanceReservationValue's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservedInstanceReservationValue' :: ( { "ReservationValue" :: NullOrUndefined.NullOrUndefined (ReservationValue) , "ReservedInstanceId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ReservationValue" :: NullOrUndefined.NullOrUndefined (ReservationValue) , "ReservedInstanceId" :: NullOrUndefined.NullOrUndefined (String) } ) -> ReservedInstanceReservationValue
newReservedInstanceReservationValue'  customize = (ReservedInstanceReservationValue <<< customize) { "ReservationValue": (NullOrUndefined Nothing), "ReservedInstanceId": (NullOrUndefined Nothing) }



newtype ReservedInstanceReservationValueSet = ReservedInstanceReservationValueSet (Array ReservedInstanceReservationValue)
derive instance newtypeReservedInstanceReservationValueSet :: Newtype ReservedInstanceReservationValueSet _
derive instance repGenericReservedInstanceReservationValueSet :: Generic ReservedInstanceReservationValueSet _
instance showReservedInstanceReservationValueSet :: Show ReservedInstanceReservationValueSet where
  show = genericShow
instance decodeReservedInstanceReservationValueSet :: Decode ReservedInstanceReservationValueSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstanceReservationValueSet :: Encode ReservedInstanceReservationValueSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ReservedInstanceState = ReservedInstanceState String
derive instance newtypeReservedInstanceState :: Newtype ReservedInstanceState _
derive instance repGenericReservedInstanceState :: Generic ReservedInstanceState _
instance showReservedInstanceState :: Show ReservedInstanceState where
  show = genericShow
instance decodeReservedInstanceState :: Decode ReservedInstanceState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstanceState :: Encode ReservedInstanceState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a Reserved Instance.</p>
newtype ReservedInstances = ReservedInstances 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "Duration" :: NullOrUndefined.NullOrUndefined (Number)
  , "End" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "FixedPrice" :: NullOrUndefined.NullOrUndefined (Number)
  , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription)
  , "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String)
  , "Start" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "State" :: NullOrUndefined.NullOrUndefined (ReservedInstanceState)
  , "UsagePrice" :: NullOrUndefined.NullOrUndefined (Number)
  , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy)
  , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType)
  , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues)
  , "RecurringCharges" :: NullOrUndefined.NullOrUndefined (RecurringChargesList)
  , "Scope" :: NullOrUndefined.NullOrUndefined (Scope')
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeReservedInstances :: Newtype ReservedInstances _
derive instance repGenericReservedInstances :: Generic ReservedInstances _
instance showReservedInstances :: Show ReservedInstances where
  show = genericShow
instance decodeReservedInstances :: Decode ReservedInstances where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstances :: Encode ReservedInstances where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReservedInstances from required parameters
newReservedInstances :: ReservedInstances
newReservedInstances  = ReservedInstances { "AvailabilityZone": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "Duration": (NullOrUndefined Nothing), "End": (NullOrUndefined Nothing), "FixedPrice": (NullOrUndefined Nothing), "InstanceCount": (NullOrUndefined Nothing), "InstanceTenancy": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "OfferingClass": (NullOrUndefined Nothing), "OfferingType": (NullOrUndefined Nothing), "ProductDescription": (NullOrUndefined Nothing), "RecurringCharges": (NullOrUndefined Nothing), "ReservedInstancesId": (NullOrUndefined Nothing), "Scope": (NullOrUndefined Nothing), "Start": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "UsagePrice": (NullOrUndefined Nothing) }

-- | Constructs ReservedInstances's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservedInstances' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Duration" :: NullOrUndefined.NullOrUndefined (Number) , "End" :: NullOrUndefined.NullOrUndefined (DateTime) , "FixedPrice" :: NullOrUndefined.NullOrUndefined (Number) , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription) , "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) , "Start" :: NullOrUndefined.NullOrUndefined (DateTime) , "State" :: NullOrUndefined.NullOrUndefined (ReservedInstanceState) , "UsagePrice" :: NullOrUndefined.NullOrUndefined (Number) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType) , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues) , "RecurringCharges" :: NullOrUndefined.NullOrUndefined (RecurringChargesList) , "Scope" :: NullOrUndefined.NullOrUndefined (Scope') , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Duration" :: NullOrUndefined.NullOrUndefined (Number) , "End" :: NullOrUndefined.NullOrUndefined (DateTime) , "FixedPrice" :: NullOrUndefined.NullOrUndefined (Number) , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription) , "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) , "Start" :: NullOrUndefined.NullOrUndefined (DateTime) , "State" :: NullOrUndefined.NullOrUndefined (ReservedInstanceState) , "UsagePrice" :: NullOrUndefined.NullOrUndefined (Number) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType) , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues) , "RecurringCharges" :: NullOrUndefined.NullOrUndefined (RecurringChargesList) , "Scope" :: NullOrUndefined.NullOrUndefined (Scope') , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> ReservedInstances
newReservedInstances'  customize = (ReservedInstances <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "Duration": (NullOrUndefined Nothing), "End": (NullOrUndefined Nothing), "FixedPrice": (NullOrUndefined Nothing), "InstanceCount": (NullOrUndefined Nothing), "InstanceTenancy": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "OfferingClass": (NullOrUndefined Nothing), "OfferingType": (NullOrUndefined Nothing), "ProductDescription": (NullOrUndefined Nothing), "RecurringCharges": (NullOrUndefined Nothing), "ReservedInstancesId": (NullOrUndefined Nothing), "Scope": (NullOrUndefined Nothing), "Start": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "UsagePrice": (NullOrUndefined Nothing) }



-- | <p>Describes the configuration settings for the modified Reserved Instances.</p>
newtype ReservedInstancesConfiguration = ReservedInstancesConfiguration 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "Platform" :: NullOrUndefined.NullOrUndefined (String)
  , "Scope" :: NullOrUndefined.NullOrUndefined (Scope')
  }
derive instance newtypeReservedInstancesConfiguration :: Newtype ReservedInstancesConfiguration _
derive instance repGenericReservedInstancesConfiguration :: Generic ReservedInstancesConfiguration _
instance showReservedInstancesConfiguration :: Show ReservedInstancesConfiguration where
  show = genericShow
instance decodeReservedInstancesConfiguration :: Decode ReservedInstancesConfiguration where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesConfiguration :: Encode ReservedInstancesConfiguration where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReservedInstancesConfiguration from required parameters
newReservedInstancesConfiguration :: ReservedInstancesConfiguration
newReservedInstancesConfiguration  = ReservedInstancesConfiguration { "AvailabilityZone": (NullOrUndefined Nothing), "InstanceCount": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "Scope": (NullOrUndefined Nothing) }

-- | Constructs ReservedInstancesConfiguration's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservedInstancesConfiguration' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "Scope" :: NullOrUndefined.NullOrUndefined (Scope') } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "Scope" :: NullOrUndefined.NullOrUndefined (Scope') } ) -> ReservedInstancesConfiguration
newReservedInstancesConfiguration'  customize = (ReservedInstancesConfiguration <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "InstanceCount": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "Scope": (NullOrUndefined Nothing) }



newtype ReservedInstancesConfigurationList = ReservedInstancesConfigurationList (Array ReservedInstancesConfiguration)
derive instance newtypeReservedInstancesConfigurationList :: Newtype ReservedInstancesConfigurationList _
derive instance repGenericReservedInstancesConfigurationList :: Generic ReservedInstancesConfigurationList _
instance showReservedInstancesConfigurationList :: Show ReservedInstancesConfigurationList where
  show = genericShow
instance decodeReservedInstancesConfigurationList :: Decode ReservedInstancesConfigurationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesConfigurationList :: Encode ReservedInstancesConfigurationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the ID of a Reserved Instance.</p>
newtype ReservedInstancesId = ReservedInstancesId 
  { "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeReservedInstancesId :: Newtype ReservedInstancesId _
derive instance repGenericReservedInstancesId :: Generic ReservedInstancesId _
instance showReservedInstancesId :: Show ReservedInstancesId where
  show = genericShow
instance decodeReservedInstancesId :: Decode ReservedInstancesId where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesId :: Encode ReservedInstancesId where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReservedInstancesId from required parameters
newReservedInstancesId :: ReservedInstancesId
newReservedInstancesId  = ReservedInstancesId { "ReservedInstancesId": (NullOrUndefined Nothing) }

-- | Constructs ReservedInstancesId's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservedInstancesId' :: ( { "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) } ) -> ReservedInstancesId
newReservedInstancesId'  customize = (ReservedInstancesId <<< customize) { "ReservedInstancesId": (NullOrUndefined Nothing) }



newtype ReservedInstancesIdStringList = ReservedInstancesIdStringList (Array String)
derive instance newtypeReservedInstancesIdStringList :: Newtype ReservedInstancesIdStringList _
derive instance repGenericReservedInstancesIdStringList :: Generic ReservedInstancesIdStringList _
instance showReservedInstancesIdStringList :: Show ReservedInstancesIdStringList where
  show = genericShow
instance decodeReservedInstancesIdStringList :: Decode ReservedInstancesIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesIdStringList :: Encode ReservedInstancesIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ReservedInstancesList = ReservedInstancesList (Array ReservedInstances)
derive instance newtypeReservedInstancesList :: Newtype ReservedInstancesList _
derive instance repGenericReservedInstancesList :: Generic ReservedInstancesList _
instance showReservedInstancesList :: Show ReservedInstancesList where
  show = genericShow
instance decodeReservedInstancesList :: Decode ReservedInstancesList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesList :: Encode ReservedInstancesList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a Reserved Instance listing.</p>
newtype ReservedInstancesListing = ReservedInstancesListing 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "CreateDate" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "InstanceCounts" :: NullOrUndefined.NullOrUndefined (InstanceCountList)
  , "PriceSchedules" :: NullOrUndefined.NullOrUndefined (PriceScheduleList)
  , "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String)
  , "ReservedInstancesListingId" :: NullOrUndefined.NullOrUndefined (String)
  , "Status" :: NullOrUndefined.NullOrUndefined (ListingStatus)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "UpdateDate" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeReservedInstancesListing :: Newtype ReservedInstancesListing _
derive instance repGenericReservedInstancesListing :: Generic ReservedInstancesListing _
instance showReservedInstancesListing :: Show ReservedInstancesListing where
  show = genericShow
instance decodeReservedInstancesListing :: Decode ReservedInstancesListing where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesListing :: Encode ReservedInstancesListing where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReservedInstancesListing from required parameters
newReservedInstancesListing :: ReservedInstancesListing
newReservedInstancesListing  = ReservedInstancesListing { "ClientToken": (NullOrUndefined Nothing), "CreateDate": (NullOrUndefined Nothing), "InstanceCounts": (NullOrUndefined Nothing), "PriceSchedules": (NullOrUndefined Nothing), "ReservedInstancesId": (NullOrUndefined Nothing), "ReservedInstancesListingId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "UpdateDate": (NullOrUndefined Nothing) }

-- | Constructs ReservedInstancesListing's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservedInstancesListing' :: ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "CreateDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceCounts" :: NullOrUndefined.NullOrUndefined (InstanceCountList) , "PriceSchedules" :: NullOrUndefined.NullOrUndefined (PriceScheduleList) , "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) , "ReservedInstancesListingId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (ListingStatus) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "UpdateDate" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "CreateDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceCounts" :: NullOrUndefined.NullOrUndefined (InstanceCountList) , "PriceSchedules" :: NullOrUndefined.NullOrUndefined (PriceScheduleList) , "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) , "ReservedInstancesListingId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (ListingStatus) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "UpdateDate" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> ReservedInstancesListing
newReservedInstancesListing'  customize = (ReservedInstancesListing <<< customize) { "ClientToken": (NullOrUndefined Nothing), "CreateDate": (NullOrUndefined Nothing), "InstanceCounts": (NullOrUndefined Nothing), "PriceSchedules": (NullOrUndefined Nothing), "ReservedInstancesId": (NullOrUndefined Nothing), "ReservedInstancesListingId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "UpdateDate": (NullOrUndefined Nothing) }



newtype ReservedInstancesListingList = ReservedInstancesListingList (Array ReservedInstancesListing)
derive instance newtypeReservedInstancesListingList :: Newtype ReservedInstancesListingList _
derive instance repGenericReservedInstancesListingList :: Generic ReservedInstancesListingList _
instance showReservedInstancesListingList :: Show ReservedInstancesListingList where
  show = genericShow
instance decodeReservedInstancesListingList :: Decode ReservedInstancesListingList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesListingList :: Encode ReservedInstancesListingList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a Reserved Instance modification.</p>
newtype ReservedInstancesModification = ReservedInstancesModification 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "CreateDate" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "EffectiveDate" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "ModificationResults" :: NullOrUndefined.NullOrUndefined (ReservedInstancesModificationResultList)
  , "ReservedInstancesIds" :: NullOrUndefined.NullOrUndefined (ReservedIntancesIds)
  , "ReservedInstancesModificationId" :: NullOrUndefined.NullOrUndefined (String)
  , "Status" :: NullOrUndefined.NullOrUndefined (String)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  , "UpdateDate" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeReservedInstancesModification :: Newtype ReservedInstancesModification _
derive instance repGenericReservedInstancesModification :: Generic ReservedInstancesModification _
instance showReservedInstancesModification :: Show ReservedInstancesModification where
  show = genericShow
instance decodeReservedInstancesModification :: Decode ReservedInstancesModification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesModification :: Encode ReservedInstancesModification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReservedInstancesModification from required parameters
newReservedInstancesModification :: ReservedInstancesModification
newReservedInstancesModification  = ReservedInstancesModification { "ClientToken": (NullOrUndefined Nothing), "CreateDate": (NullOrUndefined Nothing), "EffectiveDate": (NullOrUndefined Nothing), "ModificationResults": (NullOrUndefined Nothing), "ReservedInstancesIds": (NullOrUndefined Nothing), "ReservedInstancesModificationId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "UpdateDate": (NullOrUndefined Nothing) }

-- | Constructs ReservedInstancesModification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservedInstancesModification' :: ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "CreateDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "EffectiveDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "ModificationResults" :: NullOrUndefined.NullOrUndefined (ReservedInstancesModificationResultList) , "ReservedInstancesIds" :: NullOrUndefined.NullOrUndefined (ReservedIntancesIds) , "ReservedInstancesModificationId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "UpdateDate" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "CreateDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "EffectiveDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "ModificationResults" :: NullOrUndefined.NullOrUndefined (ReservedInstancesModificationResultList) , "ReservedInstancesIds" :: NullOrUndefined.NullOrUndefined (ReservedIntancesIds) , "ReservedInstancesModificationId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "UpdateDate" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> ReservedInstancesModification
newReservedInstancesModification'  customize = (ReservedInstancesModification <<< customize) { "ClientToken": (NullOrUndefined Nothing), "CreateDate": (NullOrUndefined Nothing), "EffectiveDate": (NullOrUndefined Nothing), "ModificationResults": (NullOrUndefined Nothing), "ReservedInstancesIds": (NullOrUndefined Nothing), "ReservedInstancesModificationId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "UpdateDate": (NullOrUndefined Nothing) }



newtype ReservedInstancesModificationIdStringList = ReservedInstancesModificationIdStringList (Array String)
derive instance newtypeReservedInstancesModificationIdStringList :: Newtype ReservedInstancesModificationIdStringList _
derive instance repGenericReservedInstancesModificationIdStringList :: Generic ReservedInstancesModificationIdStringList _
instance showReservedInstancesModificationIdStringList :: Show ReservedInstancesModificationIdStringList where
  show = genericShow
instance decodeReservedInstancesModificationIdStringList :: Decode ReservedInstancesModificationIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesModificationIdStringList :: Encode ReservedInstancesModificationIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ReservedInstancesModificationList = ReservedInstancesModificationList (Array ReservedInstancesModification)
derive instance newtypeReservedInstancesModificationList :: Newtype ReservedInstancesModificationList _
derive instance repGenericReservedInstancesModificationList :: Generic ReservedInstancesModificationList _
instance showReservedInstancesModificationList :: Show ReservedInstancesModificationList where
  show = genericShow
instance decodeReservedInstancesModificationList :: Decode ReservedInstancesModificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesModificationList :: Encode ReservedInstancesModificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the modification request/s.</p>
newtype ReservedInstancesModificationResult = ReservedInstancesModificationResult 
  { "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String)
  , "TargetConfiguration" :: NullOrUndefined.NullOrUndefined (ReservedInstancesConfiguration)
  }
derive instance newtypeReservedInstancesModificationResult :: Newtype ReservedInstancesModificationResult _
derive instance repGenericReservedInstancesModificationResult :: Generic ReservedInstancesModificationResult _
instance showReservedInstancesModificationResult :: Show ReservedInstancesModificationResult where
  show = genericShow
instance decodeReservedInstancesModificationResult :: Decode ReservedInstancesModificationResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesModificationResult :: Encode ReservedInstancesModificationResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReservedInstancesModificationResult from required parameters
newReservedInstancesModificationResult :: ReservedInstancesModificationResult
newReservedInstancesModificationResult  = ReservedInstancesModificationResult { "ReservedInstancesId": (NullOrUndefined Nothing), "TargetConfiguration": (NullOrUndefined Nothing) }

-- | Constructs ReservedInstancesModificationResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservedInstancesModificationResult' :: ( { "ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) , "TargetConfiguration" :: NullOrUndefined.NullOrUndefined (ReservedInstancesConfiguration) } -> {"ReservedInstancesId" :: NullOrUndefined.NullOrUndefined (String) , "TargetConfiguration" :: NullOrUndefined.NullOrUndefined (ReservedInstancesConfiguration) } ) -> ReservedInstancesModificationResult
newReservedInstancesModificationResult'  customize = (ReservedInstancesModificationResult <<< customize) { "ReservedInstancesId": (NullOrUndefined Nothing), "TargetConfiguration": (NullOrUndefined Nothing) }



newtype ReservedInstancesModificationResultList = ReservedInstancesModificationResultList (Array ReservedInstancesModificationResult)
derive instance newtypeReservedInstancesModificationResultList :: Newtype ReservedInstancesModificationResultList _
derive instance repGenericReservedInstancesModificationResultList :: Generic ReservedInstancesModificationResultList _
instance showReservedInstancesModificationResultList :: Show ReservedInstancesModificationResultList where
  show = genericShow
instance decodeReservedInstancesModificationResultList :: Decode ReservedInstancesModificationResultList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesModificationResultList :: Encode ReservedInstancesModificationResultList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a Reserved Instance offering.</p>
newtype ReservedInstancesOffering = ReservedInstancesOffering 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "Duration" :: NullOrUndefined.NullOrUndefined (Number)
  , "FixedPrice" :: NullOrUndefined.NullOrUndefined (Number)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription)
  , "ReservedInstancesOfferingId" :: NullOrUndefined.NullOrUndefined (String)
  , "UsagePrice" :: NullOrUndefined.NullOrUndefined (Number)
  , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues)
  , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy)
  , "Marketplace" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType)
  , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues)
  , "PricingDetails" :: NullOrUndefined.NullOrUndefined (PricingDetailsList)
  , "RecurringCharges" :: NullOrUndefined.NullOrUndefined (RecurringChargesList)
  , "Scope" :: NullOrUndefined.NullOrUndefined (Scope')
  }
derive instance newtypeReservedInstancesOffering :: Newtype ReservedInstancesOffering _
derive instance repGenericReservedInstancesOffering :: Generic ReservedInstancesOffering _
instance showReservedInstancesOffering :: Show ReservedInstancesOffering where
  show = genericShow
instance decodeReservedInstancesOffering :: Decode ReservedInstancesOffering where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesOffering :: Encode ReservedInstancesOffering where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ReservedInstancesOffering from required parameters
newReservedInstancesOffering :: ReservedInstancesOffering
newReservedInstancesOffering  = ReservedInstancesOffering { "AvailabilityZone": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "Duration": (NullOrUndefined Nothing), "FixedPrice": (NullOrUndefined Nothing), "InstanceTenancy": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Marketplace": (NullOrUndefined Nothing), "OfferingClass": (NullOrUndefined Nothing), "OfferingType": (NullOrUndefined Nothing), "PricingDetails": (NullOrUndefined Nothing), "ProductDescription": (NullOrUndefined Nothing), "RecurringCharges": (NullOrUndefined Nothing), "ReservedInstancesOfferingId": (NullOrUndefined Nothing), "Scope": (NullOrUndefined Nothing), "UsagePrice": (NullOrUndefined Nothing) }

-- | Constructs ReservedInstancesOffering's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newReservedInstancesOffering' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Duration" :: NullOrUndefined.NullOrUndefined (Number) , "FixedPrice" :: NullOrUndefined.NullOrUndefined (Number) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription) , "ReservedInstancesOfferingId" :: NullOrUndefined.NullOrUndefined (String) , "UsagePrice" :: NullOrUndefined.NullOrUndefined (Number) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "Marketplace" :: NullOrUndefined.NullOrUndefined (Boolean) , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType) , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues) , "PricingDetails" :: NullOrUndefined.NullOrUndefined (PricingDetailsList) , "RecurringCharges" :: NullOrUndefined.NullOrUndefined (RecurringChargesList) , "Scope" :: NullOrUndefined.NullOrUndefined (Scope') } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Duration" :: NullOrUndefined.NullOrUndefined (Number) , "FixedPrice" :: NullOrUndefined.NullOrUndefined (Number) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription) , "ReservedInstancesOfferingId" :: NullOrUndefined.NullOrUndefined (String) , "UsagePrice" :: NullOrUndefined.NullOrUndefined (Number) , "CurrencyCode" :: NullOrUndefined.NullOrUndefined (CurrencyCodeValues) , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "Marketplace" :: NullOrUndefined.NullOrUndefined (Boolean) , "OfferingClass" :: NullOrUndefined.NullOrUndefined (OfferingClassType) , "OfferingType" :: NullOrUndefined.NullOrUndefined (OfferingTypeValues) , "PricingDetails" :: NullOrUndefined.NullOrUndefined (PricingDetailsList) , "RecurringCharges" :: NullOrUndefined.NullOrUndefined (RecurringChargesList) , "Scope" :: NullOrUndefined.NullOrUndefined (Scope') } ) -> ReservedInstancesOffering
newReservedInstancesOffering'  customize = (ReservedInstancesOffering <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "CurrencyCode": (NullOrUndefined Nothing), "Duration": (NullOrUndefined Nothing), "FixedPrice": (NullOrUndefined Nothing), "InstanceTenancy": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Marketplace": (NullOrUndefined Nothing), "OfferingClass": (NullOrUndefined Nothing), "OfferingType": (NullOrUndefined Nothing), "PricingDetails": (NullOrUndefined Nothing), "ProductDescription": (NullOrUndefined Nothing), "RecurringCharges": (NullOrUndefined Nothing), "ReservedInstancesOfferingId": (NullOrUndefined Nothing), "Scope": (NullOrUndefined Nothing), "UsagePrice": (NullOrUndefined Nothing) }



newtype ReservedInstancesOfferingIdStringList = ReservedInstancesOfferingIdStringList (Array String)
derive instance newtypeReservedInstancesOfferingIdStringList :: Newtype ReservedInstancesOfferingIdStringList _
derive instance repGenericReservedInstancesOfferingIdStringList :: Generic ReservedInstancesOfferingIdStringList _
instance showReservedInstancesOfferingIdStringList :: Show ReservedInstancesOfferingIdStringList where
  show = genericShow
instance decodeReservedInstancesOfferingIdStringList :: Decode ReservedInstancesOfferingIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesOfferingIdStringList :: Encode ReservedInstancesOfferingIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ReservedInstancesOfferingList = ReservedInstancesOfferingList (Array ReservedInstancesOffering)
derive instance newtypeReservedInstancesOfferingList :: Newtype ReservedInstancesOfferingList _
derive instance repGenericReservedInstancesOfferingList :: Generic ReservedInstancesOfferingList _
instance showReservedInstancesOfferingList :: Show ReservedInstancesOfferingList where
  show = genericShow
instance decodeReservedInstancesOfferingList :: Decode ReservedInstancesOfferingList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedInstancesOfferingList :: Encode ReservedInstancesOfferingList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ReservedIntancesIds = ReservedIntancesIds (Array ReservedInstancesId)
derive instance newtypeReservedIntancesIds :: Newtype ReservedIntancesIds _
derive instance repGenericReservedIntancesIds :: Generic ReservedIntancesIds _
instance showReservedIntancesIds :: Show ReservedIntancesIds where
  show = genericShow
instance decodeReservedIntancesIds :: Decode ReservedIntancesIds where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeReservedIntancesIds :: Encode ReservedIntancesIds where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ResetFpgaImageAttributeName = ResetFpgaImageAttributeName String
derive instance newtypeResetFpgaImageAttributeName :: Newtype ResetFpgaImageAttributeName _
derive instance repGenericResetFpgaImageAttributeName :: Generic ResetFpgaImageAttributeName _
instance showResetFpgaImageAttributeName :: Show ResetFpgaImageAttributeName where
  show = genericShow
instance decodeResetFpgaImageAttributeName :: Decode ResetFpgaImageAttributeName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResetFpgaImageAttributeName :: Encode ResetFpgaImageAttributeName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ResetFpgaImageAttributeRequest = ResetFpgaImageAttributeRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "FpgaImageId" :: (String)
  , "Attribute" :: NullOrUndefined.NullOrUndefined (ResetFpgaImageAttributeName)
  }
derive instance newtypeResetFpgaImageAttributeRequest :: Newtype ResetFpgaImageAttributeRequest _
derive instance repGenericResetFpgaImageAttributeRequest :: Generic ResetFpgaImageAttributeRequest _
instance showResetFpgaImageAttributeRequest :: Show ResetFpgaImageAttributeRequest where
  show = genericShow
instance decodeResetFpgaImageAttributeRequest :: Decode ResetFpgaImageAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResetFpgaImageAttributeRequest :: Encode ResetFpgaImageAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ResetFpgaImageAttributeRequest from required parameters
newResetFpgaImageAttributeRequest :: String -> ResetFpgaImageAttributeRequest
newResetFpgaImageAttributeRequest _FpgaImageId = ResetFpgaImageAttributeRequest { "FpgaImageId": _FpgaImageId, "Attribute": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ResetFpgaImageAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newResetFpgaImageAttributeRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "FpgaImageId" :: (String) , "Attribute" :: NullOrUndefined.NullOrUndefined (ResetFpgaImageAttributeName) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "FpgaImageId" :: (String) , "Attribute" :: NullOrUndefined.NullOrUndefined (ResetFpgaImageAttributeName) } ) -> ResetFpgaImageAttributeRequest
newResetFpgaImageAttributeRequest' _FpgaImageId customize = (ResetFpgaImageAttributeRequest <<< customize) { "FpgaImageId": _FpgaImageId, "Attribute": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



newtype ResetFpgaImageAttributeResult = ResetFpgaImageAttributeResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeResetFpgaImageAttributeResult :: Newtype ResetFpgaImageAttributeResult _
derive instance repGenericResetFpgaImageAttributeResult :: Generic ResetFpgaImageAttributeResult _
instance showResetFpgaImageAttributeResult :: Show ResetFpgaImageAttributeResult where
  show = genericShow
instance decodeResetFpgaImageAttributeResult :: Decode ResetFpgaImageAttributeResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResetFpgaImageAttributeResult :: Encode ResetFpgaImageAttributeResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ResetFpgaImageAttributeResult from required parameters
newResetFpgaImageAttributeResult :: ResetFpgaImageAttributeResult
newResetFpgaImageAttributeResult  = ResetFpgaImageAttributeResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs ResetFpgaImageAttributeResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newResetFpgaImageAttributeResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ResetFpgaImageAttributeResult
newResetFpgaImageAttributeResult'  customize = (ResetFpgaImageAttributeResult <<< customize) { "Return": (NullOrUndefined Nothing) }



newtype ResetImageAttributeName = ResetImageAttributeName String
derive instance newtypeResetImageAttributeName :: Newtype ResetImageAttributeName _
derive instance repGenericResetImageAttributeName :: Generic ResetImageAttributeName _
instance showResetImageAttributeName :: Show ResetImageAttributeName where
  show = genericShow
instance decodeResetImageAttributeName :: Decode ResetImageAttributeName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResetImageAttributeName :: Encode ResetImageAttributeName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for ResetImageAttribute.</p>
newtype ResetImageAttributeRequest = ResetImageAttributeRequest 
  { "Attribute" :: (ResetImageAttributeName)
  , "ImageId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeResetImageAttributeRequest :: Newtype ResetImageAttributeRequest _
derive instance repGenericResetImageAttributeRequest :: Generic ResetImageAttributeRequest _
instance showResetImageAttributeRequest :: Show ResetImageAttributeRequest where
  show = genericShow
instance decodeResetImageAttributeRequest :: Decode ResetImageAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResetImageAttributeRequest :: Encode ResetImageAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ResetImageAttributeRequest from required parameters
newResetImageAttributeRequest :: ResetImageAttributeName -> String -> ResetImageAttributeRequest
newResetImageAttributeRequest _Attribute _ImageId = ResetImageAttributeRequest { "Attribute": _Attribute, "ImageId": _ImageId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ResetImageAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newResetImageAttributeRequest' :: ResetImageAttributeName -> String -> ( { "Attribute" :: (ResetImageAttributeName) , "ImageId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Attribute" :: (ResetImageAttributeName) , "ImageId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ResetImageAttributeRequest
newResetImageAttributeRequest' _Attribute _ImageId customize = (ResetImageAttributeRequest <<< customize) { "Attribute": _Attribute, "ImageId": _ImageId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ResetInstanceAttribute.</p>
newtype ResetInstanceAttributeRequest = ResetInstanceAttributeRequest 
  { "Attribute" :: (InstanceAttributeName)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceId" :: (String)
  }
derive instance newtypeResetInstanceAttributeRequest :: Newtype ResetInstanceAttributeRequest _
derive instance repGenericResetInstanceAttributeRequest :: Generic ResetInstanceAttributeRequest _
instance showResetInstanceAttributeRequest :: Show ResetInstanceAttributeRequest where
  show = genericShow
instance decodeResetInstanceAttributeRequest :: Decode ResetInstanceAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResetInstanceAttributeRequest :: Encode ResetInstanceAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ResetInstanceAttributeRequest from required parameters
newResetInstanceAttributeRequest :: InstanceAttributeName -> String -> ResetInstanceAttributeRequest
newResetInstanceAttributeRequest _Attribute _InstanceId = ResetInstanceAttributeRequest { "Attribute": _Attribute, "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ResetInstanceAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newResetInstanceAttributeRequest' :: InstanceAttributeName -> String -> ( { "Attribute" :: (InstanceAttributeName) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) } -> {"Attribute" :: (InstanceAttributeName) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceId" :: (String) } ) -> ResetInstanceAttributeRequest
newResetInstanceAttributeRequest' _Attribute _InstanceId customize = (ResetInstanceAttributeRequest <<< customize) { "Attribute": _Attribute, "InstanceId": _InstanceId, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ResetNetworkInterfaceAttribute.</p>
newtype ResetNetworkInterfaceAttributeRequest = ResetNetworkInterfaceAttributeRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkInterfaceId" :: (String)
  , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeResetNetworkInterfaceAttributeRequest :: Newtype ResetNetworkInterfaceAttributeRequest _
derive instance repGenericResetNetworkInterfaceAttributeRequest :: Generic ResetNetworkInterfaceAttributeRequest _
instance showResetNetworkInterfaceAttributeRequest :: Show ResetNetworkInterfaceAttributeRequest where
  show = genericShow
instance decodeResetNetworkInterfaceAttributeRequest :: Decode ResetNetworkInterfaceAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResetNetworkInterfaceAttributeRequest :: Encode ResetNetworkInterfaceAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ResetNetworkInterfaceAttributeRequest from required parameters
newResetNetworkInterfaceAttributeRequest :: String -> ResetNetworkInterfaceAttributeRequest
newResetNetworkInterfaceAttributeRequest _NetworkInterfaceId = ResetNetworkInterfaceAttributeRequest { "NetworkInterfaceId": _NetworkInterfaceId, "DryRun": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing) }

-- | Constructs ResetNetworkInterfaceAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newResetNetworkInterfaceAttributeRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceId" :: (String) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceId" :: (String) , "SourceDestCheck" :: NullOrUndefined.NullOrUndefined (String) } ) -> ResetNetworkInterfaceAttributeRequest
newResetNetworkInterfaceAttributeRequest' _NetworkInterfaceId customize = (ResetNetworkInterfaceAttributeRequest <<< customize) { "NetworkInterfaceId": _NetworkInterfaceId, "DryRun": (NullOrUndefined Nothing), "SourceDestCheck": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for ResetSnapshotAttribute.</p>
newtype ResetSnapshotAttributeRequest = ResetSnapshotAttributeRequest 
  { "Attribute" :: (SnapshotAttributeName)
  , "SnapshotId" :: (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeResetSnapshotAttributeRequest :: Newtype ResetSnapshotAttributeRequest _
derive instance repGenericResetSnapshotAttributeRequest :: Generic ResetSnapshotAttributeRequest _
instance showResetSnapshotAttributeRequest :: Show ResetSnapshotAttributeRequest where
  show = genericShow
instance decodeResetSnapshotAttributeRequest :: Decode ResetSnapshotAttributeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResetSnapshotAttributeRequest :: Encode ResetSnapshotAttributeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ResetSnapshotAttributeRequest from required parameters
newResetSnapshotAttributeRequest :: SnapshotAttributeName -> String -> ResetSnapshotAttributeRequest
newResetSnapshotAttributeRequest _Attribute _SnapshotId = ResetSnapshotAttributeRequest { "Attribute": _Attribute, "SnapshotId": _SnapshotId, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs ResetSnapshotAttributeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newResetSnapshotAttributeRequest' :: SnapshotAttributeName -> String -> ( { "Attribute" :: (SnapshotAttributeName) , "SnapshotId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Attribute" :: (SnapshotAttributeName) , "SnapshotId" :: (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ResetSnapshotAttributeRequest
newResetSnapshotAttributeRequest' _Attribute _SnapshotId customize = (ResetSnapshotAttributeRequest <<< customize) { "Attribute": _Attribute, "SnapshotId": _SnapshotId, "DryRun": (NullOrUndefined Nothing) }



newtype ResourceIdList = ResourceIdList (Array String)
derive instance newtypeResourceIdList :: Newtype ResourceIdList _
derive instance repGenericResourceIdList :: Generic ResourceIdList _
instance showResourceIdList :: Show ResourceIdList where
  show = genericShow
instance decodeResourceIdList :: Decode ResourceIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResourceIdList :: Encode ResourceIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ResourceList = ResourceList (Array String)
derive instance newtypeResourceList :: Newtype ResourceList _
derive instance repGenericResourceList :: Generic ResourceList _
instance showResourceList :: Show ResourceList where
  show = genericShow
instance decodeResourceList :: Decode ResourceList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResourceList :: Encode ResourceList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ResourceType = ResourceType String
derive instance newtypeResourceType :: Newtype ResourceType _
derive instance repGenericResourceType :: Generic ResourceType _
instance showResourceType :: Show ResourceType where
  show = genericShow
instance decodeResourceType :: Decode ResourceType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResourceType :: Encode ResourceType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the error that's returned when you cannot delete a launch template version.</p>
newtype ResponseError = ResponseError 
  { "Code" :: NullOrUndefined.NullOrUndefined (LaunchTemplateErrorCode)
  , "Message" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeResponseError :: Newtype ResponseError _
derive instance repGenericResponseError :: Generic ResponseError _
instance showResponseError :: Show ResponseError where
  show = genericShow
instance decodeResponseError :: Decode ResponseError where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResponseError :: Encode ResponseError where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ResponseError from required parameters
newResponseError :: ResponseError
newResponseError  = ResponseError { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }

-- | Constructs ResponseError's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newResponseError' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (LaunchTemplateErrorCode) , "Message" :: NullOrUndefined.NullOrUndefined (String) } -> {"Code" :: NullOrUndefined.NullOrUndefined (LaunchTemplateErrorCode) , "Message" :: NullOrUndefined.NullOrUndefined (String) } ) -> ResponseError
newResponseError'  customize = (ResponseError <<< customize) { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }



newtype ResponseHostIdList = ResponseHostIdList (Array String)
derive instance newtypeResponseHostIdList :: Newtype ResponseHostIdList _
derive instance repGenericResponseHostIdList :: Generic ResponseHostIdList _
instance showResponseHostIdList :: Show ResponseHostIdList where
  show = genericShow
instance decodeResponseHostIdList :: Decode ResponseHostIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResponseHostIdList :: Encode ResponseHostIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ResponseHostIdSet = ResponseHostIdSet (Array String)
derive instance newtypeResponseHostIdSet :: Newtype ResponseHostIdSet _
derive instance repGenericResponseHostIdSet :: Generic ResponseHostIdSet _
instance showResponseHostIdSet :: Show ResponseHostIdSet where
  show = genericShow
instance decodeResponseHostIdSet :: Decode ResponseHostIdSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResponseHostIdSet :: Encode ResponseHostIdSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The information for a launch template. </p>
newtype ResponseLaunchTemplateData = ResponseLaunchTemplateData 
  { "KernelId" :: NullOrUndefined.NullOrUndefined (String)
  , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (LaunchTemplateIamInstanceProfileSpecification)
  , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (LaunchTemplateBlockDeviceMappingList)
  , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceNetworkInterfaceSpecificationList)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  , "Monitoring" :: NullOrUndefined.NullOrUndefined (LaunchTemplatesMonitoring)
  , "Placement" :: NullOrUndefined.NullOrUndefined (LaunchTemplatePlacement)
  , "RamDiskId" :: NullOrUndefined.NullOrUndefined (String)
  , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior)
  , "UserData" :: NullOrUndefined.NullOrUndefined (String)
  , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (LaunchTemplateTagSpecificationList)
  , "ElasticGpuSpecifications" :: NullOrUndefined.NullOrUndefined (ElasticGpuSpecificationResponseList)
  , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "InstanceMarketOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceMarketOptions)
  , "CreditSpecification" :: NullOrUndefined.NullOrUndefined (CreditSpecification)
  }
derive instance newtypeResponseLaunchTemplateData :: Newtype ResponseLaunchTemplateData _
derive instance repGenericResponseLaunchTemplateData :: Generic ResponseLaunchTemplateData _
instance showResponseLaunchTemplateData :: Show ResponseLaunchTemplateData where
  show = genericShow
instance decodeResponseLaunchTemplateData :: Decode ResponseLaunchTemplateData where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeResponseLaunchTemplateData :: Encode ResponseLaunchTemplateData where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ResponseLaunchTemplateData from required parameters
newResponseLaunchTemplateData :: ResponseLaunchTemplateData
newResponseLaunchTemplateData  = ResponseLaunchTemplateData { "BlockDeviceMappings": (NullOrUndefined Nothing), "CreditSpecification": (NullOrUndefined Nothing), "DisableApiTermination": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "ElasticGpuSpecifications": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceMarketOptions": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamDiskId": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }

-- | Constructs ResponseLaunchTemplateData's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newResponseLaunchTemplateData' :: ( { "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (LaunchTemplateIamInstanceProfileSpecification) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (LaunchTemplateBlockDeviceMappingList) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceNetworkInterfaceSpecificationList) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (LaunchTemplatesMonitoring) , "Placement" :: NullOrUndefined.NullOrUndefined (LaunchTemplatePlacement) , "RamDiskId" :: NullOrUndefined.NullOrUndefined (String) , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior) , "UserData" :: NullOrUndefined.NullOrUndefined (String) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (LaunchTemplateTagSpecificationList) , "ElasticGpuSpecifications" :: NullOrUndefined.NullOrUndefined (ElasticGpuSpecificationResponseList) , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "InstanceMarketOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceMarketOptions) , "CreditSpecification" :: NullOrUndefined.NullOrUndefined (CreditSpecification) } -> {"KernelId" :: NullOrUndefined.NullOrUndefined (String) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (LaunchTemplateIamInstanceProfileSpecification) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (LaunchTemplateBlockDeviceMappingList) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceNetworkInterfaceSpecificationList) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (LaunchTemplatesMonitoring) , "Placement" :: NullOrUndefined.NullOrUndefined (LaunchTemplatePlacement) , "RamDiskId" :: NullOrUndefined.NullOrUndefined (String) , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior) , "UserData" :: NullOrUndefined.NullOrUndefined (String) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (LaunchTemplateTagSpecificationList) , "ElasticGpuSpecifications" :: NullOrUndefined.NullOrUndefined (ElasticGpuSpecificationResponseList) , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "InstanceMarketOptions" :: NullOrUndefined.NullOrUndefined (LaunchTemplateInstanceMarketOptions) , "CreditSpecification" :: NullOrUndefined.NullOrUndefined (CreditSpecification) } ) -> ResponseLaunchTemplateData
newResponseLaunchTemplateData'  customize = (ResponseLaunchTemplateData <<< customize) { "BlockDeviceMappings": (NullOrUndefined Nothing), "CreditSpecification": (NullOrUndefined Nothing), "DisableApiTermination": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "ElasticGpuSpecifications": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceMarketOptions": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamDiskId": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }



newtype RestorableByStringList = RestorableByStringList (Array String)
derive instance newtypeRestorableByStringList :: Newtype RestorableByStringList _
derive instance repGenericRestorableByStringList :: Generic RestorableByStringList _
instance showRestorableByStringList :: Show RestorableByStringList where
  show = genericShow
instance decodeRestorableByStringList :: Decode RestorableByStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRestorableByStringList :: Encode RestorableByStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for RestoreAddressToClassic.</p>
newtype RestoreAddressToClassicRequest = RestoreAddressToClassicRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "PublicIp" :: (String)
  }
derive instance newtypeRestoreAddressToClassicRequest :: Newtype RestoreAddressToClassicRequest _
derive instance repGenericRestoreAddressToClassicRequest :: Generic RestoreAddressToClassicRequest _
instance showRestoreAddressToClassicRequest :: Show RestoreAddressToClassicRequest where
  show = genericShow
instance decodeRestoreAddressToClassicRequest :: Decode RestoreAddressToClassicRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRestoreAddressToClassicRequest :: Encode RestoreAddressToClassicRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RestoreAddressToClassicRequest from required parameters
newRestoreAddressToClassicRequest :: String -> RestoreAddressToClassicRequest
newRestoreAddressToClassicRequest _PublicIp = RestoreAddressToClassicRequest { "PublicIp": _PublicIp, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs RestoreAddressToClassicRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRestoreAddressToClassicRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "PublicIp" :: (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "PublicIp" :: (String) } ) -> RestoreAddressToClassicRequest
newRestoreAddressToClassicRequest' _PublicIp customize = (RestoreAddressToClassicRequest <<< customize) { "PublicIp": _PublicIp, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of RestoreAddressToClassic.</p>
newtype RestoreAddressToClassicResult = RestoreAddressToClassicResult 
  { "PublicIp" :: NullOrUndefined.NullOrUndefined (String)
  , "Status" :: NullOrUndefined.NullOrUndefined (Status)
  }
derive instance newtypeRestoreAddressToClassicResult :: Newtype RestoreAddressToClassicResult _
derive instance repGenericRestoreAddressToClassicResult :: Generic RestoreAddressToClassicResult _
instance showRestoreAddressToClassicResult :: Show RestoreAddressToClassicResult where
  show = genericShow
instance decodeRestoreAddressToClassicResult :: Decode RestoreAddressToClassicResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRestoreAddressToClassicResult :: Encode RestoreAddressToClassicResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RestoreAddressToClassicResult from required parameters
newRestoreAddressToClassicResult :: RestoreAddressToClassicResult
newRestoreAddressToClassicResult  = RestoreAddressToClassicResult { "PublicIp": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }

-- | Constructs RestoreAddressToClassicResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRestoreAddressToClassicResult' :: ( { "PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (Status) } -> {"PublicIp" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (Status) } ) -> RestoreAddressToClassicResult
newRestoreAddressToClassicResult'  customize = (RestoreAddressToClassicResult <<< customize) { "PublicIp": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for RevokeSecurityGroupEgress.</p>
newtype RevokeSecurityGroupEgressRequest = RevokeSecurityGroupEgressRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "GroupId" :: (String)
  , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList)
  , "CidrIp" :: NullOrUndefined.NullOrUndefined (String)
  , "FromPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String)
  , "ToPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeRevokeSecurityGroupEgressRequest :: Newtype RevokeSecurityGroupEgressRequest _
derive instance repGenericRevokeSecurityGroupEgressRequest :: Generic RevokeSecurityGroupEgressRequest _
instance showRevokeSecurityGroupEgressRequest :: Show RevokeSecurityGroupEgressRequest where
  show = genericShow
instance decodeRevokeSecurityGroupEgressRequest :: Decode RevokeSecurityGroupEgressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRevokeSecurityGroupEgressRequest :: Encode RevokeSecurityGroupEgressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RevokeSecurityGroupEgressRequest from required parameters
newRevokeSecurityGroupEgressRequest :: String -> RevokeSecurityGroupEgressRequest
newRevokeSecurityGroupEgressRequest _GroupId = RevokeSecurityGroupEgressRequest { "GroupId": _GroupId, "CidrIp": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "FromPort": (NullOrUndefined Nothing), "IpPermissions": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "SourceSecurityGroupName": (NullOrUndefined Nothing), "SourceSecurityGroupOwnerId": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing) }

-- | Constructs RevokeSecurityGroupEgressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRevokeSecurityGroupEgressRequest' :: String -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupId" :: (String) , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "CidrIp" :: NullOrUndefined.NullOrUndefined (String) , "FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupId" :: (String) , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "CidrIp" :: NullOrUndefined.NullOrUndefined (String) , "FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String) } ) -> RevokeSecurityGroupEgressRequest
newRevokeSecurityGroupEgressRequest' _GroupId customize = (RevokeSecurityGroupEgressRequest <<< customize) { "GroupId": _GroupId, "CidrIp": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "FromPort": (NullOrUndefined Nothing), "IpPermissions": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "SourceSecurityGroupName": (NullOrUndefined Nothing), "SourceSecurityGroupOwnerId": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for RevokeSecurityGroupIngress.</p>
newtype RevokeSecurityGroupIngressRequest = RevokeSecurityGroupIngressRequest 
  { "CidrIp" :: NullOrUndefined.NullOrUndefined (String)
  , "FromPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "GroupId" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList)
  , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String)
  , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "ToPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeRevokeSecurityGroupIngressRequest :: Newtype RevokeSecurityGroupIngressRequest _
derive instance repGenericRevokeSecurityGroupIngressRequest :: Generic RevokeSecurityGroupIngressRequest _
instance showRevokeSecurityGroupIngressRequest :: Show RevokeSecurityGroupIngressRequest where
  show = genericShow
instance decodeRevokeSecurityGroupIngressRequest :: Decode RevokeSecurityGroupIngressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRevokeSecurityGroupIngressRequest :: Encode RevokeSecurityGroupIngressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RevokeSecurityGroupIngressRequest from required parameters
newRevokeSecurityGroupIngressRequest :: RevokeSecurityGroupIngressRequest
newRevokeSecurityGroupIngressRequest  = RevokeSecurityGroupIngressRequest { "CidrIp": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "FromPort": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "IpPermissions": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "SourceSecurityGroupName": (NullOrUndefined Nothing), "SourceSecurityGroupOwnerId": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing) }

-- | Constructs RevokeSecurityGroupIngressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRevokeSecurityGroupIngressRequest' :: ( { "CidrIp" :: NullOrUndefined.NullOrUndefined (String) , "FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"CidrIp" :: NullOrUndefined.NullOrUndefined (String) , "FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupName" :: NullOrUndefined.NullOrUndefined (String) , "SourceSecurityGroupOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> RevokeSecurityGroupIngressRequest
newRevokeSecurityGroupIngressRequest'  customize = (RevokeSecurityGroupIngressRequest <<< customize) { "CidrIp": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "FromPort": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "IpPermissions": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "SourceSecurityGroupName": (NullOrUndefined Nothing), "SourceSecurityGroupOwnerId": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing) }



-- | <p>Describes a route in a route table.</p>
newtype Route = Route 
  { "DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DestinationPrefixListId" :: NullOrUndefined.NullOrUndefined (String)
  , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "GatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceOwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "Origin" :: NullOrUndefined.NullOrUndefined (RouteOrigin)
  , "State" :: NullOrUndefined.NullOrUndefined (RouteState)
  , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeRoute :: Newtype Route _
derive instance repGenericRoute :: Generic Route _
instance showRoute :: Show Route where
  show = genericShow
instance decodeRoute :: Decode Route where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRoute :: Encode Route where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Route from required parameters
newRoute :: Route
newRoute  = Route { "DestinationCidrBlock": (NullOrUndefined Nothing), "DestinationIpv6CidrBlock": (NullOrUndefined Nothing), "DestinationPrefixListId": (NullOrUndefined Nothing), "EgressOnlyInternetGatewayId": (NullOrUndefined Nothing), "GatewayId": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceOwnerId": (NullOrUndefined Nothing), "NatGatewayId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "Origin": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }

-- | Constructs Route's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRoute' :: ( { "DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DestinationPrefixListId" :: NullOrUndefined.NullOrUndefined (String) , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "GatewayId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "Origin" :: NullOrUndefined.NullOrUndefined (RouteOrigin) , "State" :: NullOrUndefined.NullOrUndefined (RouteState) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } -> {"DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DestinationIpv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DestinationPrefixListId" :: NullOrUndefined.NullOrUndefined (String) , "EgressOnlyInternetGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "GatewayId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceOwnerId" :: NullOrUndefined.NullOrUndefined (String) , "NatGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "Origin" :: NullOrUndefined.NullOrUndefined (RouteOrigin) , "State" :: NullOrUndefined.NullOrUndefined (RouteState) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } ) -> Route
newRoute'  customize = (Route <<< customize) { "DestinationCidrBlock": (NullOrUndefined Nothing), "DestinationIpv6CidrBlock": (NullOrUndefined Nothing), "DestinationPrefixListId": (NullOrUndefined Nothing), "EgressOnlyInternetGatewayId": (NullOrUndefined Nothing), "GatewayId": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceOwnerId": (NullOrUndefined Nothing), "NatGatewayId": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "Origin": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }



newtype RouteList = RouteList (Array Route)
derive instance newtypeRouteList :: Newtype RouteList _
derive instance repGenericRouteList :: Generic RouteList _
instance showRouteList :: Show RouteList where
  show = genericShow
instance decodeRouteList :: Decode RouteList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRouteList :: Encode RouteList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype RouteOrigin = RouteOrigin String
derive instance newtypeRouteOrigin :: Newtype RouteOrigin _
derive instance repGenericRouteOrigin :: Generic RouteOrigin _
instance showRouteOrigin :: Show RouteOrigin where
  show = genericShow
instance decodeRouteOrigin :: Decode RouteOrigin where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRouteOrigin :: Encode RouteOrigin where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype RouteState = RouteState String
derive instance newtypeRouteState :: Newtype RouteState _
derive instance repGenericRouteState :: Generic RouteState _
instance showRouteState :: Show RouteState where
  show = genericShow
instance decodeRouteState :: Decode RouteState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRouteState :: Encode RouteState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a route table.</p>
newtype RouteTable = RouteTable 
  { "Associations" :: NullOrUndefined.NullOrUndefined (RouteTableAssociationList)
  , "PropagatingVgws" :: NullOrUndefined.NullOrUndefined (PropagatingVgwList)
  , "RouteTableId" :: NullOrUndefined.NullOrUndefined (String)
  , "Routes" :: NullOrUndefined.NullOrUndefined (RouteList)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeRouteTable :: Newtype RouteTable _
derive instance repGenericRouteTable :: Generic RouteTable _
instance showRouteTable :: Show RouteTable where
  show = genericShow
instance decodeRouteTable :: Decode RouteTable where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRouteTable :: Encode RouteTable where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RouteTable from required parameters
newRouteTable :: RouteTable
newRouteTable  = RouteTable { "Associations": (NullOrUndefined Nothing), "PropagatingVgws": (NullOrUndefined Nothing), "RouteTableId": (NullOrUndefined Nothing), "Routes": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs RouteTable's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRouteTable' :: ( { "Associations" :: NullOrUndefined.NullOrUndefined (RouteTableAssociationList) , "PropagatingVgws" :: NullOrUndefined.NullOrUndefined (PropagatingVgwList) , "RouteTableId" :: NullOrUndefined.NullOrUndefined (String) , "Routes" :: NullOrUndefined.NullOrUndefined (RouteList) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Associations" :: NullOrUndefined.NullOrUndefined (RouteTableAssociationList) , "PropagatingVgws" :: NullOrUndefined.NullOrUndefined (PropagatingVgwList) , "RouteTableId" :: NullOrUndefined.NullOrUndefined (String) , "Routes" :: NullOrUndefined.NullOrUndefined (RouteList) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> RouteTable
newRouteTable'  customize = (RouteTable <<< customize) { "Associations": (NullOrUndefined Nothing), "PropagatingVgws": (NullOrUndefined Nothing), "RouteTableId": (NullOrUndefined Nothing), "Routes": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Describes an association between a route table and a subnet.</p>
newtype RouteTableAssociation = RouteTableAssociation 
  { "Main" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "RouteTableAssociationId" :: NullOrUndefined.NullOrUndefined (String)
  , "RouteTableId" :: NullOrUndefined.NullOrUndefined (String)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeRouteTableAssociation :: Newtype RouteTableAssociation _
derive instance repGenericRouteTableAssociation :: Generic RouteTableAssociation _
instance showRouteTableAssociation :: Show RouteTableAssociation where
  show = genericShow
instance decodeRouteTableAssociation :: Decode RouteTableAssociation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRouteTableAssociation :: Encode RouteTableAssociation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RouteTableAssociation from required parameters
newRouteTableAssociation :: RouteTableAssociation
newRouteTableAssociation  = RouteTableAssociation { "Main": (NullOrUndefined Nothing), "RouteTableAssociationId": (NullOrUndefined Nothing), "RouteTableId": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }

-- | Constructs RouteTableAssociation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRouteTableAssociation' :: ( { "Main" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableAssociationId" :: NullOrUndefined.NullOrUndefined (String) , "RouteTableId" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Main" :: NullOrUndefined.NullOrUndefined (Boolean) , "RouteTableAssociationId" :: NullOrUndefined.NullOrUndefined (String) , "RouteTableId" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } ) -> RouteTableAssociation
newRouteTableAssociation'  customize = (RouteTableAssociation <<< customize) { "Main": (NullOrUndefined Nothing), "RouteTableAssociationId": (NullOrUndefined Nothing), "RouteTableId": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }



newtype RouteTableAssociationList = RouteTableAssociationList (Array RouteTableAssociation)
derive instance newtypeRouteTableAssociationList :: Newtype RouteTableAssociationList _
derive instance repGenericRouteTableAssociationList :: Generic RouteTableAssociationList _
instance showRouteTableAssociationList :: Show RouteTableAssociationList where
  show = genericShow
instance decodeRouteTableAssociationList :: Decode RouteTableAssociationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRouteTableAssociationList :: Encode RouteTableAssociationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype RouteTableList = RouteTableList (Array RouteTable)
derive instance newtypeRouteTableList :: Newtype RouteTableList _
derive instance repGenericRouteTableList :: Generic RouteTableList _
instance showRouteTableList :: Show RouteTableList where
  show = genericShow
instance decodeRouteTableList :: Decode RouteTableList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRouteTableList :: Encode RouteTableList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype RuleAction = RuleAction String
derive instance newtypeRuleAction :: Newtype RuleAction _
derive instance repGenericRuleAction :: Generic RuleAction _
instance showRuleAction :: Show RuleAction where
  show = genericShow
instance decodeRuleAction :: Decode RuleAction where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRuleAction :: Encode RuleAction where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the monitoring of an instance.</p>
newtype RunInstancesMonitoringEnabled = RunInstancesMonitoringEnabled 
  { "Enabled" :: (Boolean)
  }
derive instance newtypeRunInstancesMonitoringEnabled :: Newtype RunInstancesMonitoringEnabled _
derive instance repGenericRunInstancesMonitoringEnabled :: Generic RunInstancesMonitoringEnabled _
instance showRunInstancesMonitoringEnabled :: Show RunInstancesMonitoringEnabled where
  show = genericShow
instance decodeRunInstancesMonitoringEnabled :: Decode RunInstancesMonitoringEnabled where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRunInstancesMonitoringEnabled :: Encode RunInstancesMonitoringEnabled where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RunInstancesMonitoringEnabled from required parameters
newRunInstancesMonitoringEnabled :: Boolean -> RunInstancesMonitoringEnabled
newRunInstancesMonitoringEnabled _Enabled = RunInstancesMonitoringEnabled { "Enabled": _Enabled }

-- | Constructs RunInstancesMonitoringEnabled's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRunInstancesMonitoringEnabled' :: Boolean -> ( { "Enabled" :: (Boolean) } -> {"Enabled" :: (Boolean) } ) -> RunInstancesMonitoringEnabled
newRunInstancesMonitoringEnabled' _Enabled customize = (RunInstancesMonitoringEnabled <<< customize) { "Enabled": _Enabled }



-- | <p>Contains the parameters for RunInstances.</p>
newtype RunInstancesRequest = RunInstancesRequest 
  { "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingRequestList)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList)
  , "KernelId" :: NullOrUndefined.NullOrUndefined (String)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  , "MaxCount" :: (Int)
  , "MinCount" :: (Int)
  , "Monitoring" :: NullOrUndefined.NullOrUndefined (RunInstancesMonitoringEnabled)
  , "Placement" :: NullOrUndefined.NullOrUndefined (Placement)
  , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String)
  , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList)
  , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (SecurityGroupStringList)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "UserData" :: NullOrUndefined.NullOrUndefined (String)
  , "AdditionalInfo" :: NullOrUndefined.NullOrUndefined (String)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification)
  , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior)
  , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "ElasticGpuSpecification" :: NullOrUndefined.NullOrUndefined (ElasticGpuSpecifications)
  , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (TagSpecificationList)
  , "LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSpecification)
  , "InstanceMarketOptions" :: NullOrUndefined.NullOrUndefined (InstanceMarketOptionsRequest)
  , "CreditSpecification" :: NullOrUndefined.NullOrUndefined (CreditSpecificationRequest)
  }
derive instance newtypeRunInstancesRequest :: Newtype RunInstancesRequest _
derive instance repGenericRunInstancesRequest :: Generic RunInstancesRequest _
instance showRunInstancesRequest :: Show RunInstancesRequest where
  show = genericShow
instance decodeRunInstancesRequest :: Decode RunInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRunInstancesRequest :: Encode RunInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RunInstancesRequest from required parameters
newRunInstancesRequest :: Int -> Int -> RunInstancesRequest
newRunInstancesRequest _MaxCount _MinCount = RunInstancesRequest { "MaxCount": _MaxCount, "MinCount": _MinCount, "AdditionalInfo": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "CreditSpecification": (NullOrUndefined Nothing), "DisableApiTermination": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "ElasticGpuSpecification": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceMarketOptions": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "LaunchTemplate": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }

-- | Constructs RunInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRunInstancesRequest' :: Int -> Int -> ( { "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingRequestList) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "MaxCount" :: (Int) , "MinCount" :: (Int) , "Monitoring" :: NullOrUndefined.NullOrUndefined (RunInstancesMonitoringEnabled) , "Placement" :: NullOrUndefined.NullOrUndefined (Placement) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (SecurityGroupStringList) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "UserData" :: NullOrUndefined.NullOrUndefined (String) , "AdditionalInfo" :: NullOrUndefined.NullOrUndefined (String) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuSpecification" :: NullOrUndefined.NullOrUndefined (ElasticGpuSpecifications) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (TagSpecificationList) , "LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSpecification) , "InstanceMarketOptions" :: NullOrUndefined.NullOrUndefined (InstanceMarketOptionsRequest) , "CreditSpecification" :: NullOrUndefined.NullOrUndefined (CreditSpecificationRequest) } -> {"BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingRequestList) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (InstanceIpv6AddressList) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "MaxCount" :: (Int) , "MinCount" :: (Int) , "Monitoring" :: NullOrUndefined.NullOrUndefined (RunInstancesMonitoringEnabled) , "Placement" :: NullOrUndefined.NullOrUndefined (Placement) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (SecurityGroupIdStringList) , "SecurityGroups" :: NullOrUndefined.NullOrUndefined (SecurityGroupStringList) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "UserData" :: NullOrUndefined.NullOrUndefined (String) , "AdditionalInfo" :: NullOrUndefined.NullOrUndefined (String) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DisableApiTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification) , "InstanceInitiatedShutdownBehavior" :: NullOrUndefined.NullOrUndefined (ShutdownBehavior) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "ElasticGpuSpecification" :: NullOrUndefined.NullOrUndefined (ElasticGpuSpecifications) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (TagSpecificationList) , "LaunchTemplate" :: NullOrUndefined.NullOrUndefined (LaunchTemplateSpecification) , "InstanceMarketOptions" :: NullOrUndefined.NullOrUndefined (InstanceMarketOptionsRequest) , "CreditSpecification" :: NullOrUndefined.NullOrUndefined (CreditSpecificationRequest) } ) -> RunInstancesRequest
newRunInstancesRequest' _MaxCount _MinCount customize = (RunInstancesRequest <<< customize) { "MaxCount": _MaxCount, "MinCount": _MinCount, "AdditionalInfo": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "CreditSpecification": (NullOrUndefined Nothing), "DisableApiTermination": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "ElasticGpuSpecification": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceInitiatedShutdownBehavior": (NullOrUndefined Nothing), "InstanceMarketOptions": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "LaunchTemplate": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for RunScheduledInstances.</p>
newtype RunScheduledInstancesRequest = RunScheduledInstancesRequest 
  { "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "LaunchSpecification" :: (ScheduledInstancesLaunchSpecification)
  , "ScheduledInstanceId" :: (String)
  }
derive instance newtypeRunScheduledInstancesRequest :: Newtype RunScheduledInstancesRequest _
derive instance repGenericRunScheduledInstancesRequest :: Generic RunScheduledInstancesRequest _
instance showRunScheduledInstancesRequest :: Show RunScheduledInstancesRequest where
  show = genericShow
instance decodeRunScheduledInstancesRequest :: Decode RunScheduledInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRunScheduledInstancesRequest :: Encode RunScheduledInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RunScheduledInstancesRequest from required parameters
newRunScheduledInstancesRequest :: ScheduledInstancesLaunchSpecification -> String -> RunScheduledInstancesRequest
newRunScheduledInstancesRequest _LaunchSpecification _ScheduledInstanceId = RunScheduledInstancesRequest { "LaunchSpecification": _LaunchSpecification, "ScheduledInstanceId": _ScheduledInstanceId, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "InstanceCount": (NullOrUndefined Nothing) }

-- | Constructs RunScheduledInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRunScheduledInstancesRequest' :: ScheduledInstancesLaunchSpecification -> String -> ( { "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "LaunchSpecification" :: (ScheduledInstancesLaunchSpecification) , "ScheduledInstanceId" :: (String) } -> {"ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "LaunchSpecification" :: (ScheduledInstancesLaunchSpecification) , "ScheduledInstanceId" :: (String) } ) -> RunScheduledInstancesRequest
newRunScheduledInstancesRequest' _LaunchSpecification _ScheduledInstanceId customize = (RunScheduledInstancesRequest <<< customize) { "LaunchSpecification": _LaunchSpecification, "ScheduledInstanceId": _ScheduledInstanceId, "ClientToken": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing), "InstanceCount": (NullOrUndefined Nothing) }



-- | <p>Contains the output of RunScheduledInstances.</p>
newtype RunScheduledInstancesResult = RunScheduledInstancesResult 
  { "InstanceIdSet" :: NullOrUndefined.NullOrUndefined (InstanceIdSet)
  }
derive instance newtypeRunScheduledInstancesResult :: Newtype RunScheduledInstancesResult _
derive instance repGenericRunScheduledInstancesResult :: Generic RunScheduledInstancesResult _
instance showRunScheduledInstancesResult :: Show RunScheduledInstancesResult where
  show = genericShow
instance decodeRunScheduledInstancesResult :: Decode RunScheduledInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeRunScheduledInstancesResult :: Encode RunScheduledInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs RunScheduledInstancesResult from required parameters
newRunScheduledInstancesResult :: RunScheduledInstancesResult
newRunScheduledInstancesResult  = RunScheduledInstancesResult { "InstanceIdSet": (NullOrUndefined Nothing) }

-- | Constructs RunScheduledInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newRunScheduledInstancesResult' :: ( { "InstanceIdSet" :: NullOrUndefined.NullOrUndefined (InstanceIdSet) } -> {"InstanceIdSet" :: NullOrUndefined.NullOrUndefined (InstanceIdSet) } ) -> RunScheduledInstancesResult
newRunScheduledInstancesResult'  customize = (RunScheduledInstancesResult <<< customize) { "InstanceIdSet": (NullOrUndefined Nothing) }



-- | <p>Describes the storage parameters for S3 and S3 buckets for an instance store-backed AMI.</p>
newtype S3Storage = S3Storage 
  { "AWSAccessKeyId" :: NullOrUndefined.NullOrUndefined (String)
  , "Bucket" :: NullOrUndefined.NullOrUndefined (String)
  , "Prefix" :: NullOrUndefined.NullOrUndefined (String)
  , "UploadPolicy" :: NullOrUndefined.NullOrUndefined (String)
  , "UploadPolicySignature" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeS3Storage :: Newtype S3Storage _
derive instance repGenericS3Storage :: Generic S3Storage _
instance showS3Storage :: Show S3Storage where
  show = genericShow
instance decodeS3Storage :: Decode S3Storage where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeS3Storage :: Encode S3Storage where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs S3Storage from required parameters
newS3Storage :: S3Storage
newS3Storage  = S3Storage { "AWSAccessKeyId": (NullOrUndefined Nothing), "Bucket": (NullOrUndefined Nothing), "Prefix": (NullOrUndefined Nothing), "UploadPolicy": (NullOrUndefined Nothing), "UploadPolicySignature": (NullOrUndefined Nothing) }

-- | Constructs S3Storage's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newS3Storage' :: ( { "AWSAccessKeyId" :: NullOrUndefined.NullOrUndefined (String) , "Bucket" :: NullOrUndefined.NullOrUndefined (String) , "Prefix" :: NullOrUndefined.NullOrUndefined (String) , "UploadPolicy" :: NullOrUndefined.NullOrUndefined (String) , "UploadPolicySignature" :: NullOrUndefined.NullOrUndefined (String) } -> {"AWSAccessKeyId" :: NullOrUndefined.NullOrUndefined (String) , "Bucket" :: NullOrUndefined.NullOrUndefined (String) , "Prefix" :: NullOrUndefined.NullOrUndefined (String) , "UploadPolicy" :: NullOrUndefined.NullOrUndefined (String) , "UploadPolicySignature" :: NullOrUndefined.NullOrUndefined (String) } ) -> S3Storage
newS3Storage'  customize = (S3Storage <<< customize) { "AWSAccessKeyId": (NullOrUndefined Nothing), "Bucket": (NullOrUndefined Nothing), "Prefix": (NullOrUndefined Nothing), "UploadPolicy": (NullOrUndefined Nothing), "UploadPolicySignature": (NullOrUndefined Nothing) }



-- | <p>Describes a Scheduled Instance.</p>
newtype ScheduledInstance = ScheduledInstance 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "CreateDate" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (String)
  , "NetworkPlatform" :: NullOrUndefined.NullOrUndefined (String)
  , "NextSlotStartTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Platform" :: NullOrUndefined.NullOrUndefined (String)
  , "PreviousSlotEndTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Recurrence" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceRecurrence)
  , "ScheduledInstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "SlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int)
  , "TermEndDate" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "TermStartDate" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "TotalScheduledInstanceHours" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeScheduledInstance :: Newtype ScheduledInstance _
derive instance repGenericScheduledInstance :: Generic ScheduledInstance _
instance showScheduledInstance :: Show ScheduledInstance where
  show = genericShow
instance decodeScheduledInstance :: Decode ScheduledInstance where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstance :: Encode ScheduledInstance where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstance from required parameters
newScheduledInstance :: ScheduledInstance
newScheduledInstance  = ScheduledInstance { "AvailabilityZone": (NullOrUndefined Nothing), "CreateDate": (NullOrUndefined Nothing), "HourlyPrice": (NullOrUndefined Nothing), "InstanceCount": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "NetworkPlatform": (NullOrUndefined Nothing), "NextSlotStartTime": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "PreviousSlotEndTime": (NullOrUndefined Nothing), "Recurrence": (NullOrUndefined Nothing), "ScheduledInstanceId": (NullOrUndefined Nothing), "SlotDurationInHours": (NullOrUndefined Nothing), "TermEndDate": (NullOrUndefined Nothing), "TermStartDate": (NullOrUndefined Nothing), "TotalScheduledInstanceHours": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstance's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstance' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "CreateDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "NetworkPlatform" :: NullOrUndefined.NullOrUndefined (String) , "NextSlotStartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "PreviousSlotEndTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Recurrence" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceRecurrence) , "ScheduledInstanceId" :: NullOrUndefined.NullOrUndefined (String) , "SlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int) , "TermEndDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "TermStartDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "TotalScheduledInstanceHours" :: NullOrUndefined.NullOrUndefined (Int) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "CreateDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "NetworkPlatform" :: NullOrUndefined.NullOrUndefined (String) , "NextSlotStartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "PreviousSlotEndTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Recurrence" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceRecurrence) , "ScheduledInstanceId" :: NullOrUndefined.NullOrUndefined (String) , "SlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int) , "TermEndDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "TermStartDate" :: NullOrUndefined.NullOrUndefined (DateTime) , "TotalScheduledInstanceHours" :: NullOrUndefined.NullOrUndefined (Int) } ) -> ScheduledInstance
newScheduledInstance'  customize = (ScheduledInstance <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "CreateDate": (NullOrUndefined Nothing), "HourlyPrice": (NullOrUndefined Nothing), "InstanceCount": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "NetworkPlatform": (NullOrUndefined Nothing), "NextSlotStartTime": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "PreviousSlotEndTime": (NullOrUndefined Nothing), "Recurrence": (NullOrUndefined Nothing), "ScheduledInstanceId": (NullOrUndefined Nothing), "SlotDurationInHours": (NullOrUndefined Nothing), "TermEndDate": (NullOrUndefined Nothing), "TermStartDate": (NullOrUndefined Nothing), "TotalScheduledInstanceHours": (NullOrUndefined Nothing) }



-- | <p>Describes a schedule that is available for your Scheduled Instances.</p>
newtype ScheduledInstanceAvailability = ScheduledInstanceAvailability 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "AvailableInstanceCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "FirstSlotStartTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (String)
  , "MaxTermDurationInDays" :: NullOrUndefined.NullOrUndefined (Int)
  , "MinTermDurationInDays" :: NullOrUndefined.NullOrUndefined (Int)
  , "NetworkPlatform" :: NullOrUndefined.NullOrUndefined (String)
  , "Platform" :: NullOrUndefined.NullOrUndefined (String)
  , "PurchaseToken" :: NullOrUndefined.NullOrUndefined (String)
  , "Recurrence" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceRecurrence)
  , "SlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int)
  , "TotalScheduledInstanceHours" :: NullOrUndefined.NullOrUndefined (Int)
  }
derive instance newtypeScheduledInstanceAvailability :: Newtype ScheduledInstanceAvailability _
derive instance repGenericScheduledInstanceAvailability :: Generic ScheduledInstanceAvailability _
instance showScheduledInstanceAvailability :: Show ScheduledInstanceAvailability where
  show = genericShow
instance decodeScheduledInstanceAvailability :: Decode ScheduledInstanceAvailability where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstanceAvailability :: Encode ScheduledInstanceAvailability where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstanceAvailability from required parameters
newScheduledInstanceAvailability :: ScheduledInstanceAvailability
newScheduledInstanceAvailability  = ScheduledInstanceAvailability { "AvailabilityZone": (NullOrUndefined Nothing), "AvailableInstanceCount": (NullOrUndefined Nothing), "FirstSlotStartTime": (NullOrUndefined Nothing), "HourlyPrice": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "MaxTermDurationInDays": (NullOrUndefined Nothing), "MinTermDurationInDays": (NullOrUndefined Nothing), "NetworkPlatform": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "PurchaseToken": (NullOrUndefined Nothing), "Recurrence": (NullOrUndefined Nothing), "SlotDurationInHours": (NullOrUndefined Nothing), "TotalScheduledInstanceHours": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstanceAvailability's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstanceAvailability' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "AvailableInstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "FirstSlotStartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "MaxTermDurationInDays" :: NullOrUndefined.NullOrUndefined (Int) , "MinTermDurationInDays" :: NullOrUndefined.NullOrUndefined (Int) , "NetworkPlatform" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "PurchaseToken" :: NullOrUndefined.NullOrUndefined (String) , "Recurrence" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceRecurrence) , "SlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int) , "TotalScheduledInstanceHours" :: NullOrUndefined.NullOrUndefined (Int) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "AvailableInstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "FirstSlotStartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "HourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "MaxTermDurationInDays" :: NullOrUndefined.NullOrUndefined (Int) , "MinTermDurationInDays" :: NullOrUndefined.NullOrUndefined (Int) , "NetworkPlatform" :: NullOrUndefined.NullOrUndefined (String) , "Platform" :: NullOrUndefined.NullOrUndefined (String) , "PurchaseToken" :: NullOrUndefined.NullOrUndefined (String) , "Recurrence" :: NullOrUndefined.NullOrUndefined (ScheduledInstanceRecurrence) , "SlotDurationInHours" :: NullOrUndefined.NullOrUndefined (Int) , "TotalScheduledInstanceHours" :: NullOrUndefined.NullOrUndefined (Int) } ) -> ScheduledInstanceAvailability
newScheduledInstanceAvailability'  customize = (ScheduledInstanceAvailability <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "AvailableInstanceCount": (NullOrUndefined Nothing), "FirstSlotStartTime": (NullOrUndefined Nothing), "HourlyPrice": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "MaxTermDurationInDays": (NullOrUndefined Nothing), "MinTermDurationInDays": (NullOrUndefined Nothing), "NetworkPlatform": (NullOrUndefined Nothing), "Platform": (NullOrUndefined Nothing), "PurchaseToken": (NullOrUndefined Nothing), "Recurrence": (NullOrUndefined Nothing), "SlotDurationInHours": (NullOrUndefined Nothing), "TotalScheduledInstanceHours": (NullOrUndefined Nothing) }



newtype ScheduledInstanceAvailabilitySet = ScheduledInstanceAvailabilitySet (Array ScheduledInstanceAvailability)
derive instance newtypeScheduledInstanceAvailabilitySet :: Newtype ScheduledInstanceAvailabilitySet _
derive instance repGenericScheduledInstanceAvailabilitySet :: Generic ScheduledInstanceAvailabilitySet _
instance showScheduledInstanceAvailabilitySet :: Show ScheduledInstanceAvailabilitySet where
  show = genericShow
instance decodeScheduledInstanceAvailabilitySet :: Decode ScheduledInstanceAvailabilitySet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstanceAvailabilitySet :: Encode ScheduledInstanceAvailabilitySet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ScheduledInstanceIdRequestSet = ScheduledInstanceIdRequestSet (Array String)
derive instance newtypeScheduledInstanceIdRequestSet :: Newtype ScheduledInstanceIdRequestSet _
derive instance repGenericScheduledInstanceIdRequestSet :: Generic ScheduledInstanceIdRequestSet _
instance showScheduledInstanceIdRequestSet :: Show ScheduledInstanceIdRequestSet where
  show = genericShow
instance decodeScheduledInstanceIdRequestSet :: Decode ScheduledInstanceIdRequestSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstanceIdRequestSet :: Encode ScheduledInstanceIdRequestSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the recurring schedule for a Scheduled Instance.</p>
newtype ScheduledInstanceRecurrence = ScheduledInstanceRecurrence 
  { "Frequency" :: NullOrUndefined.NullOrUndefined (String)
  , "Interval" :: NullOrUndefined.NullOrUndefined (Int)
  , "OccurrenceDaySet" :: NullOrUndefined.NullOrUndefined (OccurrenceDaySet)
  , "OccurrenceRelativeToEnd" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "OccurrenceUnit" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeScheduledInstanceRecurrence :: Newtype ScheduledInstanceRecurrence _
derive instance repGenericScheduledInstanceRecurrence :: Generic ScheduledInstanceRecurrence _
instance showScheduledInstanceRecurrence :: Show ScheduledInstanceRecurrence where
  show = genericShow
instance decodeScheduledInstanceRecurrence :: Decode ScheduledInstanceRecurrence where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstanceRecurrence :: Encode ScheduledInstanceRecurrence where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstanceRecurrence from required parameters
newScheduledInstanceRecurrence :: ScheduledInstanceRecurrence
newScheduledInstanceRecurrence  = ScheduledInstanceRecurrence { "Frequency": (NullOrUndefined Nothing), "Interval": (NullOrUndefined Nothing), "OccurrenceDaySet": (NullOrUndefined Nothing), "OccurrenceRelativeToEnd": (NullOrUndefined Nothing), "OccurrenceUnit": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstanceRecurrence's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstanceRecurrence' :: ( { "Frequency" :: NullOrUndefined.NullOrUndefined (String) , "Interval" :: NullOrUndefined.NullOrUndefined (Int) , "OccurrenceDaySet" :: NullOrUndefined.NullOrUndefined (OccurrenceDaySet) , "OccurrenceRelativeToEnd" :: NullOrUndefined.NullOrUndefined (Boolean) , "OccurrenceUnit" :: NullOrUndefined.NullOrUndefined (String) } -> {"Frequency" :: NullOrUndefined.NullOrUndefined (String) , "Interval" :: NullOrUndefined.NullOrUndefined (Int) , "OccurrenceDaySet" :: NullOrUndefined.NullOrUndefined (OccurrenceDaySet) , "OccurrenceRelativeToEnd" :: NullOrUndefined.NullOrUndefined (Boolean) , "OccurrenceUnit" :: NullOrUndefined.NullOrUndefined (String) } ) -> ScheduledInstanceRecurrence
newScheduledInstanceRecurrence'  customize = (ScheduledInstanceRecurrence <<< customize) { "Frequency": (NullOrUndefined Nothing), "Interval": (NullOrUndefined Nothing), "OccurrenceDaySet": (NullOrUndefined Nothing), "OccurrenceRelativeToEnd": (NullOrUndefined Nothing), "OccurrenceUnit": (NullOrUndefined Nothing) }



-- | <p>Describes the recurring schedule for a Scheduled Instance.</p>
newtype ScheduledInstanceRecurrenceRequest = ScheduledInstanceRecurrenceRequest 
  { "Frequency" :: NullOrUndefined.NullOrUndefined (String)
  , "Interval" :: NullOrUndefined.NullOrUndefined (Int)
  , "OccurrenceDays" :: NullOrUndefined.NullOrUndefined (OccurrenceDayRequestSet)
  , "OccurrenceRelativeToEnd" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "OccurrenceUnit" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeScheduledInstanceRecurrenceRequest :: Newtype ScheduledInstanceRecurrenceRequest _
derive instance repGenericScheduledInstanceRecurrenceRequest :: Generic ScheduledInstanceRecurrenceRequest _
instance showScheduledInstanceRecurrenceRequest :: Show ScheduledInstanceRecurrenceRequest where
  show = genericShow
instance decodeScheduledInstanceRecurrenceRequest :: Decode ScheduledInstanceRecurrenceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstanceRecurrenceRequest :: Encode ScheduledInstanceRecurrenceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstanceRecurrenceRequest from required parameters
newScheduledInstanceRecurrenceRequest :: ScheduledInstanceRecurrenceRequest
newScheduledInstanceRecurrenceRequest  = ScheduledInstanceRecurrenceRequest { "Frequency": (NullOrUndefined Nothing), "Interval": (NullOrUndefined Nothing), "OccurrenceDays": (NullOrUndefined Nothing), "OccurrenceRelativeToEnd": (NullOrUndefined Nothing), "OccurrenceUnit": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstanceRecurrenceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstanceRecurrenceRequest' :: ( { "Frequency" :: NullOrUndefined.NullOrUndefined (String) , "Interval" :: NullOrUndefined.NullOrUndefined (Int) , "OccurrenceDays" :: NullOrUndefined.NullOrUndefined (OccurrenceDayRequestSet) , "OccurrenceRelativeToEnd" :: NullOrUndefined.NullOrUndefined (Boolean) , "OccurrenceUnit" :: NullOrUndefined.NullOrUndefined (String) } -> {"Frequency" :: NullOrUndefined.NullOrUndefined (String) , "Interval" :: NullOrUndefined.NullOrUndefined (Int) , "OccurrenceDays" :: NullOrUndefined.NullOrUndefined (OccurrenceDayRequestSet) , "OccurrenceRelativeToEnd" :: NullOrUndefined.NullOrUndefined (Boolean) , "OccurrenceUnit" :: NullOrUndefined.NullOrUndefined (String) } ) -> ScheduledInstanceRecurrenceRequest
newScheduledInstanceRecurrenceRequest'  customize = (ScheduledInstanceRecurrenceRequest <<< customize) { "Frequency": (NullOrUndefined Nothing), "Interval": (NullOrUndefined Nothing), "OccurrenceDays": (NullOrUndefined Nothing), "OccurrenceRelativeToEnd": (NullOrUndefined Nothing), "OccurrenceUnit": (NullOrUndefined Nothing) }



newtype ScheduledInstanceSet = ScheduledInstanceSet (Array ScheduledInstance)
derive instance newtypeScheduledInstanceSet :: Newtype ScheduledInstanceSet _
derive instance repGenericScheduledInstanceSet :: Generic ScheduledInstanceSet _
instance showScheduledInstanceSet :: Show ScheduledInstanceSet where
  show = genericShow
instance decodeScheduledInstanceSet :: Decode ScheduledInstanceSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstanceSet :: Encode ScheduledInstanceSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a block device mapping for a Scheduled Instance.</p>
newtype ScheduledInstancesBlockDeviceMapping = ScheduledInstancesBlockDeviceMapping 
  { "DeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "Ebs" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesEbs)
  , "NoDevice" :: NullOrUndefined.NullOrUndefined (String)
  , "VirtualName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeScheduledInstancesBlockDeviceMapping :: Newtype ScheduledInstancesBlockDeviceMapping _
derive instance repGenericScheduledInstancesBlockDeviceMapping :: Generic ScheduledInstancesBlockDeviceMapping _
instance showScheduledInstancesBlockDeviceMapping :: Show ScheduledInstancesBlockDeviceMapping where
  show = genericShow
instance decodeScheduledInstancesBlockDeviceMapping :: Decode ScheduledInstancesBlockDeviceMapping where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesBlockDeviceMapping :: Encode ScheduledInstancesBlockDeviceMapping where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstancesBlockDeviceMapping from required parameters
newScheduledInstancesBlockDeviceMapping :: ScheduledInstancesBlockDeviceMapping
newScheduledInstancesBlockDeviceMapping  = ScheduledInstancesBlockDeviceMapping { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing), "NoDevice": (NullOrUndefined Nothing), "VirtualName": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstancesBlockDeviceMapping's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstancesBlockDeviceMapping' :: ( { "DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesEbs) , "NoDevice" :: NullOrUndefined.NullOrUndefined (String) , "VirtualName" :: NullOrUndefined.NullOrUndefined (String) } -> {"DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "Ebs" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesEbs) , "NoDevice" :: NullOrUndefined.NullOrUndefined (String) , "VirtualName" :: NullOrUndefined.NullOrUndefined (String) } ) -> ScheduledInstancesBlockDeviceMapping
newScheduledInstancesBlockDeviceMapping'  customize = (ScheduledInstancesBlockDeviceMapping <<< customize) { "DeviceName": (NullOrUndefined Nothing), "Ebs": (NullOrUndefined Nothing), "NoDevice": (NullOrUndefined Nothing), "VirtualName": (NullOrUndefined Nothing) }



newtype ScheduledInstancesBlockDeviceMappingSet = ScheduledInstancesBlockDeviceMappingSet (Array ScheduledInstancesBlockDeviceMapping)
derive instance newtypeScheduledInstancesBlockDeviceMappingSet :: Newtype ScheduledInstancesBlockDeviceMappingSet _
derive instance repGenericScheduledInstancesBlockDeviceMappingSet :: Generic ScheduledInstancesBlockDeviceMappingSet _
instance showScheduledInstancesBlockDeviceMappingSet :: Show ScheduledInstancesBlockDeviceMappingSet where
  show = genericShow
instance decodeScheduledInstancesBlockDeviceMappingSet :: Decode ScheduledInstancesBlockDeviceMappingSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesBlockDeviceMappingSet :: Encode ScheduledInstancesBlockDeviceMappingSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an EBS volume for a Scheduled Instance.</p>
newtype ScheduledInstancesEbs = ScheduledInstancesEbs 
  { "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Iops" :: NullOrUndefined.NullOrUndefined (Int)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int)
  , "VolumeType" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeScheduledInstancesEbs :: Newtype ScheduledInstancesEbs _
derive instance repGenericScheduledInstancesEbs :: Generic ScheduledInstancesEbs _
instance showScheduledInstancesEbs :: Show ScheduledInstancesEbs where
  show = genericShow
instance decodeScheduledInstancesEbs :: Decode ScheduledInstancesEbs where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesEbs :: Encode ScheduledInstancesEbs where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstancesEbs from required parameters
newScheduledInstancesEbs :: ScheduledInstancesEbs
newScheduledInstancesEbs  = ScheduledInstancesEbs { "DeleteOnTermination": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "VolumeSize": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstancesEbs's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstancesEbs' :: ( { "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int) , "VolumeType" :: NullOrUndefined.NullOrUndefined (String) } -> {"DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int) , "VolumeType" :: NullOrUndefined.NullOrUndefined (String) } ) -> ScheduledInstancesEbs
newScheduledInstancesEbs'  customize = (ScheduledInstancesEbs <<< customize) { "DeleteOnTermination": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "VolumeSize": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }



-- | <p>Describes an IAM instance profile for a Scheduled Instance.</p>
newtype ScheduledInstancesIamInstanceProfile = ScheduledInstancesIamInstanceProfile 
  { "Arn" :: NullOrUndefined.NullOrUndefined (String)
  , "Name" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeScheduledInstancesIamInstanceProfile :: Newtype ScheduledInstancesIamInstanceProfile _
derive instance repGenericScheduledInstancesIamInstanceProfile :: Generic ScheduledInstancesIamInstanceProfile _
instance showScheduledInstancesIamInstanceProfile :: Show ScheduledInstancesIamInstanceProfile where
  show = genericShow
instance decodeScheduledInstancesIamInstanceProfile :: Decode ScheduledInstancesIamInstanceProfile where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesIamInstanceProfile :: Encode ScheduledInstancesIamInstanceProfile where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstancesIamInstanceProfile from required parameters
newScheduledInstancesIamInstanceProfile :: ScheduledInstancesIamInstanceProfile
newScheduledInstancesIamInstanceProfile  = ScheduledInstancesIamInstanceProfile { "Arn": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstancesIamInstanceProfile's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstancesIamInstanceProfile' :: ( { "Arn" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) } -> {"Arn" :: NullOrUndefined.NullOrUndefined (String) , "Name" :: NullOrUndefined.NullOrUndefined (String) } ) -> ScheduledInstancesIamInstanceProfile
newScheduledInstancesIamInstanceProfile'  customize = (ScheduledInstancesIamInstanceProfile <<< customize) { "Arn": (NullOrUndefined Nothing), "Name": (NullOrUndefined Nothing) }



-- | <p>Describes an IPv6 address.</p>
newtype ScheduledInstancesIpv6Address = ScheduledInstancesIpv6Address 
  { "Ipv6Address" :: NullOrUndefined.NullOrUndefined (Ipv6Address)
  }
derive instance newtypeScheduledInstancesIpv6Address :: Newtype ScheduledInstancesIpv6Address _
derive instance repGenericScheduledInstancesIpv6Address :: Generic ScheduledInstancesIpv6Address _
instance showScheduledInstancesIpv6Address :: Show ScheduledInstancesIpv6Address where
  show = genericShow
instance decodeScheduledInstancesIpv6Address :: Decode ScheduledInstancesIpv6Address where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesIpv6Address :: Encode ScheduledInstancesIpv6Address where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstancesIpv6Address from required parameters
newScheduledInstancesIpv6Address :: ScheduledInstancesIpv6Address
newScheduledInstancesIpv6Address  = ScheduledInstancesIpv6Address { "Ipv6Address": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstancesIpv6Address's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstancesIpv6Address' :: ( { "Ipv6Address" :: NullOrUndefined.NullOrUndefined (Ipv6Address) } -> {"Ipv6Address" :: NullOrUndefined.NullOrUndefined (Ipv6Address) } ) -> ScheduledInstancesIpv6Address
newScheduledInstancesIpv6Address'  customize = (ScheduledInstancesIpv6Address <<< customize) { "Ipv6Address": (NullOrUndefined Nothing) }



newtype ScheduledInstancesIpv6AddressList = ScheduledInstancesIpv6AddressList (Array ScheduledInstancesIpv6Address)
derive instance newtypeScheduledInstancesIpv6AddressList :: Newtype ScheduledInstancesIpv6AddressList _
derive instance repGenericScheduledInstancesIpv6AddressList :: Generic ScheduledInstancesIpv6AddressList _
instance showScheduledInstancesIpv6AddressList :: Show ScheduledInstancesIpv6AddressList where
  show = genericShow
instance decodeScheduledInstancesIpv6AddressList :: Decode ScheduledInstancesIpv6AddressList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesIpv6AddressList :: Encode ScheduledInstancesIpv6AddressList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the launch specification for a Scheduled Instance.</p> <p>If you are launching the Scheduled Instance in EC2-VPC, you must specify the ID of the subnet. You can specify the subnet using either <code>SubnetId</code> or <code>NetworkInterface</code>.</p>
newtype ScheduledInstancesLaunchSpecification = ScheduledInstancesLaunchSpecification 
  { "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesBlockDeviceMappingSet)
  , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesIamInstanceProfile)
  , "ImageId" :: (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (String)
  , "KernelId" :: NullOrUndefined.NullOrUndefined (String)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  , "Monitoring" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesMonitoring)
  , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesNetworkInterfaceSet)
  , "Placement" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesPlacement)
  , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String)
  , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesSecurityGroupIdSet)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "UserData" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeScheduledInstancesLaunchSpecification :: Newtype ScheduledInstancesLaunchSpecification _
derive instance repGenericScheduledInstancesLaunchSpecification :: Generic ScheduledInstancesLaunchSpecification _
instance showScheduledInstancesLaunchSpecification :: Show ScheduledInstancesLaunchSpecification where
  show = genericShow
instance decodeScheduledInstancesLaunchSpecification :: Decode ScheduledInstancesLaunchSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesLaunchSpecification :: Encode ScheduledInstancesLaunchSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstancesLaunchSpecification from required parameters
newScheduledInstancesLaunchSpecification :: String -> ScheduledInstancesLaunchSpecification
newScheduledInstancesLaunchSpecification _ImageId = ScheduledInstancesLaunchSpecification { "ImageId": _ImageId, "BlockDeviceMappings": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstancesLaunchSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstancesLaunchSpecification' :: String -> ( { "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesBlockDeviceMappingSet) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesIamInstanceProfile) , "ImageId" :: (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesMonitoring) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesNetworkInterfaceSet) , "Placement" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesPlacement) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesSecurityGroupIdSet) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "UserData" :: NullOrUndefined.NullOrUndefined (String) } -> {"BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesBlockDeviceMappingSet) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesIamInstanceProfile) , "ImageId" :: (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (String) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesMonitoring) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesNetworkInterfaceSet) , "Placement" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesPlacement) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "SecurityGroupIds" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesSecurityGroupIdSet) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "UserData" :: NullOrUndefined.NullOrUndefined (String) } ) -> ScheduledInstancesLaunchSpecification
newScheduledInstancesLaunchSpecification' _ImageId customize = (ScheduledInstancesLaunchSpecification <<< customize) { "ImageId": _ImageId, "BlockDeviceMappings": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SecurityGroupIds": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing) }



-- | <p>Describes whether monitoring is enabled for a Scheduled Instance.</p>
newtype ScheduledInstancesMonitoring = ScheduledInstancesMonitoring 
  { "Enabled" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeScheduledInstancesMonitoring :: Newtype ScheduledInstancesMonitoring _
derive instance repGenericScheduledInstancesMonitoring :: Generic ScheduledInstancesMonitoring _
instance showScheduledInstancesMonitoring :: Show ScheduledInstancesMonitoring where
  show = genericShow
instance decodeScheduledInstancesMonitoring :: Decode ScheduledInstancesMonitoring where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesMonitoring :: Encode ScheduledInstancesMonitoring where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstancesMonitoring from required parameters
newScheduledInstancesMonitoring :: ScheduledInstancesMonitoring
newScheduledInstancesMonitoring  = ScheduledInstancesMonitoring { "Enabled": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstancesMonitoring's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstancesMonitoring' :: ( { "Enabled" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Enabled" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ScheduledInstancesMonitoring
newScheduledInstancesMonitoring'  customize = (ScheduledInstancesMonitoring <<< customize) { "Enabled": (NullOrUndefined Nothing) }



-- | <p>Describes a network interface for a Scheduled Instance.</p>
newtype ScheduledInstancesNetworkInterface = ScheduledInstancesNetworkInterface 
  { "AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int)
  , "Groups" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesSecurityGroupIdSet)
  , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesIpv6AddressList)
  , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "PrivateIpAddressConfigs" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressConfigSet)
  , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeScheduledInstancesNetworkInterface :: Newtype ScheduledInstancesNetworkInterface _
derive instance repGenericScheduledInstancesNetworkInterface :: Generic ScheduledInstancesNetworkInterface _
instance showScheduledInstancesNetworkInterface :: Show ScheduledInstancesNetworkInterface where
  show = genericShow
instance decodeScheduledInstancesNetworkInterface :: Decode ScheduledInstancesNetworkInterface where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesNetworkInterface :: Encode ScheduledInstancesNetworkInterface where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstancesNetworkInterface from required parameters
newScheduledInstancesNetworkInterface :: ScheduledInstancesNetworkInterface
newScheduledInstancesNetworkInterface  = ScheduledInstancesNetworkInterface { "AssociatePublicIpAddress": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddressConfigs": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstancesNetworkInterface's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstancesNetworkInterface' :: ( { "AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "Groups" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesSecurityGroupIdSet) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesIpv6AddressList) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddressConfigs" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressConfigSet) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AssociatePublicIpAddress" :: NullOrUndefined.NullOrUndefined (Boolean) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceIndex" :: NullOrUndefined.NullOrUndefined (Int) , "Groups" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesSecurityGroupIdSet) , "Ipv6AddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "Ipv6Addresses" :: NullOrUndefined.NullOrUndefined (ScheduledInstancesIpv6AddressList) , "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "PrivateIpAddressConfigs" :: NullOrUndefined.NullOrUndefined (PrivateIpAddressConfigSet) , "SecondaryPrivateIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) } ) -> ScheduledInstancesNetworkInterface
newScheduledInstancesNetworkInterface'  customize = (ScheduledInstancesNetworkInterface <<< customize) { "AssociatePublicIpAddress": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "DeviceIndex": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "Ipv6AddressCount": (NullOrUndefined Nothing), "Ipv6Addresses": (NullOrUndefined Nothing), "NetworkInterfaceId": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing), "PrivateIpAddressConfigs": (NullOrUndefined Nothing), "SecondaryPrivateIpAddressCount": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing) }



newtype ScheduledInstancesNetworkInterfaceSet = ScheduledInstancesNetworkInterfaceSet (Array ScheduledInstancesNetworkInterface)
derive instance newtypeScheduledInstancesNetworkInterfaceSet :: Newtype ScheduledInstancesNetworkInterfaceSet _
derive instance repGenericScheduledInstancesNetworkInterfaceSet :: Generic ScheduledInstancesNetworkInterfaceSet _
instance showScheduledInstancesNetworkInterfaceSet :: Show ScheduledInstancesNetworkInterfaceSet where
  show = genericShow
instance decodeScheduledInstancesNetworkInterfaceSet :: Decode ScheduledInstancesNetworkInterfaceSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesNetworkInterfaceSet :: Encode ScheduledInstancesNetworkInterfaceSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the placement for a Scheduled Instance.</p>
newtype ScheduledInstancesPlacement = ScheduledInstancesPlacement 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeScheduledInstancesPlacement :: Newtype ScheduledInstancesPlacement _
derive instance repGenericScheduledInstancesPlacement :: Generic ScheduledInstancesPlacement _
instance showScheduledInstancesPlacement :: Show ScheduledInstancesPlacement where
  show = genericShow
instance decodeScheduledInstancesPlacement :: Decode ScheduledInstancesPlacement where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesPlacement :: Encode ScheduledInstancesPlacement where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstancesPlacement from required parameters
newScheduledInstancesPlacement :: ScheduledInstancesPlacement
newScheduledInstancesPlacement  = ScheduledInstancesPlacement { "AvailabilityZone": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstancesPlacement's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstancesPlacement' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) } ) -> ScheduledInstancesPlacement
newScheduledInstancesPlacement'  customize = (ScheduledInstancesPlacement <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }



-- | <p>Describes a private IPv4 address for a Scheduled Instance.</p>
newtype ScheduledInstancesPrivateIpAddressConfig = ScheduledInstancesPrivateIpAddressConfig 
  { "Primary" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeScheduledInstancesPrivateIpAddressConfig :: Newtype ScheduledInstancesPrivateIpAddressConfig _
derive instance repGenericScheduledInstancesPrivateIpAddressConfig :: Generic ScheduledInstancesPrivateIpAddressConfig _
instance showScheduledInstancesPrivateIpAddressConfig :: Show ScheduledInstancesPrivateIpAddressConfig where
  show = genericShow
instance decodeScheduledInstancesPrivateIpAddressConfig :: Decode ScheduledInstancesPrivateIpAddressConfig where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesPrivateIpAddressConfig :: Encode ScheduledInstancesPrivateIpAddressConfig where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ScheduledInstancesPrivateIpAddressConfig from required parameters
newScheduledInstancesPrivateIpAddressConfig :: ScheduledInstancesPrivateIpAddressConfig
newScheduledInstancesPrivateIpAddressConfig  = ScheduledInstancesPrivateIpAddressConfig { "Primary": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing) }

-- | Constructs ScheduledInstancesPrivateIpAddressConfig's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newScheduledInstancesPrivateIpAddressConfig' :: ( { "Primary" :: NullOrUndefined.NullOrUndefined (Boolean) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) } -> {"Primary" :: NullOrUndefined.NullOrUndefined (Boolean) , "PrivateIpAddress" :: NullOrUndefined.NullOrUndefined (String) } ) -> ScheduledInstancesPrivateIpAddressConfig
newScheduledInstancesPrivateIpAddressConfig'  customize = (ScheduledInstancesPrivateIpAddressConfig <<< customize) { "Primary": (NullOrUndefined Nothing), "PrivateIpAddress": (NullOrUndefined Nothing) }



newtype ScheduledInstancesSecurityGroupIdSet = ScheduledInstancesSecurityGroupIdSet (Array String)
derive instance newtypeScheduledInstancesSecurityGroupIdSet :: Newtype ScheduledInstancesSecurityGroupIdSet _
derive instance repGenericScheduledInstancesSecurityGroupIdSet :: Generic ScheduledInstancesSecurityGroupIdSet _
instance showScheduledInstancesSecurityGroupIdSet :: Show ScheduledInstancesSecurityGroupIdSet where
  show = genericShow
instance decodeScheduledInstancesSecurityGroupIdSet :: Decode ScheduledInstancesSecurityGroupIdSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScheduledInstancesSecurityGroupIdSet :: Encode ScheduledInstancesSecurityGroupIdSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a security group</p>
newtype SecurityGroup = SecurityGroup 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList)
  , "OwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupId" :: NullOrUndefined.NullOrUndefined (String)
  , "IpPermissionsEgress" :: NullOrUndefined.NullOrUndefined (IpPermissionList)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeSecurityGroup :: Newtype SecurityGroup _
derive instance repGenericSecurityGroup :: Generic SecurityGroup _
instance showSecurityGroup :: Show SecurityGroup where
  show = genericShow
instance decodeSecurityGroup :: Decode SecurityGroup where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSecurityGroup :: Encode SecurityGroup where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SecurityGroup from required parameters
newSecurityGroup :: SecurityGroup
newSecurityGroup  = SecurityGroup { "Description": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "IpPermissions": (NullOrUndefined Nothing), "IpPermissionsEgress": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs SecurityGroup's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSecurityGroup' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissionsEgress" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissions" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissionsEgress" :: NullOrUndefined.NullOrUndefined (IpPermissionList) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> SecurityGroup
newSecurityGroup'  customize = (SecurityGroup <<< customize) { "Description": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "IpPermissions": (NullOrUndefined Nothing), "IpPermissionsEgress": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



newtype SecurityGroupIdStringList = SecurityGroupIdStringList (Array String)
derive instance newtypeSecurityGroupIdStringList :: Newtype SecurityGroupIdStringList _
derive instance repGenericSecurityGroupIdStringList :: Generic SecurityGroupIdStringList _
instance showSecurityGroupIdStringList :: Show SecurityGroupIdStringList where
  show = genericShow
instance decodeSecurityGroupIdStringList :: Decode SecurityGroupIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSecurityGroupIdStringList :: Encode SecurityGroupIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a security group.</p>
newtype SecurityGroupIdentifier = SecurityGroupIdentifier 
  { "GroupId" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeSecurityGroupIdentifier :: Newtype SecurityGroupIdentifier _
derive instance repGenericSecurityGroupIdentifier :: Generic SecurityGroupIdentifier _
instance showSecurityGroupIdentifier :: Show SecurityGroupIdentifier where
  show = genericShow
instance decodeSecurityGroupIdentifier :: Decode SecurityGroupIdentifier where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSecurityGroupIdentifier :: Encode SecurityGroupIdentifier where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SecurityGroupIdentifier from required parameters
newSecurityGroupIdentifier :: SecurityGroupIdentifier
newSecurityGroupIdentifier  = SecurityGroupIdentifier { "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }

-- | Constructs SecurityGroupIdentifier's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSecurityGroupIdentifier' :: ( { "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) } -> {"GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) } ) -> SecurityGroupIdentifier
newSecurityGroupIdentifier'  customize = (SecurityGroupIdentifier <<< customize) { "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }



newtype SecurityGroupList = SecurityGroupList (Array SecurityGroup)
derive instance newtypeSecurityGroupList :: Newtype SecurityGroupList _
derive instance repGenericSecurityGroupList :: Generic SecurityGroupList _
instance showSecurityGroupList :: Show SecurityGroupList where
  show = genericShow
instance decodeSecurityGroupList :: Decode SecurityGroupList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSecurityGroupList :: Encode SecurityGroupList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a VPC with a security group that references your security group.</p>
newtype SecurityGroupReference = SecurityGroupReference 
  { "GroupId" :: (String)
  , "ReferencingVpcId" :: (String)
  , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeSecurityGroupReference :: Newtype SecurityGroupReference _
derive instance repGenericSecurityGroupReference :: Generic SecurityGroupReference _
instance showSecurityGroupReference :: Show SecurityGroupReference where
  show = genericShow
instance decodeSecurityGroupReference :: Decode SecurityGroupReference where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSecurityGroupReference :: Encode SecurityGroupReference where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SecurityGroupReference from required parameters
newSecurityGroupReference :: String -> String -> SecurityGroupReference
newSecurityGroupReference _GroupId _ReferencingVpcId = SecurityGroupReference { "GroupId": _GroupId, "ReferencingVpcId": _ReferencingVpcId, "VpcPeeringConnectionId": (NullOrUndefined Nothing) }

-- | Constructs SecurityGroupReference's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSecurityGroupReference' :: String -> String -> ( { "GroupId" :: (String) , "ReferencingVpcId" :: (String) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } -> {"GroupId" :: (String) , "ReferencingVpcId" :: (String) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } ) -> SecurityGroupReference
newSecurityGroupReference' _GroupId _ReferencingVpcId customize = (SecurityGroupReference <<< customize) { "GroupId": _GroupId, "ReferencingVpcId": _ReferencingVpcId, "VpcPeeringConnectionId": (NullOrUndefined Nothing) }



newtype SecurityGroupReferences = SecurityGroupReferences (Array SecurityGroupReference)
derive instance newtypeSecurityGroupReferences :: Newtype SecurityGroupReferences _
derive instance repGenericSecurityGroupReferences :: Generic SecurityGroupReferences _
instance showSecurityGroupReferences :: Show SecurityGroupReferences where
  show = genericShow
instance decodeSecurityGroupReferences :: Decode SecurityGroupReferences where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSecurityGroupReferences :: Encode SecurityGroupReferences where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype SecurityGroupStringList = SecurityGroupStringList (Array String)
derive instance newtypeSecurityGroupStringList :: Newtype SecurityGroupStringList _
derive instance repGenericSecurityGroupStringList :: Generic SecurityGroupStringList _
instance showSecurityGroupStringList :: Show SecurityGroupStringList where
  show = genericShow
instance decodeSecurityGroupStringList :: Decode SecurityGroupStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSecurityGroupStringList :: Encode SecurityGroupStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a service configuration for a VPC endpoint service.</p>
newtype ServiceConfiguration = ServiceConfiguration 
  { "ServiceType" :: NullOrUndefined.NullOrUndefined (ServiceTypeDetailSet)
  , "ServiceId" :: NullOrUndefined.NullOrUndefined (String)
  , "ServiceName" :: NullOrUndefined.NullOrUndefined (String)
  , "ServiceState" :: NullOrUndefined.NullOrUndefined (ServiceState)
  , "AvailabilityZones" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkLoadBalancerArns" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "BaseEndpointDnsNames" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeServiceConfiguration :: Newtype ServiceConfiguration _
derive instance repGenericServiceConfiguration :: Generic ServiceConfiguration _
instance showServiceConfiguration :: Show ServiceConfiguration where
  show = genericShow
instance decodeServiceConfiguration :: Decode ServiceConfiguration where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeServiceConfiguration :: Encode ServiceConfiguration where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ServiceConfiguration from required parameters
newServiceConfiguration :: ServiceConfiguration
newServiceConfiguration  = ServiceConfiguration { "AcceptanceRequired": (NullOrUndefined Nothing), "AvailabilityZones": (NullOrUndefined Nothing), "BaseEndpointDnsNames": (NullOrUndefined Nothing), "NetworkLoadBalancerArns": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "ServiceId": (NullOrUndefined Nothing), "ServiceName": (NullOrUndefined Nothing), "ServiceState": (NullOrUndefined Nothing), "ServiceType": (NullOrUndefined Nothing) }

-- | Constructs ServiceConfiguration's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newServiceConfiguration' :: ( { "ServiceType" :: NullOrUndefined.NullOrUndefined (ServiceTypeDetailSet) , "ServiceId" :: NullOrUndefined.NullOrUndefined (String) , "ServiceName" :: NullOrUndefined.NullOrUndefined (String) , "ServiceState" :: NullOrUndefined.NullOrUndefined (ServiceState) , "AvailabilityZones" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkLoadBalancerArns" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "BaseEndpointDnsNames" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) } -> {"ServiceType" :: NullOrUndefined.NullOrUndefined (ServiceTypeDetailSet) , "ServiceId" :: NullOrUndefined.NullOrUndefined (String) , "ServiceName" :: NullOrUndefined.NullOrUndefined (String) , "ServiceState" :: NullOrUndefined.NullOrUndefined (ServiceState) , "AvailabilityZones" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkLoadBalancerArns" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "BaseEndpointDnsNames" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) } ) -> ServiceConfiguration
newServiceConfiguration'  customize = (ServiceConfiguration <<< customize) { "AcceptanceRequired": (NullOrUndefined Nothing), "AvailabilityZones": (NullOrUndefined Nothing), "BaseEndpointDnsNames": (NullOrUndefined Nothing), "NetworkLoadBalancerArns": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "ServiceId": (NullOrUndefined Nothing), "ServiceName": (NullOrUndefined Nothing), "ServiceState": (NullOrUndefined Nothing), "ServiceType": (NullOrUndefined Nothing) }



newtype ServiceConfigurationSet = ServiceConfigurationSet (Array ServiceConfiguration)
derive instance newtypeServiceConfigurationSet :: Newtype ServiceConfigurationSet _
derive instance repGenericServiceConfigurationSet :: Generic ServiceConfigurationSet _
instance showServiceConfigurationSet :: Show ServiceConfigurationSet where
  show = genericShow
instance decodeServiceConfigurationSet :: Decode ServiceConfigurationSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeServiceConfigurationSet :: Encode ServiceConfigurationSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a VPC endpoint service.</p>
newtype ServiceDetail = ServiceDetail 
  { "ServiceName" :: NullOrUndefined.NullOrUndefined (String)
  , "ServiceType" :: NullOrUndefined.NullOrUndefined (ServiceTypeDetailSet)
  , "AvailabilityZones" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "Owner" :: NullOrUndefined.NullOrUndefined (String)
  , "BaseEndpointDnsNames" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcEndpointPolicySupported" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeServiceDetail :: Newtype ServiceDetail _
derive instance repGenericServiceDetail :: Generic ServiceDetail _
instance showServiceDetail :: Show ServiceDetail where
  show = genericShow
instance decodeServiceDetail :: Decode ServiceDetail where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeServiceDetail :: Encode ServiceDetail where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ServiceDetail from required parameters
newServiceDetail :: ServiceDetail
newServiceDetail  = ServiceDetail { "AcceptanceRequired": (NullOrUndefined Nothing), "AvailabilityZones": (NullOrUndefined Nothing), "BaseEndpointDnsNames": (NullOrUndefined Nothing), "Owner": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "ServiceName": (NullOrUndefined Nothing), "ServiceType": (NullOrUndefined Nothing), "VpcEndpointPolicySupported": (NullOrUndefined Nothing) }

-- | Constructs ServiceDetail's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newServiceDetail' :: ( { "ServiceName" :: NullOrUndefined.NullOrUndefined (String) , "ServiceType" :: NullOrUndefined.NullOrUndefined (ServiceTypeDetailSet) , "AvailabilityZones" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Owner" :: NullOrUndefined.NullOrUndefined (String) , "BaseEndpointDnsNames" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointPolicySupported" :: NullOrUndefined.NullOrUndefined (Boolean) , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"ServiceName" :: NullOrUndefined.NullOrUndefined (String) , "ServiceType" :: NullOrUndefined.NullOrUndefined (ServiceTypeDetailSet) , "AvailabilityZones" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Owner" :: NullOrUndefined.NullOrUndefined (String) , "BaseEndpointDnsNames" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "PrivateDnsName" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointPolicySupported" :: NullOrUndefined.NullOrUndefined (Boolean) , "AcceptanceRequired" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> ServiceDetail
newServiceDetail'  customize = (ServiceDetail <<< customize) { "AcceptanceRequired": (NullOrUndefined Nothing), "AvailabilityZones": (NullOrUndefined Nothing), "BaseEndpointDnsNames": (NullOrUndefined Nothing), "Owner": (NullOrUndefined Nothing), "PrivateDnsName": (NullOrUndefined Nothing), "ServiceName": (NullOrUndefined Nothing), "ServiceType": (NullOrUndefined Nothing), "VpcEndpointPolicySupported": (NullOrUndefined Nothing) }



newtype ServiceDetailSet = ServiceDetailSet (Array ServiceDetail)
derive instance newtypeServiceDetailSet :: Newtype ServiceDetailSet _
derive instance repGenericServiceDetailSet :: Generic ServiceDetailSet _
instance showServiceDetailSet :: Show ServiceDetailSet where
  show = genericShow
instance decodeServiceDetailSet :: Decode ServiceDetailSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeServiceDetailSet :: Encode ServiceDetailSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ServiceState = ServiceState String
derive instance newtypeServiceState :: Newtype ServiceState _
derive instance repGenericServiceState :: Generic ServiceState _
instance showServiceState :: Show ServiceState where
  show = genericShow
instance decodeServiceState :: Decode ServiceState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeServiceState :: Encode ServiceState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ServiceType = ServiceType String
derive instance newtypeServiceType :: Newtype ServiceType _
derive instance repGenericServiceType :: Generic ServiceType _
instance showServiceType :: Show ServiceType where
  show = genericShow
instance decodeServiceType :: Decode ServiceType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeServiceType :: Encode ServiceType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the type of service for a VPC endpoint.</p>
newtype ServiceTypeDetail = ServiceTypeDetail 
  { "ServiceType" :: NullOrUndefined.NullOrUndefined (ServiceType)
  }
derive instance newtypeServiceTypeDetail :: Newtype ServiceTypeDetail _
derive instance repGenericServiceTypeDetail :: Generic ServiceTypeDetail _
instance showServiceTypeDetail :: Show ServiceTypeDetail where
  show = genericShow
instance decodeServiceTypeDetail :: Decode ServiceTypeDetail where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeServiceTypeDetail :: Encode ServiceTypeDetail where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs ServiceTypeDetail from required parameters
newServiceTypeDetail :: ServiceTypeDetail
newServiceTypeDetail  = ServiceTypeDetail { "ServiceType": (NullOrUndefined Nothing) }

-- | Constructs ServiceTypeDetail's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newServiceTypeDetail' :: ( { "ServiceType" :: NullOrUndefined.NullOrUndefined (ServiceType) } -> {"ServiceType" :: NullOrUndefined.NullOrUndefined (ServiceType) } ) -> ServiceTypeDetail
newServiceTypeDetail'  customize = (ServiceTypeDetail <<< customize) { "ServiceType": (NullOrUndefined Nothing) }



newtype ServiceTypeDetailSet = ServiceTypeDetailSet (Array ServiceTypeDetail)
derive instance newtypeServiceTypeDetailSet :: Newtype ServiceTypeDetailSet _
derive instance repGenericServiceTypeDetailSet :: Generic ServiceTypeDetailSet _
instance showServiceTypeDetailSet :: Show ServiceTypeDetailSet where
  show = genericShow
instance decodeServiceTypeDetailSet :: Decode ServiceTypeDetailSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeServiceTypeDetailSet :: Encode ServiceTypeDetailSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ShutdownBehavior = ShutdownBehavior String
derive instance newtypeShutdownBehavior :: Newtype ShutdownBehavior _
derive instance repGenericShutdownBehavior :: Generic ShutdownBehavior _
instance showShutdownBehavior :: Show ShutdownBehavior where
  show = genericShow
instance decodeShutdownBehavior :: Decode ShutdownBehavior where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeShutdownBehavior :: Encode ShutdownBehavior where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the time period for a Scheduled Instance to start its first schedule. The time period must span less than one day.</p>
newtype SlotDateTimeRangeRequest = SlotDateTimeRangeRequest 
  { "EarliestTime" :: (DateTime)
  , "LatestTime" :: (DateTime)
  }
derive instance newtypeSlotDateTimeRangeRequest :: Newtype SlotDateTimeRangeRequest _
derive instance repGenericSlotDateTimeRangeRequest :: Generic SlotDateTimeRangeRequest _
instance showSlotDateTimeRangeRequest :: Show SlotDateTimeRangeRequest where
  show = genericShow
instance decodeSlotDateTimeRangeRequest :: Decode SlotDateTimeRangeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSlotDateTimeRangeRequest :: Encode SlotDateTimeRangeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SlotDateTimeRangeRequest from required parameters
newSlotDateTimeRangeRequest :: DateTime -> DateTime -> SlotDateTimeRangeRequest
newSlotDateTimeRangeRequest _EarliestTime _LatestTime = SlotDateTimeRangeRequest { "EarliestTime": _EarliestTime, "LatestTime": _LatestTime }

-- | Constructs SlotDateTimeRangeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSlotDateTimeRangeRequest' :: DateTime -> DateTime -> ( { "EarliestTime" :: (DateTime) , "LatestTime" :: (DateTime) } -> {"EarliestTime" :: (DateTime) , "LatestTime" :: (DateTime) } ) -> SlotDateTimeRangeRequest
newSlotDateTimeRangeRequest' _EarliestTime _LatestTime customize = (SlotDateTimeRangeRequest <<< customize) { "EarliestTime": _EarliestTime, "LatestTime": _LatestTime }



-- | <p>Describes the time period for a Scheduled Instance to start its first schedule.</p>
newtype SlotStartTimeRangeRequest = SlotStartTimeRangeRequest 
  { "EarliestTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "LatestTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeSlotStartTimeRangeRequest :: Newtype SlotStartTimeRangeRequest _
derive instance repGenericSlotStartTimeRangeRequest :: Generic SlotStartTimeRangeRequest _
instance showSlotStartTimeRangeRequest :: Show SlotStartTimeRangeRequest where
  show = genericShow
instance decodeSlotStartTimeRangeRequest :: Decode SlotStartTimeRangeRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSlotStartTimeRangeRequest :: Encode SlotStartTimeRangeRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SlotStartTimeRangeRequest from required parameters
newSlotStartTimeRangeRequest :: SlotStartTimeRangeRequest
newSlotStartTimeRangeRequest  = SlotStartTimeRangeRequest { "EarliestTime": (NullOrUndefined Nothing), "LatestTime": (NullOrUndefined Nothing) }

-- | Constructs SlotStartTimeRangeRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSlotStartTimeRangeRequest' :: ( { "EarliestTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "LatestTime" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"EarliestTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "LatestTime" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> SlotStartTimeRangeRequest
newSlotStartTimeRangeRequest'  customize = (SlotStartTimeRangeRequest <<< customize) { "EarliestTime": (NullOrUndefined Nothing), "LatestTime": (NullOrUndefined Nothing) }



-- | <p>Describes a snapshot.</p>
newtype Snapshot = Snapshot 
  { "DataEncryptionKeyId" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String)
  , "OwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "Progress" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "State" :: NullOrUndefined.NullOrUndefined (SnapshotState)
  , "StateMessage" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeId" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int)
  , "OwnerAlias" :: NullOrUndefined.NullOrUndefined (String)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeSnapshot :: Newtype Snapshot _
derive instance repGenericSnapshot :: Generic Snapshot _
instance showSnapshot :: Show Snapshot where
  show = genericShow
instance decodeSnapshot :: Decode Snapshot where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSnapshot :: Encode Snapshot where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Snapshot from required parameters
newSnapshot :: Snapshot
newSnapshot  = Snapshot { "DataEncryptionKeyId": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "OwnerAlias": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "StartTime": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "StateMessage": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing), "VolumeSize": (NullOrUndefined Nothing) }

-- | Constructs Snapshot's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSnapshot' :: ( { "DataEncryptionKeyId" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "State" :: NullOrUndefined.NullOrUndefined (SnapshotState) , "StateMessage" :: NullOrUndefined.NullOrUndefined (String) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int) , "OwnerAlias" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"DataEncryptionKeyId" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "State" :: NullOrUndefined.NullOrUndefined (SnapshotState) , "StateMessage" :: NullOrUndefined.NullOrUndefined (String) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeSize" :: NullOrUndefined.NullOrUndefined (Int) , "OwnerAlias" :: NullOrUndefined.NullOrUndefined (String) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> Snapshot
newSnapshot'  customize = (Snapshot <<< customize) { "DataEncryptionKeyId": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "OwnerAlias": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "StartTime": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "StateMessage": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing), "VolumeSize": (NullOrUndefined Nothing) }



newtype SnapshotAttributeName = SnapshotAttributeName String
derive instance newtypeSnapshotAttributeName :: Newtype SnapshotAttributeName _
derive instance repGenericSnapshotAttributeName :: Generic SnapshotAttributeName _
instance showSnapshotAttributeName :: Show SnapshotAttributeName where
  show = genericShow
instance decodeSnapshotAttributeName :: Decode SnapshotAttributeName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSnapshotAttributeName :: Encode SnapshotAttributeName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the snapshot created from the imported disk.</p>
newtype SnapshotDetail = SnapshotDetail 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DeviceName" :: NullOrUndefined.NullOrUndefined (String)
  , "DiskImageSize" :: NullOrUndefined.NullOrUndefined (Number)
  , "Format" :: NullOrUndefined.NullOrUndefined (String)
  , "Progress" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  , "Status" :: NullOrUndefined.NullOrUndefined (String)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  , "Url" :: NullOrUndefined.NullOrUndefined (String)
  , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucketDetails)
  }
derive instance newtypeSnapshotDetail :: Newtype SnapshotDetail _
derive instance repGenericSnapshotDetail :: Generic SnapshotDetail _
instance showSnapshotDetail :: Show SnapshotDetail where
  show = genericShow
instance decodeSnapshotDetail :: Decode SnapshotDetail where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSnapshotDetail :: Encode SnapshotDetail where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SnapshotDetail from required parameters
newSnapshotDetail :: SnapshotDetail
newSnapshotDetail  = SnapshotDetail { "Description": (NullOrUndefined Nothing), "DeviceName": (NullOrUndefined Nothing), "DiskImageSize": (NullOrUndefined Nothing), "Format": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "Url": (NullOrUndefined Nothing), "UserBucket": (NullOrUndefined Nothing) }

-- | Constructs SnapshotDetail's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSnapshotDetail' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "DiskImageSize" :: NullOrUndefined.NullOrUndefined (Number) , "Format" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "Url" :: NullOrUndefined.NullOrUndefined (String) , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucketDetails) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "DeviceName" :: NullOrUndefined.NullOrUndefined (String) , "DiskImageSize" :: NullOrUndefined.NullOrUndefined (Number) , "Format" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "Url" :: NullOrUndefined.NullOrUndefined (String) , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucketDetails) } ) -> SnapshotDetail
newSnapshotDetail'  customize = (SnapshotDetail <<< customize) { "Description": (NullOrUndefined Nothing), "DeviceName": (NullOrUndefined Nothing), "DiskImageSize": (NullOrUndefined Nothing), "Format": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "Url": (NullOrUndefined Nothing), "UserBucket": (NullOrUndefined Nothing) }



newtype SnapshotDetailList = SnapshotDetailList (Array SnapshotDetail)
derive instance newtypeSnapshotDetailList :: Newtype SnapshotDetailList _
derive instance repGenericSnapshotDetailList :: Generic SnapshotDetailList _
instance showSnapshotDetailList :: Show SnapshotDetailList where
  show = genericShow
instance decodeSnapshotDetailList :: Decode SnapshotDetailList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSnapshotDetailList :: Encode SnapshotDetailList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The disk container object for the import snapshot request.</p>
newtype SnapshotDiskContainer = SnapshotDiskContainer 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "Format" :: NullOrUndefined.NullOrUndefined (String)
  , "Url" :: NullOrUndefined.NullOrUndefined (String)
  , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucket)
  }
derive instance newtypeSnapshotDiskContainer :: Newtype SnapshotDiskContainer _
derive instance repGenericSnapshotDiskContainer :: Generic SnapshotDiskContainer _
instance showSnapshotDiskContainer :: Show SnapshotDiskContainer where
  show = genericShow
instance decodeSnapshotDiskContainer :: Decode SnapshotDiskContainer where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSnapshotDiskContainer :: Encode SnapshotDiskContainer where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SnapshotDiskContainer from required parameters
newSnapshotDiskContainer :: SnapshotDiskContainer
newSnapshotDiskContainer  = SnapshotDiskContainer { "Description": (NullOrUndefined Nothing), "Format": (NullOrUndefined Nothing), "Url": (NullOrUndefined Nothing), "UserBucket": (NullOrUndefined Nothing) }

-- | Constructs SnapshotDiskContainer's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSnapshotDiskContainer' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "Format" :: NullOrUndefined.NullOrUndefined (String) , "Url" :: NullOrUndefined.NullOrUndefined (String) , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucket) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "Format" :: NullOrUndefined.NullOrUndefined (String) , "Url" :: NullOrUndefined.NullOrUndefined (String) , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucket) } ) -> SnapshotDiskContainer
newSnapshotDiskContainer'  customize = (SnapshotDiskContainer <<< customize) { "Description": (NullOrUndefined Nothing), "Format": (NullOrUndefined Nothing), "Url": (NullOrUndefined Nothing), "UserBucket": (NullOrUndefined Nothing) }



newtype SnapshotIdStringList = SnapshotIdStringList (Array String)
derive instance newtypeSnapshotIdStringList :: Newtype SnapshotIdStringList _
derive instance repGenericSnapshotIdStringList :: Generic SnapshotIdStringList _
instance showSnapshotIdStringList :: Show SnapshotIdStringList where
  show = genericShow
instance decodeSnapshotIdStringList :: Decode SnapshotIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSnapshotIdStringList :: Encode SnapshotIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype SnapshotList = SnapshotList (Array Snapshot)
derive instance newtypeSnapshotList :: Newtype SnapshotList _
derive instance repGenericSnapshotList :: Generic SnapshotList _
instance showSnapshotList :: Show SnapshotList where
  show = genericShow
instance decodeSnapshotList :: Decode SnapshotList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSnapshotList :: Encode SnapshotList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype SnapshotState = SnapshotState String
derive instance newtypeSnapshotState :: Newtype SnapshotState _
derive instance repGenericSnapshotState :: Generic SnapshotState _
instance showSnapshotState :: Show SnapshotState where
  show = genericShow
instance decodeSnapshotState :: Decode SnapshotState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSnapshotState :: Encode SnapshotState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Details about the import snapshot task.</p>
newtype SnapshotTaskDetail = SnapshotTaskDetail 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "DiskImageSize" :: NullOrUndefined.NullOrUndefined (Number)
  , "Format" :: NullOrUndefined.NullOrUndefined (String)
  , "Progress" :: NullOrUndefined.NullOrUndefined (String)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  , "Status" :: NullOrUndefined.NullOrUndefined (String)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  , "Url" :: NullOrUndefined.NullOrUndefined (String)
  , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucketDetails)
  }
derive instance newtypeSnapshotTaskDetail :: Newtype SnapshotTaskDetail _
derive instance repGenericSnapshotTaskDetail :: Generic SnapshotTaskDetail _
instance showSnapshotTaskDetail :: Show SnapshotTaskDetail where
  show = genericShow
instance decodeSnapshotTaskDetail :: Decode SnapshotTaskDetail where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSnapshotTaskDetail :: Encode SnapshotTaskDetail where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SnapshotTaskDetail from required parameters
newSnapshotTaskDetail :: SnapshotTaskDetail
newSnapshotTaskDetail  = SnapshotTaskDetail { "Description": (NullOrUndefined Nothing), "DiskImageSize": (NullOrUndefined Nothing), "Format": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "Url": (NullOrUndefined Nothing), "UserBucket": (NullOrUndefined Nothing) }

-- | Constructs SnapshotTaskDetail's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSnapshotTaskDetail' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "DiskImageSize" :: NullOrUndefined.NullOrUndefined (Number) , "Format" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "Url" :: NullOrUndefined.NullOrUndefined (String) , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucketDetails) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "DiskImageSize" :: NullOrUndefined.NullOrUndefined (Number) , "Format" :: NullOrUndefined.NullOrUndefined (String) , "Progress" :: NullOrUndefined.NullOrUndefined (String) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (String) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "Url" :: NullOrUndefined.NullOrUndefined (String) , "UserBucket" :: NullOrUndefined.NullOrUndefined (UserBucketDetails) } ) -> SnapshotTaskDetail
newSnapshotTaskDetail'  customize = (SnapshotTaskDetail <<< customize) { "Description": (NullOrUndefined Nothing), "DiskImageSize": (NullOrUndefined Nothing), "Format": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "Url": (NullOrUndefined Nothing), "UserBucket": (NullOrUndefined Nothing) }



-- | <p>Describes the data feed for a Spot Instance.</p>
newtype SpotDatafeedSubscription = SpotDatafeedSubscription 
  { "Bucket" :: NullOrUndefined.NullOrUndefined (String)
  , "Fault" :: NullOrUndefined.NullOrUndefined (SpotInstanceStateFault)
  , "OwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "Prefix" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (DatafeedSubscriptionState)
  }
derive instance newtypeSpotDatafeedSubscription :: Newtype SpotDatafeedSubscription _
derive instance repGenericSpotDatafeedSubscription :: Generic SpotDatafeedSubscription _
instance showSpotDatafeedSubscription :: Show SpotDatafeedSubscription where
  show = genericShow
instance decodeSpotDatafeedSubscription :: Decode SpotDatafeedSubscription where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotDatafeedSubscription :: Encode SpotDatafeedSubscription where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotDatafeedSubscription from required parameters
newSpotDatafeedSubscription :: SpotDatafeedSubscription
newSpotDatafeedSubscription  = SpotDatafeedSubscription { "Bucket": (NullOrUndefined Nothing), "Fault": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "Prefix": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }

-- | Constructs SpotDatafeedSubscription's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotDatafeedSubscription' :: ( { "Bucket" :: NullOrUndefined.NullOrUndefined (String) , "Fault" :: NullOrUndefined.NullOrUndefined (SpotInstanceStateFault) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "Prefix" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (DatafeedSubscriptionState) } -> {"Bucket" :: NullOrUndefined.NullOrUndefined (String) , "Fault" :: NullOrUndefined.NullOrUndefined (SpotInstanceStateFault) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "Prefix" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (DatafeedSubscriptionState) } ) -> SpotDatafeedSubscription
newSpotDatafeedSubscription'  customize = (SpotDatafeedSubscription <<< customize) { "Bucket": (NullOrUndefined Nothing), "Fault": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "Prefix": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }



-- | <p>Describes the launch specification for one or more Spot Instances.</p>
newtype SpotFleetLaunchSpecification = SpotFleetLaunchSpecification 
  { "SecurityGroups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList)
  , "AddressingType" :: NullOrUndefined.NullOrUndefined (String)
  , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList)
  , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification)
  , "ImageId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "KernelId" :: NullOrUndefined.NullOrUndefined (String)
  , "KeyName" :: NullOrUndefined.NullOrUndefined (String)
  , "Monitoring" :: NullOrUndefined.NullOrUndefined (SpotFleetMonitoring)
  , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList)
  , "Placement" :: NullOrUndefined.NullOrUndefined (SpotPlacement)
  , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "UserData" :: NullOrUndefined.NullOrUndefined (String)
  , "WeightedCapacity" :: NullOrUndefined.NullOrUndefined (Number)
  , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (SpotFleetTagSpecificationList)
  }
derive instance newtypeSpotFleetLaunchSpecification :: Newtype SpotFleetLaunchSpecification _
derive instance repGenericSpotFleetLaunchSpecification :: Generic SpotFleetLaunchSpecification _
instance showSpotFleetLaunchSpecification :: Show SpotFleetLaunchSpecification where
  show = genericShow
instance decodeSpotFleetLaunchSpecification :: Decode SpotFleetLaunchSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotFleetLaunchSpecification :: Encode SpotFleetLaunchSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotFleetLaunchSpecification from required parameters
newSpotFleetLaunchSpecification :: SpotFleetLaunchSpecification
newSpotFleetLaunchSpecification  = SpotFleetLaunchSpecification { "AddressingType": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing), "WeightedCapacity": (NullOrUndefined Nothing) }

-- | Constructs SpotFleetLaunchSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotFleetLaunchSpecification' :: ( { "SecurityGroups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "AddressingType" :: NullOrUndefined.NullOrUndefined (String) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (SpotFleetMonitoring) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList) , "Placement" :: NullOrUndefined.NullOrUndefined (SpotPlacement) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "UserData" :: NullOrUndefined.NullOrUndefined (String) , "WeightedCapacity" :: NullOrUndefined.NullOrUndefined (Number) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (SpotFleetTagSpecificationList) } -> {"SecurityGroups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierList) , "AddressingType" :: NullOrUndefined.NullOrUndefined (String) , "BlockDeviceMappings" :: NullOrUndefined.NullOrUndefined (BlockDeviceMappingList) , "EbsOptimized" :: NullOrUndefined.NullOrUndefined (Boolean) , "IamInstanceProfile" :: NullOrUndefined.NullOrUndefined (IamInstanceProfileSpecification) , "ImageId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "KernelId" :: NullOrUndefined.NullOrUndefined (String) , "KeyName" :: NullOrUndefined.NullOrUndefined (String) , "Monitoring" :: NullOrUndefined.NullOrUndefined (SpotFleetMonitoring) , "NetworkInterfaces" :: NullOrUndefined.NullOrUndefined (InstanceNetworkInterfaceSpecificationList) , "Placement" :: NullOrUndefined.NullOrUndefined (SpotPlacement) , "RamdiskId" :: NullOrUndefined.NullOrUndefined (String) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "UserData" :: NullOrUndefined.NullOrUndefined (String) , "WeightedCapacity" :: NullOrUndefined.NullOrUndefined (Number) , "TagSpecifications" :: NullOrUndefined.NullOrUndefined (SpotFleetTagSpecificationList) } ) -> SpotFleetLaunchSpecification
newSpotFleetLaunchSpecification'  customize = (SpotFleetLaunchSpecification <<< customize) { "AddressingType": (NullOrUndefined Nothing), "BlockDeviceMappings": (NullOrUndefined Nothing), "EbsOptimized": (NullOrUndefined Nothing), "IamInstanceProfile": (NullOrUndefined Nothing), "ImageId": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "KernelId": (NullOrUndefined Nothing), "KeyName": (NullOrUndefined Nothing), "Monitoring": (NullOrUndefined Nothing), "NetworkInterfaces": (NullOrUndefined Nothing), "Placement": (NullOrUndefined Nothing), "RamdiskId": (NullOrUndefined Nothing), "SecurityGroups": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "TagSpecifications": (NullOrUndefined Nothing), "UserData": (NullOrUndefined Nothing), "WeightedCapacity": (NullOrUndefined Nothing) }



-- | <p>Describes whether monitoring is enabled.</p>
newtype SpotFleetMonitoring = SpotFleetMonitoring 
  { "Enabled" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeSpotFleetMonitoring :: Newtype SpotFleetMonitoring _
derive instance repGenericSpotFleetMonitoring :: Generic SpotFleetMonitoring _
instance showSpotFleetMonitoring :: Show SpotFleetMonitoring where
  show = genericShow
instance decodeSpotFleetMonitoring :: Decode SpotFleetMonitoring where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotFleetMonitoring :: Encode SpotFleetMonitoring where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotFleetMonitoring from required parameters
newSpotFleetMonitoring :: SpotFleetMonitoring
newSpotFleetMonitoring  = SpotFleetMonitoring { "Enabled": (NullOrUndefined Nothing) }

-- | Constructs SpotFleetMonitoring's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotFleetMonitoring' :: ( { "Enabled" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Enabled" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> SpotFleetMonitoring
newSpotFleetMonitoring'  customize = (SpotFleetMonitoring <<< customize) { "Enabled": (NullOrUndefined Nothing) }



-- | <p>Describes a Spot Fleet request.</p>
newtype SpotFleetRequestConfig = SpotFleetRequestConfig 
  { "ActivityStatus" :: NullOrUndefined.NullOrUndefined (ActivityStatus)
  , "CreateTime" :: (DateTime)
  , "SpotFleetRequestConfig" :: (SpotFleetRequestConfigData)
  , "SpotFleetRequestId" :: (String)
  , "SpotFleetRequestState" :: (BatchState)
  }
derive instance newtypeSpotFleetRequestConfig :: Newtype SpotFleetRequestConfig _
derive instance repGenericSpotFleetRequestConfig :: Generic SpotFleetRequestConfig _
instance showSpotFleetRequestConfig :: Show SpotFleetRequestConfig where
  show = genericShow
instance decodeSpotFleetRequestConfig :: Decode SpotFleetRequestConfig where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotFleetRequestConfig :: Encode SpotFleetRequestConfig where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotFleetRequestConfig from required parameters
newSpotFleetRequestConfig :: DateTime -> SpotFleetRequestConfigData -> String -> BatchState -> SpotFleetRequestConfig
newSpotFleetRequestConfig _CreateTime _SpotFleetRequestConfig _SpotFleetRequestId _SpotFleetRequestState = SpotFleetRequestConfig { "CreateTime": _CreateTime, "SpotFleetRequestConfig": _SpotFleetRequestConfig, "SpotFleetRequestId": _SpotFleetRequestId, "SpotFleetRequestState": _SpotFleetRequestState, "ActivityStatus": (NullOrUndefined Nothing) }

-- | Constructs SpotFleetRequestConfig's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotFleetRequestConfig' :: DateTime -> SpotFleetRequestConfigData -> String -> BatchState -> ( { "ActivityStatus" :: NullOrUndefined.NullOrUndefined (ActivityStatus) , "CreateTime" :: (DateTime) , "SpotFleetRequestConfig" :: (SpotFleetRequestConfigData) , "SpotFleetRequestId" :: (String) , "SpotFleetRequestState" :: (BatchState) } -> {"ActivityStatus" :: NullOrUndefined.NullOrUndefined (ActivityStatus) , "CreateTime" :: (DateTime) , "SpotFleetRequestConfig" :: (SpotFleetRequestConfigData) , "SpotFleetRequestId" :: (String) , "SpotFleetRequestState" :: (BatchState) } ) -> SpotFleetRequestConfig
newSpotFleetRequestConfig' _CreateTime _SpotFleetRequestConfig _SpotFleetRequestId _SpotFleetRequestState customize = (SpotFleetRequestConfig <<< customize) { "CreateTime": _CreateTime, "SpotFleetRequestConfig": _SpotFleetRequestConfig, "SpotFleetRequestId": _SpotFleetRequestId, "SpotFleetRequestState": _SpotFleetRequestState, "ActivityStatus": (NullOrUndefined Nothing) }



-- | <p>Describes the configuration of a Spot Fleet request.</p>
newtype SpotFleetRequestConfigData = SpotFleetRequestConfigData 
  { "AllocationStrategy" :: NullOrUndefined.NullOrUndefined (AllocationStrategy)
  , "ClientToken" :: NullOrUndefined.NullOrUndefined (String)
  , "ExcessCapacityTerminationPolicy" :: NullOrUndefined.NullOrUndefined (ExcessCapacityTerminationPolicy)
  , "FulfilledCapacity" :: NullOrUndefined.NullOrUndefined (Number)
  , "IamFleetRole" :: (String)
  , "LaunchSpecifications" :: NullOrUndefined.NullOrUndefined (LaunchSpecsList)
  , "LaunchTemplateConfigs" :: NullOrUndefined.NullOrUndefined (LaunchTemplateConfigList)
  , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "TargetCapacity" :: (Int)
  , "TerminateInstancesWithExpiration" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Type" :: NullOrUndefined.NullOrUndefined (FleetType)
  , "ValidFrom" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "ReplaceUnhealthyInstances" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior)
  , "LoadBalancersConfig" :: NullOrUndefined.NullOrUndefined (LoadBalancersConfig)
  }
derive instance newtypeSpotFleetRequestConfigData :: Newtype SpotFleetRequestConfigData _
derive instance repGenericSpotFleetRequestConfigData :: Generic SpotFleetRequestConfigData _
instance showSpotFleetRequestConfigData :: Show SpotFleetRequestConfigData where
  show = genericShow
instance decodeSpotFleetRequestConfigData :: Decode SpotFleetRequestConfigData where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotFleetRequestConfigData :: Encode SpotFleetRequestConfigData where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotFleetRequestConfigData from required parameters
newSpotFleetRequestConfigData :: String -> Int -> SpotFleetRequestConfigData
newSpotFleetRequestConfigData _IamFleetRole _TargetCapacity = SpotFleetRequestConfigData { "IamFleetRole": _IamFleetRole, "TargetCapacity": _TargetCapacity, "AllocationStrategy": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "ExcessCapacityTerminationPolicy": (NullOrUndefined Nothing), "FulfilledCapacity": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "LaunchSpecifications": (NullOrUndefined Nothing), "LaunchTemplateConfigs": (NullOrUndefined Nothing), "LoadBalancersConfig": (NullOrUndefined Nothing), "ReplaceUnhealthyInstances": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "TerminateInstancesWithExpiration": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing), "ValidFrom": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }

-- | Constructs SpotFleetRequestConfigData's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotFleetRequestConfigData' :: String -> Int -> ( { "AllocationStrategy" :: NullOrUndefined.NullOrUndefined (AllocationStrategy) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "ExcessCapacityTerminationPolicy" :: NullOrUndefined.NullOrUndefined (ExcessCapacityTerminationPolicy) , "FulfilledCapacity" :: NullOrUndefined.NullOrUndefined (Number) , "IamFleetRole" :: (String) , "LaunchSpecifications" :: NullOrUndefined.NullOrUndefined (LaunchSpecsList) , "LaunchTemplateConfigs" :: NullOrUndefined.NullOrUndefined (LaunchTemplateConfigList) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "TargetCapacity" :: (Int) , "TerminateInstancesWithExpiration" :: NullOrUndefined.NullOrUndefined (Boolean) , "Type" :: NullOrUndefined.NullOrUndefined (FleetType) , "ValidFrom" :: NullOrUndefined.NullOrUndefined (DateTime) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "ReplaceUnhealthyInstances" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) , "LoadBalancersConfig" :: NullOrUndefined.NullOrUndefined (LoadBalancersConfig) } -> {"AllocationStrategy" :: NullOrUndefined.NullOrUndefined (AllocationStrategy) , "ClientToken" :: NullOrUndefined.NullOrUndefined (String) , "ExcessCapacityTerminationPolicy" :: NullOrUndefined.NullOrUndefined (ExcessCapacityTerminationPolicy) , "FulfilledCapacity" :: NullOrUndefined.NullOrUndefined (Number) , "IamFleetRole" :: (String) , "LaunchSpecifications" :: NullOrUndefined.NullOrUndefined (LaunchSpecsList) , "LaunchTemplateConfigs" :: NullOrUndefined.NullOrUndefined (LaunchTemplateConfigList) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "TargetCapacity" :: (Int) , "TerminateInstancesWithExpiration" :: NullOrUndefined.NullOrUndefined (Boolean) , "Type" :: NullOrUndefined.NullOrUndefined (FleetType) , "ValidFrom" :: NullOrUndefined.NullOrUndefined (DateTime) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "ReplaceUnhealthyInstances" :: NullOrUndefined.NullOrUndefined (Boolean) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) , "LoadBalancersConfig" :: NullOrUndefined.NullOrUndefined (LoadBalancersConfig) } ) -> SpotFleetRequestConfigData
newSpotFleetRequestConfigData' _IamFleetRole _TargetCapacity customize = (SpotFleetRequestConfigData <<< customize) { "IamFleetRole": _IamFleetRole, "TargetCapacity": _TargetCapacity, "AllocationStrategy": (NullOrUndefined Nothing), "ClientToken": (NullOrUndefined Nothing), "ExcessCapacityTerminationPolicy": (NullOrUndefined Nothing), "FulfilledCapacity": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "LaunchSpecifications": (NullOrUndefined Nothing), "LaunchTemplateConfigs": (NullOrUndefined Nothing), "LoadBalancersConfig": (NullOrUndefined Nothing), "ReplaceUnhealthyInstances": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "TerminateInstancesWithExpiration": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing), "ValidFrom": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }



newtype SpotFleetRequestConfigSet = SpotFleetRequestConfigSet (Array SpotFleetRequestConfig)
derive instance newtypeSpotFleetRequestConfigSet :: Newtype SpotFleetRequestConfigSet _
derive instance repGenericSpotFleetRequestConfigSet :: Generic SpotFleetRequestConfigSet _
instance showSpotFleetRequestConfigSet :: Show SpotFleetRequestConfigSet where
  show = genericShow
instance decodeSpotFleetRequestConfigSet :: Decode SpotFleetRequestConfigSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotFleetRequestConfigSet :: Encode SpotFleetRequestConfigSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The tags for a Spot Fleet resource.</p>
newtype SpotFleetTagSpecification = SpotFleetTagSpecification 
  { "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeSpotFleetTagSpecification :: Newtype SpotFleetTagSpecification _
derive instance repGenericSpotFleetTagSpecification :: Generic SpotFleetTagSpecification _
instance showSpotFleetTagSpecification :: Show SpotFleetTagSpecification where
  show = genericShow
instance decodeSpotFleetTagSpecification :: Decode SpotFleetTagSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotFleetTagSpecification :: Encode SpotFleetTagSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotFleetTagSpecification from required parameters
newSpotFleetTagSpecification :: SpotFleetTagSpecification
newSpotFleetTagSpecification  = SpotFleetTagSpecification { "ResourceType": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs SpotFleetTagSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotFleetTagSpecification' :: ( { "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> SpotFleetTagSpecification
newSpotFleetTagSpecification'  customize = (SpotFleetTagSpecification <<< customize) { "ResourceType": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



newtype SpotFleetTagSpecificationList = SpotFleetTagSpecificationList (Array SpotFleetTagSpecification)
derive instance newtypeSpotFleetTagSpecificationList :: Newtype SpotFleetTagSpecificationList _
derive instance repGenericSpotFleetTagSpecificationList :: Generic SpotFleetTagSpecificationList _
instance showSpotFleetTagSpecificationList :: Show SpotFleetTagSpecificationList where
  show = genericShow
instance decodeSpotFleetTagSpecificationList :: Decode SpotFleetTagSpecificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotFleetTagSpecificationList :: Encode SpotFleetTagSpecificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a Spot Instance request.</p>
newtype SpotInstanceRequest = SpotInstanceRequest 
  { "ActualBlockHourlyPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "AvailabilityZoneGroup" :: NullOrUndefined.NullOrUndefined (String)
  , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int)
  , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Fault" :: NullOrUndefined.NullOrUndefined (SpotInstanceStateFault)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchGroup" :: NullOrUndefined.NullOrUndefined (String)
  , "LaunchSpecification" :: NullOrUndefined.NullOrUndefined (LaunchSpecification)
  , "LaunchedAvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription)
  , "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (SpotInstanceState)
  , "Status" :: NullOrUndefined.NullOrUndefined (SpotInstanceStatus)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "Type" :: NullOrUndefined.NullOrUndefined (SpotInstanceType)
  , "ValidFrom" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior)
  }
derive instance newtypeSpotInstanceRequest :: Newtype SpotInstanceRequest _
derive instance repGenericSpotInstanceRequest :: Generic SpotInstanceRequest _
instance showSpotInstanceRequest :: Show SpotInstanceRequest where
  show = genericShow
instance decodeSpotInstanceRequest :: Decode SpotInstanceRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotInstanceRequest :: Encode SpotInstanceRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotInstanceRequest from required parameters
newSpotInstanceRequest :: SpotInstanceRequest
newSpotInstanceRequest  = SpotInstanceRequest { "ActualBlockHourlyPrice": (NullOrUndefined Nothing), "AvailabilityZoneGroup": (NullOrUndefined Nothing), "BlockDurationMinutes": (NullOrUndefined Nothing), "CreateTime": (NullOrUndefined Nothing), "Fault": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "LaunchGroup": (NullOrUndefined Nothing), "LaunchSpecification": (NullOrUndefined Nothing), "LaunchedAvailabilityZone": (NullOrUndefined Nothing), "ProductDescription": (NullOrUndefined Nothing), "SpotInstanceRequestId": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing), "ValidFrom": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }

-- | Constructs SpotInstanceRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotInstanceRequest' :: ( { "ActualBlockHourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "AvailabilityZoneGroup" :: NullOrUndefined.NullOrUndefined (String) , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int) , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Fault" :: NullOrUndefined.NullOrUndefined (SpotInstanceStateFault) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchGroup" :: NullOrUndefined.NullOrUndefined (String) , "LaunchSpecification" :: NullOrUndefined.NullOrUndefined (LaunchSpecification) , "LaunchedAvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription) , "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (SpotInstanceState) , "Status" :: NullOrUndefined.NullOrUndefined (SpotInstanceStatus) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "Type" :: NullOrUndefined.NullOrUndefined (SpotInstanceType) , "ValidFrom" :: NullOrUndefined.NullOrUndefined (DateTime) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) } -> {"ActualBlockHourlyPrice" :: NullOrUndefined.NullOrUndefined (String) , "AvailabilityZoneGroup" :: NullOrUndefined.NullOrUndefined (String) , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int) , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Fault" :: NullOrUndefined.NullOrUndefined (SpotInstanceStateFault) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "LaunchGroup" :: NullOrUndefined.NullOrUndefined (String) , "LaunchSpecification" :: NullOrUndefined.NullOrUndefined (LaunchSpecification) , "LaunchedAvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription) , "SpotInstanceRequestId" :: NullOrUndefined.NullOrUndefined (String) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (SpotInstanceState) , "Status" :: NullOrUndefined.NullOrUndefined (SpotInstanceStatus) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "Type" :: NullOrUndefined.NullOrUndefined (SpotInstanceType) , "ValidFrom" :: NullOrUndefined.NullOrUndefined (DateTime) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) } ) -> SpotInstanceRequest
newSpotInstanceRequest'  customize = (SpotInstanceRequest <<< customize) { "ActualBlockHourlyPrice": (NullOrUndefined Nothing), "AvailabilityZoneGroup": (NullOrUndefined Nothing), "BlockDurationMinutes": (NullOrUndefined Nothing), "CreateTime": (NullOrUndefined Nothing), "Fault": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "LaunchGroup": (NullOrUndefined Nothing), "LaunchSpecification": (NullOrUndefined Nothing), "LaunchedAvailabilityZone": (NullOrUndefined Nothing), "ProductDescription": (NullOrUndefined Nothing), "SpotInstanceRequestId": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing), "ValidFrom": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }



newtype SpotInstanceRequestIdList = SpotInstanceRequestIdList (Array String)
derive instance newtypeSpotInstanceRequestIdList :: Newtype SpotInstanceRequestIdList _
derive instance repGenericSpotInstanceRequestIdList :: Generic SpotInstanceRequestIdList _
instance showSpotInstanceRequestIdList :: Show SpotInstanceRequestIdList where
  show = genericShow
instance decodeSpotInstanceRequestIdList :: Decode SpotInstanceRequestIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotInstanceRequestIdList :: Encode SpotInstanceRequestIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype SpotInstanceRequestList = SpotInstanceRequestList (Array SpotInstanceRequest)
derive instance newtypeSpotInstanceRequestList :: Newtype SpotInstanceRequestList _
derive instance repGenericSpotInstanceRequestList :: Generic SpotInstanceRequestList _
instance showSpotInstanceRequestList :: Show SpotInstanceRequestList where
  show = genericShow
instance decodeSpotInstanceRequestList :: Decode SpotInstanceRequestList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotInstanceRequestList :: Encode SpotInstanceRequestList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype SpotInstanceState = SpotInstanceState String
derive instance newtypeSpotInstanceState :: Newtype SpotInstanceState _
derive instance repGenericSpotInstanceState :: Generic SpotInstanceState _
instance showSpotInstanceState :: Show SpotInstanceState where
  show = genericShow
instance decodeSpotInstanceState :: Decode SpotInstanceState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotInstanceState :: Encode SpotInstanceState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a Spot Instance state change.</p>
newtype SpotInstanceStateFault = SpotInstanceStateFault 
  { "Code" :: NullOrUndefined.NullOrUndefined (String)
  , "Message" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeSpotInstanceStateFault :: Newtype SpotInstanceStateFault _
derive instance repGenericSpotInstanceStateFault :: Generic SpotInstanceStateFault _
instance showSpotInstanceStateFault :: Show SpotInstanceStateFault where
  show = genericShow
instance decodeSpotInstanceStateFault :: Decode SpotInstanceStateFault where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotInstanceStateFault :: Encode SpotInstanceStateFault where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotInstanceStateFault from required parameters
newSpotInstanceStateFault :: SpotInstanceStateFault
newSpotInstanceStateFault  = SpotInstanceStateFault { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }

-- | Constructs SpotInstanceStateFault's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotInstanceStateFault' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (String) , "Message" :: NullOrUndefined.NullOrUndefined (String) } -> {"Code" :: NullOrUndefined.NullOrUndefined (String) , "Message" :: NullOrUndefined.NullOrUndefined (String) } ) -> SpotInstanceStateFault
newSpotInstanceStateFault'  customize = (SpotInstanceStateFault <<< customize) { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }



-- | <p>Describes the status of a Spot Instance request.</p>
newtype SpotInstanceStatus = SpotInstanceStatus 
  { "Code" :: NullOrUndefined.NullOrUndefined (String)
  , "Message" :: NullOrUndefined.NullOrUndefined (String)
  , "UpdateTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeSpotInstanceStatus :: Newtype SpotInstanceStatus _
derive instance repGenericSpotInstanceStatus :: Generic SpotInstanceStatus _
instance showSpotInstanceStatus :: Show SpotInstanceStatus where
  show = genericShow
instance decodeSpotInstanceStatus :: Decode SpotInstanceStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotInstanceStatus :: Encode SpotInstanceStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotInstanceStatus from required parameters
newSpotInstanceStatus :: SpotInstanceStatus
newSpotInstanceStatus  = SpotInstanceStatus { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing), "UpdateTime": (NullOrUndefined Nothing) }

-- | Constructs SpotInstanceStatus's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotInstanceStatus' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (String) , "Message" :: NullOrUndefined.NullOrUndefined (String) , "UpdateTime" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"Code" :: NullOrUndefined.NullOrUndefined (String) , "Message" :: NullOrUndefined.NullOrUndefined (String) , "UpdateTime" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> SpotInstanceStatus
newSpotInstanceStatus'  customize = (SpotInstanceStatus <<< customize) { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing), "UpdateTime": (NullOrUndefined Nothing) }



newtype SpotInstanceType = SpotInstanceType String
derive instance newtypeSpotInstanceType :: Newtype SpotInstanceType _
derive instance repGenericSpotInstanceType :: Generic SpotInstanceType _
instance showSpotInstanceType :: Show SpotInstanceType where
  show = genericShow
instance decodeSpotInstanceType :: Decode SpotInstanceType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotInstanceType :: Encode SpotInstanceType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The options for Spot Instances.</p>
newtype SpotMarketOptions = SpotMarketOptions 
  { "MaxPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "SpotInstanceType" :: NullOrUndefined.NullOrUndefined (SpotInstanceType)
  , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int)
  , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior)
  }
derive instance newtypeSpotMarketOptions :: Newtype SpotMarketOptions _
derive instance repGenericSpotMarketOptions :: Generic SpotMarketOptions _
instance showSpotMarketOptions :: Show SpotMarketOptions where
  show = genericShow
instance decodeSpotMarketOptions :: Decode SpotMarketOptions where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotMarketOptions :: Encode SpotMarketOptions where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotMarketOptions from required parameters
newSpotMarketOptions :: SpotMarketOptions
newSpotMarketOptions  = SpotMarketOptions { "BlockDurationMinutes": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "MaxPrice": (NullOrUndefined Nothing), "SpotInstanceType": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }

-- | Constructs SpotMarketOptions's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotMarketOptions' :: ( { "MaxPrice" :: NullOrUndefined.NullOrUndefined (String) , "SpotInstanceType" :: NullOrUndefined.NullOrUndefined (SpotInstanceType) , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) } -> {"MaxPrice" :: NullOrUndefined.NullOrUndefined (String) , "SpotInstanceType" :: NullOrUndefined.NullOrUndefined (SpotInstanceType) , "BlockDurationMinutes" :: NullOrUndefined.NullOrUndefined (Int) , "ValidUntil" :: NullOrUndefined.NullOrUndefined (DateTime) , "InstanceInterruptionBehavior" :: NullOrUndefined.NullOrUndefined (InstanceInterruptionBehavior) } ) -> SpotMarketOptions
newSpotMarketOptions'  customize = (SpotMarketOptions <<< customize) { "BlockDurationMinutes": (NullOrUndefined Nothing), "InstanceInterruptionBehavior": (NullOrUndefined Nothing), "MaxPrice": (NullOrUndefined Nothing), "SpotInstanceType": (NullOrUndefined Nothing), "ValidUntil": (NullOrUndefined Nothing) }



-- | <p>Describes Spot Instance placement.</p>
newtype SpotPlacement = SpotPlacement 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy)
  }
derive instance newtypeSpotPlacement :: Newtype SpotPlacement _
derive instance repGenericSpotPlacement :: Generic SpotPlacement _
instance showSpotPlacement :: Show SpotPlacement where
  show = genericShow
instance decodeSpotPlacement :: Decode SpotPlacement where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotPlacement :: Encode SpotPlacement where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotPlacement from required parameters
newSpotPlacement :: SpotPlacement
newSpotPlacement  = SpotPlacement { "AvailabilityZone": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "Tenancy": (NullOrUndefined Nothing) }

-- | Constructs SpotPlacement's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotPlacement' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "Tenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) } ) -> SpotPlacement
newSpotPlacement'  customize = (SpotPlacement <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "Tenancy": (NullOrUndefined Nothing) }



-- | <p>Describes the maximum price per hour that you are willing to pay for a Spot Instance.</p>
newtype SpotPrice = SpotPrice 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType)
  , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription)
  , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String)
  , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeSpotPrice :: Newtype SpotPrice _
derive instance repGenericSpotPrice :: Generic SpotPrice _
instance showSpotPrice :: Show SpotPrice where
  show = genericShow
instance decodeSpotPrice :: Decode SpotPrice where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotPrice :: Encode SpotPrice where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SpotPrice from required parameters
newSpotPrice :: SpotPrice
newSpotPrice  = SpotPrice { "AvailabilityZone": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "ProductDescription": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "Timestamp": (NullOrUndefined Nothing) }

-- | Constructs SpotPrice's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSpotPrice' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "InstanceType" :: NullOrUndefined.NullOrUndefined (InstanceType) , "ProductDescription" :: NullOrUndefined.NullOrUndefined (RIProductDescription) , "SpotPrice" :: NullOrUndefined.NullOrUndefined (String) , "Timestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> SpotPrice
newSpotPrice'  customize = (SpotPrice <<< customize) { "AvailabilityZone": (NullOrUndefined Nothing), "InstanceType": (NullOrUndefined Nothing), "ProductDescription": (NullOrUndefined Nothing), "SpotPrice": (NullOrUndefined Nothing), "Timestamp": (NullOrUndefined Nothing) }



newtype SpotPriceHistoryList = SpotPriceHistoryList (Array SpotPrice)
derive instance newtypeSpotPriceHistoryList :: Newtype SpotPriceHistoryList _
derive instance repGenericSpotPriceHistoryList :: Generic SpotPriceHistoryList _
instance showSpotPriceHistoryList :: Show SpotPriceHistoryList where
  show = genericShow
instance decodeSpotPriceHistoryList :: Decode SpotPriceHistoryList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSpotPriceHistoryList :: Encode SpotPriceHistoryList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a stale rule in a security group.</p>
newtype StaleIpPermission = StaleIpPermission 
  { "FromPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String)
  , "IpRanges" :: NullOrUndefined.NullOrUndefined (IpRanges)
  , "PrefixListIds" :: NullOrUndefined.NullOrUndefined (PrefixListIdSet)
  , "ToPort" :: NullOrUndefined.NullOrUndefined (Int)
  , "UserIdGroupPairs" :: NullOrUndefined.NullOrUndefined (UserIdGroupPairSet)
  }
derive instance newtypeStaleIpPermission :: Newtype StaleIpPermission _
derive instance repGenericStaleIpPermission :: Generic StaleIpPermission _
instance showStaleIpPermission :: Show StaleIpPermission where
  show = genericShow
instance decodeStaleIpPermission :: Decode StaleIpPermission where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStaleIpPermission :: Encode StaleIpPermission where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs StaleIpPermission from required parameters
newStaleIpPermission :: StaleIpPermission
newStaleIpPermission  = StaleIpPermission { "FromPort": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "IpRanges": (NullOrUndefined Nothing), "PrefixListIds": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing), "UserIdGroupPairs": (NullOrUndefined Nothing) }

-- | Constructs StaleIpPermission's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newStaleIpPermission' :: ( { "FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "IpRanges" :: NullOrUndefined.NullOrUndefined (IpRanges) , "PrefixListIds" :: NullOrUndefined.NullOrUndefined (PrefixListIdSet) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "UserIdGroupPairs" :: NullOrUndefined.NullOrUndefined (UserIdGroupPairSet) } -> {"FromPort" :: NullOrUndefined.NullOrUndefined (Int) , "IpProtocol" :: NullOrUndefined.NullOrUndefined (String) , "IpRanges" :: NullOrUndefined.NullOrUndefined (IpRanges) , "PrefixListIds" :: NullOrUndefined.NullOrUndefined (PrefixListIdSet) , "ToPort" :: NullOrUndefined.NullOrUndefined (Int) , "UserIdGroupPairs" :: NullOrUndefined.NullOrUndefined (UserIdGroupPairSet) } ) -> StaleIpPermission
newStaleIpPermission'  customize = (StaleIpPermission <<< customize) { "FromPort": (NullOrUndefined Nothing), "IpProtocol": (NullOrUndefined Nothing), "IpRanges": (NullOrUndefined Nothing), "PrefixListIds": (NullOrUndefined Nothing), "ToPort": (NullOrUndefined Nothing), "UserIdGroupPairs": (NullOrUndefined Nothing) }



newtype StaleIpPermissionSet = StaleIpPermissionSet (Array StaleIpPermission)
derive instance newtypeStaleIpPermissionSet :: Newtype StaleIpPermissionSet _
derive instance repGenericStaleIpPermissionSet :: Generic StaleIpPermissionSet _
instance showStaleIpPermissionSet :: Show StaleIpPermissionSet where
  show = genericShow
instance decodeStaleIpPermissionSet :: Decode StaleIpPermissionSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStaleIpPermissionSet :: Encode StaleIpPermissionSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a stale security group (a security group that contains stale rules).</p>
newtype StaleSecurityGroup = StaleSecurityGroup 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupId" :: (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "StaleIpPermissions" :: NullOrUndefined.NullOrUndefined (StaleIpPermissionSet)
  , "StaleIpPermissionsEgress" :: NullOrUndefined.NullOrUndefined (StaleIpPermissionSet)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeStaleSecurityGroup :: Newtype StaleSecurityGroup _
derive instance repGenericStaleSecurityGroup :: Generic StaleSecurityGroup _
instance showStaleSecurityGroup :: Show StaleSecurityGroup where
  show = genericShow
instance decodeStaleSecurityGroup :: Decode StaleSecurityGroup where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStaleSecurityGroup :: Encode StaleSecurityGroup where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs StaleSecurityGroup from required parameters
newStaleSecurityGroup :: String -> StaleSecurityGroup
newStaleSecurityGroup _GroupId = StaleSecurityGroup { "GroupId": _GroupId, "Description": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "StaleIpPermissions": (NullOrUndefined Nothing), "StaleIpPermissionsEgress": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs StaleSecurityGroup's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newStaleSecurityGroup' :: String -> ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "GroupId" :: (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "StaleIpPermissions" :: NullOrUndefined.NullOrUndefined (StaleIpPermissionSet) , "StaleIpPermissionsEgress" :: NullOrUndefined.NullOrUndefined (StaleIpPermissionSet) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "GroupId" :: (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "StaleIpPermissions" :: NullOrUndefined.NullOrUndefined (StaleIpPermissionSet) , "StaleIpPermissionsEgress" :: NullOrUndefined.NullOrUndefined (StaleIpPermissionSet) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> StaleSecurityGroup
newStaleSecurityGroup' _GroupId customize = (StaleSecurityGroup <<< customize) { "GroupId": _GroupId, "Description": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "StaleIpPermissions": (NullOrUndefined Nothing), "StaleIpPermissionsEgress": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



newtype StaleSecurityGroupSet = StaleSecurityGroupSet (Array StaleSecurityGroup)
derive instance newtypeStaleSecurityGroupSet :: Newtype StaleSecurityGroupSet _
derive instance repGenericStaleSecurityGroupSet :: Generic StaleSecurityGroupSet _
instance showStaleSecurityGroupSet :: Show StaleSecurityGroupSet where
  show = genericShow
instance decodeStaleSecurityGroupSet :: Decode StaleSecurityGroupSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStaleSecurityGroupSet :: Encode StaleSecurityGroupSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for StartInstances.</p>
newtype StartInstancesRequest = StartInstancesRequest 
  { "InstanceIds" :: (InstanceIdStringList)
  , "AdditionalInfo" :: NullOrUndefined.NullOrUndefined (String)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeStartInstancesRequest :: Newtype StartInstancesRequest _
derive instance repGenericStartInstancesRequest :: Generic StartInstancesRequest _
instance showStartInstancesRequest :: Show StartInstancesRequest where
  show = genericShow
instance decodeStartInstancesRequest :: Decode StartInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStartInstancesRequest :: Encode StartInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs StartInstancesRequest from required parameters
newStartInstancesRequest :: InstanceIdStringList -> StartInstancesRequest
newStartInstancesRequest _InstanceIds = StartInstancesRequest { "InstanceIds": _InstanceIds, "AdditionalInfo": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }

-- | Constructs StartInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newStartInstancesRequest' :: InstanceIdStringList -> ( { "InstanceIds" :: (InstanceIdStringList) , "AdditionalInfo" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"InstanceIds" :: (InstanceIdStringList) , "AdditionalInfo" :: NullOrUndefined.NullOrUndefined (String) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> StartInstancesRequest
newStartInstancesRequest' _InstanceIds customize = (StartInstancesRequest <<< customize) { "InstanceIds": _InstanceIds, "AdditionalInfo": (NullOrUndefined Nothing), "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of StartInstances.</p>
newtype StartInstancesResult = StartInstancesResult 
  { "StartingInstances" :: NullOrUndefined.NullOrUndefined (InstanceStateChangeList)
  }
derive instance newtypeStartInstancesResult :: Newtype StartInstancesResult _
derive instance repGenericStartInstancesResult :: Generic StartInstancesResult _
instance showStartInstancesResult :: Show StartInstancesResult where
  show = genericShow
instance decodeStartInstancesResult :: Decode StartInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStartInstancesResult :: Encode StartInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs StartInstancesResult from required parameters
newStartInstancesResult :: StartInstancesResult
newStartInstancesResult  = StartInstancesResult { "StartingInstances": (NullOrUndefined Nothing) }

-- | Constructs StartInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newStartInstancesResult' :: ( { "StartingInstances" :: NullOrUndefined.NullOrUndefined (InstanceStateChangeList) } -> {"StartingInstances" :: NullOrUndefined.NullOrUndefined (InstanceStateChangeList) } ) -> StartInstancesResult
newStartInstancesResult'  customize = (StartInstancesResult <<< customize) { "StartingInstances": (NullOrUndefined Nothing) }



newtype State = State String
derive instance newtypeState :: Newtype State _
derive instance repGenericState :: Generic State _
instance showState :: Show State where
  show = genericShow
instance decodeState :: Decode State where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeState :: Encode State where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a state change.</p>
newtype StateReason = StateReason 
  { "Code" :: NullOrUndefined.NullOrUndefined (String)
  , "Message" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeStateReason :: Newtype StateReason _
derive instance repGenericStateReason :: Generic StateReason _
instance showStateReason :: Show StateReason where
  show = genericShow
instance decodeStateReason :: Decode StateReason where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStateReason :: Encode StateReason where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs StateReason from required parameters
newStateReason :: StateReason
newStateReason  = StateReason { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }

-- | Constructs StateReason's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newStateReason' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (String) , "Message" :: NullOrUndefined.NullOrUndefined (String) } -> {"Code" :: NullOrUndefined.NullOrUndefined (String) , "Message" :: NullOrUndefined.NullOrUndefined (String) } ) -> StateReason
newStateReason'  customize = (StateReason <<< customize) { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }



newtype Status = Status String
derive instance newtypeStatus :: Newtype Status _
derive instance repGenericStatus :: Generic Status _
instance showStatus :: Show Status where
  show = genericShow
instance decodeStatus :: Decode Status where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStatus :: Encode Status where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype StatusName = StatusName String
derive instance newtypeStatusName :: Newtype StatusName _
derive instance repGenericStatusName :: Generic StatusName _
instance showStatusName :: Show StatusName where
  show = genericShow
instance decodeStatusName :: Decode StatusName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStatusName :: Encode StatusName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype StatusType = StatusType String
derive instance newtypeStatusType :: Newtype StatusType _
derive instance repGenericStatusType :: Generic StatusType _
instance showStatusType :: Show StatusType where
  show = genericShow
instance decodeStatusType :: Decode StatusType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStatusType :: Encode StatusType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for StopInstances.</p>
newtype StopInstancesRequest = StopInstancesRequest 
  { "InstanceIds" :: (InstanceIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Force" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeStopInstancesRequest :: Newtype StopInstancesRequest _
derive instance repGenericStopInstancesRequest :: Generic StopInstancesRequest _
instance showStopInstancesRequest :: Show StopInstancesRequest where
  show = genericShow
instance decodeStopInstancesRequest :: Decode StopInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStopInstancesRequest :: Encode StopInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs StopInstancesRequest from required parameters
newStopInstancesRequest :: InstanceIdStringList -> StopInstancesRequest
newStopInstancesRequest _InstanceIds = StopInstancesRequest { "InstanceIds": _InstanceIds, "DryRun": (NullOrUndefined Nothing), "Force": (NullOrUndefined Nothing) }

-- | Constructs StopInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newStopInstancesRequest' :: InstanceIdStringList -> ( { "InstanceIds" :: (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Force" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"InstanceIds" :: (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "Force" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> StopInstancesRequest
newStopInstancesRequest' _InstanceIds customize = (StopInstancesRequest <<< customize) { "InstanceIds": _InstanceIds, "DryRun": (NullOrUndefined Nothing), "Force": (NullOrUndefined Nothing) }



-- | <p>Contains the output of StopInstances.</p>
newtype StopInstancesResult = StopInstancesResult 
  { "StoppingInstances" :: NullOrUndefined.NullOrUndefined (InstanceStateChangeList)
  }
derive instance newtypeStopInstancesResult :: Newtype StopInstancesResult _
derive instance repGenericStopInstancesResult :: Generic StopInstancesResult _
instance showStopInstancesResult :: Show StopInstancesResult where
  show = genericShow
instance decodeStopInstancesResult :: Decode StopInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStopInstancesResult :: Encode StopInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs StopInstancesResult from required parameters
newStopInstancesResult :: StopInstancesResult
newStopInstancesResult  = StopInstancesResult { "StoppingInstances": (NullOrUndefined Nothing) }

-- | Constructs StopInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newStopInstancesResult' :: ( { "StoppingInstances" :: NullOrUndefined.NullOrUndefined (InstanceStateChangeList) } -> {"StoppingInstances" :: NullOrUndefined.NullOrUndefined (InstanceStateChangeList) } ) -> StopInstancesResult
newStopInstancesResult'  customize = (StopInstancesResult <<< customize) { "StoppingInstances": (NullOrUndefined Nothing) }



-- | <p>Describes the storage location for an instance store-backed AMI.</p>
newtype Storage = Storage 
  { "S3" :: NullOrUndefined.NullOrUndefined (S3Storage)
  }
derive instance newtypeStorage :: Newtype Storage _
derive instance repGenericStorage :: Generic Storage _
instance showStorage :: Show Storage where
  show = genericShow
instance decodeStorage :: Decode Storage where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStorage :: Encode Storage where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Storage from required parameters
newStorage :: Storage
newStorage  = Storage { "S3": (NullOrUndefined Nothing) }

-- | Constructs Storage's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newStorage' :: ( { "S3" :: NullOrUndefined.NullOrUndefined (S3Storage) } -> {"S3" :: NullOrUndefined.NullOrUndefined (S3Storage) } ) -> Storage
newStorage'  customize = (Storage <<< customize) { "S3": (NullOrUndefined Nothing) }



-- | <p>Describes a storage location in Amazon S3.</p>
newtype StorageLocation = StorageLocation 
  { "Bucket" :: NullOrUndefined.NullOrUndefined (String)
  , "Key" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeStorageLocation :: Newtype StorageLocation _
derive instance repGenericStorageLocation :: Generic StorageLocation _
instance showStorageLocation :: Show StorageLocation where
  show = genericShow
instance decodeStorageLocation :: Decode StorageLocation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeStorageLocation :: Encode StorageLocation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs StorageLocation from required parameters
newStorageLocation :: StorageLocation
newStorageLocation  = StorageLocation { "Bucket": (NullOrUndefined Nothing), "Key": (NullOrUndefined Nothing) }

-- | Constructs StorageLocation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newStorageLocation' :: ( { "Bucket" :: NullOrUndefined.NullOrUndefined (String) , "Key" :: NullOrUndefined.NullOrUndefined (String) } -> {"Bucket" :: NullOrUndefined.NullOrUndefined (String) , "Key" :: NullOrUndefined.NullOrUndefined (String) } ) -> StorageLocation
newStorageLocation'  customize = (StorageLocation <<< customize) { "Bucket": (NullOrUndefined Nothing), "Key": (NullOrUndefined Nothing) }



-- | <p>Describes a subnet.</p>
newtype Subnet = Subnet 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "AvailableIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DefaultForAz" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "MapPublicIpOnLaunch" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "State" :: NullOrUndefined.NullOrUndefined (SubnetState)
  , "SubnetId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "AssignIpv6AddressOnCreation" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Ipv6CidrBlockAssociationSet" :: NullOrUndefined.NullOrUndefined (SubnetIpv6CidrBlockAssociationSet)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeSubnet :: Newtype Subnet _
derive instance repGenericSubnet :: Generic Subnet _
instance showSubnet :: Show Subnet where
  show = genericShow
instance decodeSubnet :: Decode Subnet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSubnet :: Encode Subnet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Subnet from required parameters
newSubnet :: Subnet
newSubnet  = Subnet { "AssignIpv6AddressOnCreation": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "AvailableIpAddressCount": (NullOrUndefined Nothing), "CidrBlock": (NullOrUndefined Nothing), "DefaultForAz": (NullOrUndefined Nothing), "Ipv6CidrBlockAssociationSet": (NullOrUndefined Nothing), "MapPublicIpOnLaunch": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs Subnet's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSubnet' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "AvailableIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DefaultForAz" :: NullOrUndefined.NullOrUndefined (Boolean) , "MapPublicIpOnLaunch" :: NullOrUndefined.NullOrUndefined (Boolean) , "State" :: NullOrUndefined.NullOrUndefined (SubnetState) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "AssignIpv6AddressOnCreation" :: NullOrUndefined.NullOrUndefined (Boolean) , "Ipv6CidrBlockAssociationSet" :: NullOrUndefined.NullOrUndefined (SubnetIpv6CidrBlockAssociationSet) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "AvailableIpAddressCount" :: NullOrUndefined.NullOrUndefined (Int) , "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DefaultForAz" :: NullOrUndefined.NullOrUndefined (Boolean) , "MapPublicIpOnLaunch" :: NullOrUndefined.NullOrUndefined (Boolean) , "State" :: NullOrUndefined.NullOrUndefined (SubnetState) , "SubnetId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "AssignIpv6AddressOnCreation" :: NullOrUndefined.NullOrUndefined (Boolean) , "Ipv6CidrBlockAssociationSet" :: NullOrUndefined.NullOrUndefined (SubnetIpv6CidrBlockAssociationSet) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> Subnet
newSubnet'  customize = (Subnet <<< customize) { "AssignIpv6AddressOnCreation": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "AvailableIpAddressCount": (NullOrUndefined Nothing), "CidrBlock": (NullOrUndefined Nothing), "DefaultForAz": (NullOrUndefined Nothing), "Ipv6CidrBlockAssociationSet": (NullOrUndefined Nothing), "MapPublicIpOnLaunch": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "SubnetId": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Describes the state of a CIDR block.</p>
newtype SubnetCidrBlockState = SubnetCidrBlockState 
  { "State" :: NullOrUndefined.NullOrUndefined (SubnetCidrBlockStateCode)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeSubnetCidrBlockState :: Newtype SubnetCidrBlockState _
derive instance repGenericSubnetCidrBlockState :: Generic SubnetCidrBlockState _
instance showSubnetCidrBlockState :: Show SubnetCidrBlockState where
  show = genericShow
instance decodeSubnetCidrBlockState :: Decode SubnetCidrBlockState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSubnetCidrBlockState :: Encode SubnetCidrBlockState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SubnetCidrBlockState from required parameters
newSubnetCidrBlockState :: SubnetCidrBlockState
newSubnetCidrBlockState  = SubnetCidrBlockState { "State": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }

-- | Constructs SubnetCidrBlockState's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSubnetCidrBlockState' :: ( { "State" :: NullOrUndefined.NullOrUndefined (SubnetCidrBlockStateCode) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } -> {"State" :: NullOrUndefined.NullOrUndefined (SubnetCidrBlockStateCode) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } ) -> SubnetCidrBlockState
newSubnetCidrBlockState'  customize = (SubnetCidrBlockState <<< customize) { "State": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }



newtype SubnetCidrBlockStateCode = SubnetCidrBlockStateCode String
derive instance newtypeSubnetCidrBlockStateCode :: Newtype SubnetCidrBlockStateCode _
derive instance repGenericSubnetCidrBlockStateCode :: Generic SubnetCidrBlockStateCode _
instance showSubnetCidrBlockStateCode :: Show SubnetCidrBlockStateCode where
  show = genericShow
instance decodeSubnetCidrBlockStateCode :: Decode SubnetCidrBlockStateCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSubnetCidrBlockStateCode :: Encode SubnetCidrBlockStateCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype SubnetIdStringList = SubnetIdStringList (Array String)
derive instance newtypeSubnetIdStringList :: Newtype SubnetIdStringList _
derive instance repGenericSubnetIdStringList :: Generic SubnetIdStringList _
instance showSubnetIdStringList :: Show SubnetIdStringList where
  show = genericShow
instance decodeSubnetIdStringList :: Decode SubnetIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSubnetIdStringList :: Encode SubnetIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IPv6 CIDR block associated with a subnet.</p>
newtype SubnetIpv6CidrBlockAssociation = SubnetIpv6CidrBlockAssociation 
  { "AssociationId" :: NullOrUndefined.NullOrUndefined (String)
  , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "Ipv6CidrBlockState" :: NullOrUndefined.NullOrUndefined (SubnetCidrBlockState)
  }
derive instance newtypeSubnetIpv6CidrBlockAssociation :: Newtype SubnetIpv6CidrBlockAssociation _
derive instance repGenericSubnetIpv6CidrBlockAssociation :: Generic SubnetIpv6CidrBlockAssociation _
instance showSubnetIpv6CidrBlockAssociation :: Show SubnetIpv6CidrBlockAssociation where
  show = genericShow
instance decodeSubnetIpv6CidrBlockAssociation :: Decode SubnetIpv6CidrBlockAssociation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSubnetIpv6CidrBlockAssociation :: Encode SubnetIpv6CidrBlockAssociation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SubnetIpv6CidrBlockAssociation from required parameters
newSubnetIpv6CidrBlockAssociation :: SubnetIpv6CidrBlockAssociation
newSubnetIpv6CidrBlockAssociation  = SubnetIpv6CidrBlockAssociation { "AssociationId": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing), "Ipv6CidrBlockState": (NullOrUndefined Nothing) }

-- | Constructs SubnetIpv6CidrBlockAssociation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSubnetIpv6CidrBlockAssociation' :: ( { "AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "Ipv6CidrBlockState" :: NullOrUndefined.NullOrUndefined (SubnetCidrBlockState) } -> {"AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "Ipv6CidrBlockState" :: NullOrUndefined.NullOrUndefined (SubnetCidrBlockState) } ) -> SubnetIpv6CidrBlockAssociation
newSubnetIpv6CidrBlockAssociation'  customize = (SubnetIpv6CidrBlockAssociation <<< customize) { "AssociationId": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing), "Ipv6CidrBlockState": (NullOrUndefined Nothing) }



newtype SubnetIpv6CidrBlockAssociationSet = SubnetIpv6CidrBlockAssociationSet (Array SubnetIpv6CidrBlockAssociation)
derive instance newtypeSubnetIpv6CidrBlockAssociationSet :: Newtype SubnetIpv6CidrBlockAssociationSet _
derive instance repGenericSubnetIpv6CidrBlockAssociationSet :: Generic SubnetIpv6CidrBlockAssociationSet _
instance showSubnetIpv6CidrBlockAssociationSet :: Show SubnetIpv6CidrBlockAssociationSet where
  show = genericShow
instance decodeSubnetIpv6CidrBlockAssociationSet :: Decode SubnetIpv6CidrBlockAssociationSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSubnetIpv6CidrBlockAssociationSet :: Encode SubnetIpv6CidrBlockAssociationSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype SubnetList = SubnetList (Array Subnet)
derive instance newtypeSubnetList :: Newtype SubnetList _
derive instance repGenericSubnetList :: Generic SubnetList _
instance showSubnetList :: Show SubnetList where
  show = genericShow
instance decodeSubnetList :: Decode SubnetList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSubnetList :: Encode SubnetList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype SubnetState = SubnetState String
derive instance newtypeSubnetState :: Newtype SubnetState _
derive instance repGenericSubnetState :: Generic SubnetState _
instance showSubnetState :: Show SubnetState where
  show = genericShow
instance decodeSubnetState :: Decode SubnetState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSubnetState :: Encode SubnetState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the T2 instance whose credit option for CPU usage was successfully modified.</p>
newtype SuccessfulInstanceCreditSpecificationItem = SuccessfulInstanceCreditSpecificationItem 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeSuccessfulInstanceCreditSpecificationItem :: Newtype SuccessfulInstanceCreditSpecificationItem _
derive instance repGenericSuccessfulInstanceCreditSpecificationItem :: Generic SuccessfulInstanceCreditSpecificationItem _
instance showSuccessfulInstanceCreditSpecificationItem :: Show SuccessfulInstanceCreditSpecificationItem where
  show = genericShow
instance decodeSuccessfulInstanceCreditSpecificationItem :: Decode SuccessfulInstanceCreditSpecificationItem where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSuccessfulInstanceCreditSpecificationItem :: Encode SuccessfulInstanceCreditSpecificationItem where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs SuccessfulInstanceCreditSpecificationItem from required parameters
newSuccessfulInstanceCreditSpecificationItem :: SuccessfulInstanceCreditSpecificationItem
newSuccessfulInstanceCreditSpecificationItem  = SuccessfulInstanceCreditSpecificationItem { "InstanceId": (NullOrUndefined Nothing) }

-- | Constructs SuccessfulInstanceCreditSpecificationItem's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newSuccessfulInstanceCreditSpecificationItem' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) } ) -> SuccessfulInstanceCreditSpecificationItem
newSuccessfulInstanceCreditSpecificationItem'  customize = (SuccessfulInstanceCreditSpecificationItem <<< customize) { "InstanceId": (NullOrUndefined Nothing) }



newtype SuccessfulInstanceCreditSpecificationSet = SuccessfulInstanceCreditSpecificationSet (Array SuccessfulInstanceCreditSpecificationItem)
derive instance newtypeSuccessfulInstanceCreditSpecificationSet :: Newtype SuccessfulInstanceCreditSpecificationSet _
derive instance repGenericSuccessfulInstanceCreditSpecificationSet :: Generic SuccessfulInstanceCreditSpecificationSet _
instance showSuccessfulInstanceCreditSpecificationSet :: Show SuccessfulInstanceCreditSpecificationSet where
  show = genericShow
instance decodeSuccessfulInstanceCreditSpecificationSet :: Decode SuccessfulInstanceCreditSpecificationSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSuccessfulInstanceCreditSpecificationSet :: Encode SuccessfulInstanceCreditSpecificationSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype SummaryStatus = SummaryStatus String
derive instance newtypeSummaryStatus :: Newtype SummaryStatus _
derive instance repGenericSummaryStatus :: Generic SummaryStatus _
instance showSummaryStatus :: Show SummaryStatus where
  show = genericShow
instance decodeSummaryStatus :: Decode SummaryStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeSummaryStatus :: Encode SummaryStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a tag.</p>
newtype Tag = Tag 
  { "Key" :: NullOrUndefined.NullOrUndefined (String)
  , "Value" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeTag :: Newtype Tag _
derive instance repGenericTag :: Generic Tag _
instance showTag :: Show Tag where
  show = genericShow
instance decodeTag :: Decode Tag where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTag :: Encode Tag where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Tag from required parameters
newTag :: Tag
newTag  = Tag { "Key": (NullOrUndefined Nothing), "Value": (NullOrUndefined Nothing) }

-- | Constructs Tag's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newTag' :: ( { "Key" :: NullOrUndefined.NullOrUndefined (String) , "Value" :: NullOrUndefined.NullOrUndefined (String) } -> {"Key" :: NullOrUndefined.NullOrUndefined (String) , "Value" :: NullOrUndefined.NullOrUndefined (String) } ) -> Tag
newTag'  customize = (Tag <<< customize) { "Key": (NullOrUndefined Nothing), "Value": (NullOrUndefined Nothing) }



-- | <p>Describes a tag.</p>
newtype TagDescription = TagDescription 
  { "Key" :: NullOrUndefined.NullOrUndefined (String)
  , "ResourceId" :: NullOrUndefined.NullOrUndefined (String)
  , "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType)
  , "Value" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeTagDescription :: Newtype TagDescription _
derive instance repGenericTagDescription :: Generic TagDescription _
instance showTagDescription :: Show TagDescription where
  show = genericShow
instance decodeTagDescription :: Decode TagDescription where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTagDescription :: Encode TagDescription where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs TagDescription from required parameters
newTagDescription :: TagDescription
newTagDescription  = TagDescription { "Key": (NullOrUndefined Nothing), "ResourceId": (NullOrUndefined Nothing), "ResourceType": (NullOrUndefined Nothing), "Value": (NullOrUndefined Nothing) }

-- | Constructs TagDescription's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newTagDescription' :: ( { "Key" :: NullOrUndefined.NullOrUndefined (String) , "ResourceId" :: NullOrUndefined.NullOrUndefined (String) , "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType) , "Value" :: NullOrUndefined.NullOrUndefined (String) } -> {"Key" :: NullOrUndefined.NullOrUndefined (String) , "ResourceId" :: NullOrUndefined.NullOrUndefined (String) , "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType) , "Value" :: NullOrUndefined.NullOrUndefined (String) } ) -> TagDescription
newTagDescription'  customize = (TagDescription <<< customize) { "Key": (NullOrUndefined Nothing), "ResourceId": (NullOrUndefined Nothing), "ResourceType": (NullOrUndefined Nothing), "Value": (NullOrUndefined Nothing) }



newtype TagDescriptionList = TagDescriptionList (Array TagDescription)
derive instance newtypeTagDescriptionList :: Newtype TagDescriptionList _
derive instance repGenericTagDescriptionList :: Generic TagDescriptionList _
instance showTagDescriptionList :: Show TagDescriptionList where
  show = genericShow
instance decodeTagDescriptionList :: Decode TagDescriptionList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTagDescriptionList :: Encode TagDescriptionList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype TagList = TagList (Array Tag)
derive instance newtypeTagList :: Newtype TagList _
derive instance repGenericTagList :: Generic TagList _
instance showTagList :: Show TagList where
  show = genericShow
instance decodeTagList :: Decode TagList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTagList :: Encode TagList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The tags to apply to a resource when the resource is being created.</p>
newtype TagSpecification = TagSpecification 
  { "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeTagSpecification :: Newtype TagSpecification _
derive instance repGenericTagSpecification :: Generic TagSpecification _
instance showTagSpecification :: Show TagSpecification where
  show = genericShow
instance decodeTagSpecification :: Decode TagSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTagSpecification :: Encode TagSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs TagSpecification from required parameters
newTagSpecification :: TagSpecification
newTagSpecification  = TagSpecification { "ResourceType": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }

-- | Constructs TagSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newTagSpecification' :: ( { "ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"ResourceType" :: NullOrUndefined.NullOrUndefined (ResourceType) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> TagSpecification
newTagSpecification'  customize = (TagSpecification <<< customize) { "ResourceType": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing) }



newtype TagSpecificationList = TagSpecificationList (Array TagSpecification)
derive instance newtypeTagSpecificationList :: Newtype TagSpecificationList _
derive instance repGenericTagSpecificationList :: Generic TagSpecificationList _
instance showTagSpecificationList :: Show TagSpecificationList where
  show = genericShow
instance decodeTagSpecificationList :: Decode TagSpecificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTagSpecificationList :: Encode TagSpecificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Information about the Convertible Reserved Instance offering.</p>
newtype TargetConfiguration = TargetConfiguration 
  { "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "OfferingId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeTargetConfiguration :: Newtype TargetConfiguration _
derive instance repGenericTargetConfiguration :: Generic TargetConfiguration _
instance showTargetConfiguration :: Show TargetConfiguration where
  show = genericShow
instance decodeTargetConfiguration :: Decode TargetConfiguration where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTargetConfiguration :: Encode TargetConfiguration where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs TargetConfiguration from required parameters
newTargetConfiguration :: TargetConfiguration
newTargetConfiguration  = TargetConfiguration { "InstanceCount": (NullOrUndefined Nothing), "OfferingId": (NullOrUndefined Nothing) }

-- | Constructs TargetConfiguration's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newTargetConfiguration' :: ( { "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "OfferingId" :: NullOrUndefined.NullOrUndefined (String) } -> {"InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "OfferingId" :: NullOrUndefined.NullOrUndefined (String) } ) -> TargetConfiguration
newTargetConfiguration'  customize = (TargetConfiguration <<< customize) { "InstanceCount": (NullOrUndefined Nothing), "OfferingId": (NullOrUndefined Nothing) }



-- | <p>Details about the target configuration.</p>
newtype TargetConfigurationRequest = TargetConfigurationRequest 
  { "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "OfferingId" :: (String)
  }
derive instance newtypeTargetConfigurationRequest :: Newtype TargetConfigurationRequest _
derive instance repGenericTargetConfigurationRequest :: Generic TargetConfigurationRequest _
instance showTargetConfigurationRequest :: Show TargetConfigurationRequest where
  show = genericShow
instance decodeTargetConfigurationRequest :: Decode TargetConfigurationRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTargetConfigurationRequest :: Encode TargetConfigurationRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs TargetConfigurationRequest from required parameters
newTargetConfigurationRequest :: String -> TargetConfigurationRequest
newTargetConfigurationRequest _OfferingId = TargetConfigurationRequest { "OfferingId": _OfferingId, "InstanceCount": (NullOrUndefined Nothing) }

-- | Constructs TargetConfigurationRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newTargetConfigurationRequest' :: String -> ( { "InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "OfferingId" :: (String) } -> {"InstanceCount" :: NullOrUndefined.NullOrUndefined (Int) , "OfferingId" :: (String) } ) -> TargetConfigurationRequest
newTargetConfigurationRequest' _OfferingId customize = (TargetConfigurationRequest <<< customize) { "OfferingId": _OfferingId, "InstanceCount": (NullOrUndefined Nothing) }



newtype TargetConfigurationRequestSet = TargetConfigurationRequestSet (Array TargetConfigurationRequest)
derive instance newtypeTargetConfigurationRequestSet :: Newtype TargetConfigurationRequestSet _
derive instance repGenericTargetConfigurationRequestSet :: Generic TargetConfigurationRequestSet _
instance showTargetConfigurationRequestSet :: Show TargetConfigurationRequestSet where
  show = genericShow
instance decodeTargetConfigurationRequestSet :: Decode TargetConfigurationRequestSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTargetConfigurationRequestSet :: Encode TargetConfigurationRequestSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a load balancer target group.</p>
newtype TargetGroup = TargetGroup 
  { "Arn" :: (String)
  }
derive instance newtypeTargetGroup :: Newtype TargetGroup _
derive instance repGenericTargetGroup :: Generic TargetGroup _
instance showTargetGroup :: Show TargetGroup where
  show = genericShow
instance decodeTargetGroup :: Decode TargetGroup where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTargetGroup :: Encode TargetGroup where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs TargetGroup from required parameters
newTargetGroup :: String -> TargetGroup
newTargetGroup _Arn = TargetGroup { "Arn": _Arn }

-- | Constructs TargetGroup's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newTargetGroup' :: String -> ( { "Arn" :: (String) } -> {"Arn" :: (String) } ) -> TargetGroup
newTargetGroup' _Arn customize = (TargetGroup <<< customize) { "Arn": _Arn }



newtype TargetGroups = TargetGroups (Array TargetGroup)
derive instance newtypeTargetGroups :: Newtype TargetGroups _
derive instance repGenericTargetGroups :: Generic TargetGroups _
instance showTargetGroups :: Show TargetGroups where
  show = genericShow
instance decodeTargetGroups :: Decode TargetGroups where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTargetGroups :: Encode TargetGroups where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the target groups to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances with these target groups.</p>
newtype TargetGroupsConfig = TargetGroupsConfig 
  { "TargetGroups" :: (TargetGroups)
  }
derive instance newtypeTargetGroupsConfig :: Newtype TargetGroupsConfig _
derive instance repGenericTargetGroupsConfig :: Generic TargetGroupsConfig _
instance showTargetGroupsConfig :: Show TargetGroupsConfig where
  show = genericShow
instance decodeTargetGroupsConfig :: Decode TargetGroupsConfig where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTargetGroupsConfig :: Encode TargetGroupsConfig where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs TargetGroupsConfig from required parameters
newTargetGroupsConfig :: TargetGroups -> TargetGroupsConfig
newTargetGroupsConfig _TargetGroups = TargetGroupsConfig { "TargetGroups": _TargetGroups }

-- | Constructs TargetGroupsConfig's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newTargetGroupsConfig' :: TargetGroups -> ( { "TargetGroups" :: (TargetGroups) } -> {"TargetGroups" :: (TargetGroups) } ) -> TargetGroupsConfig
newTargetGroupsConfig' _TargetGroups customize = (TargetGroupsConfig <<< customize) { "TargetGroups": _TargetGroups }



-- | <p>The total value of the new Convertible Reserved Instances.</p>
newtype TargetReservationValue = TargetReservationValue 
  { "ReservationValue" :: NullOrUndefined.NullOrUndefined (ReservationValue)
  , "TargetConfiguration" :: NullOrUndefined.NullOrUndefined (TargetConfiguration)
  }
derive instance newtypeTargetReservationValue :: Newtype TargetReservationValue _
derive instance repGenericTargetReservationValue :: Generic TargetReservationValue _
instance showTargetReservationValue :: Show TargetReservationValue where
  show = genericShow
instance decodeTargetReservationValue :: Decode TargetReservationValue where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTargetReservationValue :: Encode TargetReservationValue where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs TargetReservationValue from required parameters
newTargetReservationValue :: TargetReservationValue
newTargetReservationValue  = TargetReservationValue { "ReservationValue": (NullOrUndefined Nothing), "TargetConfiguration": (NullOrUndefined Nothing) }

-- | Constructs TargetReservationValue's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newTargetReservationValue' :: ( { "ReservationValue" :: NullOrUndefined.NullOrUndefined (ReservationValue) , "TargetConfiguration" :: NullOrUndefined.NullOrUndefined (TargetConfiguration) } -> {"ReservationValue" :: NullOrUndefined.NullOrUndefined (ReservationValue) , "TargetConfiguration" :: NullOrUndefined.NullOrUndefined (TargetConfiguration) } ) -> TargetReservationValue
newTargetReservationValue'  customize = (TargetReservationValue <<< customize) { "ReservationValue": (NullOrUndefined Nothing), "TargetConfiguration": (NullOrUndefined Nothing) }



newtype TargetReservationValueSet = TargetReservationValueSet (Array TargetReservationValue)
derive instance newtypeTargetReservationValueSet :: Newtype TargetReservationValueSet _
derive instance repGenericTargetReservationValueSet :: Generic TargetReservationValueSet _
instance showTargetReservationValueSet :: Show TargetReservationValueSet where
  show = genericShow
instance decodeTargetReservationValueSet :: Decode TargetReservationValueSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTargetReservationValueSet :: Encode TargetReservationValueSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype TelemetryStatus = TelemetryStatus String
derive instance newtypeTelemetryStatus :: Newtype TelemetryStatus _
derive instance repGenericTelemetryStatus :: Generic TelemetryStatus _
instance showTelemetryStatus :: Show TelemetryStatus where
  show = genericShow
instance decodeTelemetryStatus :: Decode TelemetryStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTelemetryStatus :: Encode TelemetryStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype Tenancy = Tenancy String
derive instance newtypeTenancy :: Newtype Tenancy _
derive instance repGenericTenancy :: Generic Tenancy _
instance showTenancy :: Show Tenancy where
  show = genericShow
instance decodeTenancy :: Decode Tenancy where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTenancy :: Encode Tenancy where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for TerminateInstances.</p>
newtype TerminateInstancesRequest = TerminateInstancesRequest 
  { "InstanceIds" :: (InstanceIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeTerminateInstancesRequest :: Newtype TerminateInstancesRequest _
derive instance repGenericTerminateInstancesRequest :: Generic TerminateInstancesRequest _
instance showTerminateInstancesRequest :: Show TerminateInstancesRequest where
  show = genericShow
instance decodeTerminateInstancesRequest :: Decode TerminateInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTerminateInstancesRequest :: Encode TerminateInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs TerminateInstancesRequest from required parameters
newTerminateInstancesRequest :: InstanceIdStringList -> TerminateInstancesRequest
newTerminateInstancesRequest _InstanceIds = TerminateInstancesRequest { "InstanceIds": _InstanceIds, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs TerminateInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newTerminateInstancesRequest' :: InstanceIdStringList -> ( { "InstanceIds" :: (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"InstanceIds" :: (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> TerminateInstancesRequest
newTerminateInstancesRequest' _InstanceIds customize = (TerminateInstancesRequest <<< customize) { "InstanceIds": _InstanceIds, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of TerminateInstances.</p>
newtype TerminateInstancesResult = TerminateInstancesResult 
  { "TerminatingInstances" :: NullOrUndefined.NullOrUndefined (InstanceStateChangeList)
  }
derive instance newtypeTerminateInstancesResult :: Newtype TerminateInstancesResult _
derive instance repGenericTerminateInstancesResult :: Generic TerminateInstancesResult _
instance showTerminateInstancesResult :: Show TerminateInstancesResult where
  show = genericShow
instance decodeTerminateInstancesResult :: Decode TerminateInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTerminateInstancesResult :: Encode TerminateInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs TerminateInstancesResult from required parameters
newTerminateInstancesResult :: TerminateInstancesResult
newTerminateInstancesResult  = TerminateInstancesResult { "TerminatingInstances": (NullOrUndefined Nothing) }

-- | Constructs TerminateInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newTerminateInstancesResult' :: ( { "TerminatingInstances" :: NullOrUndefined.NullOrUndefined (InstanceStateChangeList) } -> {"TerminatingInstances" :: NullOrUndefined.NullOrUndefined (InstanceStateChangeList) } ) -> TerminateInstancesResult
newTerminateInstancesResult'  customize = (TerminateInstancesResult <<< customize) { "TerminatingInstances": (NullOrUndefined Nothing) }



newtype TrafficType = TrafficType String
derive instance newtypeTrafficType :: Newtype TrafficType _
derive instance repGenericTrafficType :: Generic TrafficType _
instance showTrafficType :: Show TrafficType where
  show = genericShow
instance decodeTrafficType :: Decode TrafficType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTrafficType :: Encode TrafficType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype TunnelOptionsList = TunnelOptionsList (Array VpnTunnelOptionsSpecification)
derive instance newtypeTunnelOptionsList :: Newtype TunnelOptionsList _
derive instance repGenericTunnelOptionsList :: Generic TunnelOptionsList _
instance showTunnelOptionsList :: Show TunnelOptionsList where
  show = genericShow
instance decodeTunnelOptionsList :: Decode TunnelOptionsList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeTunnelOptionsList :: Encode TunnelOptionsList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype UnassignIpv6AddressesRequest = UnassignIpv6AddressesRequest 
  { "Ipv6Addresses" :: (Ipv6AddressList)
  , "NetworkInterfaceId" :: (String)
  }
derive instance newtypeUnassignIpv6AddressesRequest :: Newtype UnassignIpv6AddressesRequest _
derive instance repGenericUnassignIpv6AddressesRequest :: Generic UnassignIpv6AddressesRequest _
instance showUnassignIpv6AddressesRequest :: Show UnassignIpv6AddressesRequest where
  show = genericShow
instance decodeUnassignIpv6AddressesRequest :: Decode UnassignIpv6AddressesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnassignIpv6AddressesRequest :: Encode UnassignIpv6AddressesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UnassignIpv6AddressesRequest from required parameters
newUnassignIpv6AddressesRequest :: Ipv6AddressList -> String -> UnassignIpv6AddressesRequest
newUnassignIpv6AddressesRequest _Ipv6Addresses _NetworkInterfaceId = UnassignIpv6AddressesRequest { "Ipv6Addresses": _Ipv6Addresses, "NetworkInterfaceId": _NetworkInterfaceId }

-- | Constructs UnassignIpv6AddressesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUnassignIpv6AddressesRequest' :: Ipv6AddressList -> String -> ( { "Ipv6Addresses" :: (Ipv6AddressList) , "NetworkInterfaceId" :: (String) } -> {"Ipv6Addresses" :: (Ipv6AddressList) , "NetworkInterfaceId" :: (String) } ) -> UnassignIpv6AddressesRequest
newUnassignIpv6AddressesRequest' _Ipv6Addresses _NetworkInterfaceId customize = (UnassignIpv6AddressesRequest <<< customize) { "Ipv6Addresses": _Ipv6Addresses, "NetworkInterfaceId": _NetworkInterfaceId }



newtype UnassignIpv6AddressesResult = UnassignIpv6AddressesResult 
  { "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String)
  , "UnassignedIpv6Addresses" :: NullOrUndefined.NullOrUndefined (Ipv6AddressList)
  }
derive instance newtypeUnassignIpv6AddressesResult :: Newtype UnassignIpv6AddressesResult _
derive instance repGenericUnassignIpv6AddressesResult :: Generic UnassignIpv6AddressesResult _
instance showUnassignIpv6AddressesResult :: Show UnassignIpv6AddressesResult where
  show = genericShow
instance decodeUnassignIpv6AddressesResult :: Decode UnassignIpv6AddressesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnassignIpv6AddressesResult :: Encode UnassignIpv6AddressesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UnassignIpv6AddressesResult from required parameters
newUnassignIpv6AddressesResult :: UnassignIpv6AddressesResult
newUnassignIpv6AddressesResult  = UnassignIpv6AddressesResult { "NetworkInterfaceId": (NullOrUndefined Nothing), "UnassignedIpv6Addresses": (NullOrUndefined Nothing) }

-- | Constructs UnassignIpv6AddressesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUnassignIpv6AddressesResult' :: ( { "NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "UnassignedIpv6Addresses" :: NullOrUndefined.NullOrUndefined (Ipv6AddressList) } -> {"NetworkInterfaceId" :: NullOrUndefined.NullOrUndefined (String) , "UnassignedIpv6Addresses" :: NullOrUndefined.NullOrUndefined (Ipv6AddressList) } ) -> UnassignIpv6AddressesResult
newUnassignIpv6AddressesResult'  customize = (UnassignIpv6AddressesResult <<< customize) { "NetworkInterfaceId": (NullOrUndefined Nothing), "UnassignedIpv6Addresses": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for UnassignPrivateIpAddresses.</p>
newtype UnassignPrivateIpAddressesRequest = UnassignPrivateIpAddressesRequest 
  { "NetworkInterfaceId" :: (String)
  , "PrivateIpAddresses" :: (PrivateIpAddressStringList)
  }
derive instance newtypeUnassignPrivateIpAddressesRequest :: Newtype UnassignPrivateIpAddressesRequest _
derive instance repGenericUnassignPrivateIpAddressesRequest :: Generic UnassignPrivateIpAddressesRequest _
instance showUnassignPrivateIpAddressesRequest :: Show UnassignPrivateIpAddressesRequest where
  show = genericShow
instance decodeUnassignPrivateIpAddressesRequest :: Decode UnassignPrivateIpAddressesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnassignPrivateIpAddressesRequest :: Encode UnassignPrivateIpAddressesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UnassignPrivateIpAddressesRequest from required parameters
newUnassignPrivateIpAddressesRequest :: String -> PrivateIpAddressStringList -> UnassignPrivateIpAddressesRequest
newUnassignPrivateIpAddressesRequest _NetworkInterfaceId _PrivateIpAddresses = UnassignPrivateIpAddressesRequest { "NetworkInterfaceId": _NetworkInterfaceId, "PrivateIpAddresses": _PrivateIpAddresses }

-- | Constructs UnassignPrivateIpAddressesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUnassignPrivateIpAddressesRequest' :: String -> PrivateIpAddressStringList -> ( { "NetworkInterfaceId" :: (String) , "PrivateIpAddresses" :: (PrivateIpAddressStringList) } -> {"NetworkInterfaceId" :: (String) , "PrivateIpAddresses" :: (PrivateIpAddressStringList) } ) -> UnassignPrivateIpAddressesRequest
newUnassignPrivateIpAddressesRequest' _NetworkInterfaceId _PrivateIpAddresses customize = (UnassignPrivateIpAddressesRequest <<< customize) { "NetworkInterfaceId": _NetworkInterfaceId, "PrivateIpAddresses": _PrivateIpAddresses }



-- | <p>Contains the parameters for UnmonitorInstances.</p>
newtype UnmonitorInstancesRequest = UnmonitorInstancesRequest 
  { "InstanceIds" :: (InstanceIdStringList)
  , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeUnmonitorInstancesRequest :: Newtype UnmonitorInstancesRequest _
derive instance repGenericUnmonitorInstancesRequest :: Generic UnmonitorInstancesRequest _
instance showUnmonitorInstancesRequest :: Show UnmonitorInstancesRequest where
  show = genericShow
instance decodeUnmonitorInstancesRequest :: Decode UnmonitorInstancesRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnmonitorInstancesRequest :: Encode UnmonitorInstancesRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UnmonitorInstancesRequest from required parameters
newUnmonitorInstancesRequest :: InstanceIdStringList -> UnmonitorInstancesRequest
newUnmonitorInstancesRequest _InstanceIds = UnmonitorInstancesRequest { "InstanceIds": _InstanceIds, "DryRun": (NullOrUndefined Nothing) }

-- | Constructs UnmonitorInstancesRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUnmonitorInstancesRequest' :: InstanceIdStringList -> ( { "InstanceIds" :: (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"InstanceIds" :: (InstanceIdStringList) , "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> UnmonitorInstancesRequest
newUnmonitorInstancesRequest' _InstanceIds customize = (UnmonitorInstancesRequest <<< customize) { "InstanceIds": _InstanceIds, "DryRun": (NullOrUndefined Nothing) }



-- | <p>Contains the output of UnmonitorInstances.</p>
newtype UnmonitorInstancesResult = UnmonitorInstancesResult 
  { "InstanceMonitorings" :: NullOrUndefined.NullOrUndefined (InstanceMonitoringList)
  }
derive instance newtypeUnmonitorInstancesResult :: Newtype UnmonitorInstancesResult _
derive instance repGenericUnmonitorInstancesResult :: Generic UnmonitorInstancesResult _
instance showUnmonitorInstancesResult :: Show UnmonitorInstancesResult where
  show = genericShow
instance decodeUnmonitorInstancesResult :: Decode UnmonitorInstancesResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnmonitorInstancesResult :: Encode UnmonitorInstancesResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UnmonitorInstancesResult from required parameters
newUnmonitorInstancesResult :: UnmonitorInstancesResult
newUnmonitorInstancesResult  = UnmonitorInstancesResult { "InstanceMonitorings": (NullOrUndefined Nothing) }

-- | Constructs UnmonitorInstancesResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUnmonitorInstancesResult' :: ( { "InstanceMonitorings" :: NullOrUndefined.NullOrUndefined (InstanceMonitoringList) } -> {"InstanceMonitorings" :: NullOrUndefined.NullOrUndefined (InstanceMonitoringList) } ) -> UnmonitorInstancesResult
newUnmonitorInstancesResult'  customize = (UnmonitorInstancesResult <<< customize) { "InstanceMonitorings": (NullOrUndefined Nothing) }



newtype UnsuccessfulInstanceCreditSpecificationErrorCode = UnsuccessfulInstanceCreditSpecificationErrorCode String
derive instance newtypeUnsuccessfulInstanceCreditSpecificationErrorCode :: Newtype UnsuccessfulInstanceCreditSpecificationErrorCode _
derive instance repGenericUnsuccessfulInstanceCreditSpecificationErrorCode :: Generic UnsuccessfulInstanceCreditSpecificationErrorCode _
instance showUnsuccessfulInstanceCreditSpecificationErrorCode :: Show UnsuccessfulInstanceCreditSpecificationErrorCode where
  show = genericShow
instance decodeUnsuccessfulInstanceCreditSpecificationErrorCode :: Decode UnsuccessfulInstanceCreditSpecificationErrorCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnsuccessfulInstanceCreditSpecificationErrorCode :: Encode UnsuccessfulInstanceCreditSpecificationErrorCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the T2 instance whose credit option for CPU usage was not modified.</p>
newtype UnsuccessfulInstanceCreditSpecificationItem = UnsuccessfulInstanceCreditSpecificationItem 
  { "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "Error" :: NullOrUndefined.NullOrUndefined (UnsuccessfulInstanceCreditSpecificationItemError)
  }
derive instance newtypeUnsuccessfulInstanceCreditSpecificationItem :: Newtype UnsuccessfulInstanceCreditSpecificationItem _
derive instance repGenericUnsuccessfulInstanceCreditSpecificationItem :: Generic UnsuccessfulInstanceCreditSpecificationItem _
instance showUnsuccessfulInstanceCreditSpecificationItem :: Show UnsuccessfulInstanceCreditSpecificationItem where
  show = genericShow
instance decodeUnsuccessfulInstanceCreditSpecificationItem :: Decode UnsuccessfulInstanceCreditSpecificationItem where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnsuccessfulInstanceCreditSpecificationItem :: Encode UnsuccessfulInstanceCreditSpecificationItem where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UnsuccessfulInstanceCreditSpecificationItem from required parameters
newUnsuccessfulInstanceCreditSpecificationItem :: UnsuccessfulInstanceCreditSpecificationItem
newUnsuccessfulInstanceCreditSpecificationItem  = UnsuccessfulInstanceCreditSpecificationItem { "Error": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }

-- | Constructs UnsuccessfulInstanceCreditSpecificationItem's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUnsuccessfulInstanceCreditSpecificationItem' :: ( { "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Error" :: NullOrUndefined.NullOrUndefined (UnsuccessfulInstanceCreditSpecificationItemError) } -> {"InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "Error" :: NullOrUndefined.NullOrUndefined (UnsuccessfulInstanceCreditSpecificationItemError) } ) -> UnsuccessfulInstanceCreditSpecificationItem
newUnsuccessfulInstanceCreditSpecificationItem'  customize = (UnsuccessfulInstanceCreditSpecificationItem <<< customize) { "Error": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing) }



-- | <p>Information about the error for the T2 instance whose credit option for CPU usage was not modified.</p>
newtype UnsuccessfulInstanceCreditSpecificationItemError = UnsuccessfulInstanceCreditSpecificationItemError 
  { "Code" :: NullOrUndefined.NullOrUndefined (UnsuccessfulInstanceCreditSpecificationErrorCode)
  , "Message" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeUnsuccessfulInstanceCreditSpecificationItemError :: Newtype UnsuccessfulInstanceCreditSpecificationItemError _
derive instance repGenericUnsuccessfulInstanceCreditSpecificationItemError :: Generic UnsuccessfulInstanceCreditSpecificationItemError _
instance showUnsuccessfulInstanceCreditSpecificationItemError :: Show UnsuccessfulInstanceCreditSpecificationItemError where
  show = genericShow
instance decodeUnsuccessfulInstanceCreditSpecificationItemError :: Decode UnsuccessfulInstanceCreditSpecificationItemError where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnsuccessfulInstanceCreditSpecificationItemError :: Encode UnsuccessfulInstanceCreditSpecificationItemError where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UnsuccessfulInstanceCreditSpecificationItemError from required parameters
newUnsuccessfulInstanceCreditSpecificationItemError :: UnsuccessfulInstanceCreditSpecificationItemError
newUnsuccessfulInstanceCreditSpecificationItemError  = UnsuccessfulInstanceCreditSpecificationItemError { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }

-- | Constructs UnsuccessfulInstanceCreditSpecificationItemError's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUnsuccessfulInstanceCreditSpecificationItemError' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (UnsuccessfulInstanceCreditSpecificationErrorCode) , "Message" :: NullOrUndefined.NullOrUndefined (String) } -> {"Code" :: NullOrUndefined.NullOrUndefined (UnsuccessfulInstanceCreditSpecificationErrorCode) , "Message" :: NullOrUndefined.NullOrUndefined (String) } ) -> UnsuccessfulInstanceCreditSpecificationItemError
newUnsuccessfulInstanceCreditSpecificationItemError'  customize = (UnsuccessfulInstanceCreditSpecificationItemError <<< customize) { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }



newtype UnsuccessfulInstanceCreditSpecificationSet = UnsuccessfulInstanceCreditSpecificationSet (Array UnsuccessfulInstanceCreditSpecificationItem)
derive instance newtypeUnsuccessfulInstanceCreditSpecificationSet :: Newtype UnsuccessfulInstanceCreditSpecificationSet _
derive instance repGenericUnsuccessfulInstanceCreditSpecificationSet :: Generic UnsuccessfulInstanceCreditSpecificationSet _
instance showUnsuccessfulInstanceCreditSpecificationSet :: Show UnsuccessfulInstanceCreditSpecificationSet where
  show = genericShow
instance decodeUnsuccessfulInstanceCreditSpecificationSet :: Decode UnsuccessfulInstanceCreditSpecificationSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnsuccessfulInstanceCreditSpecificationSet :: Encode UnsuccessfulInstanceCreditSpecificationSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Information about items that were not successfully processed in a batch call.</p>
newtype UnsuccessfulItem = UnsuccessfulItem 
  { "Error" :: (UnsuccessfulItemError)
  , "ResourceId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeUnsuccessfulItem :: Newtype UnsuccessfulItem _
derive instance repGenericUnsuccessfulItem :: Generic UnsuccessfulItem _
instance showUnsuccessfulItem :: Show UnsuccessfulItem where
  show = genericShow
instance decodeUnsuccessfulItem :: Decode UnsuccessfulItem where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnsuccessfulItem :: Encode UnsuccessfulItem where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UnsuccessfulItem from required parameters
newUnsuccessfulItem :: UnsuccessfulItemError -> UnsuccessfulItem
newUnsuccessfulItem _Error = UnsuccessfulItem { "Error": _Error, "ResourceId": (NullOrUndefined Nothing) }

-- | Constructs UnsuccessfulItem's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUnsuccessfulItem' :: UnsuccessfulItemError -> ( { "Error" :: (UnsuccessfulItemError) , "ResourceId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Error" :: (UnsuccessfulItemError) , "ResourceId" :: NullOrUndefined.NullOrUndefined (String) } ) -> UnsuccessfulItem
newUnsuccessfulItem' _Error customize = (UnsuccessfulItem <<< customize) { "Error": _Error, "ResourceId": (NullOrUndefined Nothing) }



-- | <p>Information about the error that occurred. For more information about errors, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p>
newtype UnsuccessfulItemError = UnsuccessfulItemError 
  { "Code" :: (String)
  , "Message" :: (String)
  }
derive instance newtypeUnsuccessfulItemError :: Newtype UnsuccessfulItemError _
derive instance repGenericUnsuccessfulItemError :: Generic UnsuccessfulItemError _
instance showUnsuccessfulItemError :: Show UnsuccessfulItemError where
  show = genericShow
instance decodeUnsuccessfulItemError :: Decode UnsuccessfulItemError where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnsuccessfulItemError :: Encode UnsuccessfulItemError where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UnsuccessfulItemError from required parameters
newUnsuccessfulItemError :: String -> String -> UnsuccessfulItemError
newUnsuccessfulItemError _Code _Message = UnsuccessfulItemError { "Code": _Code, "Message": _Message }

-- | Constructs UnsuccessfulItemError's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUnsuccessfulItemError' :: String -> String -> ( { "Code" :: (String) , "Message" :: (String) } -> {"Code" :: (String) , "Message" :: (String) } ) -> UnsuccessfulItemError
newUnsuccessfulItemError' _Code _Message customize = (UnsuccessfulItemError <<< customize) { "Code": _Code, "Message": _Message }



newtype UnsuccessfulItemList = UnsuccessfulItemList (Array UnsuccessfulItem)
derive instance newtypeUnsuccessfulItemList :: Newtype UnsuccessfulItemList _
derive instance repGenericUnsuccessfulItemList :: Generic UnsuccessfulItemList _
instance showUnsuccessfulItemList :: Show UnsuccessfulItemList where
  show = genericShow
instance decodeUnsuccessfulItemList :: Decode UnsuccessfulItemList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnsuccessfulItemList :: Encode UnsuccessfulItemList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype UnsuccessfulItemSet = UnsuccessfulItemSet (Array UnsuccessfulItem)
derive instance newtypeUnsuccessfulItemSet :: Newtype UnsuccessfulItemSet _
derive instance repGenericUnsuccessfulItemSet :: Generic UnsuccessfulItemSet _
instance showUnsuccessfulItemSet :: Show UnsuccessfulItemSet where
  show = genericShow
instance decodeUnsuccessfulItemSet :: Decode UnsuccessfulItemSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUnsuccessfulItemSet :: Encode UnsuccessfulItemSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Contains the parameters for UpdateSecurityGroupRuleDescriptionsEgress.</p>
newtype UpdateSecurityGroupRuleDescriptionsEgressRequest = UpdateSecurityGroupRuleDescriptionsEgressRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "GroupId" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "IpPermissions" :: (IpPermissionList)
  }
derive instance newtypeUpdateSecurityGroupRuleDescriptionsEgressRequest :: Newtype UpdateSecurityGroupRuleDescriptionsEgressRequest _
derive instance repGenericUpdateSecurityGroupRuleDescriptionsEgressRequest :: Generic UpdateSecurityGroupRuleDescriptionsEgressRequest _
instance showUpdateSecurityGroupRuleDescriptionsEgressRequest :: Show UpdateSecurityGroupRuleDescriptionsEgressRequest where
  show = genericShow
instance decodeUpdateSecurityGroupRuleDescriptionsEgressRequest :: Decode UpdateSecurityGroupRuleDescriptionsEgressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUpdateSecurityGroupRuleDescriptionsEgressRequest :: Encode UpdateSecurityGroupRuleDescriptionsEgressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UpdateSecurityGroupRuleDescriptionsEgressRequest from required parameters
newUpdateSecurityGroupRuleDescriptionsEgressRequest :: IpPermissionList -> UpdateSecurityGroupRuleDescriptionsEgressRequest
newUpdateSecurityGroupRuleDescriptionsEgressRequest _IpPermissions = UpdateSecurityGroupRuleDescriptionsEgressRequest { "IpPermissions": _IpPermissions, "DryRun": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }

-- | Constructs UpdateSecurityGroupRuleDescriptionsEgressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUpdateSecurityGroupRuleDescriptionsEgressRequest' :: IpPermissionList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissions" :: (IpPermissionList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissions" :: (IpPermissionList) } ) -> UpdateSecurityGroupRuleDescriptionsEgressRequest
newUpdateSecurityGroupRuleDescriptionsEgressRequest' _IpPermissions customize = (UpdateSecurityGroupRuleDescriptionsEgressRequest <<< customize) { "IpPermissions": _IpPermissions, "DryRun": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }



-- | <p>Contains the output of UpdateSecurityGroupRuleDescriptionsEgress.</p>
newtype UpdateSecurityGroupRuleDescriptionsEgressResult = UpdateSecurityGroupRuleDescriptionsEgressResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeUpdateSecurityGroupRuleDescriptionsEgressResult :: Newtype UpdateSecurityGroupRuleDescriptionsEgressResult _
derive instance repGenericUpdateSecurityGroupRuleDescriptionsEgressResult :: Generic UpdateSecurityGroupRuleDescriptionsEgressResult _
instance showUpdateSecurityGroupRuleDescriptionsEgressResult :: Show UpdateSecurityGroupRuleDescriptionsEgressResult where
  show = genericShow
instance decodeUpdateSecurityGroupRuleDescriptionsEgressResult :: Decode UpdateSecurityGroupRuleDescriptionsEgressResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUpdateSecurityGroupRuleDescriptionsEgressResult :: Encode UpdateSecurityGroupRuleDescriptionsEgressResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UpdateSecurityGroupRuleDescriptionsEgressResult from required parameters
newUpdateSecurityGroupRuleDescriptionsEgressResult :: UpdateSecurityGroupRuleDescriptionsEgressResult
newUpdateSecurityGroupRuleDescriptionsEgressResult  = UpdateSecurityGroupRuleDescriptionsEgressResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs UpdateSecurityGroupRuleDescriptionsEgressResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUpdateSecurityGroupRuleDescriptionsEgressResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> UpdateSecurityGroupRuleDescriptionsEgressResult
newUpdateSecurityGroupRuleDescriptionsEgressResult'  customize = (UpdateSecurityGroupRuleDescriptionsEgressResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Contains the parameters for UpdateSecurityGroupRuleDescriptionsIngress.</p>
newtype UpdateSecurityGroupRuleDescriptionsIngressRequest = UpdateSecurityGroupRuleDescriptionsIngressRequest 
  { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "GroupId" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "IpPermissions" :: (IpPermissionList)
  }
derive instance newtypeUpdateSecurityGroupRuleDescriptionsIngressRequest :: Newtype UpdateSecurityGroupRuleDescriptionsIngressRequest _
derive instance repGenericUpdateSecurityGroupRuleDescriptionsIngressRequest :: Generic UpdateSecurityGroupRuleDescriptionsIngressRequest _
instance showUpdateSecurityGroupRuleDescriptionsIngressRequest :: Show UpdateSecurityGroupRuleDescriptionsIngressRequest where
  show = genericShow
instance decodeUpdateSecurityGroupRuleDescriptionsIngressRequest :: Decode UpdateSecurityGroupRuleDescriptionsIngressRequest where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUpdateSecurityGroupRuleDescriptionsIngressRequest :: Encode UpdateSecurityGroupRuleDescriptionsIngressRequest where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UpdateSecurityGroupRuleDescriptionsIngressRequest from required parameters
newUpdateSecurityGroupRuleDescriptionsIngressRequest :: IpPermissionList -> UpdateSecurityGroupRuleDescriptionsIngressRequest
newUpdateSecurityGroupRuleDescriptionsIngressRequest _IpPermissions = UpdateSecurityGroupRuleDescriptionsIngressRequest { "IpPermissions": _IpPermissions, "DryRun": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }

-- | Constructs UpdateSecurityGroupRuleDescriptionsIngressRequest's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUpdateSecurityGroupRuleDescriptionsIngressRequest' :: IpPermissionList -> ( { "DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissions" :: (IpPermissionList) } -> {"DryRun" :: NullOrUndefined.NullOrUndefined (Boolean) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "IpPermissions" :: (IpPermissionList) } ) -> UpdateSecurityGroupRuleDescriptionsIngressRequest
newUpdateSecurityGroupRuleDescriptionsIngressRequest' _IpPermissions customize = (UpdateSecurityGroupRuleDescriptionsIngressRequest <<< customize) { "IpPermissions": _IpPermissions, "DryRun": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing) }



-- | <p>Contains the output of UpdateSecurityGroupRuleDescriptionsIngress.</p>
newtype UpdateSecurityGroupRuleDescriptionsIngressResult = UpdateSecurityGroupRuleDescriptionsIngressResult 
  { "Return" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeUpdateSecurityGroupRuleDescriptionsIngressResult :: Newtype UpdateSecurityGroupRuleDescriptionsIngressResult _
derive instance repGenericUpdateSecurityGroupRuleDescriptionsIngressResult :: Generic UpdateSecurityGroupRuleDescriptionsIngressResult _
instance showUpdateSecurityGroupRuleDescriptionsIngressResult :: Show UpdateSecurityGroupRuleDescriptionsIngressResult where
  show = genericShow
instance decodeUpdateSecurityGroupRuleDescriptionsIngressResult :: Decode UpdateSecurityGroupRuleDescriptionsIngressResult where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUpdateSecurityGroupRuleDescriptionsIngressResult :: Encode UpdateSecurityGroupRuleDescriptionsIngressResult where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UpdateSecurityGroupRuleDescriptionsIngressResult from required parameters
newUpdateSecurityGroupRuleDescriptionsIngressResult :: UpdateSecurityGroupRuleDescriptionsIngressResult
newUpdateSecurityGroupRuleDescriptionsIngressResult  = UpdateSecurityGroupRuleDescriptionsIngressResult { "Return": (NullOrUndefined Nothing) }

-- | Constructs UpdateSecurityGroupRuleDescriptionsIngressResult's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUpdateSecurityGroupRuleDescriptionsIngressResult' :: ( { "Return" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"Return" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> UpdateSecurityGroupRuleDescriptionsIngressResult
newUpdateSecurityGroupRuleDescriptionsIngressResult'  customize = (UpdateSecurityGroupRuleDescriptionsIngressResult <<< customize) { "Return": (NullOrUndefined Nothing) }



-- | <p>Describes the S3 bucket for the disk image.</p>
newtype UserBucket = UserBucket 
  { "S3Bucket" :: NullOrUndefined.NullOrUndefined (String)
  , "S3Key" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeUserBucket :: Newtype UserBucket _
derive instance repGenericUserBucket :: Generic UserBucket _
instance showUserBucket :: Show UserBucket where
  show = genericShow
instance decodeUserBucket :: Decode UserBucket where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUserBucket :: Encode UserBucket where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UserBucket from required parameters
newUserBucket :: UserBucket
newUserBucket  = UserBucket { "S3Bucket": (NullOrUndefined Nothing), "S3Key": (NullOrUndefined Nothing) }

-- | Constructs UserBucket's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUserBucket' :: ( { "S3Bucket" :: NullOrUndefined.NullOrUndefined (String) , "S3Key" :: NullOrUndefined.NullOrUndefined (String) } -> {"S3Bucket" :: NullOrUndefined.NullOrUndefined (String) , "S3Key" :: NullOrUndefined.NullOrUndefined (String) } ) -> UserBucket
newUserBucket'  customize = (UserBucket <<< customize) { "S3Bucket": (NullOrUndefined Nothing), "S3Key": (NullOrUndefined Nothing) }



-- | <p>Describes the S3 bucket for the disk image.</p>
newtype UserBucketDetails = UserBucketDetails 
  { "S3Bucket" :: NullOrUndefined.NullOrUndefined (String)
  , "S3Key" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeUserBucketDetails :: Newtype UserBucketDetails _
derive instance repGenericUserBucketDetails :: Generic UserBucketDetails _
instance showUserBucketDetails :: Show UserBucketDetails where
  show = genericShow
instance decodeUserBucketDetails :: Decode UserBucketDetails where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUserBucketDetails :: Encode UserBucketDetails where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UserBucketDetails from required parameters
newUserBucketDetails :: UserBucketDetails
newUserBucketDetails  = UserBucketDetails { "S3Bucket": (NullOrUndefined Nothing), "S3Key": (NullOrUndefined Nothing) }

-- | Constructs UserBucketDetails's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUserBucketDetails' :: ( { "S3Bucket" :: NullOrUndefined.NullOrUndefined (String) , "S3Key" :: NullOrUndefined.NullOrUndefined (String) } -> {"S3Bucket" :: NullOrUndefined.NullOrUndefined (String) , "S3Key" :: NullOrUndefined.NullOrUndefined (String) } ) -> UserBucketDetails
newUserBucketDetails'  customize = (UserBucketDetails <<< customize) { "S3Bucket": (NullOrUndefined Nothing), "S3Key": (NullOrUndefined Nothing) }



-- | <p>Describes the user data for an instance.</p>
newtype UserData = UserData 
  { "Data" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeUserData :: Newtype UserData _
derive instance repGenericUserData :: Generic UserData _
instance showUserData :: Show UserData where
  show = genericShow
instance decodeUserData :: Decode UserData where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUserData :: Encode UserData where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UserData from required parameters
newUserData :: UserData
newUserData  = UserData { "Data": (NullOrUndefined Nothing) }

-- | Constructs UserData's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUserData' :: ( { "Data" :: NullOrUndefined.NullOrUndefined (String) } -> {"Data" :: NullOrUndefined.NullOrUndefined (String) } ) -> UserData
newUserData'  customize = (UserData <<< customize) { "Data": (NullOrUndefined Nothing) }



newtype UserGroupStringList = UserGroupStringList (Array String)
derive instance newtypeUserGroupStringList :: Newtype UserGroupStringList _
derive instance repGenericUserGroupStringList :: Generic UserGroupStringList _
instance showUserGroupStringList :: Show UserGroupStringList where
  show = genericShow
instance decodeUserGroupStringList :: Decode UserGroupStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUserGroupStringList :: Encode UserGroupStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a security group and AWS account ID pair.</p>
newtype UserIdGroupPair = UserIdGroupPair 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupId" :: NullOrUndefined.NullOrUndefined (String)
  , "GroupName" :: NullOrUndefined.NullOrUndefined (String)
  , "PeeringStatus" :: NullOrUndefined.NullOrUndefined (String)
  , "UserId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeUserIdGroupPair :: Newtype UserIdGroupPair _
derive instance repGenericUserIdGroupPair :: Generic UserIdGroupPair _
instance showUserIdGroupPair :: Show UserIdGroupPair where
  show = genericShow
instance decodeUserIdGroupPair :: Decode UserIdGroupPair where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUserIdGroupPair :: Encode UserIdGroupPair where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs UserIdGroupPair from required parameters
newUserIdGroupPair :: UserIdGroupPair
newUserIdGroupPair  = UserIdGroupPair { "Description": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "PeeringStatus": (NullOrUndefined Nothing), "UserId": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }

-- | Constructs UserIdGroupPair's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newUserIdGroupPair' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "PeeringStatus" :: NullOrUndefined.NullOrUndefined (String) , "UserId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "GroupId" :: NullOrUndefined.NullOrUndefined (String) , "GroupName" :: NullOrUndefined.NullOrUndefined (String) , "PeeringStatus" :: NullOrUndefined.NullOrUndefined (String) , "UserId" :: NullOrUndefined.NullOrUndefined (String) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } ) -> UserIdGroupPair
newUserIdGroupPair'  customize = (UserIdGroupPair <<< customize) { "Description": (NullOrUndefined Nothing), "GroupId": (NullOrUndefined Nothing), "GroupName": (NullOrUndefined Nothing), "PeeringStatus": (NullOrUndefined Nothing), "UserId": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }



newtype UserIdGroupPairList = UserIdGroupPairList (Array UserIdGroupPair)
derive instance newtypeUserIdGroupPairList :: Newtype UserIdGroupPairList _
derive instance repGenericUserIdGroupPairList :: Generic UserIdGroupPairList _
instance showUserIdGroupPairList :: Show UserIdGroupPairList where
  show = genericShow
instance decodeUserIdGroupPairList :: Decode UserIdGroupPairList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUserIdGroupPairList :: Encode UserIdGroupPairList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype UserIdGroupPairSet = UserIdGroupPairSet (Array UserIdGroupPair)
derive instance newtypeUserIdGroupPairSet :: Newtype UserIdGroupPairSet _
derive instance repGenericUserIdGroupPairSet :: Generic UserIdGroupPairSet _
instance showUserIdGroupPairSet :: Show UserIdGroupPairSet where
  show = genericShow
instance decodeUserIdGroupPairSet :: Decode UserIdGroupPairSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUserIdGroupPairSet :: Encode UserIdGroupPairSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype UserIdStringList = UserIdStringList (Array String)
derive instance newtypeUserIdStringList :: Newtype UserIdStringList _
derive instance repGenericUserIdStringList :: Generic UserIdStringList _
instance showUserIdStringList :: Show UserIdStringList where
  show = genericShow
instance decodeUserIdStringList :: Decode UserIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeUserIdStringList :: Encode UserIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype ValueStringList = ValueStringList (Array String)
derive instance newtypeValueStringList :: Newtype ValueStringList _
derive instance repGenericValueStringList :: Generic ValueStringList _
instance showValueStringList :: Show ValueStringList where
  show = genericShow
instance decodeValueStringList :: Decode ValueStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeValueStringList :: Encode ValueStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VersionDescription = VersionDescription String
derive instance newtypeVersionDescription :: Newtype VersionDescription _
derive instance repGenericVersionDescription :: Generic VersionDescription _
instance showVersionDescription :: Show VersionDescription where
  show = genericShow
instance decodeVersionDescription :: Decode VersionDescription where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVersionDescription :: Encode VersionDescription where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VersionStringList = VersionStringList (Array String)
derive instance newtypeVersionStringList :: Newtype VersionStringList _
derive instance repGenericVersionStringList :: Generic VersionStringList _
instance showVersionStringList :: Show VersionStringList where
  show = genericShow
instance decodeVersionStringList :: Decode VersionStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVersionStringList :: Encode VersionStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes telemetry for a VPN tunnel.</p>
newtype VgwTelemetry = VgwTelemetry 
  { "AcceptedRouteCount" :: NullOrUndefined.NullOrUndefined (Int)
  , "LastStatusChange" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "OutsideIpAddress" :: NullOrUndefined.NullOrUndefined (String)
  , "Status" :: NullOrUndefined.NullOrUndefined (TelemetryStatus)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeVgwTelemetry :: Newtype VgwTelemetry _
derive instance repGenericVgwTelemetry :: Generic VgwTelemetry _
instance showVgwTelemetry :: Show VgwTelemetry where
  show = genericShow
instance decodeVgwTelemetry :: Decode VgwTelemetry where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVgwTelemetry :: Encode VgwTelemetry where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VgwTelemetry from required parameters
newVgwTelemetry :: VgwTelemetry
newVgwTelemetry  = VgwTelemetry { "AcceptedRouteCount": (NullOrUndefined Nothing), "LastStatusChange": (NullOrUndefined Nothing), "OutsideIpAddress": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }

-- | Constructs VgwTelemetry's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVgwTelemetry' :: ( { "AcceptedRouteCount" :: NullOrUndefined.NullOrUndefined (Int) , "LastStatusChange" :: NullOrUndefined.NullOrUndefined (DateTime) , "OutsideIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (TelemetryStatus) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } -> {"AcceptedRouteCount" :: NullOrUndefined.NullOrUndefined (Int) , "LastStatusChange" :: NullOrUndefined.NullOrUndefined (DateTime) , "OutsideIpAddress" :: NullOrUndefined.NullOrUndefined (String) , "Status" :: NullOrUndefined.NullOrUndefined (TelemetryStatus) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } ) -> VgwTelemetry
newVgwTelemetry'  customize = (VgwTelemetry <<< customize) { "AcceptedRouteCount": (NullOrUndefined Nothing), "LastStatusChange": (NullOrUndefined Nothing), "OutsideIpAddress": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }



newtype VgwTelemetryList = VgwTelemetryList (Array VgwTelemetry)
derive instance newtypeVgwTelemetryList :: Newtype VgwTelemetryList _
derive instance repGenericVgwTelemetryList :: Generic VgwTelemetryList _
instance showVgwTelemetryList :: Show VgwTelemetryList where
  show = genericShow
instance decodeVgwTelemetryList :: Decode VgwTelemetryList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVgwTelemetryList :: Encode VgwTelemetryList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VirtualizationType = VirtualizationType String
derive instance newtypeVirtualizationType :: Newtype VirtualizationType _
derive instance repGenericVirtualizationType :: Generic VirtualizationType _
instance showVirtualizationType :: Show VirtualizationType where
  show = genericShow
instance decodeVirtualizationType :: Decode VirtualizationType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVirtualizationType :: Encode VirtualizationType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a volume.</p>
newtype Volume = Volume 
  { "Attachments" :: NullOrUndefined.NullOrUndefined (VolumeAttachmentList)
  , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String)
  , "Size" :: NullOrUndefined.NullOrUndefined (Int)
  , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (VolumeState)
  , "VolumeId" :: NullOrUndefined.NullOrUndefined (String)
  , "Iops" :: NullOrUndefined.NullOrUndefined (Int)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType)
  }
derive instance newtypeVolume :: Newtype Volume _
derive instance repGenericVolume :: Generic Volume _
instance showVolume :: Show Volume where
  show = genericShow
instance decodeVolume :: Decode Volume where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolume :: Encode Volume where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Volume from required parameters
newVolume :: Volume
newVolume  = Volume { "Attachments": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "CreateTime": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "Size": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }

-- | Constructs Volume's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVolume' :: ( { "Attachments" :: NullOrUndefined.NullOrUndefined (VolumeAttachmentList) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "Size" :: NullOrUndefined.NullOrUndefined (Int) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (VolumeState) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) } -> {"Attachments" :: NullOrUndefined.NullOrUndefined (VolumeAttachmentList) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "CreateTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Encrypted" :: NullOrUndefined.NullOrUndefined (Boolean) , "KmsKeyId" :: NullOrUndefined.NullOrUndefined (String) , "Size" :: NullOrUndefined.NullOrUndefined (Int) , "SnapshotId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (VolumeState) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) , "Iops" :: NullOrUndefined.NullOrUndefined (Int) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) } ) -> Volume
newVolume'  customize = (Volume <<< customize) { "Attachments": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "CreateTime": (NullOrUndefined Nothing), "Encrypted": (NullOrUndefined Nothing), "Iops": (NullOrUndefined Nothing), "KmsKeyId": (NullOrUndefined Nothing), "Size": (NullOrUndefined Nothing), "SnapshotId": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing), "VolumeType": (NullOrUndefined Nothing) }



-- | <p>Describes volume attachment details.</p>
newtype VolumeAttachment = VolumeAttachment 
  { "AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "Device" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceId" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (VolumeAttachmentState)
  , "VolumeId" :: NullOrUndefined.NullOrUndefined (String)
  , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeVolumeAttachment :: Newtype VolumeAttachment _
derive instance repGenericVolumeAttachment :: Generic VolumeAttachment _
instance showVolumeAttachment :: Show VolumeAttachment where
  show = genericShow
instance decodeVolumeAttachment :: Decode VolumeAttachment where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeAttachment :: Encode VolumeAttachment where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VolumeAttachment from required parameters
newVolumeAttachment :: VolumeAttachment
newVolumeAttachment  = VolumeAttachment { "AttachTime": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Device": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing) }

-- | Constructs VolumeAttachment's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVolumeAttachment' :: ( { "AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Device" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (VolumeAttachmentState) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AttachTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "Device" :: NullOrUndefined.NullOrUndefined (String) , "InstanceId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (VolumeAttachmentState) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) , "DeleteOnTermination" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> VolumeAttachment
newVolumeAttachment'  customize = (VolumeAttachment <<< customize) { "AttachTime": (NullOrUndefined Nothing), "DeleteOnTermination": (NullOrUndefined Nothing), "Device": (NullOrUndefined Nothing), "InstanceId": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing) }



newtype VolumeAttachmentList = VolumeAttachmentList (Array VolumeAttachment)
derive instance newtypeVolumeAttachmentList :: Newtype VolumeAttachmentList _
derive instance repGenericVolumeAttachmentList :: Generic VolumeAttachmentList _
instance showVolumeAttachmentList :: Show VolumeAttachmentList where
  show = genericShow
instance decodeVolumeAttachmentList :: Decode VolumeAttachmentList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeAttachmentList :: Encode VolumeAttachmentList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VolumeAttachmentState = VolumeAttachmentState String
derive instance newtypeVolumeAttachmentState :: Newtype VolumeAttachmentState _
derive instance repGenericVolumeAttachmentState :: Generic VolumeAttachmentState _
instance showVolumeAttachmentState :: Show VolumeAttachmentState where
  show = genericShow
instance decodeVolumeAttachmentState :: Decode VolumeAttachmentState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeAttachmentState :: Encode VolumeAttachmentState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VolumeAttributeName = VolumeAttributeName String
derive instance newtypeVolumeAttributeName :: Newtype VolumeAttributeName _
derive instance repGenericVolumeAttributeName :: Generic VolumeAttributeName _
instance showVolumeAttributeName :: Show VolumeAttributeName where
  show = genericShow
instance decodeVolumeAttributeName :: Decode VolumeAttributeName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeAttributeName :: Encode VolumeAttributeName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an EBS volume.</p>
newtype VolumeDetail = VolumeDetail 
  { "Size" :: (Number)
  }
derive instance newtypeVolumeDetail :: Newtype VolumeDetail _
derive instance repGenericVolumeDetail :: Generic VolumeDetail _
instance showVolumeDetail :: Show VolumeDetail where
  show = genericShow
instance decodeVolumeDetail :: Decode VolumeDetail where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeDetail :: Encode VolumeDetail where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VolumeDetail from required parameters
newVolumeDetail :: Number -> VolumeDetail
newVolumeDetail _Size = VolumeDetail { "Size": _Size }

-- | Constructs VolumeDetail's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVolumeDetail' :: Number -> ( { "Size" :: (Number) } -> {"Size" :: (Number) } ) -> VolumeDetail
newVolumeDetail' _Size customize = (VolumeDetail <<< customize) { "Size": _Size }



newtype VolumeIdStringList = VolumeIdStringList (Array String)
derive instance newtypeVolumeIdStringList :: Newtype VolumeIdStringList _
derive instance repGenericVolumeIdStringList :: Generic VolumeIdStringList _
instance showVolumeIdStringList :: Show VolumeIdStringList where
  show = genericShow
instance decodeVolumeIdStringList :: Decode VolumeIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeIdStringList :: Encode VolumeIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VolumeList = VolumeList (Array Volume)
derive instance newtypeVolumeList :: Newtype VolumeList _
derive instance repGenericVolumeList :: Generic VolumeList _
instance showVolumeList :: Show VolumeList where
  show = genericShow
instance decodeVolumeList :: Decode VolumeList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeList :: Encode VolumeList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the modification status of an EBS volume.</p> <p>If the volume has never been modified, some element values will be null.</p>
newtype VolumeModification = VolumeModification 
  { "VolumeId" :: NullOrUndefined.NullOrUndefined (String)
  , "ModificationState" :: NullOrUndefined.NullOrUndefined (VolumeModificationState)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  , "TargetSize" :: NullOrUndefined.NullOrUndefined (Int)
  , "TargetIops" :: NullOrUndefined.NullOrUndefined (Int)
  , "TargetVolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType)
  , "OriginalSize" :: NullOrUndefined.NullOrUndefined (Int)
  , "OriginalIops" :: NullOrUndefined.NullOrUndefined (Int)
  , "OriginalVolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType)
  , "Progress" :: NullOrUndefined.NullOrUndefined (Number)
  , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "EndTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeVolumeModification :: Newtype VolumeModification _
derive instance repGenericVolumeModification :: Generic VolumeModification _
instance showVolumeModification :: Show VolumeModification where
  show = genericShow
instance decodeVolumeModification :: Decode VolumeModification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeModification :: Encode VolumeModification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VolumeModification from required parameters
newVolumeModification :: VolumeModification
newVolumeModification  = VolumeModification { "EndTime": (NullOrUndefined Nothing), "ModificationState": (NullOrUndefined Nothing), "OriginalIops": (NullOrUndefined Nothing), "OriginalSize": (NullOrUndefined Nothing), "OriginalVolumeType": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "StartTime": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "TargetIops": (NullOrUndefined Nothing), "TargetSize": (NullOrUndefined Nothing), "TargetVolumeType": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing) }

-- | Constructs VolumeModification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVolumeModification' :: ( { "VolumeId" :: NullOrUndefined.NullOrUndefined (String) , "ModificationState" :: NullOrUndefined.NullOrUndefined (VolumeModificationState) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "TargetSize" :: NullOrUndefined.NullOrUndefined (Int) , "TargetIops" :: NullOrUndefined.NullOrUndefined (Int) , "TargetVolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) , "OriginalSize" :: NullOrUndefined.NullOrUndefined (Int) , "OriginalIops" :: NullOrUndefined.NullOrUndefined (Int) , "OriginalVolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) , "Progress" :: NullOrUndefined.NullOrUndefined (Number) , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "EndTime" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"VolumeId" :: NullOrUndefined.NullOrUndefined (String) , "ModificationState" :: NullOrUndefined.NullOrUndefined (VolumeModificationState) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) , "TargetSize" :: NullOrUndefined.NullOrUndefined (Int) , "TargetIops" :: NullOrUndefined.NullOrUndefined (Int) , "TargetVolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) , "OriginalSize" :: NullOrUndefined.NullOrUndefined (Int) , "OriginalIops" :: NullOrUndefined.NullOrUndefined (Int) , "OriginalVolumeType" :: NullOrUndefined.NullOrUndefined (VolumeType) , "Progress" :: NullOrUndefined.NullOrUndefined (Number) , "StartTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "EndTime" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> VolumeModification
newVolumeModification'  customize = (VolumeModification <<< customize) { "EndTime": (NullOrUndefined Nothing), "ModificationState": (NullOrUndefined Nothing), "OriginalIops": (NullOrUndefined Nothing), "OriginalSize": (NullOrUndefined Nothing), "OriginalVolumeType": (NullOrUndefined Nothing), "Progress": (NullOrUndefined Nothing), "StartTime": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing), "TargetIops": (NullOrUndefined Nothing), "TargetSize": (NullOrUndefined Nothing), "TargetVolumeType": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing) }



newtype VolumeModificationList = VolumeModificationList (Array VolumeModification)
derive instance newtypeVolumeModificationList :: Newtype VolumeModificationList _
derive instance repGenericVolumeModificationList :: Generic VolumeModificationList _
instance showVolumeModificationList :: Show VolumeModificationList where
  show = genericShow
instance decodeVolumeModificationList :: Decode VolumeModificationList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeModificationList :: Encode VolumeModificationList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VolumeModificationState = VolumeModificationState String
derive instance newtypeVolumeModificationState :: Newtype VolumeModificationState _
derive instance repGenericVolumeModificationState :: Generic VolumeModificationState _
instance showVolumeModificationState :: Show VolumeModificationState where
  show = genericShow
instance decodeVolumeModificationState :: Decode VolumeModificationState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeModificationState :: Encode VolumeModificationState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VolumeState = VolumeState String
derive instance newtypeVolumeState :: Newtype VolumeState _
derive instance repGenericVolumeState :: Generic VolumeState _
instance showVolumeState :: Show VolumeState where
  show = genericShow
instance decodeVolumeState :: Decode VolumeState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeState :: Encode VolumeState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a volume status operation code.</p>
newtype VolumeStatusAction = VolumeStatusAction 
  { "Code" :: NullOrUndefined.NullOrUndefined (String)
  , "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "EventId" :: NullOrUndefined.NullOrUndefined (String)
  , "EventType" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeVolumeStatusAction :: Newtype VolumeStatusAction _
derive instance repGenericVolumeStatusAction :: Generic VolumeStatusAction _
instance showVolumeStatusAction :: Show VolumeStatusAction where
  show = genericShow
instance decodeVolumeStatusAction :: Decode VolumeStatusAction where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusAction :: Encode VolumeStatusAction where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VolumeStatusAction from required parameters
newVolumeStatusAction :: VolumeStatusAction
newVolumeStatusAction  = VolumeStatusAction { "Code": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "EventId": (NullOrUndefined Nothing), "EventType": (NullOrUndefined Nothing) }

-- | Constructs VolumeStatusAction's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVolumeStatusAction' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "EventId" :: NullOrUndefined.NullOrUndefined (String) , "EventType" :: NullOrUndefined.NullOrUndefined (String) } -> {"Code" :: NullOrUndefined.NullOrUndefined (String) , "Description" :: NullOrUndefined.NullOrUndefined (String) , "EventId" :: NullOrUndefined.NullOrUndefined (String) , "EventType" :: NullOrUndefined.NullOrUndefined (String) } ) -> VolumeStatusAction
newVolumeStatusAction'  customize = (VolumeStatusAction <<< customize) { "Code": (NullOrUndefined Nothing), "Description": (NullOrUndefined Nothing), "EventId": (NullOrUndefined Nothing), "EventType": (NullOrUndefined Nothing) }



newtype VolumeStatusActionsList = VolumeStatusActionsList (Array VolumeStatusAction)
derive instance newtypeVolumeStatusActionsList :: Newtype VolumeStatusActionsList _
derive instance repGenericVolumeStatusActionsList :: Generic VolumeStatusActionsList _
instance showVolumeStatusActionsList :: Show VolumeStatusActionsList where
  show = genericShow
instance decodeVolumeStatusActionsList :: Decode VolumeStatusActionsList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusActionsList :: Encode VolumeStatusActionsList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a volume status.</p>
newtype VolumeStatusDetails = VolumeStatusDetails 
  { "Name" :: NullOrUndefined.NullOrUndefined (VolumeStatusName)
  , "Status" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeVolumeStatusDetails :: Newtype VolumeStatusDetails _
derive instance repGenericVolumeStatusDetails :: Generic VolumeStatusDetails _
instance showVolumeStatusDetails :: Show VolumeStatusDetails where
  show = genericShow
instance decodeVolumeStatusDetails :: Decode VolumeStatusDetails where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusDetails :: Encode VolumeStatusDetails where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VolumeStatusDetails from required parameters
newVolumeStatusDetails :: VolumeStatusDetails
newVolumeStatusDetails  = VolumeStatusDetails { "Name": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }

-- | Constructs VolumeStatusDetails's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVolumeStatusDetails' :: ( { "Name" :: NullOrUndefined.NullOrUndefined (VolumeStatusName) , "Status" :: NullOrUndefined.NullOrUndefined (String) } -> {"Name" :: NullOrUndefined.NullOrUndefined (VolumeStatusName) , "Status" :: NullOrUndefined.NullOrUndefined (String) } ) -> VolumeStatusDetails
newVolumeStatusDetails'  customize = (VolumeStatusDetails <<< customize) { "Name": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }



newtype VolumeStatusDetailsList = VolumeStatusDetailsList (Array VolumeStatusDetails)
derive instance newtypeVolumeStatusDetailsList :: Newtype VolumeStatusDetailsList _
derive instance repGenericVolumeStatusDetailsList :: Generic VolumeStatusDetailsList _
instance showVolumeStatusDetailsList :: Show VolumeStatusDetailsList where
  show = genericShow
instance decodeVolumeStatusDetailsList :: Decode VolumeStatusDetailsList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusDetailsList :: Encode VolumeStatusDetailsList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a volume status event.</p>
newtype VolumeStatusEvent = VolumeStatusEvent 
  { "Description" :: NullOrUndefined.NullOrUndefined (String)
  , "EventId" :: NullOrUndefined.NullOrUndefined (String)
  , "EventType" :: NullOrUndefined.NullOrUndefined (String)
  , "NotAfter" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "NotBefore" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeVolumeStatusEvent :: Newtype VolumeStatusEvent _
derive instance repGenericVolumeStatusEvent :: Generic VolumeStatusEvent _
instance showVolumeStatusEvent :: Show VolumeStatusEvent where
  show = genericShow
instance decodeVolumeStatusEvent :: Decode VolumeStatusEvent where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusEvent :: Encode VolumeStatusEvent where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VolumeStatusEvent from required parameters
newVolumeStatusEvent :: VolumeStatusEvent
newVolumeStatusEvent  = VolumeStatusEvent { "Description": (NullOrUndefined Nothing), "EventId": (NullOrUndefined Nothing), "EventType": (NullOrUndefined Nothing), "NotAfter": (NullOrUndefined Nothing), "NotBefore": (NullOrUndefined Nothing) }

-- | Constructs VolumeStatusEvent's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVolumeStatusEvent' :: ( { "Description" :: NullOrUndefined.NullOrUndefined (String) , "EventId" :: NullOrUndefined.NullOrUndefined (String) , "EventType" :: NullOrUndefined.NullOrUndefined (String) , "NotAfter" :: NullOrUndefined.NullOrUndefined (DateTime) , "NotBefore" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"Description" :: NullOrUndefined.NullOrUndefined (String) , "EventId" :: NullOrUndefined.NullOrUndefined (String) , "EventType" :: NullOrUndefined.NullOrUndefined (String) , "NotAfter" :: NullOrUndefined.NullOrUndefined (DateTime) , "NotBefore" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> VolumeStatusEvent
newVolumeStatusEvent'  customize = (VolumeStatusEvent <<< customize) { "Description": (NullOrUndefined Nothing), "EventId": (NullOrUndefined Nothing), "EventType": (NullOrUndefined Nothing), "NotAfter": (NullOrUndefined Nothing), "NotBefore": (NullOrUndefined Nothing) }



newtype VolumeStatusEventsList = VolumeStatusEventsList (Array VolumeStatusEvent)
derive instance newtypeVolumeStatusEventsList :: Newtype VolumeStatusEventsList _
derive instance repGenericVolumeStatusEventsList :: Generic VolumeStatusEventsList _
instance showVolumeStatusEventsList :: Show VolumeStatusEventsList where
  show = genericShow
instance decodeVolumeStatusEventsList :: Decode VolumeStatusEventsList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusEventsList :: Encode VolumeStatusEventsList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the status of a volume.</p>
newtype VolumeStatusInfo = VolumeStatusInfo 
  { "Details" :: NullOrUndefined.NullOrUndefined (VolumeStatusDetailsList)
  , "Status" :: NullOrUndefined.NullOrUndefined (VolumeStatusInfoStatus)
  }
derive instance newtypeVolumeStatusInfo :: Newtype VolumeStatusInfo _
derive instance repGenericVolumeStatusInfo :: Generic VolumeStatusInfo _
instance showVolumeStatusInfo :: Show VolumeStatusInfo where
  show = genericShow
instance decodeVolumeStatusInfo :: Decode VolumeStatusInfo where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusInfo :: Encode VolumeStatusInfo where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VolumeStatusInfo from required parameters
newVolumeStatusInfo :: VolumeStatusInfo
newVolumeStatusInfo  = VolumeStatusInfo { "Details": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }

-- | Constructs VolumeStatusInfo's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVolumeStatusInfo' :: ( { "Details" :: NullOrUndefined.NullOrUndefined (VolumeStatusDetailsList) , "Status" :: NullOrUndefined.NullOrUndefined (VolumeStatusInfoStatus) } -> {"Details" :: NullOrUndefined.NullOrUndefined (VolumeStatusDetailsList) , "Status" :: NullOrUndefined.NullOrUndefined (VolumeStatusInfoStatus) } ) -> VolumeStatusInfo
newVolumeStatusInfo'  customize = (VolumeStatusInfo <<< customize) { "Details": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing) }



newtype VolumeStatusInfoStatus = VolumeStatusInfoStatus String
derive instance newtypeVolumeStatusInfoStatus :: Newtype VolumeStatusInfoStatus _
derive instance repGenericVolumeStatusInfoStatus :: Generic VolumeStatusInfoStatus _
instance showVolumeStatusInfoStatus :: Show VolumeStatusInfoStatus where
  show = genericShow
instance decodeVolumeStatusInfoStatus :: Decode VolumeStatusInfoStatus where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusInfoStatus :: Encode VolumeStatusInfoStatus where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the volume status.</p>
newtype VolumeStatusItem = VolumeStatusItem 
  { "Actions" :: NullOrUndefined.NullOrUndefined (VolumeStatusActionsList)
  , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "Events" :: NullOrUndefined.NullOrUndefined (VolumeStatusEventsList)
  , "VolumeId" :: NullOrUndefined.NullOrUndefined (String)
  , "VolumeStatus" :: NullOrUndefined.NullOrUndefined (VolumeStatusInfo)
  }
derive instance newtypeVolumeStatusItem :: Newtype VolumeStatusItem _
derive instance repGenericVolumeStatusItem :: Generic VolumeStatusItem _
instance showVolumeStatusItem :: Show VolumeStatusItem where
  show = genericShow
instance decodeVolumeStatusItem :: Decode VolumeStatusItem where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusItem :: Encode VolumeStatusItem where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VolumeStatusItem from required parameters
newVolumeStatusItem :: VolumeStatusItem
newVolumeStatusItem  = VolumeStatusItem { "Actions": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "Events": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing), "VolumeStatus": (NullOrUndefined Nothing) }

-- | Constructs VolumeStatusItem's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVolumeStatusItem' :: ( { "Actions" :: NullOrUndefined.NullOrUndefined (VolumeStatusActionsList) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Events" :: NullOrUndefined.NullOrUndefined (VolumeStatusEventsList) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeStatus" :: NullOrUndefined.NullOrUndefined (VolumeStatusInfo) } -> {"Actions" :: NullOrUndefined.NullOrUndefined (VolumeStatusActionsList) , "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "Events" :: NullOrUndefined.NullOrUndefined (VolumeStatusEventsList) , "VolumeId" :: NullOrUndefined.NullOrUndefined (String) , "VolumeStatus" :: NullOrUndefined.NullOrUndefined (VolumeStatusInfo) } ) -> VolumeStatusItem
newVolumeStatusItem'  customize = (VolumeStatusItem <<< customize) { "Actions": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "Events": (NullOrUndefined Nothing), "VolumeId": (NullOrUndefined Nothing), "VolumeStatus": (NullOrUndefined Nothing) }



newtype VolumeStatusList = VolumeStatusList (Array VolumeStatusItem)
derive instance newtypeVolumeStatusList :: Newtype VolumeStatusList _
derive instance repGenericVolumeStatusList :: Generic VolumeStatusList _
instance showVolumeStatusList :: Show VolumeStatusList where
  show = genericShow
instance decodeVolumeStatusList :: Decode VolumeStatusList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusList :: Encode VolumeStatusList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VolumeStatusName = VolumeStatusName String
derive instance newtypeVolumeStatusName :: Newtype VolumeStatusName _
derive instance repGenericVolumeStatusName :: Generic VolumeStatusName _
instance showVolumeStatusName :: Show VolumeStatusName where
  show = genericShow
instance decodeVolumeStatusName :: Decode VolumeStatusName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeStatusName :: Encode VolumeStatusName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VolumeType = VolumeType String
derive instance newtypeVolumeType :: Newtype VolumeType _
derive instance repGenericVolumeType :: Generic VolumeType _
instance showVolumeType :: Show VolumeType where
  show = genericShow
instance decodeVolumeType :: Decode VolumeType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVolumeType :: Encode VolumeType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a VPC.</p>
newtype Vpc = Vpc 
  { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "DhcpOptionsId" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (VpcState)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy)
  , "Ipv6CidrBlockAssociationSet" :: NullOrUndefined.NullOrUndefined (VpcIpv6CidrBlockAssociationSet)
  , "CidrBlockAssociationSet" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockAssociationSet)
  , "IsDefault" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeVpc :: Newtype Vpc _
derive instance repGenericVpc :: Generic Vpc _
instance showVpc :: Show Vpc where
  show = genericShow
instance decodeVpc :: Decode Vpc where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpc :: Encode Vpc where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs Vpc from required parameters
newVpc :: Vpc
newVpc  = Vpc { "CidrBlock": (NullOrUndefined Nothing), "CidrBlockAssociationSet": (NullOrUndefined Nothing), "DhcpOptionsId": (NullOrUndefined Nothing), "InstanceTenancy": (NullOrUndefined Nothing), "Ipv6CidrBlockAssociationSet": (NullOrUndefined Nothing), "IsDefault": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs Vpc's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpc' :: ( { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DhcpOptionsId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (VpcState) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "Ipv6CidrBlockAssociationSet" :: NullOrUndefined.NullOrUndefined (VpcIpv6CidrBlockAssociationSet) , "CidrBlockAssociationSet" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockAssociationSet) , "IsDefault" :: NullOrUndefined.NullOrUndefined (Boolean) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "DhcpOptionsId" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (VpcState) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "InstanceTenancy" :: NullOrUndefined.NullOrUndefined (Tenancy) , "Ipv6CidrBlockAssociationSet" :: NullOrUndefined.NullOrUndefined (VpcIpv6CidrBlockAssociationSet) , "CidrBlockAssociationSet" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockAssociationSet) , "IsDefault" :: NullOrUndefined.NullOrUndefined (Boolean) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> Vpc
newVpc'  customize = (Vpc <<< customize) { "CidrBlock": (NullOrUndefined Nothing), "CidrBlockAssociationSet": (NullOrUndefined Nothing), "DhcpOptionsId": (NullOrUndefined Nothing), "InstanceTenancy": (NullOrUndefined Nothing), "Ipv6CidrBlockAssociationSet": (NullOrUndefined Nothing), "IsDefault": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Describes an attachment between a virtual private gateway and a VPC.</p>
newtype VpcAttachment = VpcAttachment 
  { "State" :: NullOrUndefined.NullOrUndefined (AttachmentStatus)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeVpcAttachment :: Newtype VpcAttachment _
derive instance repGenericVpcAttachment :: Generic VpcAttachment _
instance showVpcAttachment :: Show VpcAttachment where
  show = genericShow
instance decodeVpcAttachment :: Decode VpcAttachment where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcAttachment :: Encode VpcAttachment where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcAttachment from required parameters
newVpcAttachment :: VpcAttachment
newVpcAttachment  = VpcAttachment { "State": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs VpcAttachment's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcAttachment' :: ( { "State" :: NullOrUndefined.NullOrUndefined (AttachmentStatus) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"State" :: NullOrUndefined.NullOrUndefined (AttachmentStatus) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> VpcAttachment
newVpcAttachment'  customize = (VpcAttachment <<< customize) { "State": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



newtype VpcAttachmentList = VpcAttachmentList (Array VpcAttachment)
derive instance newtypeVpcAttachmentList :: Newtype VpcAttachmentList _
derive instance repGenericVpcAttachmentList :: Generic VpcAttachmentList _
instance showVpcAttachmentList :: Show VpcAttachmentList where
  show = genericShow
instance decodeVpcAttachmentList :: Decode VpcAttachmentList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcAttachmentList :: Encode VpcAttachmentList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpcAttributeName = VpcAttributeName String
derive instance newtypeVpcAttributeName :: Newtype VpcAttributeName _
derive instance repGenericVpcAttributeName :: Generic VpcAttributeName _
instance showVpcAttributeName :: Show VpcAttributeName where
  show = genericShow
instance decodeVpcAttributeName :: Decode VpcAttributeName where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcAttributeName :: Encode VpcAttributeName where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IPv4 CIDR block associated with a VPC.</p>
newtype VpcCidrBlockAssociation = VpcCidrBlockAssociation 
  { "AssociationId" :: NullOrUndefined.NullOrUndefined (String)
  , "CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "CidrBlockState" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockState)
  }
derive instance newtypeVpcCidrBlockAssociation :: Newtype VpcCidrBlockAssociation _
derive instance repGenericVpcCidrBlockAssociation :: Generic VpcCidrBlockAssociation _
instance showVpcCidrBlockAssociation :: Show VpcCidrBlockAssociation where
  show = genericShow
instance decodeVpcCidrBlockAssociation :: Decode VpcCidrBlockAssociation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcCidrBlockAssociation :: Encode VpcCidrBlockAssociation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcCidrBlockAssociation from required parameters
newVpcCidrBlockAssociation :: VpcCidrBlockAssociation
newVpcCidrBlockAssociation  = VpcCidrBlockAssociation { "AssociationId": (NullOrUndefined Nothing), "CidrBlock": (NullOrUndefined Nothing), "CidrBlockState": (NullOrUndefined Nothing) }

-- | Constructs VpcCidrBlockAssociation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcCidrBlockAssociation' :: ( { "AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "CidrBlockState" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockState) } -> {"AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "CidrBlockState" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockState) } ) -> VpcCidrBlockAssociation
newVpcCidrBlockAssociation'  customize = (VpcCidrBlockAssociation <<< customize) { "AssociationId": (NullOrUndefined Nothing), "CidrBlock": (NullOrUndefined Nothing), "CidrBlockState": (NullOrUndefined Nothing) }



newtype VpcCidrBlockAssociationSet = VpcCidrBlockAssociationSet (Array VpcCidrBlockAssociation)
derive instance newtypeVpcCidrBlockAssociationSet :: Newtype VpcCidrBlockAssociationSet _
derive instance repGenericVpcCidrBlockAssociationSet :: Generic VpcCidrBlockAssociationSet _
instance showVpcCidrBlockAssociationSet :: Show VpcCidrBlockAssociationSet where
  show = genericShow
instance decodeVpcCidrBlockAssociationSet :: Decode VpcCidrBlockAssociationSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcCidrBlockAssociationSet :: Encode VpcCidrBlockAssociationSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the state of a CIDR block.</p>
newtype VpcCidrBlockState = VpcCidrBlockState 
  { "State" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockStateCode)
  , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeVpcCidrBlockState :: Newtype VpcCidrBlockState _
derive instance repGenericVpcCidrBlockState :: Generic VpcCidrBlockState _
instance showVpcCidrBlockState :: Show VpcCidrBlockState where
  show = genericShow
instance decodeVpcCidrBlockState :: Decode VpcCidrBlockState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcCidrBlockState :: Encode VpcCidrBlockState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcCidrBlockState from required parameters
newVpcCidrBlockState :: VpcCidrBlockState
newVpcCidrBlockState  = VpcCidrBlockState { "State": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }

-- | Constructs VpcCidrBlockState's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcCidrBlockState' :: ( { "State" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockStateCode) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } -> {"State" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockStateCode) , "StatusMessage" :: NullOrUndefined.NullOrUndefined (String) } ) -> VpcCidrBlockState
newVpcCidrBlockState'  customize = (VpcCidrBlockState <<< customize) { "State": (NullOrUndefined Nothing), "StatusMessage": (NullOrUndefined Nothing) }



newtype VpcCidrBlockStateCode = VpcCidrBlockStateCode String
derive instance newtypeVpcCidrBlockStateCode :: Newtype VpcCidrBlockStateCode _
derive instance repGenericVpcCidrBlockStateCode :: Generic VpcCidrBlockStateCode _
instance showVpcCidrBlockStateCode :: Show VpcCidrBlockStateCode where
  show = genericShow
instance decodeVpcCidrBlockStateCode :: Decode VpcCidrBlockStateCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcCidrBlockStateCode :: Encode VpcCidrBlockStateCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes whether a VPC is enabled for ClassicLink.</p>
newtype VpcClassicLink = VpcClassicLink 
  { "ClassicLinkEnabled" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeVpcClassicLink :: Newtype VpcClassicLink _
derive instance repGenericVpcClassicLink :: Generic VpcClassicLink _
instance showVpcClassicLink :: Show VpcClassicLink where
  show = genericShow
instance decodeVpcClassicLink :: Decode VpcClassicLink where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcClassicLink :: Encode VpcClassicLink where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcClassicLink from required parameters
newVpcClassicLink :: VpcClassicLink
newVpcClassicLink  = VpcClassicLink { "ClassicLinkEnabled": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs VpcClassicLink's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcClassicLink' :: ( { "ClassicLinkEnabled" :: NullOrUndefined.NullOrUndefined (Boolean) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } -> {"ClassicLinkEnabled" :: NullOrUndefined.NullOrUndefined (Boolean) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) } ) -> VpcClassicLink
newVpcClassicLink'  customize = (VpcClassicLink <<< customize) { "ClassicLinkEnabled": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



newtype VpcClassicLinkIdList = VpcClassicLinkIdList (Array String)
derive instance newtypeVpcClassicLinkIdList :: Newtype VpcClassicLinkIdList _
derive instance repGenericVpcClassicLinkIdList :: Generic VpcClassicLinkIdList _
instance showVpcClassicLinkIdList :: Show VpcClassicLinkIdList where
  show = genericShow
instance decodeVpcClassicLinkIdList :: Decode VpcClassicLinkIdList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcClassicLinkIdList :: Encode VpcClassicLinkIdList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpcClassicLinkList = VpcClassicLinkList (Array VpcClassicLink)
derive instance newtypeVpcClassicLinkList :: Newtype VpcClassicLinkList _
derive instance repGenericVpcClassicLinkList :: Generic VpcClassicLinkList _
instance showVpcClassicLinkList :: Show VpcClassicLinkList where
  show = genericShow
instance decodeVpcClassicLinkList :: Decode VpcClassicLinkList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcClassicLinkList :: Encode VpcClassicLinkList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a VPC endpoint.</p>
newtype VpcEndpoint = VpcEndpoint 
  { "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcEndpointType" :: NullOrUndefined.NullOrUndefined (VpcEndpointType)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "ServiceName" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (State)
  , "PolicyDocument" :: NullOrUndefined.NullOrUndefined (String)
  , "RouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "SubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierSet)
  , "PrivateDnsEnabled" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "NetworkInterfaceIds" :: NullOrUndefined.NullOrUndefined (ValueStringList)
  , "DnsEntries" :: NullOrUndefined.NullOrUndefined (DnsEntrySet)
  , "CreationTimestamp" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeVpcEndpoint :: Newtype VpcEndpoint _
derive instance repGenericVpcEndpoint :: Generic VpcEndpoint _
instance showVpcEndpoint :: Show VpcEndpoint where
  show = genericShow
instance decodeVpcEndpoint :: Decode VpcEndpoint where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcEndpoint :: Encode VpcEndpoint where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcEndpoint from required parameters
newVpcEndpoint :: VpcEndpoint
newVpcEndpoint  = VpcEndpoint { "CreationTimestamp": (NullOrUndefined Nothing), "DnsEntries": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "NetworkInterfaceIds": (NullOrUndefined Nothing), "PolicyDocument": (NullOrUndefined Nothing), "PrivateDnsEnabled": (NullOrUndefined Nothing), "RouteTableIds": (NullOrUndefined Nothing), "ServiceName": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "SubnetIds": (NullOrUndefined Nothing), "VpcEndpointId": (NullOrUndefined Nothing), "VpcEndpointType": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs VpcEndpoint's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcEndpoint' :: ( { "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointType" :: NullOrUndefined.NullOrUndefined (VpcEndpointType) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "ServiceName" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (State) , "PolicyDocument" :: NullOrUndefined.NullOrUndefined (String) , "RouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "SubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierSet) , "PrivateDnsEnabled" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "DnsEntries" :: NullOrUndefined.NullOrUndefined (DnsEntrySet) , "CreationTimestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointType" :: NullOrUndefined.NullOrUndefined (VpcEndpointType) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "ServiceName" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (State) , "PolicyDocument" :: NullOrUndefined.NullOrUndefined (String) , "RouteTableIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "SubnetIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "Groups" :: NullOrUndefined.NullOrUndefined (GroupIdentifierSet) , "PrivateDnsEnabled" :: NullOrUndefined.NullOrUndefined (Boolean) , "NetworkInterfaceIds" :: NullOrUndefined.NullOrUndefined (ValueStringList) , "DnsEntries" :: NullOrUndefined.NullOrUndefined (DnsEntrySet) , "CreationTimestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> VpcEndpoint
newVpcEndpoint'  customize = (VpcEndpoint <<< customize) { "CreationTimestamp": (NullOrUndefined Nothing), "DnsEntries": (NullOrUndefined Nothing), "Groups": (NullOrUndefined Nothing), "NetworkInterfaceIds": (NullOrUndefined Nothing), "PolicyDocument": (NullOrUndefined Nothing), "PrivateDnsEnabled": (NullOrUndefined Nothing), "RouteTableIds": (NullOrUndefined Nothing), "ServiceName": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "SubnetIds": (NullOrUndefined Nothing), "VpcEndpointId": (NullOrUndefined Nothing), "VpcEndpointType": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



-- | <p>Describes a VPC endpoint connection to a service.</p>
newtype VpcEndpointConnection = VpcEndpointConnection 
  { "ServiceId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcEndpointOwner" :: NullOrUndefined.NullOrUndefined (String)
  , "VpcEndpointState" :: NullOrUndefined.NullOrUndefined (State)
  , "CreationTimestamp" :: NullOrUndefined.NullOrUndefined (DateTime)
  }
derive instance newtypeVpcEndpointConnection :: Newtype VpcEndpointConnection _
derive instance repGenericVpcEndpointConnection :: Generic VpcEndpointConnection _
instance showVpcEndpointConnection :: Show VpcEndpointConnection where
  show = genericShow
instance decodeVpcEndpointConnection :: Decode VpcEndpointConnection where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcEndpointConnection :: Encode VpcEndpointConnection where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcEndpointConnection from required parameters
newVpcEndpointConnection :: VpcEndpointConnection
newVpcEndpointConnection  = VpcEndpointConnection { "CreationTimestamp": (NullOrUndefined Nothing), "ServiceId": (NullOrUndefined Nothing), "VpcEndpointId": (NullOrUndefined Nothing), "VpcEndpointOwner": (NullOrUndefined Nothing), "VpcEndpointState": (NullOrUndefined Nothing) }

-- | Constructs VpcEndpointConnection's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcEndpointConnection' :: ( { "ServiceId" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointOwner" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointState" :: NullOrUndefined.NullOrUndefined (State) , "CreationTimestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } -> {"ServiceId" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointId" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointOwner" :: NullOrUndefined.NullOrUndefined (String) , "VpcEndpointState" :: NullOrUndefined.NullOrUndefined (State) , "CreationTimestamp" :: NullOrUndefined.NullOrUndefined (DateTime) } ) -> VpcEndpointConnection
newVpcEndpointConnection'  customize = (VpcEndpointConnection <<< customize) { "CreationTimestamp": (NullOrUndefined Nothing), "ServiceId": (NullOrUndefined Nothing), "VpcEndpointId": (NullOrUndefined Nothing), "VpcEndpointOwner": (NullOrUndefined Nothing), "VpcEndpointState": (NullOrUndefined Nothing) }



newtype VpcEndpointConnectionSet = VpcEndpointConnectionSet (Array VpcEndpointConnection)
derive instance newtypeVpcEndpointConnectionSet :: Newtype VpcEndpointConnectionSet _
derive instance repGenericVpcEndpointConnectionSet :: Generic VpcEndpointConnectionSet _
instance showVpcEndpointConnectionSet :: Show VpcEndpointConnectionSet where
  show = genericShow
instance decodeVpcEndpointConnectionSet :: Decode VpcEndpointConnectionSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcEndpointConnectionSet :: Encode VpcEndpointConnectionSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpcEndpointSet = VpcEndpointSet (Array VpcEndpoint)
derive instance newtypeVpcEndpointSet :: Newtype VpcEndpointSet _
derive instance repGenericVpcEndpointSet :: Generic VpcEndpointSet _
instance showVpcEndpointSet :: Show VpcEndpointSet where
  show = genericShow
instance decodeVpcEndpointSet :: Decode VpcEndpointSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcEndpointSet :: Encode VpcEndpointSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpcEndpointType = VpcEndpointType String
derive instance newtypeVpcEndpointType :: Newtype VpcEndpointType _
derive instance repGenericVpcEndpointType :: Generic VpcEndpointType _
instance showVpcEndpointType :: Show VpcEndpointType where
  show = genericShow
instance decodeVpcEndpointType :: Decode VpcEndpointType where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcEndpointType :: Encode VpcEndpointType where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpcIdStringList = VpcIdStringList (Array String)
derive instance newtypeVpcIdStringList :: Newtype VpcIdStringList _
derive instance repGenericVpcIdStringList :: Generic VpcIdStringList _
instance showVpcIdStringList :: Show VpcIdStringList where
  show = genericShow
instance decodeVpcIdStringList :: Decode VpcIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcIdStringList :: Encode VpcIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes an IPv6 CIDR block associated with a VPC.</p>
newtype VpcIpv6CidrBlockAssociation = VpcIpv6CidrBlockAssociation 
  { "AssociationId" :: NullOrUndefined.NullOrUndefined (String)
  , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "Ipv6CidrBlockState" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockState)
  }
derive instance newtypeVpcIpv6CidrBlockAssociation :: Newtype VpcIpv6CidrBlockAssociation _
derive instance repGenericVpcIpv6CidrBlockAssociation :: Generic VpcIpv6CidrBlockAssociation _
instance showVpcIpv6CidrBlockAssociation :: Show VpcIpv6CidrBlockAssociation where
  show = genericShow
instance decodeVpcIpv6CidrBlockAssociation :: Decode VpcIpv6CidrBlockAssociation where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcIpv6CidrBlockAssociation :: Encode VpcIpv6CidrBlockAssociation where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcIpv6CidrBlockAssociation from required parameters
newVpcIpv6CidrBlockAssociation :: VpcIpv6CidrBlockAssociation
newVpcIpv6CidrBlockAssociation  = VpcIpv6CidrBlockAssociation { "AssociationId": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing), "Ipv6CidrBlockState": (NullOrUndefined Nothing) }

-- | Constructs VpcIpv6CidrBlockAssociation's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcIpv6CidrBlockAssociation' :: ( { "AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "Ipv6CidrBlockState" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockState) } -> {"AssociationId" :: NullOrUndefined.NullOrUndefined (String) , "Ipv6CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "Ipv6CidrBlockState" :: NullOrUndefined.NullOrUndefined (VpcCidrBlockState) } ) -> VpcIpv6CidrBlockAssociation
newVpcIpv6CidrBlockAssociation'  customize = (VpcIpv6CidrBlockAssociation <<< customize) { "AssociationId": (NullOrUndefined Nothing), "Ipv6CidrBlock": (NullOrUndefined Nothing), "Ipv6CidrBlockState": (NullOrUndefined Nothing) }



newtype VpcIpv6CidrBlockAssociationSet = VpcIpv6CidrBlockAssociationSet (Array VpcIpv6CidrBlockAssociation)
derive instance newtypeVpcIpv6CidrBlockAssociationSet :: Newtype VpcIpv6CidrBlockAssociationSet _
derive instance repGenericVpcIpv6CidrBlockAssociationSet :: Generic VpcIpv6CidrBlockAssociationSet _
instance showVpcIpv6CidrBlockAssociationSet :: Show VpcIpv6CidrBlockAssociationSet where
  show = genericShow
instance decodeVpcIpv6CidrBlockAssociationSet :: Decode VpcIpv6CidrBlockAssociationSet where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcIpv6CidrBlockAssociationSet :: Encode VpcIpv6CidrBlockAssociationSet where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpcList = VpcList (Array Vpc)
derive instance newtypeVpcList :: Newtype VpcList _
derive instance repGenericVpcList :: Generic VpcList _
instance showVpcList :: Show VpcList where
  show = genericShow
instance decodeVpcList :: Decode VpcList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcList :: Encode VpcList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a VPC peering connection.</p>
newtype VpcPeeringConnection = VpcPeeringConnection 
  { "AccepterVpcInfo" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionVpcInfo)
  , "ExpirationTime" :: NullOrUndefined.NullOrUndefined (DateTime)
  , "RequesterVpcInfo" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionVpcInfo)
  , "Status" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionStateReason)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeVpcPeeringConnection :: Newtype VpcPeeringConnection _
derive instance repGenericVpcPeeringConnection :: Generic VpcPeeringConnection _
instance showVpcPeeringConnection :: Show VpcPeeringConnection where
  show = genericShow
instance decodeVpcPeeringConnection :: Decode VpcPeeringConnection where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcPeeringConnection :: Encode VpcPeeringConnection where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcPeeringConnection from required parameters
newVpcPeeringConnection :: VpcPeeringConnection
newVpcPeeringConnection  = VpcPeeringConnection { "AccepterVpcInfo": (NullOrUndefined Nothing), "ExpirationTime": (NullOrUndefined Nothing), "RequesterVpcInfo": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }

-- | Constructs VpcPeeringConnection's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcPeeringConnection' :: ( { "AccepterVpcInfo" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionVpcInfo) , "ExpirationTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "RequesterVpcInfo" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionVpcInfo) , "Status" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionStateReason) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } -> {"AccepterVpcInfo" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionVpcInfo) , "ExpirationTime" :: NullOrUndefined.NullOrUndefined (DateTime) , "RequesterVpcInfo" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionVpcInfo) , "Status" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionStateReason) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VpcPeeringConnectionId" :: NullOrUndefined.NullOrUndefined (String) } ) -> VpcPeeringConnection
newVpcPeeringConnection'  customize = (VpcPeeringConnection <<< customize) { "AccepterVpcInfo": (NullOrUndefined Nothing), "ExpirationTime": (NullOrUndefined Nothing), "RequesterVpcInfo": (NullOrUndefined Nothing), "Status": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "VpcPeeringConnectionId": (NullOrUndefined Nothing) }



newtype VpcPeeringConnectionList = VpcPeeringConnectionList (Array VpcPeeringConnection)
derive instance newtypeVpcPeeringConnectionList :: Newtype VpcPeeringConnectionList _
derive instance repGenericVpcPeeringConnectionList :: Generic VpcPeeringConnectionList _
instance showVpcPeeringConnectionList :: Show VpcPeeringConnectionList where
  show = genericShow
instance decodeVpcPeeringConnectionList :: Decode VpcPeeringConnectionList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcPeeringConnectionList :: Encode VpcPeeringConnectionList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes the VPC peering connection options.</p>
newtype VpcPeeringConnectionOptionsDescription = VpcPeeringConnectionOptionsDescription 
  { "AllowDnsResolutionFromRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "AllowEgressFromLocalClassicLinkToRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "AllowEgressFromLocalVpcToRemoteClassicLink" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeVpcPeeringConnectionOptionsDescription :: Newtype VpcPeeringConnectionOptionsDescription _
derive instance repGenericVpcPeeringConnectionOptionsDescription :: Generic VpcPeeringConnectionOptionsDescription _
instance showVpcPeeringConnectionOptionsDescription :: Show VpcPeeringConnectionOptionsDescription where
  show = genericShow
instance decodeVpcPeeringConnectionOptionsDescription :: Decode VpcPeeringConnectionOptionsDescription where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcPeeringConnectionOptionsDescription :: Encode VpcPeeringConnectionOptionsDescription where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcPeeringConnectionOptionsDescription from required parameters
newVpcPeeringConnectionOptionsDescription :: VpcPeeringConnectionOptionsDescription
newVpcPeeringConnectionOptionsDescription  = VpcPeeringConnectionOptionsDescription { "AllowDnsResolutionFromRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalClassicLinkToRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalVpcToRemoteClassicLink": (NullOrUndefined Nothing) }

-- | Constructs VpcPeeringConnectionOptionsDescription's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcPeeringConnectionOptionsDescription' :: ( { "AllowDnsResolutionFromRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalClassicLinkToRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalVpcToRemoteClassicLink" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"AllowDnsResolutionFromRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalClassicLinkToRemoteVpc" :: NullOrUndefined.NullOrUndefined (Boolean) , "AllowEgressFromLocalVpcToRemoteClassicLink" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> VpcPeeringConnectionOptionsDescription
newVpcPeeringConnectionOptionsDescription'  customize = (VpcPeeringConnectionOptionsDescription <<< customize) { "AllowDnsResolutionFromRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalClassicLinkToRemoteVpc": (NullOrUndefined Nothing), "AllowEgressFromLocalVpcToRemoteClassicLink": (NullOrUndefined Nothing) }



-- | <p>Describes the status of a VPC peering connection.</p>
newtype VpcPeeringConnectionStateReason = VpcPeeringConnectionStateReason 
  { "Code" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionStateReasonCode)
  , "Message" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeVpcPeeringConnectionStateReason :: Newtype VpcPeeringConnectionStateReason _
derive instance repGenericVpcPeeringConnectionStateReason :: Generic VpcPeeringConnectionStateReason _
instance showVpcPeeringConnectionStateReason :: Show VpcPeeringConnectionStateReason where
  show = genericShow
instance decodeVpcPeeringConnectionStateReason :: Decode VpcPeeringConnectionStateReason where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcPeeringConnectionStateReason :: Encode VpcPeeringConnectionStateReason where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcPeeringConnectionStateReason from required parameters
newVpcPeeringConnectionStateReason :: VpcPeeringConnectionStateReason
newVpcPeeringConnectionStateReason  = VpcPeeringConnectionStateReason { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }

-- | Constructs VpcPeeringConnectionStateReason's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcPeeringConnectionStateReason' :: ( { "Code" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionStateReasonCode) , "Message" :: NullOrUndefined.NullOrUndefined (String) } -> {"Code" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionStateReasonCode) , "Message" :: NullOrUndefined.NullOrUndefined (String) } ) -> VpcPeeringConnectionStateReason
newVpcPeeringConnectionStateReason'  customize = (VpcPeeringConnectionStateReason <<< customize) { "Code": (NullOrUndefined Nothing), "Message": (NullOrUndefined Nothing) }



newtype VpcPeeringConnectionStateReasonCode = VpcPeeringConnectionStateReasonCode String
derive instance newtypeVpcPeeringConnectionStateReasonCode :: Newtype VpcPeeringConnectionStateReasonCode _
derive instance repGenericVpcPeeringConnectionStateReasonCode :: Generic VpcPeeringConnectionStateReasonCode _
instance showVpcPeeringConnectionStateReasonCode :: Show VpcPeeringConnectionStateReasonCode where
  show = genericShow
instance decodeVpcPeeringConnectionStateReasonCode :: Decode VpcPeeringConnectionStateReasonCode where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcPeeringConnectionStateReasonCode :: Encode VpcPeeringConnectionStateReasonCode where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a VPC in a VPC peering connection.</p>
newtype VpcPeeringConnectionVpcInfo = VpcPeeringConnectionVpcInfo 
  { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "Ipv6CidrBlockSet" :: NullOrUndefined.NullOrUndefined (Ipv6CidrBlockSet)
  , "CidrBlockSet" :: NullOrUndefined.NullOrUndefined (CidrBlockSet)
  , "OwnerId" :: NullOrUndefined.NullOrUndefined (String)
  , "PeeringOptions" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionOptionsDescription)
  , "VpcId" :: NullOrUndefined.NullOrUndefined (String)
  , "Region" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeVpcPeeringConnectionVpcInfo :: Newtype VpcPeeringConnectionVpcInfo _
derive instance repGenericVpcPeeringConnectionVpcInfo :: Generic VpcPeeringConnectionVpcInfo _
instance showVpcPeeringConnectionVpcInfo :: Show VpcPeeringConnectionVpcInfo where
  show = genericShow
instance decodeVpcPeeringConnectionVpcInfo :: Decode VpcPeeringConnectionVpcInfo where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcPeeringConnectionVpcInfo :: Encode VpcPeeringConnectionVpcInfo where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpcPeeringConnectionVpcInfo from required parameters
newVpcPeeringConnectionVpcInfo :: VpcPeeringConnectionVpcInfo
newVpcPeeringConnectionVpcInfo  = VpcPeeringConnectionVpcInfo { "CidrBlock": (NullOrUndefined Nothing), "CidrBlockSet": (NullOrUndefined Nothing), "Ipv6CidrBlockSet": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "PeeringOptions": (NullOrUndefined Nothing), "Region": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }

-- | Constructs VpcPeeringConnectionVpcInfo's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpcPeeringConnectionVpcInfo' :: ( { "CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "Ipv6CidrBlockSet" :: NullOrUndefined.NullOrUndefined (Ipv6CidrBlockSet) , "CidrBlockSet" :: NullOrUndefined.NullOrUndefined (CidrBlockSet) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PeeringOptions" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionOptionsDescription) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "Region" :: NullOrUndefined.NullOrUndefined (String) } -> {"CidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "Ipv6CidrBlockSet" :: NullOrUndefined.NullOrUndefined (Ipv6CidrBlockSet) , "CidrBlockSet" :: NullOrUndefined.NullOrUndefined (CidrBlockSet) , "OwnerId" :: NullOrUndefined.NullOrUndefined (String) , "PeeringOptions" :: NullOrUndefined.NullOrUndefined (VpcPeeringConnectionOptionsDescription) , "VpcId" :: NullOrUndefined.NullOrUndefined (String) , "Region" :: NullOrUndefined.NullOrUndefined (String) } ) -> VpcPeeringConnectionVpcInfo
newVpcPeeringConnectionVpcInfo'  customize = (VpcPeeringConnectionVpcInfo <<< customize) { "CidrBlock": (NullOrUndefined Nothing), "CidrBlockSet": (NullOrUndefined Nothing), "Ipv6CidrBlockSet": (NullOrUndefined Nothing), "OwnerId": (NullOrUndefined Nothing), "PeeringOptions": (NullOrUndefined Nothing), "Region": (NullOrUndefined Nothing), "VpcId": (NullOrUndefined Nothing) }



newtype VpcState = VpcState String
derive instance newtypeVpcState :: Newtype VpcState _
derive instance repGenericVpcState :: Generic VpcState _
instance showVpcState :: Show VpcState where
  show = genericShow
instance decodeVpcState :: Decode VpcState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcState :: Encode VpcState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpcTenancy = VpcTenancy String
derive instance newtypeVpcTenancy :: Newtype VpcTenancy _
derive instance repGenericVpcTenancy :: Generic VpcTenancy _
instance showVpcTenancy :: Show VpcTenancy where
  show = genericShow
instance decodeVpcTenancy :: Decode VpcTenancy where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpcTenancy :: Encode VpcTenancy where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a VPN connection.</p>
newtype VpnConnection = VpnConnection 
  { "CustomerGatewayConfiguration" :: NullOrUndefined.NullOrUndefined (String)
  , "CustomerGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "Category" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (VpnState)
  , "Type" :: NullOrUndefined.NullOrUndefined (GatewayType)
  , "VpnConnectionId" :: NullOrUndefined.NullOrUndefined (String)
  , "VpnGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "Options" :: NullOrUndefined.NullOrUndefined (VpnConnectionOptions)
  , "Routes" :: NullOrUndefined.NullOrUndefined (VpnStaticRouteList)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  , "VgwTelemetry" :: NullOrUndefined.NullOrUndefined (VgwTelemetryList)
  }
derive instance newtypeVpnConnection :: Newtype VpnConnection _
derive instance repGenericVpnConnection :: Generic VpnConnection _
instance showVpnConnection :: Show VpnConnection where
  show = genericShow
instance decodeVpnConnection :: Decode VpnConnection where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnConnection :: Encode VpnConnection where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpnConnection from required parameters
newVpnConnection :: VpnConnection
newVpnConnection  = VpnConnection { "Category": (NullOrUndefined Nothing), "CustomerGatewayConfiguration": (NullOrUndefined Nothing), "CustomerGatewayId": (NullOrUndefined Nothing), "Options": (NullOrUndefined Nothing), "Routes": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing), "VgwTelemetry": (NullOrUndefined Nothing), "VpnConnectionId": (NullOrUndefined Nothing), "VpnGatewayId": (NullOrUndefined Nothing) }

-- | Constructs VpnConnection's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpnConnection' :: ( { "CustomerGatewayConfiguration" :: NullOrUndefined.NullOrUndefined (String) , "CustomerGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "Category" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (VpnState) , "Type" :: NullOrUndefined.NullOrUndefined (GatewayType) , "VpnConnectionId" :: NullOrUndefined.NullOrUndefined (String) , "VpnGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "Options" :: NullOrUndefined.NullOrUndefined (VpnConnectionOptions) , "Routes" :: NullOrUndefined.NullOrUndefined (VpnStaticRouteList) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VgwTelemetry" :: NullOrUndefined.NullOrUndefined (VgwTelemetryList) } -> {"CustomerGatewayConfiguration" :: NullOrUndefined.NullOrUndefined (String) , "CustomerGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "Category" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (VpnState) , "Type" :: NullOrUndefined.NullOrUndefined (GatewayType) , "VpnConnectionId" :: NullOrUndefined.NullOrUndefined (String) , "VpnGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "Options" :: NullOrUndefined.NullOrUndefined (VpnConnectionOptions) , "Routes" :: NullOrUndefined.NullOrUndefined (VpnStaticRouteList) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) , "VgwTelemetry" :: NullOrUndefined.NullOrUndefined (VgwTelemetryList) } ) -> VpnConnection
newVpnConnection'  customize = (VpnConnection <<< customize) { "Category": (NullOrUndefined Nothing), "CustomerGatewayConfiguration": (NullOrUndefined Nothing), "CustomerGatewayId": (NullOrUndefined Nothing), "Options": (NullOrUndefined Nothing), "Routes": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing), "VgwTelemetry": (NullOrUndefined Nothing), "VpnConnectionId": (NullOrUndefined Nothing), "VpnGatewayId": (NullOrUndefined Nothing) }



newtype VpnConnectionIdStringList = VpnConnectionIdStringList (Array String)
derive instance newtypeVpnConnectionIdStringList :: Newtype VpnConnectionIdStringList _
derive instance repGenericVpnConnectionIdStringList :: Generic VpnConnectionIdStringList _
instance showVpnConnectionIdStringList :: Show VpnConnectionIdStringList where
  show = genericShow
instance decodeVpnConnectionIdStringList :: Decode VpnConnectionIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnConnectionIdStringList :: Encode VpnConnectionIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpnConnectionList = VpnConnectionList (Array VpnConnection)
derive instance newtypeVpnConnectionList :: Newtype VpnConnectionList _
derive instance repGenericVpnConnectionList :: Generic VpnConnectionList _
instance showVpnConnectionList :: Show VpnConnectionList where
  show = genericShow
instance decodeVpnConnectionList :: Decode VpnConnectionList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnConnectionList :: Encode VpnConnectionList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes VPN connection options.</p>
newtype VpnConnectionOptions = VpnConnectionOptions 
  { "StaticRoutesOnly" :: NullOrUndefined.NullOrUndefined (Boolean)
  }
derive instance newtypeVpnConnectionOptions :: Newtype VpnConnectionOptions _
derive instance repGenericVpnConnectionOptions :: Generic VpnConnectionOptions _
instance showVpnConnectionOptions :: Show VpnConnectionOptions where
  show = genericShow
instance decodeVpnConnectionOptions :: Decode VpnConnectionOptions where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnConnectionOptions :: Encode VpnConnectionOptions where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpnConnectionOptions from required parameters
newVpnConnectionOptions :: VpnConnectionOptions
newVpnConnectionOptions  = VpnConnectionOptions { "StaticRoutesOnly": (NullOrUndefined Nothing) }

-- | Constructs VpnConnectionOptions's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpnConnectionOptions' :: ( { "StaticRoutesOnly" :: NullOrUndefined.NullOrUndefined (Boolean) } -> {"StaticRoutesOnly" :: NullOrUndefined.NullOrUndefined (Boolean) } ) -> VpnConnectionOptions
newVpnConnectionOptions'  customize = (VpnConnectionOptions <<< customize) { "StaticRoutesOnly": (NullOrUndefined Nothing) }



-- | <p>Describes VPN connection options.</p>
newtype VpnConnectionOptionsSpecification = VpnConnectionOptionsSpecification 
  { "StaticRoutesOnly" :: NullOrUndefined.NullOrUndefined (Boolean)
  , "TunnelOptions" :: NullOrUndefined.NullOrUndefined (TunnelOptionsList)
  }
derive instance newtypeVpnConnectionOptionsSpecification :: Newtype VpnConnectionOptionsSpecification _
derive instance repGenericVpnConnectionOptionsSpecification :: Generic VpnConnectionOptionsSpecification _
instance showVpnConnectionOptionsSpecification :: Show VpnConnectionOptionsSpecification where
  show = genericShow
instance decodeVpnConnectionOptionsSpecification :: Decode VpnConnectionOptionsSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnConnectionOptionsSpecification :: Encode VpnConnectionOptionsSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpnConnectionOptionsSpecification from required parameters
newVpnConnectionOptionsSpecification :: VpnConnectionOptionsSpecification
newVpnConnectionOptionsSpecification  = VpnConnectionOptionsSpecification { "StaticRoutesOnly": (NullOrUndefined Nothing), "TunnelOptions": (NullOrUndefined Nothing) }

-- | Constructs VpnConnectionOptionsSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpnConnectionOptionsSpecification' :: ( { "StaticRoutesOnly" :: NullOrUndefined.NullOrUndefined (Boolean) , "TunnelOptions" :: NullOrUndefined.NullOrUndefined (TunnelOptionsList) } -> {"StaticRoutesOnly" :: NullOrUndefined.NullOrUndefined (Boolean) , "TunnelOptions" :: NullOrUndefined.NullOrUndefined (TunnelOptionsList) } ) -> VpnConnectionOptionsSpecification
newVpnConnectionOptionsSpecification'  customize = (VpnConnectionOptionsSpecification <<< customize) { "StaticRoutesOnly": (NullOrUndefined Nothing), "TunnelOptions": (NullOrUndefined Nothing) }



-- | <p>Describes a virtual private gateway.</p>
newtype VpnGateway = VpnGateway 
  { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String)
  , "State" :: NullOrUndefined.NullOrUndefined (VpnState)
  , "Type" :: NullOrUndefined.NullOrUndefined (GatewayType)
  , "VpcAttachments" :: NullOrUndefined.NullOrUndefined (VpcAttachmentList)
  , "VpnGatewayId" :: NullOrUndefined.NullOrUndefined (String)
  , "AmazonSideAsn" :: NullOrUndefined.NullOrUndefined (Number)
  , "Tags" :: NullOrUndefined.NullOrUndefined (TagList)
  }
derive instance newtypeVpnGateway :: Newtype VpnGateway _
derive instance repGenericVpnGateway :: Generic VpnGateway _
instance showVpnGateway :: Show VpnGateway where
  show = genericShow
instance decodeVpnGateway :: Decode VpnGateway where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnGateway :: Encode VpnGateway where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpnGateway from required parameters
newVpnGateway :: VpnGateway
newVpnGateway  = VpnGateway { "AmazonSideAsn": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing), "VpcAttachments": (NullOrUndefined Nothing), "VpnGatewayId": (NullOrUndefined Nothing) }

-- | Constructs VpnGateway's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpnGateway' :: ( { "AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (VpnState) , "Type" :: NullOrUndefined.NullOrUndefined (GatewayType) , "VpcAttachments" :: NullOrUndefined.NullOrUndefined (VpcAttachmentList) , "VpnGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "AmazonSideAsn" :: NullOrUndefined.NullOrUndefined (Number) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } -> {"AvailabilityZone" :: NullOrUndefined.NullOrUndefined (String) , "State" :: NullOrUndefined.NullOrUndefined (VpnState) , "Type" :: NullOrUndefined.NullOrUndefined (GatewayType) , "VpcAttachments" :: NullOrUndefined.NullOrUndefined (VpcAttachmentList) , "VpnGatewayId" :: NullOrUndefined.NullOrUndefined (String) , "AmazonSideAsn" :: NullOrUndefined.NullOrUndefined (Number) , "Tags" :: NullOrUndefined.NullOrUndefined (TagList) } ) -> VpnGateway
newVpnGateway'  customize = (VpnGateway <<< customize) { "AmazonSideAsn": (NullOrUndefined Nothing), "AvailabilityZone": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing), "Tags": (NullOrUndefined Nothing), "Type": (NullOrUndefined Nothing), "VpcAttachments": (NullOrUndefined Nothing), "VpnGatewayId": (NullOrUndefined Nothing) }



newtype VpnGatewayIdStringList = VpnGatewayIdStringList (Array String)
derive instance newtypeVpnGatewayIdStringList :: Newtype VpnGatewayIdStringList _
derive instance repGenericVpnGatewayIdStringList :: Generic VpnGatewayIdStringList _
instance showVpnGatewayIdStringList :: Show VpnGatewayIdStringList where
  show = genericShow
instance decodeVpnGatewayIdStringList :: Decode VpnGatewayIdStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnGatewayIdStringList :: Encode VpnGatewayIdStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpnGatewayList = VpnGatewayList (Array VpnGateway)
derive instance newtypeVpnGatewayList :: Newtype VpnGatewayList _
derive instance repGenericVpnGatewayList :: Generic VpnGatewayList _
instance showVpnGatewayList :: Show VpnGatewayList where
  show = genericShow
instance decodeVpnGatewayList :: Decode VpnGatewayList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnGatewayList :: Encode VpnGatewayList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpnState = VpnState String
derive instance newtypeVpnState :: Newtype VpnState _
derive instance repGenericVpnState :: Generic VpnState _
instance showVpnState :: Show VpnState where
  show = genericShow
instance decodeVpnState :: Decode VpnState where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnState :: Encode VpnState where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>Describes a static route for a VPN connection.</p>
newtype VpnStaticRoute = VpnStaticRoute 
  { "DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String)
  , "Source" :: NullOrUndefined.NullOrUndefined (VpnStaticRouteSource)
  , "State" :: NullOrUndefined.NullOrUndefined (VpnState)
  }
derive instance newtypeVpnStaticRoute :: Newtype VpnStaticRoute _
derive instance repGenericVpnStaticRoute :: Generic VpnStaticRoute _
instance showVpnStaticRoute :: Show VpnStaticRoute where
  show = genericShow
instance decodeVpnStaticRoute :: Decode VpnStaticRoute where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnStaticRoute :: Encode VpnStaticRoute where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpnStaticRoute from required parameters
newVpnStaticRoute :: VpnStaticRoute
newVpnStaticRoute  = VpnStaticRoute { "DestinationCidrBlock": (NullOrUndefined Nothing), "Source": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }

-- | Constructs VpnStaticRoute's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpnStaticRoute' :: ( { "DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "Source" :: NullOrUndefined.NullOrUndefined (VpnStaticRouteSource) , "State" :: NullOrUndefined.NullOrUndefined (VpnState) } -> {"DestinationCidrBlock" :: NullOrUndefined.NullOrUndefined (String) , "Source" :: NullOrUndefined.NullOrUndefined (VpnStaticRouteSource) , "State" :: NullOrUndefined.NullOrUndefined (VpnState) } ) -> VpnStaticRoute
newVpnStaticRoute'  customize = (VpnStaticRoute <<< customize) { "DestinationCidrBlock": (NullOrUndefined Nothing), "Source": (NullOrUndefined Nothing), "State": (NullOrUndefined Nothing) }



newtype VpnStaticRouteList = VpnStaticRouteList (Array VpnStaticRoute)
derive instance newtypeVpnStaticRouteList :: Newtype VpnStaticRouteList _
derive instance repGenericVpnStaticRouteList :: Generic VpnStaticRouteList _
instance showVpnStaticRouteList :: Show VpnStaticRouteList where
  show = genericShow
instance decodeVpnStaticRouteList :: Decode VpnStaticRouteList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnStaticRouteList :: Encode VpnStaticRouteList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype VpnStaticRouteSource = VpnStaticRouteSource String
derive instance newtypeVpnStaticRouteSource :: Newtype VpnStaticRouteSource _
derive instance repGenericVpnStaticRouteSource :: Generic VpnStaticRouteSource _
instance showVpnStaticRouteSource :: Show VpnStaticRouteSource where
  show = genericShow
instance decodeVpnStaticRouteSource :: Decode VpnStaticRouteSource where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnStaticRouteSource :: Encode VpnStaticRouteSource where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



-- | <p>The tunnel options for a VPN connection.</p>
newtype VpnTunnelOptionsSpecification = VpnTunnelOptionsSpecification 
  { "TunnelInsideCidr" :: NullOrUndefined.NullOrUndefined (String)
  , "PreSharedKey" :: NullOrUndefined.NullOrUndefined (String)
  }
derive instance newtypeVpnTunnelOptionsSpecification :: Newtype VpnTunnelOptionsSpecification _
derive instance repGenericVpnTunnelOptionsSpecification :: Generic VpnTunnelOptionsSpecification _
instance showVpnTunnelOptionsSpecification :: Show VpnTunnelOptionsSpecification where
  show = genericShow
instance decodeVpnTunnelOptionsSpecification :: Decode VpnTunnelOptionsSpecification where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeVpnTunnelOptionsSpecification :: Encode VpnTunnelOptionsSpecification where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

-- | Constructs VpnTunnelOptionsSpecification from required parameters
newVpnTunnelOptionsSpecification :: VpnTunnelOptionsSpecification
newVpnTunnelOptionsSpecification  = VpnTunnelOptionsSpecification { "PreSharedKey": (NullOrUndefined Nothing), "TunnelInsideCidr": (NullOrUndefined Nothing) }

-- | Constructs VpnTunnelOptionsSpecification's fields from required parameters
--   This may be useful if you need to immediately overwrite some of the optional values
newVpnTunnelOptionsSpecification' :: ( { "TunnelInsideCidr" :: NullOrUndefined.NullOrUndefined (String) , "PreSharedKey" :: NullOrUndefined.NullOrUndefined (String) } -> {"TunnelInsideCidr" :: NullOrUndefined.NullOrUndefined (String) , "PreSharedKey" :: NullOrUndefined.NullOrUndefined (String) } ) -> VpnTunnelOptionsSpecification
newVpnTunnelOptionsSpecification'  customize = (VpnTunnelOptionsSpecification <<< customize) { "PreSharedKey": (NullOrUndefined Nothing), "TunnelInsideCidr": (NullOrUndefined Nothing) }



newtype ZoneNameStringList = ZoneNameStringList (Array String)
derive instance newtypeZoneNameStringList :: Newtype ZoneNameStringList _
derive instance repGenericZoneNameStringList :: Generic ZoneNameStringList _
instance showZoneNameStringList :: Show ZoneNameStringList where
  show = genericShow
instance decodeZoneNameStringList :: Decode ZoneNameStringList where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeZoneNameStringList :: Encode ZoneNameStringList where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }



newtype Scope' = Scope' String
derive instance newtypeScope' :: Newtype Scope' _
derive instance repGenericScope' :: Generic Scope' _
instance showScope' :: Show Scope' where
  show = genericShow
instance decodeScope' :: Decode Scope' where
  decode = genericDecode $ defaultOptions { unwrapSingleConstructors = true }
instance encodeScope' :: Encode Scope' where
  encode = genericEncode $ defaultOptions { unwrapSingleConstructors = true }

